; ModuleID = 'src/P610/generic/fp_generic.c'
source_filename = "src/P610/generic/fp_generic.c"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.13.0"

@p610x2 = external local_unnamed_addr constant [10 x i64], align 16
@p610x4 = external local_unnamed_addr constant [10 x i64], align 16
@p610 = external local_unnamed_addr constant [10 x i64], align 16
@p610p1 = external local_unnamed_addr constant [10 x i64], align 16

; Function Attrs: inlinehint norecurse nounwind ssp uwtable
define void @mp_sub610_p2(i64* nocapture readonly %a, i64* nocapture readonly %b, i64* nocapture %c) local_unnamed_addr #0 {
entry:
  %0 = load i64, i64* %a, align 8, !tbaa !3
  %1 = load i64, i64* %b, align 8, !tbaa !3
  %sub = sub i64 %0, %1
  %xor.i = xor i64 %1, %0
  %xor1.i = xor i64 %sub, %1
  %or.i = or i64 %xor1.i, %xor.i
  %xor2.i = xor i64 %or.i, %0
  %shr.i = lshr i64 %xor2.i, 63
  %conv.i = trunc i64 %shr.i to i32
  store i64 %sub, i64* %c, align 8, !tbaa !3
  %arrayidx.1 = getelementptr inbounds i64, i64* %a, i64 1
  %2 = load i64, i64* %arrayidx.1, align 8, !tbaa !3
  %arrayidx2.1 = getelementptr inbounds i64, i64* %b, i64 1
  %3 = load i64, i64* %arrayidx2.1, align 8, !tbaa !3
  %sub.1 = sub i64 %2, %3
  %xor.i.1 = xor i64 %3, %2
  %xor1.i.1 = xor i64 %sub.1, %3
  %or.i.1 = or i64 %xor1.i.1, %xor.i.1
  %xor2.i.1 = xor i64 %or.i.1, %2
  %shr.i.1 = lshr i64 %xor2.i.1, 63
  %conv.i.1 = trunc i64 %shr.i.1 to i32
  %sub.i.i.1 = sub i64 0, %sub.1
  %or.i.i.1 = or i64 %sub.1, %sub.i.i.1
  %shr.i.i.1 = lshr i64 %or.i.i.1, 63
  %conv.i.i.1 = trunc i64 %shr.i.i.1 to i32
  %xor.i74.1 = xor i32 %conv.i.i.1, 1
  %and.1 = and i32 %xor.i74.1, %conv.i
  %or.1 = or i32 %and.1, %conv.i.1
  %sub8.1 = sub i64 %sub.1, %shr.i
  %arrayidx10.1 = getelementptr inbounds i64, i64* %c, i64 1
  store i64 %sub8.1, i64* %arrayidx10.1, align 8, !tbaa !3
  %arrayidx.2 = getelementptr inbounds i64, i64* %a, i64 2
  %4 = load i64, i64* %arrayidx.2, align 8, !tbaa !3
  %arrayidx2.2 = getelementptr inbounds i64, i64* %b, i64 2
  %5 = load i64, i64* %arrayidx2.2, align 8, !tbaa !3
  %sub.2 = sub i64 %4, %5
  %xor.i.2 = xor i64 %5, %4
  %xor1.i.2 = xor i64 %sub.2, %5
  %or.i.2 = or i64 %xor1.i.2, %xor.i.2
  %xor2.i.2 = xor i64 %or.i.2, %4
  %shr.i.2 = lshr i64 %xor2.i.2, 63
  %conv.i.2 = trunc i64 %shr.i.2 to i32
  %sub.i.i.2 = sub i64 0, %sub.2
  %or.i.i.2 = or i64 %sub.2, %sub.i.i.2
  %shr.i.i.2 = lshr i64 %or.i.i.2, 63
  %conv.i.i.2 = trunc i64 %shr.i.i.2 to i32
  %xor.i74.2 = xor i32 %conv.i.i.2, 1
  %and.2 = and i32 %xor.i74.2, %or.1
  %or.2 = or i32 %and.2, %conv.i.2
  %conv.2 = zext i32 %or.1 to i64
  %sub8.2 = sub i64 %sub.2, %conv.2
  %arrayidx10.2 = getelementptr inbounds i64, i64* %c, i64 2
  store i64 %sub8.2, i64* %arrayidx10.2, align 8, !tbaa !3
  %arrayidx.3 = getelementptr inbounds i64, i64* %a, i64 3
  %6 = load i64, i64* %arrayidx.3, align 8, !tbaa !3
  %arrayidx2.3 = getelementptr inbounds i64, i64* %b, i64 3
  %7 = load i64, i64* %arrayidx2.3, align 8, !tbaa !3
  %sub.3 = sub i64 %6, %7
  %xor.i.3 = xor i64 %7, %6
  %xor1.i.3 = xor i64 %sub.3, %7
  %or.i.3 = or i64 %xor1.i.3, %xor.i.3
  %xor2.i.3 = xor i64 %or.i.3, %6
  %shr.i.3 = lshr i64 %xor2.i.3, 63
  %conv.i.3 = trunc i64 %shr.i.3 to i32
  %sub.i.i.3 = sub i64 0, %sub.3
  %or.i.i.3 = or i64 %sub.3, %sub.i.i.3
  %shr.i.i.3 = lshr i64 %or.i.i.3, 63
  %conv.i.i.3 = trunc i64 %shr.i.i.3 to i32
  %xor.i74.3 = xor i32 %conv.i.i.3, 1
  %and.3 = and i32 %xor.i74.3, %or.2
  %or.3 = or i32 %and.3, %conv.i.3
  %conv.3 = zext i32 %or.2 to i64
  %sub8.3 = sub i64 %sub.3, %conv.3
  %arrayidx10.3 = getelementptr inbounds i64, i64* %c, i64 3
  store i64 %sub8.3, i64* %arrayidx10.3, align 8, !tbaa !3
  %arrayidx.4 = getelementptr inbounds i64, i64* %a, i64 4
  %8 = load i64, i64* %arrayidx.4, align 8, !tbaa !3
  %arrayidx2.4 = getelementptr inbounds i64, i64* %b, i64 4
  %9 = load i64, i64* %arrayidx2.4, align 8, !tbaa !3
  %sub.4 = sub i64 %8, %9
  %xor.i.4 = xor i64 %9, %8
  %xor1.i.4 = xor i64 %sub.4, %9
  %or.i.4 = or i64 %xor1.i.4, %xor.i.4
  %xor2.i.4 = xor i64 %or.i.4, %8
  %shr.i.4 = lshr i64 %xor2.i.4, 63
  %conv.i.4 = trunc i64 %shr.i.4 to i32
  %sub.i.i.4 = sub i64 0, %sub.4
  %or.i.i.4 = or i64 %sub.4, %sub.i.i.4
  %shr.i.i.4 = lshr i64 %or.i.i.4, 63
  %conv.i.i.4 = trunc i64 %shr.i.i.4 to i32
  %xor.i74.4 = xor i32 %conv.i.i.4, 1
  %and.4 = and i32 %xor.i74.4, %or.3
  %or.4 = or i32 %and.4, %conv.i.4
  %conv.4 = zext i32 %or.3 to i64
  %sub8.4 = sub i64 %sub.4, %conv.4
  %arrayidx10.4 = getelementptr inbounds i64, i64* %c, i64 4
  store i64 %sub8.4, i64* %arrayidx10.4, align 8, !tbaa !3
  %arrayidx.5 = getelementptr inbounds i64, i64* %a, i64 5
  %10 = load i64, i64* %arrayidx.5, align 8, !tbaa !3
  %arrayidx2.5 = getelementptr inbounds i64, i64* %b, i64 5
  %11 = load i64, i64* %arrayidx2.5, align 8, !tbaa !3
  %sub.5 = sub i64 %10, %11
  %xor.i.5 = xor i64 %11, %10
  %xor1.i.5 = xor i64 %sub.5, %11
  %or.i.5 = or i64 %xor1.i.5, %xor.i.5
  %xor2.i.5 = xor i64 %or.i.5, %10
  %shr.i.5 = lshr i64 %xor2.i.5, 63
  %conv.i.5 = trunc i64 %shr.i.5 to i32
  %sub.i.i.5 = sub i64 0, %sub.5
  %or.i.i.5 = or i64 %sub.5, %sub.i.i.5
  %shr.i.i.5 = lshr i64 %or.i.i.5, 63
  %conv.i.i.5 = trunc i64 %shr.i.i.5 to i32
  %xor.i74.5 = xor i32 %conv.i.i.5, 1
  %and.5 = and i32 %xor.i74.5, %or.4
  %or.5 = or i32 %and.5, %conv.i.5
  %conv.5 = zext i32 %or.4 to i64
  %sub8.5 = sub i64 %sub.5, %conv.5
  %arrayidx10.5 = getelementptr inbounds i64, i64* %c, i64 5
  store i64 %sub8.5, i64* %arrayidx10.5, align 8, !tbaa !3
  %arrayidx.6 = getelementptr inbounds i64, i64* %a, i64 6
  %12 = load i64, i64* %arrayidx.6, align 8, !tbaa !3
  %arrayidx2.6 = getelementptr inbounds i64, i64* %b, i64 6
  %13 = load i64, i64* %arrayidx2.6, align 8, !tbaa !3
  %sub.6 = sub i64 %12, %13
  %xor.i.6 = xor i64 %13, %12
  %xor1.i.6 = xor i64 %sub.6, %13
  %or.i.6 = or i64 %xor1.i.6, %xor.i.6
  %xor2.i.6 = xor i64 %or.i.6, %12
  %shr.i.6 = lshr i64 %xor2.i.6, 63
  %conv.i.6 = trunc i64 %shr.i.6 to i32
  %sub.i.i.6 = sub i64 0, %sub.6
  %or.i.i.6 = or i64 %sub.6, %sub.i.i.6
  %shr.i.i.6 = lshr i64 %or.i.i.6, 63
  %conv.i.i.6 = trunc i64 %shr.i.i.6 to i32
  %xor.i74.6 = xor i32 %conv.i.i.6, 1
  %and.6 = and i32 %xor.i74.6, %or.5
  %or.6 = or i32 %and.6, %conv.i.6
  %conv.6 = zext i32 %or.5 to i64
  %sub8.6 = sub i64 %sub.6, %conv.6
  %arrayidx10.6 = getelementptr inbounds i64, i64* %c, i64 6
  store i64 %sub8.6, i64* %arrayidx10.6, align 8, !tbaa !3
  %arrayidx.7 = getelementptr inbounds i64, i64* %a, i64 7
  %14 = load i64, i64* %arrayidx.7, align 8, !tbaa !3
  %arrayidx2.7 = getelementptr inbounds i64, i64* %b, i64 7
  %15 = load i64, i64* %arrayidx2.7, align 8, !tbaa !3
  %sub.7 = sub i64 %14, %15
  %xor.i.7 = xor i64 %15, %14
  %xor1.i.7 = xor i64 %sub.7, %15
  %or.i.7 = or i64 %xor1.i.7, %xor.i.7
  %xor2.i.7 = xor i64 %or.i.7, %14
  %shr.i.7 = lshr i64 %xor2.i.7, 63
  %conv.i.7 = trunc i64 %shr.i.7 to i32
  %sub.i.i.7 = sub i64 0, %sub.7
  %or.i.i.7 = or i64 %sub.7, %sub.i.i.7
  %shr.i.i.7 = lshr i64 %or.i.i.7, 63
  %conv.i.i.7 = trunc i64 %shr.i.i.7 to i32
  %xor.i74.7 = xor i32 %conv.i.i.7, 1
  %and.7 = and i32 %xor.i74.7, %or.6
  %or.7 = or i32 %and.7, %conv.i.7
  %conv.7 = zext i32 %or.6 to i64
  %sub8.7 = sub i64 %sub.7, %conv.7
  %arrayidx10.7 = getelementptr inbounds i64, i64* %c, i64 7
  store i64 %sub8.7, i64* %arrayidx10.7, align 8, !tbaa !3
  %arrayidx.8 = getelementptr inbounds i64, i64* %a, i64 8
  %16 = load i64, i64* %arrayidx.8, align 8, !tbaa !3
  %arrayidx2.8 = getelementptr inbounds i64, i64* %b, i64 8
  %17 = load i64, i64* %arrayidx2.8, align 8, !tbaa !3
  %sub.8 = sub i64 %16, %17
  %xor.i.8 = xor i64 %17, %16
  %xor1.i.8 = xor i64 %sub.8, %17
  %or.i.8 = or i64 %xor1.i.8, %xor.i.8
  %xor2.i.8 = xor i64 %or.i.8, %16
  %shr.i.8 = lshr i64 %xor2.i.8, 63
  %conv.i.8 = trunc i64 %shr.i.8 to i32
  %sub.i.i.8 = sub i64 0, %sub.8
  %or.i.i.8 = or i64 %sub.8, %sub.i.i.8
  %shr.i.i.8 = lshr i64 %or.i.i.8, 63
  %conv.i.i.8 = trunc i64 %shr.i.i.8 to i32
  %xor.i74.8 = xor i32 %conv.i.i.8, 1
  %and.8 = and i32 %xor.i74.8, %or.7
  %or.8 = or i32 %and.8, %conv.i.8
  %conv.8 = zext i32 %or.7 to i64
  %sub8.8 = sub i64 %sub.8, %conv.8
  %arrayidx10.8 = getelementptr inbounds i64, i64* %c, i64 8
  store i64 %sub8.8, i64* %arrayidx10.8, align 8, !tbaa !3
  %arrayidx.9 = getelementptr inbounds i64, i64* %a, i64 9
  %18 = load i64, i64* %arrayidx.9, align 8, !tbaa !3
  %arrayidx2.9 = getelementptr inbounds i64, i64* %b, i64 9
  %19 = load i64, i64* %arrayidx2.9, align 8, !tbaa !3
  %sub.9 = sub i64 %18, %19
  %conv.9 = zext i32 %or.8 to i64
  %sub8.9 = sub i64 %sub.9, %conv.9
  %arrayidx10.9 = getelementptr inbounds i64, i64* %c, i64 9
  store i64 %sub8.9, i64* %arrayidx10.9, align 8, !tbaa !3
  %20 = load i64, i64* %c, align 8, !tbaa !3
  %21 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 0), align 16, !tbaa !3
  %add21 = add i64 %21, %20
  store i64 %add21, i64* %c, align 8, !tbaa !3
  %xor.i61 = xor i64 %add21, %20
  %xor1.i63 = xor i64 %21, %20
  %or.i64 = or i64 %xor.i61, %xor1.i63
  %xor2.i65 = xor i64 %or.i64, %add21
  %or29 = lshr i64 %xor2.i65, 63
  %22 = load i64, i64* %arrayidx10.1, align 8, !tbaa !3
  %add.1 = add i64 %22, %or29
  %23 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 1), align 8, !tbaa !3
  %add21.1 = add i64 %23, %add.1
  store i64 %add21.1, i64* %arrayidx10.1, align 8, !tbaa !3
  %24 = xor i64 %add.1, -9223372036854775808
  %xor2.i71.1 = and i64 %24, %22
  %xor.i61.1 = xor i64 %add21.1, %add.1
  %xor1.i63.1 = xor i64 %23, %add.1
  %or.i64.1 = or i64 %xor.i61.1, %xor1.i63.1
  %xor2.i65.1 = xor i64 %or.i64.1, %add21.1
  %shr.i7275.1 = or i64 %xor2.i65.1, %xor2.i71.1
  %or29.1 = lshr i64 %shr.i7275.1, 63
  %25 = load i64, i64* %arrayidx10.2, align 8, !tbaa !3
  %add.2 = add i64 %25, %or29.1
  %26 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 2), align 16, !tbaa !3
  %add21.2 = add i64 %26, %add.2
  store i64 %add21.2, i64* %arrayidx10.2, align 8, !tbaa !3
  %27 = xor i64 %add.2, -9223372036854775808
  %xor2.i71.2 = and i64 %27, %25
  %xor.i61.2 = xor i64 %add21.2, %add.2
  %xor1.i63.2 = xor i64 %26, %add.2
  %or.i64.2 = or i64 %xor.i61.2, %xor1.i63.2
  %xor2.i65.2 = xor i64 %or.i64.2, %add21.2
  %shr.i7275.2 = or i64 %xor2.i65.2, %xor2.i71.2
  %or29.2 = lshr i64 %shr.i7275.2, 63
  %28 = load i64, i64* %arrayidx10.3, align 8, !tbaa !3
  %add.3 = add i64 %28, %or29.2
  %29 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 3), align 8, !tbaa !3
  %add21.3 = add i64 %29, %add.3
  store i64 %add21.3, i64* %arrayidx10.3, align 8, !tbaa !3
  %30 = xor i64 %add.3, -9223372036854775808
  %xor2.i71.3 = and i64 %30, %28
  %xor.i61.3 = xor i64 %add21.3, %add.3
  %xor1.i63.3 = xor i64 %29, %add.3
  %or.i64.3 = or i64 %xor.i61.3, %xor1.i63.3
  %xor2.i65.3 = xor i64 %or.i64.3, %add21.3
  %shr.i7275.3 = or i64 %xor2.i65.3, %xor2.i71.3
  %or29.3 = lshr i64 %shr.i7275.3, 63
  %31 = load i64, i64* %arrayidx10.4, align 8, !tbaa !3
  %add.4 = add i64 %31, %or29.3
  %32 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 4), align 16, !tbaa !3
  %add21.4 = add i64 %32, %add.4
  store i64 %add21.4, i64* %arrayidx10.4, align 8, !tbaa !3
  %33 = xor i64 %add.4, -9223372036854775808
  %xor2.i71.4 = and i64 %33, %31
  %xor.i61.4 = xor i64 %add21.4, %add.4
  %xor1.i63.4 = xor i64 %32, %add.4
  %or.i64.4 = or i64 %xor.i61.4, %xor1.i63.4
  %xor2.i65.4 = xor i64 %or.i64.4, %add21.4
  %shr.i7275.4 = or i64 %xor2.i65.4, %xor2.i71.4
  %or29.4 = lshr i64 %shr.i7275.4, 63
  %34 = load i64, i64* %arrayidx10.5, align 8, !tbaa !3
  %add.5 = add i64 %34, %or29.4
  %35 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 5), align 8, !tbaa !3
  %add21.5 = add i64 %35, %add.5
  store i64 %add21.5, i64* %arrayidx10.5, align 8, !tbaa !3
  %36 = xor i64 %add.5, -9223372036854775808
  %xor2.i71.5 = and i64 %36, %34
  %xor.i61.5 = xor i64 %add21.5, %add.5
  %xor1.i63.5 = xor i64 %35, %add.5
  %or.i64.5 = or i64 %xor.i61.5, %xor1.i63.5
  %xor2.i65.5 = xor i64 %or.i64.5, %add21.5
  %shr.i7275.5 = or i64 %xor2.i65.5, %xor2.i71.5
  %or29.5 = lshr i64 %shr.i7275.5, 63
  %37 = load i64, i64* %arrayidx10.6, align 8, !tbaa !3
  %add.6 = add i64 %37, %or29.5
  %38 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 6), align 16, !tbaa !3
  %add21.6 = add i64 %38, %add.6
  store i64 %add21.6, i64* %arrayidx10.6, align 8, !tbaa !3
  %39 = xor i64 %add.6, -9223372036854775808
  %xor2.i71.6 = and i64 %39, %37
  %xor.i61.6 = xor i64 %add21.6, %add.6
  %xor1.i63.6 = xor i64 %38, %add.6
  %or.i64.6 = or i64 %xor.i61.6, %xor1.i63.6
  %xor2.i65.6 = xor i64 %or.i64.6, %add21.6
  %shr.i7275.6 = or i64 %xor2.i65.6, %xor2.i71.6
  %or29.6 = lshr i64 %shr.i7275.6, 63
  %40 = load i64, i64* %arrayidx10.7, align 8, !tbaa !3
  %add.7 = add i64 %40, %or29.6
  %41 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 7), align 8, !tbaa !3
  %add21.7 = add i64 %41, %add.7
  store i64 %add21.7, i64* %arrayidx10.7, align 8, !tbaa !3
  %42 = xor i64 %add.7, -9223372036854775808
  %xor2.i71.7 = and i64 %42, %40
  %xor.i61.7 = xor i64 %add21.7, %add.7
  %xor1.i63.7 = xor i64 %41, %add.7
  %or.i64.7 = or i64 %xor.i61.7, %xor1.i63.7
  %xor2.i65.7 = xor i64 %or.i64.7, %add21.7
  %shr.i7275.7 = or i64 %xor2.i65.7, %xor2.i71.7
  %or29.7 = lshr i64 %shr.i7275.7, 63
  %43 = load i64, i64* %arrayidx10.8, align 8, !tbaa !3
  %add.8 = add i64 %43, %or29.7
  %44 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 8), align 16, !tbaa !3
  %add21.8 = add i64 %44, %add.8
  store i64 %add21.8, i64* %arrayidx10.8, align 8, !tbaa !3
  %45 = xor i64 %add.8, -9223372036854775808
  %xor2.i71.8 = and i64 %45, %43
  %xor.i61.8 = xor i64 %add21.8, %add.8
  %xor1.i63.8 = xor i64 %44, %add.8
  %or.i64.8 = or i64 %xor.i61.8, %xor1.i63.8
  %xor2.i65.8 = xor i64 %or.i64.8, %add21.8
  %shr.i7275.8 = or i64 %xor2.i65.8, %xor2.i71.8
  %or29.8 = lshr i64 %shr.i7275.8, 63
  %46 = load i64, i64* %arrayidx10.9, align 8, !tbaa !3
  %add.9 = add i64 %46, %or29.8
  %47 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 9), align 8, !tbaa !3
  %add21.9 = add i64 %47, %add.9
  store i64 %add21.9, i64* %arrayidx10.9, align 8, !tbaa !3
  ret void
}

; Function Attrs: inlinehint norecurse nounwind ssp uwtable
define void @mp_sub610_p4(i64* nocapture readonly %a, i64* nocapture readonly %b, i64* nocapture %c) local_unnamed_addr #0 {
entry:
  %0 = load i64, i64* %a, align 8, !tbaa !3
  %1 = load i64, i64* %b, align 8, !tbaa !3
  %sub = sub i64 %0, %1
  %xor.i = xor i64 %1, %0
  %xor1.i = xor i64 %sub, %1
  %or.i = or i64 %xor1.i, %xor.i
  %xor2.i = xor i64 %or.i, %0
  %shr.i = lshr i64 %xor2.i, 63
  %conv.i = trunc i64 %shr.i to i32
  store i64 %sub, i64* %c, align 8, !tbaa !3
  %arrayidx.1 = getelementptr inbounds i64, i64* %a, i64 1
  %2 = load i64, i64* %arrayidx.1, align 8, !tbaa !3
  %arrayidx2.1 = getelementptr inbounds i64, i64* %b, i64 1
  %3 = load i64, i64* %arrayidx2.1, align 8, !tbaa !3
  %sub.1 = sub i64 %2, %3
  %xor.i.1 = xor i64 %3, %2
  %xor1.i.1 = xor i64 %sub.1, %3
  %or.i.1 = or i64 %xor1.i.1, %xor.i.1
  %xor2.i.1 = xor i64 %or.i.1, %2
  %shr.i.1 = lshr i64 %xor2.i.1, 63
  %conv.i.1 = trunc i64 %shr.i.1 to i32
  %sub.i.i.1 = sub i64 0, %sub.1
  %or.i.i.1 = or i64 %sub.1, %sub.i.i.1
  %shr.i.i.1 = lshr i64 %or.i.i.1, 63
  %conv.i.i.1 = trunc i64 %shr.i.i.1 to i32
  %xor.i74.1 = xor i32 %conv.i.i.1, 1
  %and.1 = and i32 %xor.i74.1, %conv.i
  %or.1 = or i32 %and.1, %conv.i.1
  %sub8.1 = sub i64 %sub.1, %shr.i
  %arrayidx10.1 = getelementptr inbounds i64, i64* %c, i64 1
  store i64 %sub8.1, i64* %arrayidx10.1, align 8, !tbaa !3
  %arrayidx.2 = getelementptr inbounds i64, i64* %a, i64 2
  %4 = load i64, i64* %arrayidx.2, align 8, !tbaa !3
  %arrayidx2.2 = getelementptr inbounds i64, i64* %b, i64 2
  %5 = load i64, i64* %arrayidx2.2, align 8, !tbaa !3
  %sub.2 = sub i64 %4, %5
  %xor.i.2 = xor i64 %5, %4
  %xor1.i.2 = xor i64 %sub.2, %5
  %or.i.2 = or i64 %xor1.i.2, %xor.i.2
  %xor2.i.2 = xor i64 %or.i.2, %4
  %shr.i.2 = lshr i64 %xor2.i.2, 63
  %conv.i.2 = trunc i64 %shr.i.2 to i32
  %sub.i.i.2 = sub i64 0, %sub.2
  %or.i.i.2 = or i64 %sub.2, %sub.i.i.2
  %shr.i.i.2 = lshr i64 %or.i.i.2, 63
  %conv.i.i.2 = trunc i64 %shr.i.i.2 to i32
  %xor.i74.2 = xor i32 %conv.i.i.2, 1
  %and.2 = and i32 %xor.i74.2, %or.1
  %or.2 = or i32 %and.2, %conv.i.2
  %conv.2 = zext i32 %or.1 to i64
  %sub8.2 = sub i64 %sub.2, %conv.2
  %arrayidx10.2 = getelementptr inbounds i64, i64* %c, i64 2
  store i64 %sub8.2, i64* %arrayidx10.2, align 8, !tbaa !3
  %arrayidx.3 = getelementptr inbounds i64, i64* %a, i64 3
  %6 = load i64, i64* %arrayidx.3, align 8, !tbaa !3
  %arrayidx2.3 = getelementptr inbounds i64, i64* %b, i64 3
  %7 = load i64, i64* %arrayidx2.3, align 8, !tbaa !3
  %sub.3 = sub i64 %6, %7
  %xor.i.3 = xor i64 %7, %6
  %xor1.i.3 = xor i64 %sub.3, %7
  %or.i.3 = or i64 %xor1.i.3, %xor.i.3
  %xor2.i.3 = xor i64 %or.i.3, %6
  %shr.i.3 = lshr i64 %xor2.i.3, 63
  %conv.i.3 = trunc i64 %shr.i.3 to i32
  %sub.i.i.3 = sub i64 0, %sub.3
  %or.i.i.3 = or i64 %sub.3, %sub.i.i.3
  %shr.i.i.3 = lshr i64 %or.i.i.3, 63
  %conv.i.i.3 = trunc i64 %shr.i.i.3 to i32
  %xor.i74.3 = xor i32 %conv.i.i.3, 1
  %and.3 = and i32 %xor.i74.3, %or.2
  %or.3 = or i32 %and.3, %conv.i.3
  %conv.3 = zext i32 %or.2 to i64
  %sub8.3 = sub i64 %sub.3, %conv.3
  %arrayidx10.3 = getelementptr inbounds i64, i64* %c, i64 3
  store i64 %sub8.3, i64* %arrayidx10.3, align 8, !tbaa !3
  %arrayidx.4 = getelementptr inbounds i64, i64* %a, i64 4
  %8 = load i64, i64* %arrayidx.4, align 8, !tbaa !3
  %arrayidx2.4 = getelementptr inbounds i64, i64* %b, i64 4
  %9 = load i64, i64* %arrayidx2.4, align 8, !tbaa !3
  %sub.4 = sub i64 %8, %9
  %xor.i.4 = xor i64 %9, %8
  %xor1.i.4 = xor i64 %sub.4, %9
  %or.i.4 = or i64 %xor1.i.4, %xor.i.4
  %xor2.i.4 = xor i64 %or.i.4, %8
  %shr.i.4 = lshr i64 %xor2.i.4, 63
  %conv.i.4 = trunc i64 %shr.i.4 to i32
  %sub.i.i.4 = sub i64 0, %sub.4
  %or.i.i.4 = or i64 %sub.4, %sub.i.i.4
  %shr.i.i.4 = lshr i64 %or.i.i.4, 63
  %conv.i.i.4 = trunc i64 %shr.i.i.4 to i32
  %xor.i74.4 = xor i32 %conv.i.i.4, 1
  %and.4 = and i32 %xor.i74.4, %or.3
  %or.4 = or i32 %and.4, %conv.i.4
  %conv.4 = zext i32 %or.3 to i64
  %sub8.4 = sub i64 %sub.4, %conv.4
  %arrayidx10.4 = getelementptr inbounds i64, i64* %c, i64 4
  store i64 %sub8.4, i64* %arrayidx10.4, align 8, !tbaa !3
  %arrayidx.5 = getelementptr inbounds i64, i64* %a, i64 5
  %10 = load i64, i64* %arrayidx.5, align 8, !tbaa !3
  %arrayidx2.5 = getelementptr inbounds i64, i64* %b, i64 5
  %11 = load i64, i64* %arrayidx2.5, align 8, !tbaa !3
  %sub.5 = sub i64 %10, %11
  %xor.i.5 = xor i64 %11, %10
  %xor1.i.5 = xor i64 %sub.5, %11
  %or.i.5 = or i64 %xor1.i.5, %xor.i.5
  %xor2.i.5 = xor i64 %or.i.5, %10
  %shr.i.5 = lshr i64 %xor2.i.5, 63
  %conv.i.5 = trunc i64 %shr.i.5 to i32
  %sub.i.i.5 = sub i64 0, %sub.5
  %or.i.i.5 = or i64 %sub.5, %sub.i.i.5
  %shr.i.i.5 = lshr i64 %or.i.i.5, 63
  %conv.i.i.5 = trunc i64 %shr.i.i.5 to i32
  %xor.i74.5 = xor i32 %conv.i.i.5, 1
  %and.5 = and i32 %xor.i74.5, %or.4
  %or.5 = or i32 %and.5, %conv.i.5
  %conv.5 = zext i32 %or.4 to i64
  %sub8.5 = sub i64 %sub.5, %conv.5
  %arrayidx10.5 = getelementptr inbounds i64, i64* %c, i64 5
  store i64 %sub8.5, i64* %arrayidx10.5, align 8, !tbaa !3
  %arrayidx.6 = getelementptr inbounds i64, i64* %a, i64 6
  %12 = load i64, i64* %arrayidx.6, align 8, !tbaa !3
  %arrayidx2.6 = getelementptr inbounds i64, i64* %b, i64 6
  %13 = load i64, i64* %arrayidx2.6, align 8, !tbaa !3
  %sub.6 = sub i64 %12, %13
  %xor.i.6 = xor i64 %13, %12
  %xor1.i.6 = xor i64 %sub.6, %13
  %or.i.6 = or i64 %xor1.i.6, %xor.i.6
  %xor2.i.6 = xor i64 %or.i.6, %12
  %shr.i.6 = lshr i64 %xor2.i.6, 63
  %conv.i.6 = trunc i64 %shr.i.6 to i32
  %sub.i.i.6 = sub i64 0, %sub.6
  %or.i.i.6 = or i64 %sub.6, %sub.i.i.6
  %shr.i.i.6 = lshr i64 %or.i.i.6, 63
  %conv.i.i.6 = trunc i64 %shr.i.i.6 to i32
  %xor.i74.6 = xor i32 %conv.i.i.6, 1
  %and.6 = and i32 %xor.i74.6, %or.5
  %or.6 = or i32 %and.6, %conv.i.6
  %conv.6 = zext i32 %or.5 to i64
  %sub8.6 = sub i64 %sub.6, %conv.6
  %arrayidx10.6 = getelementptr inbounds i64, i64* %c, i64 6
  store i64 %sub8.6, i64* %arrayidx10.6, align 8, !tbaa !3
  %arrayidx.7 = getelementptr inbounds i64, i64* %a, i64 7
  %14 = load i64, i64* %arrayidx.7, align 8, !tbaa !3
  %arrayidx2.7 = getelementptr inbounds i64, i64* %b, i64 7
  %15 = load i64, i64* %arrayidx2.7, align 8, !tbaa !3
  %sub.7 = sub i64 %14, %15
  %xor.i.7 = xor i64 %15, %14
  %xor1.i.7 = xor i64 %sub.7, %15
  %or.i.7 = or i64 %xor1.i.7, %xor.i.7
  %xor2.i.7 = xor i64 %or.i.7, %14
  %shr.i.7 = lshr i64 %xor2.i.7, 63
  %conv.i.7 = trunc i64 %shr.i.7 to i32
  %sub.i.i.7 = sub i64 0, %sub.7
  %or.i.i.7 = or i64 %sub.7, %sub.i.i.7
  %shr.i.i.7 = lshr i64 %or.i.i.7, 63
  %conv.i.i.7 = trunc i64 %shr.i.i.7 to i32
  %xor.i74.7 = xor i32 %conv.i.i.7, 1
  %and.7 = and i32 %xor.i74.7, %or.6
  %or.7 = or i32 %and.7, %conv.i.7
  %conv.7 = zext i32 %or.6 to i64
  %sub8.7 = sub i64 %sub.7, %conv.7
  %arrayidx10.7 = getelementptr inbounds i64, i64* %c, i64 7
  store i64 %sub8.7, i64* %arrayidx10.7, align 8, !tbaa !3
  %arrayidx.8 = getelementptr inbounds i64, i64* %a, i64 8
  %16 = load i64, i64* %arrayidx.8, align 8, !tbaa !3
  %arrayidx2.8 = getelementptr inbounds i64, i64* %b, i64 8
  %17 = load i64, i64* %arrayidx2.8, align 8, !tbaa !3
  %sub.8 = sub i64 %16, %17
  %xor.i.8 = xor i64 %17, %16
  %xor1.i.8 = xor i64 %sub.8, %17
  %or.i.8 = or i64 %xor1.i.8, %xor.i.8
  %xor2.i.8 = xor i64 %or.i.8, %16
  %shr.i.8 = lshr i64 %xor2.i.8, 63
  %conv.i.8 = trunc i64 %shr.i.8 to i32
  %sub.i.i.8 = sub i64 0, %sub.8
  %or.i.i.8 = or i64 %sub.8, %sub.i.i.8
  %shr.i.i.8 = lshr i64 %or.i.i.8, 63
  %conv.i.i.8 = trunc i64 %shr.i.i.8 to i32
  %xor.i74.8 = xor i32 %conv.i.i.8, 1
  %and.8 = and i32 %xor.i74.8, %or.7
  %or.8 = or i32 %and.8, %conv.i.8
  %conv.8 = zext i32 %or.7 to i64
  %sub8.8 = sub i64 %sub.8, %conv.8
  %arrayidx10.8 = getelementptr inbounds i64, i64* %c, i64 8
  store i64 %sub8.8, i64* %arrayidx10.8, align 8, !tbaa !3
  %arrayidx.9 = getelementptr inbounds i64, i64* %a, i64 9
  %18 = load i64, i64* %arrayidx.9, align 8, !tbaa !3
  %arrayidx2.9 = getelementptr inbounds i64, i64* %b, i64 9
  %19 = load i64, i64* %arrayidx2.9, align 8, !tbaa !3
  %sub.9 = sub i64 %18, %19
  %conv.9 = zext i32 %or.8 to i64
  %sub8.9 = sub i64 %sub.9, %conv.9
  %arrayidx10.9 = getelementptr inbounds i64, i64* %c, i64 9
  store i64 %sub8.9, i64* %arrayidx10.9, align 8, !tbaa !3
  %20 = load i64, i64* %c, align 8, !tbaa !3
  %21 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x4, i64 0, i64 0), align 16, !tbaa !3
  %add21 = add i64 %21, %20
  store i64 %add21, i64* %c, align 8, !tbaa !3
  %xor.i61 = xor i64 %add21, %20
  %xor1.i63 = xor i64 %21, %20
  %or.i64 = or i64 %xor.i61, %xor1.i63
  %xor2.i65 = xor i64 %or.i64, %add21
  %or29 = lshr i64 %xor2.i65, 63
  %22 = load i64, i64* %arrayidx10.1, align 8, !tbaa !3
  %add.1 = add i64 %22, %or29
  %23 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x4, i64 0, i64 1), align 8, !tbaa !3
  %add21.1 = add i64 %23, %add.1
  store i64 %add21.1, i64* %arrayidx10.1, align 8, !tbaa !3
  %24 = xor i64 %add.1, -9223372036854775808
  %xor2.i71.1 = and i64 %24, %22
  %xor.i61.1 = xor i64 %add21.1, %add.1
  %xor1.i63.1 = xor i64 %23, %add.1
  %or.i64.1 = or i64 %xor.i61.1, %xor1.i63.1
  %xor2.i65.1 = xor i64 %or.i64.1, %add21.1
  %shr.i7275.1 = or i64 %xor2.i65.1, %xor2.i71.1
  %or29.1 = lshr i64 %shr.i7275.1, 63
  %25 = load i64, i64* %arrayidx10.2, align 8, !tbaa !3
  %add.2 = add i64 %25, %or29.1
  %26 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x4, i64 0, i64 2), align 16, !tbaa !3
  %add21.2 = add i64 %26, %add.2
  store i64 %add21.2, i64* %arrayidx10.2, align 8, !tbaa !3
  %27 = xor i64 %add.2, -9223372036854775808
  %xor2.i71.2 = and i64 %27, %25
  %xor.i61.2 = xor i64 %add21.2, %add.2
  %xor1.i63.2 = xor i64 %26, %add.2
  %or.i64.2 = or i64 %xor.i61.2, %xor1.i63.2
  %xor2.i65.2 = xor i64 %or.i64.2, %add21.2
  %shr.i7275.2 = or i64 %xor2.i65.2, %xor2.i71.2
  %or29.2 = lshr i64 %shr.i7275.2, 63
  %28 = load i64, i64* %arrayidx10.3, align 8, !tbaa !3
  %add.3 = add i64 %28, %or29.2
  %29 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x4, i64 0, i64 3), align 8, !tbaa !3
  %add21.3 = add i64 %29, %add.3
  store i64 %add21.3, i64* %arrayidx10.3, align 8, !tbaa !3
  %30 = xor i64 %add.3, -9223372036854775808
  %xor2.i71.3 = and i64 %30, %28
  %xor.i61.3 = xor i64 %add21.3, %add.3
  %xor1.i63.3 = xor i64 %29, %add.3
  %or.i64.3 = or i64 %xor.i61.3, %xor1.i63.3
  %xor2.i65.3 = xor i64 %or.i64.3, %add21.3
  %shr.i7275.3 = or i64 %xor2.i65.3, %xor2.i71.3
  %or29.3 = lshr i64 %shr.i7275.3, 63
  %31 = load i64, i64* %arrayidx10.4, align 8, !tbaa !3
  %add.4 = add i64 %31, %or29.3
  %32 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x4, i64 0, i64 4), align 16, !tbaa !3
  %add21.4 = add i64 %32, %add.4
  store i64 %add21.4, i64* %arrayidx10.4, align 8, !tbaa !3
  %33 = xor i64 %add.4, -9223372036854775808
  %xor2.i71.4 = and i64 %33, %31
  %xor.i61.4 = xor i64 %add21.4, %add.4
  %xor1.i63.4 = xor i64 %32, %add.4
  %or.i64.4 = or i64 %xor.i61.4, %xor1.i63.4
  %xor2.i65.4 = xor i64 %or.i64.4, %add21.4
  %shr.i7275.4 = or i64 %xor2.i65.4, %xor2.i71.4
  %or29.4 = lshr i64 %shr.i7275.4, 63
  %34 = load i64, i64* %arrayidx10.5, align 8, !tbaa !3
  %add.5 = add i64 %34, %or29.4
  %35 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x4, i64 0, i64 5), align 8, !tbaa !3
  %add21.5 = add i64 %35, %add.5
  store i64 %add21.5, i64* %arrayidx10.5, align 8, !tbaa !3
  %36 = xor i64 %add.5, -9223372036854775808
  %xor2.i71.5 = and i64 %36, %34
  %xor.i61.5 = xor i64 %add21.5, %add.5
  %xor1.i63.5 = xor i64 %35, %add.5
  %or.i64.5 = or i64 %xor.i61.5, %xor1.i63.5
  %xor2.i65.5 = xor i64 %or.i64.5, %add21.5
  %shr.i7275.5 = or i64 %xor2.i65.5, %xor2.i71.5
  %or29.5 = lshr i64 %shr.i7275.5, 63
  %37 = load i64, i64* %arrayidx10.6, align 8, !tbaa !3
  %add.6 = add i64 %37, %or29.5
  %38 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x4, i64 0, i64 6), align 16, !tbaa !3
  %add21.6 = add i64 %38, %add.6
  store i64 %add21.6, i64* %arrayidx10.6, align 8, !tbaa !3
  %39 = xor i64 %add.6, -9223372036854775808
  %xor2.i71.6 = and i64 %39, %37
  %xor.i61.6 = xor i64 %add21.6, %add.6
  %xor1.i63.6 = xor i64 %38, %add.6
  %or.i64.6 = or i64 %xor.i61.6, %xor1.i63.6
  %xor2.i65.6 = xor i64 %or.i64.6, %add21.6
  %shr.i7275.6 = or i64 %xor2.i65.6, %xor2.i71.6
  %or29.6 = lshr i64 %shr.i7275.6, 63
  %40 = load i64, i64* %arrayidx10.7, align 8, !tbaa !3
  %add.7 = add i64 %40, %or29.6
  %41 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x4, i64 0, i64 7), align 8, !tbaa !3
  %add21.7 = add i64 %41, %add.7
  store i64 %add21.7, i64* %arrayidx10.7, align 8, !tbaa !3
  %42 = xor i64 %add.7, -9223372036854775808
  %xor2.i71.7 = and i64 %42, %40
  %xor.i61.7 = xor i64 %add21.7, %add.7
  %xor1.i63.7 = xor i64 %41, %add.7
  %or.i64.7 = or i64 %xor.i61.7, %xor1.i63.7
  %xor2.i65.7 = xor i64 %or.i64.7, %add21.7
  %shr.i7275.7 = or i64 %xor2.i65.7, %xor2.i71.7
  %or29.7 = lshr i64 %shr.i7275.7, 63
  %43 = load i64, i64* %arrayidx10.8, align 8, !tbaa !3
  %add.8 = add i64 %43, %or29.7
  %44 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x4, i64 0, i64 8), align 16, !tbaa !3
  %add21.8 = add i64 %44, %add.8
  store i64 %add21.8, i64* %arrayidx10.8, align 8, !tbaa !3
  %45 = xor i64 %add.8, -9223372036854775808
  %xor2.i71.8 = and i64 %45, %43
  %xor.i61.8 = xor i64 %add21.8, %add.8
  %xor1.i63.8 = xor i64 %44, %add.8
  %or.i64.8 = or i64 %xor.i61.8, %xor1.i63.8
  %xor2.i65.8 = xor i64 %or.i64.8, %add21.8
  %shr.i7275.8 = or i64 %xor2.i65.8, %xor2.i71.8
  %or29.8 = lshr i64 %shr.i7275.8, 63
  %46 = load i64, i64* %arrayidx10.9, align 8, !tbaa !3
  %add.9 = add i64 %46, %or29.8
  %47 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x4, i64 0, i64 9), align 8, !tbaa !3
  %add21.9 = add i64 %47, %add.9
  store i64 %add21.9, i64* %arrayidx10.9, align 8, !tbaa !3
  ret void
}

; Function Attrs: inlinehint norecurse nounwind ssp uwtable
define void @fpadd610(i64* nocapture readonly %a, i64* nocapture readonly %b, i64* nocapture %c) local_unnamed_addr #0 {
entry:
  %0 = load i64, i64* %a, align 8, !tbaa !3
  %1 = load i64, i64* %b, align 8, !tbaa !3
  %add3 = add i64 %1, %0
  store i64 %add3, i64* %c, align 8, !tbaa !3
  %xor.i122 = xor i64 %add3, %0
  %xor1.i124 = xor i64 %1, %0
  %or.i125 = or i64 %xor.i122, %xor1.i124
  %xor2.i126 = xor i64 %or.i125, %add3
  %or = lshr i64 %xor2.i126, 63
  %arrayidx.1 = getelementptr inbounds i64, i64* %a, i64 1
  %2 = load i64, i64* %arrayidx.1, align 8, !tbaa !3
  %add.1 = add i64 %2, %or
  %arrayidx2.1 = getelementptr inbounds i64, i64* %b, i64 1
  %3 = load i64, i64* %arrayidx2.1, align 8, !tbaa !3
  %add3.1 = add i64 %3, %add.1
  %arrayidx5.1 = getelementptr inbounds i64, i64* %c, i64 1
  store i64 %add3.1, i64* %arrayidx5.1, align 8, !tbaa !3
  %4 = xor i64 %add.1, -9223372036854775808
  %xor2.i.1 = and i64 %4, %2
  %xor.i122.1 = xor i64 %add3.1, %add.1
  %xor1.i124.1 = xor i64 %3, %add.1
  %or.i125.1 = or i64 %xor.i122.1, %xor1.i124.1
  %xor2.i126.1 = xor i64 %or.i125.1, %add3.1
  %shr.i130.1 = or i64 %xor2.i126.1, %xor2.i.1
  %or.1 = lshr i64 %shr.i130.1, 63
  %arrayidx.2 = getelementptr inbounds i64, i64* %a, i64 2
  %5 = load i64, i64* %arrayidx.2, align 8, !tbaa !3
  %add.2 = add i64 %5, %or.1
  %arrayidx2.2 = getelementptr inbounds i64, i64* %b, i64 2
  %6 = load i64, i64* %arrayidx2.2, align 8, !tbaa !3
  %add3.2 = add i64 %6, %add.2
  %arrayidx5.2 = getelementptr inbounds i64, i64* %c, i64 2
  store i64 %add3.2, i64* %arrayidx5.2, align 8, !tbaa !3
  %7 = xor i64 %add.2, -9223372036854775808
  %xor2.i.2 = and i64 %7, %5
  %xor.i122.2 = xor i64 %add3.2, %add.2
  %xor1.i124.2 = xor i64 %6, %add.2
  %or.i125.2 = or i64 %xor.i122.2, %xor1.i124.2
  %xor2.i126.2 = xor i64 %or.i125.2, %add3.2
  %shr.i130.2 = or i64 %xor2.i126.2, %xor2.i.2
  %or.2 = lshr i64 %shr.i130.2, 63
  %arrayidx.3 = getelementptr inbounds i64, i64* %a, i64 3
  %8 = load i64, i64* %arrayidx.3, align 8, !tbaa !3
  %add.3 = add i64 %8, %or.2
  %arrayidx2.3 = getelementptr inbounds i64, i64* %b, i64 3
  %9 = load i64, i64* %arrayidx2.3, align 8, !tbaa !3
  %add3.3 = add i64 %9, %add.3
  %arrayidx5.3 = getelementptr inbounds i64, i64* %c, i64 3
  store i64 %add3.3, i64* %arrayidx5.3, align 8, !tbaa !3
  %10 = xor i64 %add.3, -9223372036854775808
  %xor2.i.3 = and i64 %10, %8
  %xor.i122.3 = xor i64 %add3.3, %add.3
  %xor1.i124.3 = xor i64 %9, %add.3
  %or.i125.3 = or i64 %xor.i122.3, %xor1.i124.3
  %xor2.i126.3 = xor i64 %or.i125.3, %add3.3
  %shr.i130.3 = or i64 %xor2.i126.3, %xor2.i.3
  %or.3 = lshr i64 %shr.i130.3, 63
  %arrayidx.4 = getelementptr inbounds i64, i64* %a, i64 4
  %11 = load i64, i64* %arrayidx.4, align 8, !tbaa !3
  %add.4 = add i64 %11, %or.3
  %arrayidx2.4 = getelementptr inbounds i64, i64* %b, i64 4
  %12 = load i64, i64* %arrayidx2.4, align 8, !tbaa !3
  %add3.4 = add i64 %12, %add.4
  %arrayidx5.4 = getelementptr inbounds i64, i64* %c, i64 4
  store i64 %add3.4, i64* %arrayidx5.4, align 8, !tbaa !3
  %13 = xor i64 %add.4, -9223372036854775808
  %xor2.i.4 = and i64 %13, %11
  %xor.i122.4 = xor i64 %add3.4, %add.4
  %xor1.i124.4 = xor i64 %12, %add.4
  %or.i125.4 = or i64 %xor.i122.4, %xor1.i124.4
  %xor2.i126.4 = xor i64 %or.i125.4, %add3.4
  %shr.i130.4 = or i64 %xor2.i126.4, %xor2.i.4
  %or.4 = lshr i64 %shr.i130.4, 63
  %arrayidx.5 = getelementptr inbounds i64, i64* %a, i64 5
  %14 = load i64, i64* %arrayidx.5, align 8, !tbaa !3
  %add.5 = add i64 %14, %or.4
  %arrayidx2.5 = getelementptr inbounds i64, i64* %b, i64 5
  %15 = load i64, i64* %arrayidx2.5, align 8, !tbaa !3
  %add3.5 = add i64 %15, %add.5
  %arrayidx5.5 = getelementptr inbounds i64, i64* %c, i64 5
  store i64 %add3.5, i64* %arrayidx5.5, align 8, !tbaa !3
  %16 = xor i64 %add.5, -9223372036854775808
  %xor2.i.5 = and i64 %16, %14
  %xor.i122.5 = xor i64 %add3.5, %add.5
  %xor1.i124.5 = xor i64 %15, %add.5
  %or.i125.5 = or i64 %xor.i122.5, %xor1.i124.5
  %xor2.i126.5 = xor i64 %or.i125.5, %add3.5
  %shr.i130.5 = or i64 %xor2.i126.5, %xor2.i.5
  %or.5 = lshr i64 %shr.i130.5, 63
  %arrayidx.6 = getelementptr inbounds i64, i64* %a, i64 6
  %17 = load i64, i64* %arrayidx.6, align 8, !tbaa !3
  %add.6 = add i64 %17, %or.5
  %arrayidx2.6 = getelementptr inbounds i64, i64* %b, i64 6
  %18 = load i64, i64* %arrayidx2.6, align 8, !tbaa !3
  %add3.6 = add i64 %18, %add.6
  %arrayidx5.6 = getelementptr inbounds i64, i64* %c, i64 6
  store i64 %add3.6, i64* %arrayidx5.6, align 8, !tbaa !3
  %19 = xor i64 %add.6, -9223372036854775808
  %xor2.i.6 = and i64 %19, %17
  %xor.i122.6 = xor i64 %add3.6, %add.6
  %xor1.i124.6 = xor i64 %18, %add.6
  %or.i125.6 = or i64 %xor.i122.6, %xor1.i124.6
  %xor2.i126.6 = xor i64 %or.i125.6, %add3.6
  %shr.i130.6 = or i64 %xor2.i126.6, %xor2.i.6
  %or.6 = lshr i64 %shr.i130.6, 63
  %arrayidx.7 = getelementptr inbounds i64, i64* %a, i64 7
  %20 = load i64, i64* %arrayidx.7, align 8, !tbaa !3
  %add.7 = add i64 %20, %or.6
  %arrayidx2.7 = getelementptr inbounds i64, i64* %b, i64 7
  %21 = load i64, i64* %arrayidx2.7, align 8, !tbaa !3
  %add3.7 = add i64 %21, %add.7
  %arrayidx5.7 = getelementptr inbounds i64, i64* %c, i64 7
  store i64 %add3.7, i64* %arrayidx5.7, align 8, !tbaa !3
  %22 = xor i64 %add.7, -9223372036854775808
  %xor2.i.7 = and i64 %22, %20
  %xor.i122.7 = xor i64 %add3.7, %add.7
  %xor1.i124.7 = xor i64 %21, %add.7
  %or.i125.7 = or i64 %xor.i122.7, %xor1.i124.7
  %xor2.i126.7 = xor i64 %or.i125.7, %add3.7
  %shr.i130.7 = or i64 %xor2.i126.7, %xor2.i.7
  %or.7 = lshr i64 %shr.i130.7, 63
  %arrayidx.8 = getelementptr inbounds i64, i64* %a, i64 8
  %23 = load i64, i64* %arrayidx.8, align 8, !tbaa !3
  %add.8 = add i64 %23, %or.7
  %arrayidx2.8 = getelementptr inbounds i64, i64* %b, i64 8
  %24 = load i64, i64* %arrayidx2.8, align 8, !tbaa !3
  %add3.8 = add i64 %24, %add.8
  %arrayidx5.8 = getelementptr inbounds i64, i64* %c, i64 8
  store i64 %add3.8, i64* %arrayidx5.8, align 8, !tbaa !3
  %25 = xor i64 %add.8, -9223372036854775808
  %xor2.i.8 = and i64 %25, %23
  %xor.i122.8 = xor i64 %add3.8, %add.8
  %xor1.i124.8 = xor i64 %24, %add.8
  %or.i125.8 = or i64 %xor.i122.8, %xor1.i124.8
  %xor2.i126.8 = xor i64 %or.i125.8, %add3.8
  %shr.i130.8 = or i64 %xor2.i126.8, %xor2.i.8
  %or.8 = lshr i64 %shr.i130.8, 63
  %arrayidx.9 = getelementptr inbounds i64, i64* %a, i64 9
  %26 = load i64, i64* %arrayidx.9, align 8, !tbaa !3
  %add.9 = add i64 %26, %or.8
  %arrayidx2.9 = getelementptr inbounds i64, i64* %b, i64 9
  %27 = load i64, i64* %arrayidx2.9, align 8, !tbaa !3
  %add3.9 = add i64 %27, %add.9
  %arrayidx5.9 = getelementptr inbounds i64, i64* %c, i64 9
  store i64 %add3.9, i64* %arrayidx5.9, align 8, !tbaa !3
  %28 = load i64, i64* %c, align 8, !tbaa !3
  %29 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 0), align 16, !tbaa !3
  %sub = sub i64 %28, %29
  %xor.i115 = xor i64 %29, %28
  %xor1.i117 = xor i64 %sub, %29
  %or.i118 = or i64 %xor1.i117, %xor.i115
  %xor2.i119 = xor i64 %or.i118, %28
  %shr.i120 = lshr i64 %xor2.i119, 63
  %conv.i121 = trunc i64 %shr.i120 to i32
  store i64 %sub, i64* %c, align 8, !tbaa !3
  %30 = load i64, i64* %arrayidx5.1, align 8, !tbaa !3
  %31 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 1), align 8, !tbaa !3
  %sub.1 = sub i64 %30, %31
  %xor.i115.1 = xor i64 %31, %30
  %xor1.i117.1 = xor i64 %sub.1, %31
  %or.i118.1 = or i64 %xor1.i117.1, %xor.i115.1
  %xor2.i119.1 = xor i64 %or.i118.1, %30
  %shr.i120.1 = lshr i64 %xor2.i119.1, 63
  %conv.i121.1 = trunc i64 %shr.i120.1 to i32
  %sub.i.i.1 = sub i64 0, %sub.1
  %or.i.i.1 = or i64 %sub.1, %sub.i.i.1
  %shr.i.i.1 = lshr i64 %or.i.i.1, 63
  %conv.i.i.1 = trunc i64 %shr.i.i.1 to i32
  %xor.i114.1 = xor i32 %conv.i.i.1, 1
  %and.1 = and i32 %xor.i114.1, %conv.i121
  %or25.1 = or i32 %and.1, %conv.i121.1
  %sub27.1 = sub i64 %sub.1, %shr.i120
  store i64 %sub27.1, i64* %arrayidx5.1, align 8, !tbaa !3
  %32 = load i64, i64* %arrayidx5.2, align 8, !tbaa !3
  %33 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 2), align 16, !tbaa !3
  %sub.2 = sub i64 %32, %33
  %xor.i115.2 = xor i64 %33, %32
  %xor1.i117.2 = xor i64 %sub.2, %33
  %or.i118.2 = or i64 %xor1.i117.2, %xor.i115.2
  %xor2.i119.2 = xor i64 %or.i118.2, %32
  %shr.i120.2 = lshr i64 %xor2.i119.2, 63
  %conv.i121.2 = trunc i64 %shr.i120.2 to i32
  %sub.i.i.2 = sub i64 0, %sub.2
  %or.i.i.2 = or i64 %sub.2, %sub.i.i.2
  %shr.i.i.2 = lshr i64 %or.i.i.2, 63
  %conv.i.i.2 = trunc i64 %shr.i.i.2 to i32
  %xor.i114.2 = xor i32 %conv.i.i.2, 1
  %and.2 = and i32 %xor.i114.2, %or25.1
  %or25.2 = or i32 %and.2, %conv.i121.2
  %conv26.2 = zext i32 %or25.1 to i64
  %sub27.2 = sub i64 %sub.2, %conv26.2
  store i64 %sub27.2, i64* %arrayidx5.2, align 8, !tbaa !3
  %34 = load i64, i64* %arrayidx5.3, align 8, !tbaa !3
  %35 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 3), align 8, !tbaa !3
  %sub.3 = sub i64 %34, %35
  %xor.i115.3 = xor i64 %35, %34
  %xor1.i117.3 = xor i64 %sub.3, %35
  %or.i118.3 = or i64 %xor1.i117.3, %xor.i115.3
  %xor2.i119.3 = xor i64 %or.i118.3, %34
  %shr.i120.3 = lshr i64 %xor2.i119.3, 63
  %conv.i121.3 = trunc i64 %shr.i120.3 to i32
  %sub.i.i.3 = sub i64 0, %sub.3
  %or.i.i.3 = or i64 %sub.3, %sub.i.i.3
  %shr.i.i.3 = lshr i64 %or.i.i.3, 63
  %conv.i.i.3 = trunc i64 %shr.i.i.3 to i32
  %xor.i114.3 = xor i32 %conv.i.i.3, 1
  %and.3 = and i32 %xor.i114.3, %or25.2
  %or25.3 = or i32 %and.3, %conv.i121.3
  %conv26.3 = zext i32 %or25.2 to i64
  %sub27.3 = sub i64 %sub.3, %conv26.3
  store i64 %sub27.3, i64* %arrayidx5.3, align 8, !tbaa !3
  %36 = load i64, i64* %arrayidx5.4, align 8, !tbaa !3
  %37 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 4), align 16, !tbaa !3
  %sub.4 = sub i64 %36, %37
  %xor.i115.4 = xor i64 %37, %36
  %xor1.i117.4 = xor i64 %sub.4, %37
  %or.i118.4 = or i64 %xor1.i117.4, %xor.i115.4
  %xor2.i119.4 = xor i64 %or.i118.4, %36
  %shr.i120.4 = lshr i64 %xor2.i119.4, 63
  %conv.i121.4 = trunc i64 %shr.i120.4 to i32
  %sub.i.i.4 = sub i64 0, %sub.4
  %or.i.i.4 = or i64 %sub.4, %sub.i.i.4
  %shr.i.i.4 = lshr i64 %or.i.i.4, 63
  %conv.i.i.4 = trunc i64 %shr.i.i.4 to i32
  %xor.i114.4 = xor i32 %conv.i.i.4, 1
  %and.4 = and i32 %xor.i114.4, %or25.3
  %or25.4 = or i32 %and.4, %conv.i121.4
  %conv26.4 = zext i32 %or25.3 to i64
  %sub27.4 = sub i64 %sub.4, %conv26.4
  store i64 %sub27.4, i64* %arrayidx5.4, align 8, !tbaa !3
  %38 = load i64, i64* %arrayidx5.5, align 8, !tbaa !3
  %39 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 5), align 8, !tbaa !3
  %sub.5 = sub i64 %38, %39
  %xor.i115.5 = xor i64 %39, %38
  %xor1.i117.5 = xor i64 %sub.5, %39
  %or.i118.5 = or i64 %xor1.i117.5, %xor.i115.5
  %xor2.i119.5 = xor i64 %or.i118.5, %38
  %shr.i120.5 = lshr i64 %xor2.i119.5, 63
  %conv.i121.5 = trunc i64 %shr.i120.5 to i32
  %sub.i.i.5 = sub i64 0, %sub.5
  %or.i.i.5 = or i64 %sub.5, %sub.i.i.5
  %shr.i.i.5 = lshr i64 %or.i.i.5, 63
  %conv.i.i.5 = trunc i64 %shr.i.i.5 to i32
  %xor.i114.5 = xor i32 %conv.i.i.5, 1
  %and.5 = and i32 %xor.i114.5, %or25.4
  %or25.5 = or i32 %and.5, %conv.i121.5
  %conv26.5 = zext i32 %or25.4 to i64
  %sub27.5 = sub i64 %sub.5, %conv26.5
  store i64 %sub27.5, i64* %arrayidx5.5, align 8, !tbaa !3
  %40 = load i64, i64* %arrayidx5.6, align 8, !tbaa !3
  %41 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 6), align 16, !tbaa !3
  %sub.6 = sub i64 %40, %41
  %xor.i115.6 = xor i64 %41, %40
  %xor1.i117.6 = xor i64 %sub.6, %41
  %or.i118.6 = or i64 %xor1.i117.6, %xor.i115.6
  %xor2.i119.6 = xor i64 %or.i118.6, %40
  %shr.i120.6 = lshr i64 %xor2.i119.6, 63
  %conv.i121.6 = trunc i64 %shr.i120.6 to i32
  %sub.i.i.6 = sub i64 0, %sub.6
  %or.i.i.6 = or i64 %sub.6, %sub.i.i.6
  %shr.i.i.6 = lshr i64 %or.i.i.6, 63
  %conv.i.i.6 = trunc i64 %shr.i.i.6 to i32
  %xor.i114.6 = xor i32 %conv.i.i.6, 1
  %and.6 = and i32 %xor.i114.6, %or25.5
  %or25.6 = or i32 %and.6, %conv.i121.6
  %conv26.6 = zext i32 %or25.5 to i64
  %sub27.6 = sub i64 %sub.6, %conv26.6
  store i64 %sub27.6, i64* %arrayidx5.6, align 8, !tbaa !3
  %42 = load i64, i64* %arrayidx5.7, align 8, !tbaa !3
  %43 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 7), align 8, !tbaa !3
  %sub.7 = sub i64 %42, %43
  %xor.i115.7 = xor i64 %43, %42
  %xor1.i117.7 = xor i64 %sub.7, %43
  %or.i118.7 = or i64 %xor1.i117.7, %xor.i115.7
  %xor2.i119.7 = xor i64 %or.i118.7, %42
  %shr.i120.7 = lshr i64 %xor2.i119.7, 63
  %conv.i121.7 = trunc i64 %shr.i120.7 to i32
  %sub.i.i.7 = sub i64 0, %sub.7
  %or.i.i.7 = or i64 %sub.7, %sub.i.i.7
  %shr.i.i.7 = lshr i64 %or.i.i.7, 63
  %conv.i.i.7 = trunc i64 %shr.i.i.7 to i32
  %xor.i114.7 = xor i32 %conv.i.i.7, 1
  %and.7 = and i32 %xor.i114.7, %or25.6
  %or25.7 = or i32 %and.7, %conv.i121.7
  %conv26.7 = zext i32 %or25.6 to i64
  %sub27.7 = sub i64 %sub.7, %conv26.7
  store i64 %sub27.7, i64* %arrayidx5.7, align 8, !tbaa !3
  %44 = load i64, i64* %arrayidx5.8, align 8, !tbaa !3
  %45 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 8), align 16, !tbaa !3
  %sub.8 = sub i64 %44, %45
  %xor.i115.8 = xor i64 %45, %44
  %xor1.i117.8 = xor i64 %sub.8, %45
  %or.i118.8 = or i64 %xor1.i117.8, %xor.i115.8
  %xor2.i119.8 = xor i64 %or.i118.8, %44
  %shr.i120.8 = lshr i64 %xor2.i119.8, 63
  %conv.i121.8 = trunc i64 %shr.i120.8 to i32
  %sub.i.i.8 = sub i64 0, %sub.8
  %or.i.i.8 = or i64 %sub.8, %sub.i.i.8
  %shr.i.i.8 = lshr i64 %or.i.i.8, 63
  %conv.i.i.8 = trunc i64 %shr.i.i.8 to i32
  %xor.i114.8 = xor i32 %conv.i.i.8, 1
  %and.8 = and i32 %xor.i114.8, %or25.7
  %or25.8 = or i32 %and.8, %conv.i121.8
  %conv26.8 = zext i32 %or25.7 to i64
  %sub27.8 = sub i64 %sub.8, %conv26.8
  store i64 %sub27.8, i64* %arrayidx5.8, align 8, !tbaa !3
  %46 = load i64, i64* %arrayidx5.9, align 8, !tbaa !3
  %47 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 9), align 8, !tbaa !3
  %sub.9 = sub i64 %46, %47
  %xor.i115.9 = xor i64 %47, %46
  %xor1.i117.9 = xor i64 %sub.9, %47
  %or.i118.9 = or i64 %xor1.i117.9, %xor.i115.9
  %xor2.i119.9 = xor i64 %or.i118.9, %46
  %shr.i120.9 = lshr i64 %xor2.i119.9, 63
  %conv.i121.9 = trunc i64 %shr.i120.9 to i32
  %sub.i.i.9 = sub i64 0, %sub.9
  %or.i.i.9 = or i64 %sub.9, %sub.i.i.9
  %shr.i.i.9 = lshr i64 %or.i.i.9, 63
  %conv.i.i.9 = trunc i64 %shr.i.i.9 to i32
  %xor.i114.9 = xor i32 %conv.i.i.9, 1
  %and.9 = and i32 %xor.i114.9, %or25.8
  %or25.9 = or i32 %and.9, %conv.i121.9
  %conv26.9 = zext i32 %or25.8 to i64
  %sub27.9 = sub i64 %sub.9, %conv26.9
  store i64 %sub27.9, i64* %arrayidx5.9, align 8, !tbaa !3
  %conv33 = zext i32 %or25.9 to i64
  %sub34 = sub nsw i64 0, %conv33
  %48 = load i64, i64* %c, align 8, !tbaa !3
  %49 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 0), align 16, !tbaa !3
  %and46 = and i64 %49, %sub34
  %add47 = add i64 %and46, %48
  store i64 %add47, i64* %c, align 8, !tbaa !3
  %xor.i102 = xor i64 %add47, %48
  %xor1.i103 = xor i64 %and46, %48
  %or.i104 = or i64 %xor.i102, %xor1.i103
  %xor2.i105 = xor i64 %or.i104, %add47
  %or55 = lshr i64 %xor2.i105, 63
  %50 = load i64, i64* %arrayidx5.1, align 8, !tbaa !3
  %add43.1 = add i64 %50, %or55
  %51 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 1), align 8, !tbaa !3
  %and46.1 = and i64 %51, %sub34
  %add47.1 = add i64 %and46.1, %add43.1
  store i64 %add47.1, i64* %arrayidx5.1, align 8, !tbaa !3
  %52 = xor i64 %add43.1, -9223372036854775808
  %xor2.i111.1 = and i64 %52, %50
  %xor.i102.1 = xor i64 %add47.1, %add43.1
  %xor1.i103.1 = xor i64 %and46.1, %add43.1
  %or.i104.1 = or i64 %xor.i102.1, %xor1.i103.1
  %xor2.i105.1 = xor i64 %or.i104.1, %add47.1
  %shr.i112129.1 = or i64 %xor2.i105.1, %xor2.i111.1
  %or55.1 = lshr i64 %shr.i112129.1, 63
  %53 = load i64, i64* %arrayidx5.2, align 8, !tbaa !3
  %add43.2 = add i64 %53, %or55.1
  %54 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 2), align 16, !tbaa !3
  %and46.2 = and i64 %54, %sub34
  %add47.2 = add i64 %and46.2, %add43.2
  store i64 %add47.2, i64* %arrayidx5.2, align 8, !tbaa !3
  %55 = xor i64 %add43.2, -9223372036854775808
  %xor2.i111.2 = and i64 %55, %53
  %xor.i102.2 = xor i64 %add47.2, %add43.2
  %xor1.i103.2 = xor i64 %and46.2, %add43.2
  %or.i104.2 = or i64 %xor.i102.2, %xor1.i103.2
  %xor2.i105.2 = xor i64 %or.i104.2, %add47.2
  %shr.i112129.2 = or i64 %xor2.i105.2, %xor2.i111.2
  %or55.2 = lshr i64 %shr.i112129.2, 63
  %56 = load i64, i64* %arrayidx5.3, align 8, !tbaa !3
  %add43.3 = add i64 %56, %or55.2
  %57 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 3), align 8, !tbaa !3
  %and46.3 = and i64 %57, %sub34
  %add47.3 = add i64 %and46.3, %add43.3
  store i64 %add47.3, i64* %arrayidx5.3, align 8, !tbaa !3
  %58 = xor i64 %add43.3, -9223372036854775808
  %xor2.i111.3 = and i64 %58, %56
  %xor.i102.3 = xor i64 %add47.3, %add43.3
  %xor1.i103.3 = xor i64 %and46.3, %add43.3
  %or.i104.3 = or i64 %xor.i102.3, %xor1.i103.3
  %xor2.i105.3 = xor i64 %or.i104.3, %add47.3
  %shr.i112129.3 = or i64 %xor2.i105.3, %xor2.i111.3
  %or55.3 = lshr i64 %shr.i112129.3, 63
  %59 = load i64, i64* %arrayidx5.4, align 8, !tbaa !3
  %add43.4 = add i64 %59, %or55.3
  %60 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 4), align 16, !tbaa !3
  %and46.4 = and i64 %60, %sub34
  %add47.4 = add i64 %and46.4, %add43.4
  store i64 %add47.4, i64* %arrayidx5.4, align 8, !tbaa !3
  %61 = xor i64 %add43.4, -9223372036854775808
  %xor2.i111.4 = and i64 %61, %59
  %xor.i102.4 = xor i64 %add47.4, %add43.4
  %xor1.i103.4 = xor i64 %and46.4, %add43.4
  %or.i104.4 = or i64 %xor.i102.4, %xor1.i103.4
  %xor2.i105.4 = xor i64 %or.i104.4, %add47.4
  %shr.i112129.4 = or i64 %xor2.i105.4, %xor2.i111.4
  %or55.4 = lshr i64 %shr.i112129.4, 63
  %62 = load i64, i64* %arrayidx5.5, align 8, !tbaa !3
  %add43.5 = add i64 %62, %or55.4
  %63 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 5), align 8, !tbaa !3
  %and46.5 = and i64 %63, %sub34
  %add47.5 = add i64 %and46.5, %add43.5
  store i64 %add47.5, i64* %arrayidx5.5, align 8, !tbaa !3
  %64 = xor i64 %add43.5, -9223372036854775808
  %xor2.i111.5 = and i64 %64, %62
  %xor.i102.5 = xor i64 %add47.5, %add43.5
  %xor1.i103.5 = xor i64 %and46.5, %add43.5
  %or.i104.5 = or i64 %xor.i102.5, %xor1.i103.5
  %xor2.i105.5 = xor i64 %or.i104.5, %add47.5
  %shr.i112129.5 = or i64 %xor2.i105.5, %xor2.i111.5
  %or55.5 = lshr i64 %shr.i112129.5, 63
  %65 = load i64, i64* %arrayidx5.6, align 8, !tbaa !3
  %add43.6 = add i64 %65, %or55.5
  %66 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 6), align 16, !tbaa !3
  %and46.6 = and i64 %66, %sub34
  %add47.6 = add i64 %and46.6, %add43.6
  store i64 %add47.6, i64* %arrayidx5.6, align 8, !tbaa !3
  %67 = xor i64 %add43.6, -9223372036854775808
  %xor2.i111.6 = and i64 %67, %65
  %xor.i102.6 = xor i64 %add47.6, %add43.6
  %xor1.i103.6 = xor i64 %and46.6, %add43.6
  %or.i104.6 = or i64 %xor.i102.6, %xor1.i103.6
  %xor2.i105.6 = xor i64 %or.i104.6, %add47.6
  %shr.i112129.6 = or i64 %xor2.i105.6, %xor2.i111.6
  %or55.6 = lshr i64 %shr.i112129.6, 63
  %68 = load i64, i64* %arrayidx5.7, align 8, !tbaa !3
  %add43.7 = add i64 %68, %or55.6
  %69 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 7), align 8, !tbaa !3
  %and46.7 = and i64 %69, %sub34
  %add47.7 = add i64 %and46.7, %add43.7
  store i64 %add47.7, i64* %arrayidx5.7, align 8, !tbaa !3
  %70 = xor i64 %add43.7, -9223372036854775808
  %xor2.i111.7 = and i64 %70, %68
  %xor.i102.7 = xor i64 %add47.7, %add43.7
  %xor1.i103.7 = xor i64 %and46.7, %add43.7
  %or.i104.7 = or i64 %xor.i102.7, %xor1.i103.7
  %xor2.i105.7 = xor i64 %or.i104.7, %add47.7
  %shr.i112129.7 = or i64 %xor2.i105.7, %xor2.i111.7
  %or55.7 = lshr i64 %shr.i112129.7, 63
  %71 = load i64, i64* %arrayidx5.8, align 8, !tbaa !3
  %add43.8 = add i64 %71, %or55.7
  %72 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 8), align 16, !tbaa !3
  %and46.8 = and i64 %72, %sub34
  %add47.8 = add i64 %and46.8, %add43.8
  store i64 %add47.8, i64* %arrayidx5.8, align 8, !tbaa !3
  %73 = xor i64 %add43.8, -9223372036854775808
  %xor2.i111.8 = and i64 %73, %71
  %xor.i102.8 = xor i64 %add47.8, %add43.8
  %xor1.i103.8 = xor i64 %and46.8, %add43.8
  %or.i104.8 = or i64 %xor.i102.8, %xor1.i103.8
  %xor2.i105.8 = xor i64 %or.i104.8, %add47.8
  %shr.i112129.8 = or i64 %xor2.i105.8, %xor2.i111.8
  %or55.8 = lshr i64 %shr.i112129.8, 63
  %74 = load i64, i64* %arrayidx5.9, align 8, !tbaa !3
  %add43.9 = add i64 %74, %or55.8
  %75 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 9), align 8, !tbaa !3
  %and46.9 = and i64 %75, %sub34
  %add47.9 = add i64 %and46.9, %add43.9
  store i64 %add47.9, i64* %arrayidx5.9, align 8, !tbaa !3
  ret void
}

; Function Attrs: inlinehint norecurse nounwind ssp uwtable
define void @fpsub610(i64* nocapture readonly %a, i64* nocapture readonly %b, i64* nocapture %c) local_unnamed_addr #0 {
entry:
  %0 = load i64, i64* %a, align 8, !tbaa !3
  %1 = load i64, i64* %b, align 8, !tbaa !3
  %sub = sub i64 %0, %1
  %xor.i = xor i64 %1, %0
  %xor1.i = xor i64 %sub, %1
  %or.i = or i64 %xor1.i, %xor.i
  %xor2.i = xor i64 %or.i, %0
  %shr.i = lshr i64 %xor2.i, 63
  %conv.i = trunc i64 %shr.i to i32
  store i64 %sub, i64* %c, align 8, !tbaa !3
  %arrayidx.1 = getelementptr inbounds i64, i64* %a, i64 1
  %2 = load i64, i64* %arrayidx.1, align 8, !tbaa !3
  %arrayidx2.1 = getelementptr inbounds i64, i64* %b, i64 1
  %3 = load i64, i64* %arrayidx2.1, align 8, !tbaa !3
  %sub.1 = sub i64 %2, %3
  %xor.i.1 = xor i64 %3, %2
  %xor1.i.1 = xor i64 %sub.1, %3
  %or.i.1 = or i64 %xor1.i.1, %xor.i.1
  %xor2.i.1 = xor i64 %or.i.1, %2
  %shr.i.1 = lshr i64 %xor2.i.1, 63
  %conv.i.1 = trunc i64 %shr.i.1 to i32
  %sub.i.i.1 = sub i64 0, %sub.1
  %or.i.i.1 = or i64 %sub.1, %sub.i.i.1
  %shr.i.i.1 = lshr i64 %or.i.i.1, 63
  %conv.i.i.1 = trunc i64 %shr.i.i.1 to i32
  %xor.i79.1 = xor i32 %conv.i.i.1, 1
  %and.1 = and i32 %xor.i79.1, %conv.i
  %or.1 = or i32 %and.1, %conv.i.1
  %sub8.1 = sub i64 %sub.1, %shr.i
  %arrayidx10.1 = getelementptr inbounds i64, i64* %c, i64 1
  store i64 %sub8.1, i64* %arrayidx10.1, align 8, !tbaa !3
  %arrayidx.2 = getelementptr inbounds i64, i64* %a, i64 2
  %4 = load i64, i64* %arrayidx.2, align 8, !tbaa !3
  %arrayidx2.2 = getelementptr inbounds i64, i64* %b, i64 2
  %5 = load i64, i64* %arrayidx2.2, align 8, !tbaa !3
  %sub.2 = sub i64 %4, %5
  %xor.i.2 = xor i64 %5, %4
  %xor1.i.2 = xor i64 %sub.2, %5
  %or.i.2 = or i64 %xor1.i.2, %xor.i.2
  %xor2.i.2 = xor i64 %or.i.2, %4
  %shr.i.2 = lshr i64 %xor2.i.2, 63
  %conv.i.2 = trunc i64 %shr.i.2 to i32
  %sub.i.i.2 = sub i64 0, %sub.2
  %or.i.i.2 = or i64 %sub.2, %sub.i.i.2
  %shr.i.i.2 = lshr i64 %or.i.i.2, 63
  %conv.i.i.2 = trunc i64 %shr.i.i.2 to i32
  %xor.i79.2 = xor i32 %conv.i.i.2, 1
  %and.2 = and i32 %xor.i79.2, %or.1
  %or.2 = or i32 %and.2, %conv.i.2
  %conv.2 = zext i32 %or.1 to i64
  %sub8.2 = sub i64 %sub.2, %conv.2
  %arrayidx10.2 = getelementptr inbounds i64, i64* %c, i64 2
  store i64 %sub8.2, i64* %arrayidx10.2, align 8, !tbaa !3
  %arrayidx.3 = getelementptr inbounds i64, i64* %a, i64 3
  %6 = load i64, i64* %arrayidx.3, align 8, !tbaa !3
  %arrayidx2.3 = getelementptr inbounds i64, i64* %b, i64 3
  %7 = load i64, i64* %arrayidx2.3, align 8, !tbaa !3
  %sub.3 = sub i64 %6, %7
  %xor.i.3 = xor i64 %7, %6
  %xor1.i.3 = xor i64 %sub.3, %7
  %or.i.3 = or i64 %xor1.i.3, %xor.i.3
  %xor2.i.3 = xor i64 %or.i.3, %6
  %shr.i.3 = lshr i64 %xor2.i.3, 63
  %conv.i.3 = trunc i64 %shr.i.3 to i32
  %sub.i.i.3 = sub i64 0, %sub.3
  %or.i.i.3 = or i64 %sub.3, %sub.i.i.3
  %shr.i.i.3 = lshr i64 %or.i.i.3, 63
  %conv.i.i.3 = trunc i64 %shr.i.i.3 to i32
  %xor.i79.3 = xor i32 %conv.i.i.3, 1
  %and.3 = and i32 %xor.i79.3, %or.2
  %or.3 = or i32 %and.3, %conv.i.3
  %conv.3 = zext i32 %or.2 to i64
  %sub8.3 = sub i64 %sub.3, %conv.3
  %arrayidx10.3 = getelementptr inbounds i64, i64* %c, i64 3
  store i64 %sub8.3, i64* %arrayidx10.3, align 8, !tbaa !3
  %arrayidx.4 = getelementptr inbounds i64, i64* %a, i64 4
  %8 = load i64, i64* %arrayidx.4, align 8, !tbaa !3
  %arrayidx2.4 = getelementptr inbounds i64, i64* %b, i64 4
  %9 = load i64, i64* %arrayidx2.4, align 8, !tbaa !3
  %sub.4 = sub i64 %8, %9
  %xor.i.4 = xor i64 %9, %8
  %xor1.i.4 = xor i64 %sub.4, %9
  %or.i.4 = or i64 %xor1.i.4, %xor.i.4
  %xor2.i.4 = xor i64 %or.i.4, %8
  %shr.i.4 = lshr i64 %xor2.i.4, 63
  %conv.i.4 = trunc i64 %shr.i.4 to i32
  %sub.i.i.4 = sub i64 0, %sub.4
  %or.i.i.4 = or i64 %sub.4, %sub.i.i.4
  %shr.i.i.4 = lshr i64 %or.i.i.4, 63
  %conv.i.i.4 = trunc i64 %shr.i.i.4 to i32
  %xor.i79.4 = xor i32 %conv.i.i.4, 1
  %and.4 = and i32 %xor.i79.4, %or.3
  %or.4 = or i32 %and.4, %conv.i.4
  %conv.4 = zext i32 %or.3 to i64
  %sub8.4 = sub i64 %sub.4, %conv.4
  %arrayidx10.4 = getelementptr inbounds i64, i64* %c, i64 4
  store i64 %sub8.4, i64* %arrayidx10.4, align 8, !tbaa !3
  %arrayidx.5 = getelementptr inbounds i64, i64* %a, i64 5
  %10 = load i64, i64* %arrayidx.5, align 8, !tbaa !3
  %arrayidx2.5 = getelementptr inbounds i64, i64* %b, i64 5
  %11 = load i64, i64* %arrayidx2.5, align 8, !tbaa !3
  %sub.5 = sub i64 %10, %11
  %xor.i.5 = xor i64 %11, %10
  %xor1.i.5 = xor i64 %sub.5, %11
  %or.i.5 = or i64 %xor1.i.5, %xor.i.5
  %xor2.i.5 = xor i64 %or.i.5, %10
  %shr.i.5 = lshr i64 %xor2.i.5, 63
  %conv.i.5 = trunc i64 %shr.i.5 to i32
  %sub.i.i.5 = sub i64 0, %sub.5
  %or.i.i.5 = or i64 %sub.5, %sub.i.i.5
  %shr.i.i.5 = lshr i64 %or.i.i.5, 63
  %conv.i.i.5 = trunc i64 %shr.i.i.5 to i32
  %xor.i79.5 = xor i32 %conv.i.i.5, 1
  %and.5 = and i32 %xor.i79.5, %or.4
  %or.5 = or i32 %and.5, %conv.i.5
  %conv.5 = zext i32 %or.4 to i64
  %sub8.5 = sub i64 %sub.5, %conv.5
  %arrayidx10.5 = getelementptr inbounds i64, i64* %c, i64 5
  store i64 %sub8.5, i64* %arrayidx10.5, align 8, !tbaa !3
  %arrayidx.6 = getelementptr inbounds i64, i64* %a, i64 6
  %12 = load i64, i64* %arrayidx.6, align 8, !tbaa !3
  %arrayidx2.6 = getelementptr inbounds i64, i64* %b, i64 6
  %13 = load i64, i64* %arrayidx2.6, align 8, !tbaa !3
  %sub.6 = sub i64 %12, %13
  %xor.i.6 = xor i64 %13, %12
  %xor1.i.6 = xor i64 %sub.6, %13
  %or.i.6 = or i64 %xor1.i.6, %xor.i.6
  %xor2.i.6 = xor i64 %or.i.6, %12
  %shr.i.6 = lshr i64 %xor2.i.6, 63
  %conv.i.6 = trunc i64 %shr.i.6 to i32
  %sub.i.i.6 = sub i64 0, %sub.6
  %or.i.i.6 = or i64 %sub.6, %sub.i.i.6
  %shr.i.i.6 = lshr i64 %or.i.i.6, 63
  %conv.i.i.6 = trunc i64 %shr.i.i.6 to i32
  %xor.i79.6 = xor i32 %conv.i.i.6, 1
  %and.6 = and i32 %xor.i79.6, %or.5
  %or.6 = or i32 %and.6, %conv.i.6
  %conv.6 = zext i32 %or.5 to i64
  %sub8.6 = sub i64 %sub.6, %conv.6
  %arrayidx10.6 = getelementptr inbounds i64, i64* %c, i64 6
  store i64 %sub8.6, i64* %arrayidx10.6, align 8, !tbaa !3
  %arrayidx.7 = getelementptr inbounds i64, i64* %a, i64 7
  %14 = load i64, i64* %arrayidx.7, align 8, !tbaa !3
  %arrayidx2.7 = getelementptr inbounds i64, i64* %b, i64 7
  %15 = load i64, i64* %arrayidx2.7, align 8, !tbaa !3
  %sub.7 = sub i64 %14, %15
  %xor.i.7 = xor i64 %15, %14
  %xor1.i.7 = xor i64 %sub.7, %15
  %or.i.7 = or i64 %xor1.i.7, %xor.i.7
  %xor2.i.7 = xor i64 %or.i.7, %14
  %shr.i.7 = lshr i64 %xor2.i.7, 63
  %conv.i.7 = trunc i64 %shr.i.7 to i32
  %sub.i.i.7 = sub i64 0, %sub.7
  %or.i.i.7 = or i64 %sub.7, %sub.i.i.7
  %shr.i.i.7 = lshr i64 %or.i.i.7, 63
  %conv.i.i.7 = trunc i64 %shr.i.i.7 to i32
  %xor.i79.7 = xor i32 %conv.i.i.7, 1
  %and.7 = and i32 %xor.i79.7, %or.6
  %or.7 = or i32 %and.7, %conv.i.7
  %conv.7 = zext i32 %or.6 to i64
  %sub8.7 = sub i64 %sub.7, %conv.7
  %arrayidx10.7 = getelementptr inbounds i64, i64* %c, i64 7
  store i64 %sub8.7, i64* %arrayidx10.7, align 8, !tbaa !3
  %arrayidx.8 = getelementptr inbounds i64, i64* %a, i64 8
  %16 = load i64, i64* %arrayidx.8, align 8, !tbaa !3
  %arrayidx2.8 = getelementptr inbounds i64, i64* %b, i64 8
  %17 = load i64, i64* %arrayidx2.8, align 8, !tbaa !3
  %sub.8 = sub i64 %16, %17
  %xor.i.8 = xor i64 %17, %16
  %xor1.i.8 = xor i64 %sub.8, %17
  %or.i.8 = or i64 %xor1.i.8, %xor.i.8
  %xor2.i.8 = xor i64 %or.i.8, %16
  %shr.i.8 = lshr i64 %xor2.i.8, 63
  %conv.i.8 = trunc i64 %shr.i.8 to i32
  %sub.i.i.8 = sub i64 0, %sub.8
  %or.i.i.8 = or i64 %sub.8, %sub.i.i.8
  %shr.i.i.8 = lshr i64 %or.i.i.8, 63
  %conv.i.i.8 = trunc i64 %shr.i.i.8 to i32
  %xor.i79.8 = xor i32 %conv.i.i.8, 1
  %and.8 = and i32 %xor.i79.8, %or.7
  %or.8 = or i32 %and.8, %conv.i.8
  %conv.8 = zext i32 %or.7 to i64
  %sub8.8 = sub i64 %sub.8, %conv.8
  %arrayidx10.8 = getelementptr inbounds i64, i64* %c, i64 8
  store i64 %sub8.8, i64* %arrayidx10.8, align 8, !tbaa !3
  %arrayidx.9 = getelementptr inbounds i64, i64* %a, i64 9
  %18 = load i64, i64* %arrayidx.9, align 8, !tbaa !3
  %arrayidx2.9 = getelementptr inbounds i64, i64* %b, i64 9
  %19 = load i64, i64* %arrayidx2.9, align 8, !tbaa !3
  %sub.9 = sub i64 %18, %19
  %xor.i.9 = xor i64 %19, %18
  %xor1.i.9 = xor i64 %sub.9, %19
  %or.i.9 = or i64 %xor1.i.9, %xor.i.9
  %xor2.i.9 = xor i64 %or.i.9, %18
  %shr.i.9 = lshr i64 %xor2.i.9, 63
  %conv.i.9 = trunc i64 %shr.i.9 to i32
  %sub.i.i.9 = sub i64 0, %sub.9
  %or.i.i.9 = or i64 %sub.9, %sub.i.i.9
  %shr.i.i.9 = lshr i64 %or.i.i.9, 63
  %conv.i.i.9 = trunc i64 %shr.i.i.9 to i32
  %xor.i79.9 = xor i32 %conv.i.i.9, 1
  %and.9 = and i32 %xor.i79.9, %or.8
  %or.9 = or i32 %and.9, %conv.i.9
  %conv.9 = zext i32 %or.8 to i64
  %sub8.9 = sub i64 %sub.9, %conv.9
  %arrayidx10.9 = getelementptr inbounds i64, i64* %c, i64 9
  store i64 %sub8.9, i64* %arrayidx10.9, align 8, !tbaa !3
  %conv11 = zext i32 %or.9 to i64
  %sub12 = sub nsw i64 0, %conv11
  %20 = load i64, i64* %c, align 8, !tbaa !3
  %21 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 0), align 16, !tbaa !3
  %and23 = and i64 %21, %sub12
  %add24 = add i64 %and23, %20
  store i64 %add24, i64* %c, align 8, !tbaa !3
  %xor.i66 = xor i64 %add24, %20
  %xor1.i68 = xor i64 %and23, %20
  %or.i69 = or i64 %xor.i66, %xor1.i68
  %xor2.i70 = xor i64 %or.i69, %add24
  %or32 = lshr i64 %xor2.i70, 63
  %22 = load i64, i64* %arrayidx10.1, align 8, !tbaa !3
  %add.1 = add i64 %22, %or32
  %23 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 1), align 8, !tbaa !3
  %and23.1 = and i64 %23, %sub12
  %add24.1 = add i64 %and23.1, %add.1
  store i64 %add24.1, i64* %arrayidx10.1, align 8, !tbaa !3
  %24 = xor i64 %add.1, -9223372036854775808
  %xor2.i76.1 = and i64 %24, %22
  %xor.i66.1 = xor i64 %add24.1, %add.1
  %xor1.i68.1 = xor i64 %and23.1, %add.1
  %or.i69.1 = or i64 %xor.i66.1, %xor1.i68.1
  %xor2.i70.1 = xor i64 %or.i69.1, %add24.1
  %shr.i7780.1 = or i64 %xor2.i70.1, %xor2.i76.1
  %or32.1 = lshr i64 %shr.i7780.1, 63
  %25 = load i64, i64* %arrayidx10.2, align 8, !tbaa !3
  %add.2 = add i64 %25, %or32.1
  %26 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 2), align 16, !tbaa !3
  %and23.2 = and i64 %26, %sub12
  %add24.2 = add i64 %and23.2, %add.2
  store i64 %add24.2, i64* %arrayidx10.2, align 8, !tbaa !3
  %27 = xor i64 %add.2, -9223372036854775808
  %xor2.i76.2 = and i64 %27, %25
  %xor.i66.2 = xor i64 %add24.2, %add.2
  %xor1.i68.2 = xor i64 %and23.2, %add.2
  %or.i69.2 = or i64 %xor.i66.2, %xor1.i68.2
  %xor2.i70.2 = xor i64 %or.i69.2, %add24.2
  %shr.i7780.2 = or i64 %xor2.i70.2, %xor2.i76.2
  %or32.2 = lshr i64 %shr.i7780.2, 63
  %28 = load i64, i64* %arrayidx10.3, align 8, !tbaa !3
  %add.3 = add i64 %28, %or32.2
  %29 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 3), align 8, !tbaa !3
  %and23.3 = and i64 %29, %sub12
  %add24.3 = add i64 %and23.3, %add.3
  store i64 %add24.3, i64* %arrayidx10.3, align 8, !tbaa !3
  %30 = xor i64 %add.3, -9223372036854775808
  %xor2.i76.3 = and i64 %30, %28
  %xor.i66.3 = xor i64 %add24.3, %add.3
  %xor1.i68.3 = xor i64 %and23.3, %add.3
  %or.i69.3 = or i64 %xor.i66.3, %xor1.i68.3
  %xor2.i70.3 = xor i64 %or.i69.3, %add24.3
  %shr.i7780.3 = or i64 %xor2.i70.3, %xor2.i76.3
  %or32.3 = lshr i64 %shr.i7780.3, 63
  %31 = load i64, i64* %arrayidx10.4, align 8, !tbaa !3
  %add.4 = add i64 %31, %or32.3
  %32 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 4), align 16, !tbaa !3
  %and23.4 = and i64 %32, %sub12
  %add24.4 = add i64 %and23.4, %add.4
  store i64 %add24.4, i64* %arrayidx10.4, align 8, !tbaa !3
  %33 = xor i64 %add.4, -9223372036854775808
  %xor2.i76.4 = and i64 %33, %31
  %xor.i66.4 = xor i64 %add24.4, %add.4
  %xor1.i68.4 = xor i64 %and23.4, %add.4
  %or.i69.4 = or i64 %xor.i66.4, %xor1.i68.4
  %xor2.i70.4 = xor i64 %or.i69.4, %add24.4
  %shr.i7780.4 = or i64 %xor2.i70.4, %xor2.i76.4
  %or32.4 = lshr i64 %shr.i7780.4, 63
  %34 = load i64, i64* %arrayidx10.5, align 8, !tbaa !3
  %add.5 = add i64 %34, %or32.4
  %35 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 5), align 8, !tbaa !3
  %and23.5 = and i64 %35, %sub12
  %add24.5 = add i64 %and23.5, %add.5
  store i64 %add24.5, i64* %arrayidx10.5, align 8, !tbaa !3
  %36 = xor i64 %add.5, -9223372036854775808
  %xor2.i76.5 = and i64 %36, %34
  %xor.i66.5 = xor i64 %add24.5, %add.5
  %xor1.i68.5 = xor i64 %and23.5, %add.5
  %or.i69.5 = or i64 %xor.i66.5, %xor1.i68.5
  %xor2.i70.5 = xor i64 %or.i69.5, %add24.5
  %shr.i7780.5 = or i64 %xor2.i70.5, %xor2.i76.5
  %or32.5 = lshr i64 %shr.i7780.5, 63
  %37 = load i64, i64* %arrayidx10.6, align 8, !tbaa !3
  %add.6 = add i64 %37, %or32.5
  %38 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 6), align 16, !tbaa !3
  %and23.6 = and i64 %38, %sub12
  %add24.6 = add i64 %and23.6, %add.6
  store i64 %add24.6, i64* %arrayidx10.6, align 8, !tbaa !3
  %39 = xor i64 %add.6, -9223372036854775808
  %xor2.i76.6 = and i64 %39, %37
  %xor.i66.6 = xor i64 %add24.6, %add.6
  %xor1.i68.6 = xor i64 %and23.6, %add.6
  %or.i69.6 = or i64 %xor.i66.6, %xor1.i68.6
  %xor2.i70.6 = xor i64 %or.i69.6, %add24.6
  %shr.i7780.6 = or i64 %xor2.i70.6, %xor2.i76.6
  %or32.6 = lshr i64 %shr.i7780.6, 63
  %40 = load i64, i64* %arrayidx10.7, align 8, !tbaa !3
  %add.7 = add i64 %40, %or32.6
  %41 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 7), align 8, !tbaa !3
  %and23.7 = and i64 %41, %sub12
  %add24.7 = add i64 %and23.7, %add.7
  store i64 %add24.7, i64* %arrayidx10.7, align 8, !tbaa !3
  %42 = xor i64 %add.7, -9223372036854775808
  %xor2.i76.7 = and i64 %42, %40
  %xor.i66.7 = xor i64 %add24.7, %add.7
  %xor1.i68.7 = xor i64 %and23.7, %add.7
  %or.i69.7 = or i64 %xor.i66.7, %xor1.i68.7
  %xor2.i70.7 = xor i64 %or.i69.7, %add24.7
  %shr.i7780.7 = or i64 %xor2.i70.7, %xor2.i76.7
  %or32.7 = lshr i64 %shr.i7780.7, 63
  %43 = load i64, i64* %arrayidx10.8, align 8, !tbaa !3
  %add.8 = add i64 %43, %or32.7
  %44 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 8), align 16, !tbaa !3
  %and23.8 = and i64 %44, %sub12
  %add24.8 = add i64 %and23.8, %add.8
  store i64 %add24.8, i64* %arrayidx10.8, align 8, !tbaa !3
  %45 = xor i64 %add.8, -9223372036854775808
  %xor2.i76.8 = and i64 %45, %43
  %xor.i66.8 = xor i64 %add24.8, %add.8
  %xor1.i68.8 = xor i64 %and23.8, %add.8
  %or.i69.8 = or i64 %xor.i66.8, %xor1.i68.8
  %xor2.i70.8 = xor i64 %or.i69.8, %add24.8
  %shr.i7780.8 = or i64 %xor2.i70.8, %xor2.i76.8
  %or32.8 = lshr i64 %shr.i7780.8, 63
  %46 = load i64, i64* %arrayidx10.9, align 8, !tbaa !3
  %add.9 = add i64 %46, %or32.8
  %47 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 9), align 8, !tbaa !3
  %and23.9 = and i64 %47, %sub12
  %add24.9 = add i64 %and23.9, %add.9
  store i64 %add24.9, i64* %arrayidx10.9, align 8, !tbaa !3
  ret void
}

; Function Attrs: inlinehint norecurse nounwind ssp uwtable
define void @fpneg610(i64* nocapture %a) local_unnamed_addr #0 {
entry:
  %0 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 0), align 16, !tbaa !3
  %1 = load i64, i64* %a, align 8, !tbaa !3
  %sub = sub i64 %0, %1
  %xor.i = xor i64 %1, %0
  %xor1.i = xor i64 %sub, %1
  %or.i = or i64 %xor1.i, %xor.i
  %xor2.i = xor i64 %or.i, %0
  %shr.i = lshr i64 %xor2.i, 63
  %conv.i = trunc i64 %shr.i to i32
  store i64 %sub, i64* %a, align 8, !tbaa !3
  %2 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 1), align 8, !tbaa !3
  %arrayidx2.1 = getelementptr inbounds i64, i64* %a, i64 1
  %3 = load i64, i64* %arrayidx2.1, align 8, !tbaa !3
  %sub.1 = sub i64 %2, %3
  %xor.i.1 = xor i64 %3, %2
  %xor1.i.1 = xor i64 %sub.1, %3
  %or.i.1 = or i64 %xor1.i.1, %xor.i.1
  %xor2.i.1 = xor i64 %or.i.1, %2
  %shr.i.1 = lshr i64 %xor2.i.1, 63
  %conv.i.1 = trunc i64 %shr.i.1 to i32
  %sub.i.i.1 = sub i64 0, %sub.1
  %or.i.i.1 = or i64 %sub.1, %sub.i.i.1
  %shr.i.i.1 = lshr i64 %or.i.i.1, 63
  %conv.i.i.1 = trunc i64 %shr.i.i.1 to i32
  %xor.i25.1 = xor i32 %conv.i.i.1, 1
  %and.1 = and i32 %xor.i25.1, %conv.i
  %or.1 = or i32 %and.1, %conv.i.1
  %sub8.1 = sub i64 %sub.1, %shr.i
  store i64 %sub8.1, i64* %arrayidx2.1, align 8, !tbaa !3
  %4 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 2), align 16, !tbaa !3
  %arrayidx2.2 = getelementptr inbounds i64, i64* %a, i64 2
  %5 = load i64, i64* %arrayidx2.2, align 8, !tbaa !3
  %sub.2 = sub i64 %4, %5
  %xor.i.2 = xor i64 %5, %4
  %xor1.i.2 = xor i64 %sub.2, %5
  %or.i.2 = or i64 %xor1.i.2, %xor.i.2
  %xor2.i.2 = xor i64 %or.i.2, %4
  %shr.i.2 = lshr i64 %xor2.i.2, 63
  %conv.i.2 = trunc i64 %shr.i.2 to i32
  %sub.i.i.2 = sub i64 0, %sub.2
  %or.i.i.2 = or i64 %sub.2, %sub.i.i.2
  %shr.i.i.2 = lshr i64 %or.i.i.2, 63
  %conv.i.i.2 = trunc i64 %shr.i.i.2 to i32
  %xor.i25.2 = xor i32 %conv.i.i.2, 1
  %and.2 = and i32 %xor.i25.2, %or.1
  %or.2 = or i32 %and.2, %conv.i.2
  %conv.2 = zext i32 %or.1 to i64
  %sub8.2 = sub i64 %sub.2, %conv.2
  store i64 %sub8.2, i64* %arrayidx2.2, align 8, !tbaa !3
  %6 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 3), align 8, !tbaa !3
  %arrayidx2.3 = getelementptr inbounds i64, i64* %a, i64 3
  %7 = load i64, i64* %arrayidx2.3, align 8, !tbaa !3
  %sub.3 = sub i64 %6, %7
  %xor.i.3 = xor i64 %7, %6
  %xor1.i.3 = xor i64 %sub.3, %7
  %or.i.3 = or i64 %xor1.i.3, %xor.i.3
  %xor2.i.3 = xor i64 %or.i.3, %6
  %shr.i.3 = lshr i64 %xor2.i.3, 63
  %conv.i.3 = trunc i64 %shr.i.3 to i32
  %sub.i.i.3 = sub i64 0, %sub.3
  %or.i.i.3 = or i64 %sub.3, %sub.i.i.3
  %shr.i.i.3 = lshr i64 %or.i.i.3, 63
  %conv.i.i.3 = trunc i64 %shr.i.i.3 to i32
  %xor.i25.3 = xor i32 %conv.i.i.3, 1
  %and.3 = and i32 %xor.i25.3, %or.2
  %or.3 = or i32 %and.3, %conv.i.3
  %conv.3 = zext i32 %or.2 to i64
  %sub8.3 = sub i64 %sub.3, %conv.3
  store i64 %sub8.3, i64* %arrayidx2.3, align 8, !tbaa !3
  %8 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 4), align 16, !tbaa !3
  %arrayidx2.4 = getelementptr inbounds i64, i64* %a, i64 4
  %9 = load i64, i64* %arrayidx2.4, align 8, !tbaa !3
  %sub.4 = sub i64 %8, %9
  %xor.i.4 = xor i64 %9, %8
  %xor1.i.4 = xor i64 %sub.4, %9
  %or.i.4 = or i64 %xor1.i.4, %xor.i.4
  %xor2.i.4 = xor i64 %or.i.4, %8
  %shr.i.4 = lshr i64 %xor2.i.4, 63
  %conv.i.4 = trunc i64 %shr.i.4 to i32
  %sub.i.i.4 = sub i64 0, %sub.4
  %or.i.i.4 = or i64 %sub.4, %sub.i.i.4
  %shr.i.i.4 = lshr i64 %or.i.i.4, 63
  %conv.i.i.4 = trunc i64 %shr.i.i.4 to i32
  %xor.i25.4 = xor i32 %conv.i.i.4, 1
  %and.4 = and i32 %xor.i25.4, %or.3
  %or.4 = or i32 %and.4, %conv.i.4
  %conv.4 = zext i32 %or.3 to i64
  %sub8.4 = sub i64 %sub.4, %conv.4
  store i64 %sub8.4, i64* %arrayidx2.4, align 8, !tbaa !3
  %10 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 5), align 8, !tbaa !3
  %arrayidx2.5 = getelementptr inbounds i64, i64* %a, i64 5
  %11 = load i64, i64* %arrayidx2.5, align 8, !tbaa !3
  %sub.5 = sub i64 %10, %11
  %xor.i.5 = xor i64 %11, %10
  %xor1.i.5 = xor i64 %sub.5, %11
  %or.i.5 = or i64 %xor1.i.5, %xor.i.5
  %xor2.i.5 = xor i64 %or.i.5, %10
  %shr.i.5 = lshr i64 %xor2.i.5, 63
  %conv.i.5 = trunc i64 %shr.i.5 to i32
  %sub.i.i.5 = sub i64 0, %sub.5
  %or.i.i.5 = or i64 %sub.5, %sub.i.i.5
  %shr.i.i.5 = lshr i64 %or.i.i.5, 63
  %conv.i.i.5 = trunc i64 %shr.i.i.5 to i32
  %xor.i25.5 = xor i32 %conv.i.i.5, 1
  %and.5 = and i32 %xor.i25.5, %or.4
  %or.5 = or i32 %and.5, %conv.i.5
  %conv.5 = zext i32 %or.4 to i64
  %sub8.5 = sub i64 %sub.5, %conv.5
  store i64 %sub8.5, i64* %arrayidx2.5, align 8, !tbaa !3
  %12 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 6), align 16, !tbaa !3
  %arrayidx2.6 = getelementptr inbounds i64, i64* %a, i64 6
  %13 = load i64, i64* %arrayidx2.6, align 8, !tbaa !3
  %sub.6 = sub i64 %12, %13
  %xor.i.6 = xor i64 %13, %12
  %xor1.i.6 = xor i64 %sub.6, %13
  %or.i.6 = or i64 %xor1.i.6, %xor.i.6
  %xor2.i.6 = xor i64 %or.i.6, %12
  %shr.i.6 = lshr i64 %xor2.i.6, 63
  %conv.i.6 = trunc i64 %shr.i.6 to i32
  %sub.i.i.6 = sub i64 0, %sub.6
  %or.i.i.6 = or i64 %sub.6, %sub.i.i.6
  %shr.i.i.6 = lshr i64 %or.i.i.6, 63
  %conv.i.i.6 = trunc i64 %shr.i.i.6 to i32
  %xor.i25.6 = xor i32 %conv.i.i.6, 1
  %and.6 = and i32 %xor.i25.6, %or.5
  %or.6 = or i32 %and.6, %conv.i.6
  %conv.6 = zext i32 %or.5 to i64
  %sub8.6 = sub i64 %sub.6, %conv.6
  store i64 %sub8.6, i64* %arrayidx2.6, align 8, !tbaa !3
  %14 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 7), align 8, !tbaa !3
  %arrayidx2.7 = getelementptr inbounds i64, i64* %a, i64 7
  %15 = load i64, i64* %arrayidx2.7, align 8, !tbaa !3
  %sub.7 = sub i64 %14, %15
  %xor.i.7 = xor i64 %15, %14
  %xor1.i.7 = xor i64 %sub.7, %15
  %or.i.7 = or i64 %xor1.i.7, %xor.i.7
  %xor2.i.7 = xor i64 %or.i.7, %14
  %shr.i.7 = lshr i64 %xor2.i.7, 63
  %conv.i.7 = trunc i64 %shr.i.7 to i32
  %sub.i.i.7 = sub i64 0, %sub.7
  %or.i.i.7 = or i64 %sub.7, %sub.i.i.7
  %shr.i.i.7 = lshr i64 %or.i.i.7, 63
  %conv.i.i.7 = trunc i64 %shr.i.i.7 to i32
  %xor.i25.7 = xor i32 %conv.i.i.7, 1
  %and.7 = and i32 %xor.i25.7, %or.6
  %or.7 = or i32 %and.7, %conv.i.7
  %conv.7 = zext i32 %or.6 to i64
  %sub8.7 = sub i64 %sub.7, %conv.7
  store i64 %sub8.7, i64* %arrayidx2.7, align 8, !tbaa !3
  %16 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 8), align 16, !tbaa !3
  %arrayidx2.8 = getelementptr inbounds i64, i64* %a, i64 8
  %17 = load i64, i64* %arrayidx2.8, align 8, !tbaa !3
  %sub.8 = sub i64 %16, %17
  %xor.i.8 = xor i64 %17, %16
  %xor1.i.8 = xor i64 %sub.8, %17
  %or.i.8 = or i64 %xor1.i.8, %xor.i.8
  %xor2.i.8 = xor i64 %or.i.8, %16
  %shr.i.8 = lshr i64 %xor2.i.8, 63
  %conv.i.8 = trunc i64 %shr.i.8 to i32
  %sub.i.i.8 = sub i64 0, %sub.8
  %or.i.i.8 = or i64 %sub.8, %sub.i.i.8
  %shr.i.i.8 = lshr i64 %or.i.i.8, 63
  %conv.i.i.8 = trunc i64 %shr.i.i.8 to i32
  %xor.i25.8 = xor i32 %conv.i.i.8, 1
  %and.8 = and i32 %xor.i25.8, %or.7
  %or.8 = or i32 %and.8, %conv.i.8
  %conv.8 = zext i32 %or.7 to i64
  %sub8.8 = sub i64 %sub.8, %conv.8
  store i64 %sub8.8, i64* %arrayidx2.8, align 8, !tbaa !3
  %18 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610x2, i64 0, i64 9), align 8, !tbaa !3
  %arrayidx2.9 = getelementptr inbounds i64, i64* %a, i64 9
  %19 = load i64, i64* %arrayidx2.9, align 8, !tbaa !3
  %sub.9 = sub i64 %18, %19
  %conv.9 = zext i32 %or.8 to i64
  %sub8.9 = sub i64 %sub.9, %conv.9
  store i64 %sub8.9, i64* %arrayidx2.9, align 8, !tbaa !3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @fpdiv2_610(i64* nocapture readonly %a, i64* %c) local_unnamed_addr #1 {
entry:
  %0 = load i64, i64* %a, align 8, !tbaa !3
  %and = and i64 %0, 1
  %sub = sub nsw i64 0, %and
  %1 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 0), align 16, !tbaa !3
  %and4 = and i64 %1, %sub
  %add5 = add i64 %and4, %0
  store i64 %add5, i64* %c, align 8, !tbaa !3
  %xor.i27 = xor i64 %add5, %0
  %xor1.i28 = xor i64 %and4, %0
  %or.i29 = or i64 %xor.i27, %xor1.i28
  %xor2.i30 = xor i64 %or.i29, %add5
  %or = lshr i64 %xor2.i30, 63
  %arrayidx1.1 = getelementptr inbounds i64, i64* %a, i64 1
  %2 = load i64, i64* %arrayidx1.1, align 8, !tbaa !3
  %add.1 = add i64 %2, %or
  %3 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 1), align 8, !tbaa !3
  %and4.1 = and i64 %3, %sub
  %add5.1 = add i64 %and4.1, %add.1
  %arrayidx7.1 = getelementptr inbounds i64, i64* %c, i64 1
  store i64 %add5.1, i64* %arrayidx7.1, align 8, !tbaa !3
  %4 = xor i64 %add.1, -9223372036854775808
  %xor2.i.1 = and i64 %4, %2
  %xor.i27.1 = xor i64 %add5.1, %add.1
  %xor1.i28.1 = xor i64 %and4.1, %add.1
  %or.i29.1 = or i64 %xor.i27.1, %xor1.i28.1
  %xor2.i30.1 = xor i64 %or.i29.1, %add5.1
  %shr.i33.1 = or i64 %xor2.i30.1, %xor2.i.1
  %or.1 = lshr i64 %shr.i33.1, 63
  %arrayidx1.2 = getelementptr inbounds i64, i64* %a, i64 2
  %5 = load i64, i64* %arrayidx1.2, align 8, !tbaa !3
  %add.2 = add i64 %5, %or.1
  %6 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 2), align 16, !tbaa !3
  %and4.2 = and i64 %6, %sub
  %add5.2 = add i64 %and4.2, %add.2
  %arrayidx7.2 = getelementptr inbounds i64, i64* %c, i64 2
  store i64 %add5.2, i64* %arrayidx7.2, align 8, !tbaa !3
  %7 = xor i64 %add.2, -9223372036854775808
  %xor2.i.2 = and i64 %7, %5
  %xor.i27.2 = xor i64 %add5.2, %add.2
  %xor1.i28.2 = xor i64 %and4.2, %add.2
  %or.i29.2 = or i64 %xor.i27.2, %xor1.i28.2
  %xor2.i30.2 = xor i64 %or.i29.2, %add5.2
  %shr.i33.2 = or i64 %xor2.i30.2, %xor2.i.2
  %or.2 = lshr i64 %shr.i33.2, 63
  %arrayidx1.3 = getelementptr inbounds i64, i64* %a, i64 3
  %8 = load i64, i64* %arrayidx1.3, align 8, !tbaa !3
  %add.3 = add i64 %8, %or.2
  %9 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 3), align 8, !tbaa !3
  %and4.3 = and i64 %9, %sub
  %add5.3 = add i64 %and4.3, %add.3
  %arrayidx7.3 = getelementptr inbounds i64, i64* %c, i64 3
  store i64 %add5.3, i64* %arrayidx7.3, align 8, !tbaa !3
  %10 = xor i64 %add.3, -9223372036854775808
  %xor2.i.3 = and i64 %10, %8
  %xor.i27.3 = xor i64 %add5.3, %add.3
  %xor1.i28.3 = xor i64 %and4.3, %add.3
  %or.i29.3 = or i64 %xor.i27.3, %xor1.i28.3
  %xor2.i30.3 = xor i64 %or.i29.3, %add5.3
  %shr.i33.3 = or i64 %xor2.i30.3, %xor2.i.3
  %or.3 = lshr i64 %shr.i33.3, 63
  %arrayidx1.4 = getelementptr inbounds i64, i64* %a, i64 4
  %11 = load i64, i64* %arrayidx1.4, align 8, !tbaa !3
  %add.4 = add i64 %11, %or.3
  %12 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 4), align 16, !tbaa !3
  %and4.4 = and i64 %12, %sub
  %add5.4 = add i64 %and4.4, %add.4
  %arrayidx7.4 = getelementptr inbounds i64, i64* %c, i64 4
  store i64 %add5.4, i64* %arrayidx7.4, align 8, !tbaa !3
  %13 = xor i64 %add.4, -9223372036854775808
  %xor2.i.4 = and i64 %13, %11
  %xor.i27.4 = xor i64 %add5.4, %add.4
  %xor1.i28.4 = xor i64 %and4.4, %add.4
  %or.i29.4 = or i64 %xor.i27.4, %xor1.i28.4
  %xor2.i30.4 = xor i64 %or.i29.4, %add5.4
  %shr.i33.4 = or i64 %xor2.i30.4, %xor2.i.4
  %or.4 = lshr i64 %shr.i33.4, 63
  %arrayidx1.5 = getelementptr inbounds i64, i64* %a, i64 5
  %14 = load i64, i64* %arrayidx1.5, align 8, !tbaa !3
  %add.5 = add i64 %14, %or.4
  %15 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 5), align 8, !tbaa !3
  %and4.5 = and i64 %15, %sub
  %add5.5 = add i64 %and4.5, %add.5
  %arrayidx7.5 = getelementptr inbounds i64, i64* %c, i64 5
  store i64 %add5.5, i64* %arrayidx7.5, align 8, !tbaa !3
  %16 = xor i64 %add.5, -9223372036854775808
  %xor2.i.5 = and i64 %16, %14
  %xor.i27.5 = xor i64 %add5.5, %add.5
  %xor1.i28.5 = xor i64 %and4.5, %add.5
  %or.i29.5 = or i64 %xor.i27.5, %xor1.i28.5
  %xor2.i30.5 = xor i64 %or.i29.5, %add5.5
  %shr.i33.5 = or i64 %xor2.i30.5, %xor2.i.5
  %or.5 = lshr i64 %shr.i33.5, 63
  %arrayidx1.6 = getelementptr inbounds i64, i64* %a, i64 6
  %17 = load i64, i64* %arrayidx1.6, align 8, !tbaa !3
  %add.6 = add i64 %17, %or.5
  %18 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 6), align 16, !tbaa !3
  %and4.6 = and i64 %18, %sub
  %add5.6 = add i64 %and4.6, %add.6
  %arrayidx7.6 = getelementptr inbounds i64, i64* %c, i64 6
  store i64 %add5.6, i64* %arrayidx7.6, align 8, !tbaa !3
  %19 = xor i64 %add.6, -9223372036854775808
  %xor2.i.6 = and i64 %19, %17
  %xor.i27.6 = xor i64 %add5.6, %add.6
  %xor1.i28.6 = xor i64 %and4.6, %add.6
  %or.i29.6 = or i64 %xor.i27.6, %xor1.i28.6
  %xor2.i30.6 = xor i64 %or.i29.6, %add5.6
  %shr.i33.6 = or i64 %xor2.i30.6, %xor2.i.6
  %or.6 = lshr i64 %shr.i33.6, 63
  %arrayidx1.7 = getelementptr inbounds i64, i64* %a, i64 7
  %20 = load i64, i64* %arrayidx1.7, align 8, !tbaa !3
  %add.7 = add i64 %20, %or.6
  %21 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 7), align 8, !tbaa !3
  %and4.7 = and i64 %21, %sub
  %add5.7 = add i64 %and4.7, %add.7
  %arrayidx7.7 = getelementptr inbounds i64, i64* %c, i64 7
  store i64 %add5.7, i64* %arrayidx7.7, align 8, !tbaa !3
  %22 = xor i64 %add.7, -9223372036854775808
  %xor2.i.7 = and i64 %22, %20
  %xor.i27.7 = xor i64 %add5.7, %add.7
  %xor1.i28.7 = xor i64 %and4.7, %add.7
  %or.i29.7 = or i64 %xor.i27.7, %xor1.i28.7
  %xor2.i30.7 = xor i64 %or.i29.7, %add5.7
  %shr.i33.7 = or i64 %xor2.i30.7, %xor2.i.7
  %or.7 = lshr i64 %shr.i33.7, 63
  %arrayidx1.8 = getelementptr inbounds i64, i64* %a, i64 8
  %23 = load i64, i64* %arrayidx1.8, align 8, !tbaa !3
  %add.8 = add i64 %23, %or.7
  %24 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 8), align 16, !tbaa !3
  %and4.8 = and i64 %24, %sub
  %add5.8 = add i64 %and4.8, %add.8
  %arrayidx7.8 = getelementptr inbounds i64, i64* %c, i64 8
  store i64 %add5.8, i64* %arrayidx7.8, align 8, !tbaa !3
  %25 = xor i64 %add.8, -9223372036854775808
  %xor2.i.8 = and i64 %25, %23
  %xor.i27.8 = xor i64 %add5.8, %add.8
  %xor1.i28.8 = xor i64 %and4.8, %add.8
  %or.i29.8 = or i64 %xor.i27.8, %xor1.i28.8
  %xor2.i30.8 = xor i64 %or.i29.8, %add5.8
  %shr.i33.8 = or i64 %xor2.i30.8, %xor2.i.8
  %or.8 = lshr i64 %shr.i33.8, 63
  %arrayidx1.9 = getelementptr inbounds i64, i64* %a, i64 9
  %26 = load i64, i64* %arrayidx1.9, align 8, !tbaa !3
  %add.9 = add i64 %26, %or.8
  %27 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 9), align 8, !tbaa !3
  %and4.9 = and i64 %27, %sub
  %add5.9 = add i64 %and4.9, %add.9
  %arrayidx7.9 = getelementptr inbounds i64, i64* %c, i64 9
  store i64 %add5.9, i64* %arrayidx7.9, align 8, !tbaa !3
  tail call void @mp_shiftr1(i64* %c, i32 10) #5
  ret void
}

declare void @mp_shiftr1(i64*, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind ssp uwtable
define void @fpcorrection610(i64* nocapture %a) local_unnamed_addr #3 {
entry:
  %0 = load i64, i64* %a, align 8, !tbaa !3
  %1 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 0), align 16, !tbaa !3
  %sub = sub i64 %0, %1
  %xor.i = xor i64 %1, %0
  %xor1.i = xor i64 %sub, %1
  %or.i = or i64 %xor1.i, %xor.i
  %xor2.i = xor i64 %or.i, %0
  %shr.i = lshr i64 %xor2.i, 63
  %conv.i = trunc i64 %shr.i to i32
  store i64 %sub, i64* %a, align 8, !tbaa !3
  %arrayidx.1 = getelementptr inbounds i64, i64* %a, i64 1
  %2 = load i64, i64* %arrayidx.1, align 8, !tbaa !3
  %3 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 1), align 8, !tbaa !3
  %sub.1 = sub i64 %2, %3
  %xor.i.1 = xor i64 %3, %2
  %xor1.i.1 = xor i64 %sub.1, %3
  %or.i.1 = or i64 %xor1.i.1, %xor.i.1
  %xor2.i.1 = xor i64 %or.i.1, %2
  %shr.i.1 = lshr i64 %xor2.i.1, 63
  %conv.i.1 = trunc i64 %shr.i.1 to i32
  %sub.i.i.1 = sub i64 0, %sub.1
  %or.i.i.1 = or i64 %sub.1, %sub.i.i.1
  %shr.i.i.1 = lshr i64 %or.i.i.1, 63
  %conv.i.i.1 = trunc i64 %shr.i.i.1 to i32
  %xor.i79.1 = xor i32 %conv.i.i.1, 1
  %and.1 = and i32 %xor.i79.1, %conv.i
  %or.1 = or i32 %and.1, %conv.i.1
  %sub8.1 = sub i64 %sub.1, %shr.i
  store i64 %sub8.1, i64* %arrayidx.1, align 8, !tbaa !3
  %arrayidx.2 = getelementptr inbounds i64, i64* %a, i64 2
  %4 = load i64, i64* %arrayidx.2, align 8, !tbaa !3
  %5 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 2), align 16, !tbaa !3
  %sub.2 = sub i64 %4, %5
  %xor.i.2 = xor i64 %5, %4
  %xor1.i.2 = xor i64 %sub.2, %5
  %or.i.2 = or i64 %xor1.i.2, %xor.i.2
  %xor2.i.2 = xor i64 %or.i.2, %4
  %shr.i.2 = lshr i64 %xor2.i.2, 63
  %conv.i.2 = trunc i64 %shr.i.2 to i32
  %sub.i.i.2 = sub i64 0, %sub.2
  %or.i.i.2 = or i64 %sub.2, %sub.i.i.2
  %shr.i.i.2 = lshr i64 %or.i.i.2, 63
  %conv.i.i.2 = trunc i64 %shr.i.i.2 to i32
  %xor.i79.2 = xor i32 %conv.i.i.2, 1
  %and.2 = and i32 %xor.i79.2, %or.1
  %or.2 = or i32 %and.2, %conv.i.2
  %conv.2 = zext i32 %or.1 to i64
  %sub8.2 = sub i64 %sub.2, %conv.2
  store i64 %sub8.2, i64* %arrayidx.2, align 8, !tbaa !3
  %arrayidx.3 = getelementptr inbounds i64, i64* %a, i64 3
  %6 = load i64, i64* %arrayidx.3, align 8, !tbaa !3
  %7 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 3), align 8, !tbaa !3
  %sub.3 = sub i64 %6, %7
  %xor.i.3 = xor i64 %7, %6
  %xor1.i.3 = xor i64 %sub.3, %7
  %or.i.3 = or i64 %xor1.i.3, %xor.i.3
  %xor2.i.3 = xor i64 %or.i.3, %6
  %shr.i.3 = lshr i64 %xor2.i.3, 63
  %conv.i.3 = trunc i64 %shr.i.3 to i32
  %sub.i.i.3 = sub i64 0, %sub.3
  %or.i.i.3 = or i64 %sub.3, %sub.i.i.3
  %shr.i.i.3 = lshr i64 %or.i.i.3, 63
  %conv.i.i.3 = trunc i64 %shr.i.i.3 to i32
  %xor.i79.3 = xor i32 %conv.i.i.3, 1
  %and.3 = and i32 %xor.i79.3, %or.2
  %or.3 = or i32 %and.3, %conv.i.3
  %conv.3 = zext i32 %or.2 to i64
  %sub8.3 = sub i64 %sub.3, %conv.3
  store i64 %sub8.3, i64* %arrayidx.3, align 8, !tbaa !3
  %arrayidx.4 = getelementptr inbounds i64, i64* %a, i64 4
  %8 = load i64, i64* %arrayidx.4, align 8, !tbaa !3
  %9 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 4), align 16, !tbaa !3
  %sub.4 = sub i64 %8, %9
  %xor.i.4 = xor i64 %9, %8
  %xor1.i.4 = xor i64 %sub.4, %9
  %or.i.4 = or i64 %xor1.i.4, %xor.i.4
  %xor2.i.4 = xor i64 %or.i.4, %8
  %shr.i.4 = lshr i64 %xor2.i.4, 63
  %conv.i.4 = trunc i64 %shr.i.4 to i32
  %sub.i.i.4 = sub i64 0, %sub.4
  %or.i.i.4 = or i64 %sub.4, %sub.i.i.4
  %shr.i.i.4 = lshr i64 %or.i.i.4, 63
  %conv.i.i.4 = trunc i64 %shr.i.i.4 to i32
  %xor.i79.4 = xor i32 %conv.i.i.4, 1
  %and.4 = and i32 %xor.i79.4, %or.3
  %or.4 = or i32 %and.4, %conv.i.4
  %conv.4 = zext i32 %or.3 to i64
  %sub8.4 = sub i64 %sub.4, %conv.4
  store i64 %sub8.4, i64* %arrayidx.4, align 8, !tbaa !3
  %arrayidx.5 = getelementptr inbounds i64, i64* %a, i64 5
  %10 = load i64, i64* %arrayidx.5, align 8, !tbaa !3
  %11 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 5), align 8, !tbaa !3
  %sub.5 = sub i64 %10, %11
  %xor.i.5 = xor i64 %11, %10
  %xor1.i.5 = xor i64 %sub.5, %11
  %or.i.5 = or i64 %xor1.i.5, %xor.i.5
  %xor2.i.5 = xor i64 %or.i.5, %10
  %shr.i.5 = lshr i64 %xor2.i.5, 63
  %conv.i.5 = trunc i64 %shr.i.5 to i32
  %sub.i.i.5 = sub i64 0, %sub.5
  %or.i.i.5 = or i64 %sub.5, %sub.i.i.5
  %shr.i.i.5 = lshr i64 %or.i.i.5, 63
  %conv.i.i.5 = trunc i64 %shr.i.i.5 to i32
  %xor.i79.5 = xor i32 %conv.i.i.5, 1
  %and.5 = and i32 %xor.i79.5, %or.4
  %or.5 = or i32 %and.5, %conv.i.5
  %conv.5 = zext i32 %or.4 to i64
  %sub8.5 = sub i64 %sub.5, %conv.5
  store i64 %sub8.5, i64* %arrayidx.5, align 8, !tbaa !3
  %arrayidx.6 = getelementptr inbounds i64, i64* %a, i64 6
  %12 = load i64, i64* %arrayidx.6, align 8, !tbaa !3
  %13 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 6), align 16, !tbaa !3
  %sub.6 = sub i64 %12, %13
  %xor.i.6 = xor i64 %13, %12
  %xor1.i.6 = xor i64 %sub.6, %13
  %or.i.6 = or i64 %xor1.i.6, %xor.i.6
  %xor2.i.6 = xor i64 %or.i.6, %12
  %shr.i.6 = lshr i64 %xor2.i.6, 63
  %conv.i.6 = trunc i64 %shr.i.6 to i32
  %sub.i.i.6 = sub i64 0, %sub.6
  %or.i.i.6 = or i64 %sub.6, %sub.i.i.6
  %shr.i.i.6 = lshr i64 %or.i.i.6, 63
  %conv.i.i.6 = trunc i64 %shr.i.i.6 to i32
  %xor.i79.6 = xor i32 %conv.i.i.6, 1
  %and.6 = and i32 %xor.i79.6, %or.5
  %or.6 = or i32 %and.6, %conv.i.6
  %conv.6 = zext i32 %or.5 to i64
  %sub8.6 = sub i64 %sub.6, %conv.6
  store i64 %sub8.6, i64* %arrayidx.6, align 8, !tbaa !3
  %arrayidx.7 = getelementptr inbounds i64, i64* %a, i64 7
  %14 = load i64, i64* %arrayidx.7, align 8, !tbaa !3
  %15 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 7), align 8, !tbaa !3
  %sub.7 = sub i64 %14, %15
  %xor.i.7 = xor i64 %15, %14
  %xor1.i.7 = xor i64 %sub.7, %15
  %or.i.7 = or i64 %xor1.i.7, %xor.i.7
  %xor2.i.7 = xor i64 %or.i.7, %14
  %shr.i.7 = lshr i64 %xor2.i.7, 63
  %conv.i.7 = trunc i64 %shr.i.7 to i32
  %sub.i.i.7 = sub i64 0, %sub.7
  %or.i.i.7 = or i64 %sub.7, %sub.i.i.7
  %shr.i.i.7 = lshr i64 %or.i.i.7, 63
  %conv.i.i.7 = trunc i64 %shr.i.i.7 to i32
  %xor.i79.7 = xor i32 %conv.i.i.7, 1
  %and.7 = and i32 %xor.i79.7, %or.6
  %or.7 = or i32 %and.7, %conv.i.7
  %conv.7 = zext i32 %or.6 to i64
  %sub8.7 = sub i64 %sub.7, %conv.7
  store i64 %sub8.7, i64* %arrayidx.7, align 8, !tbaa !3
  %arrayidx.8 = getelementptr inbounds i64, i64* %a, i64 8
  %16 = load i64, i64* %arrayidx.8, align 8, !tbaa !3
  %17 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 8), align 16, !tbaa !3
  %sub.8 = sub i64 %16, %17
  %xor.i.8 = xor i64 %17, %16
  %xor1.i.8 = xor i64 %sub.8, %17
  %or.i.8 = or i64 %xor1.i.8, %xor.i.8
  %xor2.i.8 = xor i64 %or.i.8, %16
  %shr.i.8 = lshr i64 %xor2.i.8, 63
  %conv.i.8 = trunc i64 %shr.i.8 to i32
  %sub.i.i.8 = sub i64 0, %sub.8
  %or.i.i.8 = or i64 %sub.8, %sub.i.i.8
  %shr.i.i.8 = lshr i64 %or.i.i.8, 63
  %conv.i.i.8 = trunc i64 %shr.i.i.8 to i32
  %xor.i79.8 = xor i32 %conv.i.i.8, 1
  %and.8 = and i32 %xor.i79.8, %or.7
  %or.8 = or i32 %and.8, %conv.i.8
  %conv.8 = zext i32 %or.7 to i64
  %sub8.8 = sub i64 %sub.8, %conv.8
  store i64 %sub8.8, i64* %arrayidx.8, align 8, !tbaa !3
  %arrayidx.9 = getelementptr inbounds i64, i64* %a, i64 9
  %18 = load i64, i64* %arrayidx.9, align 8, !tbaa !3
  %19 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 9), align 8, !tbaa !3
  %sub.9 = sub i64 %18, %19
  %xor.i.9 = xor i64 %19, %18
  %xor1.i.9 = xor i64 %sub.9, %19
  %or.i.9 = or i64 %xor1.i.9, %xor.i.9
  %xor2.i.9 = xor i64 %or.i.9, %18
  %shr.i.9 = lshr i64 %xor2.i.9, 63
  %conv.i.9 = trunc i64 %shr.i.9 to i32
  %sub.i.i.9 = sub i64 0, %sub.9
  %or.i.i.9 = or i64 %sub.9, %sub.i.i.9
  %shr.i.i.9 = lshr i64 %or.i.i.9, 63
  %conv.i.i.9 = trunc i64 %shr.i.i.9 to i32
  %xor.i79.9 = xor i32 %conv.i.i.9, 1
  %and.9 = and i32 %xor.i79.9, %or.8
  %or.9 = or i32 %and.9, %conv.i.9
  %conv.9 = zext i32 %or.8 to i64
  %sub8.9 = sub i64 %sub.9, %conv.9
  store i64 %sub8.9, i64* %arrayidx.9, align 8, !tbaa !3
  %conv11 = zext i32 %or.9 to i64
  %sub12 = sub nsw i64 0, %conv11
  %20 = load i64, i64* %a, align 8, !tbaa !3
  %21 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 0), align 16, !tbaa !3
  %and23 = and i64 %21, %sub12
  %add24 = add i64 %and23, %20
  store i64 %add24, i64* %a, align 8, !tbaa !3
  %xor.i66 = xor i64 %add24, %20
  %xor1.i68 = xor i64 %and23, %20
  %or.i69 = or i64 %xor.i66, %xor1.i68
  %xor2.i70 = xor i64 %or.i69, %add24
  %or32 = lshr i64 %xor2.i70, 63
  %22 = load i64, i64* %arrayidx.1, align 8, !tbaa !3
  %add.1 = add i64 %22, %or32
  %23 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 1), align 8, !tbaa !3
  %and23.1 = and i64 %23, %sub12
  %add24.1 = add i64 %and23.1, %add.1
  store i64 %add24.1, i64* %arrayidx.1, align 8, !tbaa !3
  %24 = xor i64 %add.1, -9223372036854775808
  %xor2.i76.1 = and i64 %24, %22
  %xor.i66.1 = xor i64 %add24.1, %add.1
  %xor1.i68.1 = xor i64 %and23.1, %add.1
  %or.i69.1 = or i64 %xor.i66.1, %xor1.i68.1
  %xor2.i70.1 = xor i64 %or.i69.1, %add24.1
  %shr.i7780.1 = or i64 %xor2.i70.1, %xor2.i76.1
  %or32.1 = lshr i64 %shr.i7780.1, 63
  %25 = load i64, i64* %arrayidx.2, align 8, !tbaa !3
  %add.2 = add i64 %25, %or32.1
  %26 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 2), align 16, !tbaa !3
  %and23.2 = and i64 %26, %sub12
  %add24.2 = add i64 %and23.2, %add.2
  store i64 %add24.2, i64* %arrayidx.2, align 8, !tbaa !3
  %27 = xor i64 %add.2, -9223372036854775808
  %xor2.i76.2 = and i64 %27, %25
  %xor.i66.2 = xor i64 %add24.2, %add.2
  %xor1.i68.2 = xor i64 %and23.2, %add.2
  %or.i69.2 = or i64 %xor.i66.2, %xor1.i68.2
  %xor2.i70.2 = xor i64 %or.i69.2, %add24.2
  %shr.i7780.2 = or i64 %xor2.i70.2, %xor2.i76.2
  %or32.2 = lshr i64 %shr.i7780.2, 63
  %28 = load i64, i64* %arrayidx.3, align 8, !tbaa !3
  %add.3 = add i64 %28, %or32.2
  %29 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 3), align 8, !tbaa !3
  %and23.3 = and i64 %29, %sub12
  %add24.3 = add i64 %and23.3, %add.3
  store i64 %add24.3, i64* %arrayidx.3, align 8, !tbaa !3
  %30 = xor i64 %add.3, -9223372036854775808
  %xor2.i76.3 = and i64 %30, %28
  %xor.i66.3 = xor i64 %add24.3, %add.3
  %xor1.i68.3 = xor i64 %and23.3, %add.3
  %or.i69.3 = or i64 %xor.i66.3, %xor1.i68.3
  %xor2.i70.3 = xor i64 %or.i69.3, %add24.3
  %shr.i7780.3 = or i64 %xor2.i70.3, %xor2.i76.3
  %or32.3 = lshr i64 %shr.i7780.3, 63
  %31 = load i64, i64* %arrayidx.4, align 8, !tbaa !3
  %add.4 = add i64 %31, %or32.3
  %32 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 4), align 16, !tbaa !3
  %and23.4 = and i64 %32, %sub12
  %add24.4 = add i64 %and23.4, %add.4
  store i64 %add24.4, i64* %arrayidx.4, align 8, !tbaa !3
  %33 = xor i64 %add.4, -9223372036854775808
  %xor2.i76.4 = and i64 %33, %31
  %xor.i66.4 = xor i64 %add24.4, %add.4
  %xor1.i68.4 = xor i64 %and23.4, %add.4
  %or.i69.4 = or i64 %xor.i66.4, %xor1.i68.4
  %xor2.i70.4 = xor i64 %or.i69.4, %add24.4
  %shr.i7780.4 = or i64 %xor2.i70.4, %xor2.i76.4
  %or32.4 = lshr i64 %shr.i7780.4, 63
  %34 = load i64, i64* %arrayidx.5, align 8, !tbaa !3
  %add.5 = add i64 %34, %or32.4
  %35 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 5), align 8, !tbaa !3
  %and23.5 = and i64 %35, %sub12
  %add24.5 = add i64 %and23.5, %add.5
  store i64 %add24.5, i64* %arrayidx.5, align 8, !tbaa !3
  %36 = xor i64 %add.5, -9223372036854775808
  %xor2.i76.5 = and i64 %36, %34
  %xor.i66.5 = xor i64 %add24.5, %add.5
  %xor1.i68.5 = xor i64 %and23.5, %add.5
  %or.i69.5 = or i64 %xor.i66.5, %xor1.i68.5
  %xor2.i70.5 = xor i64 %or.i69.5, %add24.5
  %shr.i7780.5 = or i64 %xor2.i70.5, %xor2.i76.5
  %or32.5 = lshr i64 %shr.i7780.5, 63
  %37 = load i64, i64* %arrayidx.6, align 8, !tbaa !3
  %add.6 = add i64 %37, %or32.5
  %38 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 6), align 16, !tbaa !3
  %and23.6 = and i64 %38, %sub12
  %add24.6 = add i64 %and23.6, %add.6
  store i64 %add24.6, i64* %arrayidx.6, align 8, !tbaa !3
  %39 = xor i64 %add.6, -9223372036854775808
  %xor2.i76.6 = and i64 %39, %37
  %xor.i66.6 = xor i64 %add24.6, %add.6
  %xor1.i68.6 = xor i64 %and23.6, %add.6
  %or.i69.6 = or i64 %xor.i66.6, %xor1.i68.6
  %xor2.i70.6 = xor i64 %or.i69.6, %add24.6
  %shr.i7780.6 = or i64 %xor2.i70.6, %xor2.i76.6
  %or32.6 = lshr i64 %shr.i7780.6, 63
  %40 = load i64, i64* %arrayidx.7, align 8, !tbaa !3
  %add.7 = add i64 %40, %or32.6
  %41 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 7), align 8, !tbaa !3
  %and23.7 = and i64 %41, %sub12
  %add24.7 = add i64 %and23.7, %add.7
  store i64 %add24.7, i64* %arrayidx.7, align 8, !tbaa !3
  %42 = xor i64 %add.7, -9223372036854775808
  %xor2.i76.7 = and i64 %42, %40
  %xor.i66.7 = xor i64 %add24.7, %add.7
  %xor1.i68.7 = xor i64 %and23.7, %add.7
  %or.i69.7 = or i64 %xor.i66.7, %xor1.i68.7
  %xor2.i70.7 = xor i64 %or.i69.7, %add24.7
  %shr.i7780.7 = or i64 %xor2.i70.7, %xor2.i76.7
  %or32.7 = lshr i64 %shr.i7780.7, 63
  %43 = load i64, i64* %arrayidx.8, align 8, !tbaa !3
  %add.8 = add i64 %43, %or32.7
  %44 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 8), align 16, !tbaa !3
  %and23.8 = and i64 %44, %sub12
  %add24.8 = add i64 %and23.8, %add.8
  store i64 %add24.8, i64* %arrayidx.8, align 8, !tbaa !3
  %45 = xor i64 %add.8, -9223372036854775808
  %xor2.i76.8 = and i64 %45, %43
  %xor.i66.8 = xor i64 %add24.8, %add.8
  %xor1.i68.8 = xor i64 %and23.8, %add.8
  %or.i69.8 = or i64 %xor.i66.8, %xor1.i68.8
  %xor2.i70.8 = xor i64 %or.i69.8, %add24.8
  %shr.i7780.8 = or i64 %xor2.i70.8, %xor2.i76.8
  %or32.8 = lshr i64 %shr.i7780.8, 63
  %46 = load i64, i64* %arrayidx.9, align 8, !tbaa !3
  %add.9 = add i64 %46, %or32.8
  %47 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610, i64 0, i64 9), align 8, !tbaa !3
  %and23.9 = and i64 %47, %sub12
  %add24.9 = add i64 %and23.9, %add.9
  store i64 %add24.9, i64* %arrayidx.9, align 8, !tbaa !3
  ret void
}

; Function Attrs: norecurse nounwind ssp uwtable
define void @digit_x_digit(i64 %a, i64 %b, i64* nocapture %c) local_unnamed_addr #3 {
entry:
  %and = and i64 %a, 4294967295
  %shr = lshr i64 %a, 32
  %and1 = and i64 %b, 4294967295
  %shr2 = lshr i64 %b, 32
  %mul = mul nuw i64 %and1, %and
  %mul3 = mul nuw i64 %shr2, %and
  %mul4 = mul nuw i64 %and1, %shr
  %mul5 = mul nuw i64 %shr2, %shr
  %and6 = and i64 %mul, 4294967295
  %shr7 = lshr i64 %mul, 32
  %and8 = and i64 %mul4, 4294967295
  %and9 = and i64 %mul3, 4294967295
  %add = add nuw nsw i64 %shr7, %and8
  %add10 = add nuw nsw i64 %add, %and9
  %shr11 = lshr i64 %add10, 32
  %shl = shl i64 %add10, 32
  %xor68 = or i64 %shl, %and6
  store i64 %xor68, i64* %c, align 8, !tbaa !3
  %shr13 = lshr i64 %mul4, 32
  %shr14 = lshr i64 %mul3, 32
  %and15 = and i64 %mul5, 4294967295
  %add16 = add nuw nsw i64 %shr13, %shr14
  %add17 = add nuw nsw i64 %add16, %and15
  %add18 = add nuw nsw i64 %add17, %shr11
  %and19 = and i64 %add18, 4294967295
  %arrayidx20 = getelementptr inbounds i64, i64* %c, i64 1
  %and21 = and i64 %add18, 30064771072
  %and22 = and i64 %mul5, -4294967296
  %add23 = add i64 %and21, %and22
  %xor2569 = or i64 %add23, %and19
  store i64 %xor2569, i64* %arrayidx20, align 8, !tbaa !3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @mp_mul(i64* nocapture readonly %a, i64* nocapture readonly %b, i64* nocapture %c, i32 %nwords) local_unnamed_addr #1 {
entry:
  %cmp220 = icmp eq i32 %nwords, 0
  br i1 %cmp220, label %for.cond25.preheader, label %for.cond1.preheader.preheader

for.cond1.preheader.preheader:                    ; preds = %entry
  %wide.trip.count242 = zext i32 %nwords to i64
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.end, %for.cond1.preheader.preheader
  %indvars.iv240 = phi i64 [ 0, %for.cond1.preheader.preheader ], [ %indvars.iv.next241, %for.end ]
  %indvars.iv238 = phi i64 [ 1, %for.cond1.preheader.preheader ], [ %indvars.iv.next239, %for.end ]
  %u.0222 = phi i64 [ 0, %for.cond1.preheader.preheader ], [ %add19, %for.end ]
  %v.0221 = phi i64 [ 0, %for.cond1.preheader.preheader ], [ %add13, %for.end ]
  br label %for.body3

for.cond25.preheader:                             ; preds = %for.end, %entry
  %v.0.lcssa = phi i64 [ 0, %entry ], [ %add13, %for.end ]
  %u.0.lcssa = phi i64 [ 0, %entry ], [ %add19, %for.end ]
  %mul = shl i32 %nwords, 1
  %sub26 = add i32 %mul, -1
  %cmp27210 = icmp ugt i32 %sub26, %nwords
  br i1 %cmp27210, label %for.body29.preheader, label %for.end67

for.body29.preheader:                             ; preds = %for.cond25.preheader
  %0 = zext i32 %nwords to i64
  %wide.trip.count = zext i32 %sub26 to i64
  br label %for.body29

for.body3:                                        ; preds = %for.cond1.preheader, %for.body3
  %indvars.iv232 = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next233, %for.body3 ]
  %t.1218 = phi i64 [ 0, %for.cond1.preheader ], [ %add19, %for.body3 ]
  %u.1217 = phi i64 [ %u.0222, %for.cond1.preheader ], [ %add13, %for.body3 ]
  %v.1216 = phi i64 [ %v.0221, %for.cond1.preheader ], [ %add8, %for.body3 ]
  %arrayidx = getelementptr inbounds i64, i64* %a, i64 %indvars.iv232
  %1 = load i64, i64* %arrayidx, align 8, !tbaa !3
  %sub = sub nsw i64 %indvars.iv240, %indvars.iv232
  %idxprom4 = and i64 %sub, 4294967295
  %arrayidx5 = getelementptr inbounds i64, i64* %b, i64 %idxprom4
  %2 = load i64, i64* %arrayidx5, align 8, !tbaa !3
  %and.i = and i64 %1, 4294967295
  %shr.i = lshr i64 %1, 32
  %and1.i = and i64 %2, 4294967295
  %shr2.i = lshr i64 %2, 32
  %mul.i = mul nuw i64 %and1.i, %and.i
  %mul3.i = mul nuw i64 %shr2.i, %and.i
  %mul4.i = mul nuw i64 %and1.i, %shr.i
  %mul5.i = mul nuw i64 %shr2.i, %shr.i
  %and6.i = and i64 %mul.i, 4294967295
  %shr7.i = lshr i64 %mul.i, 32
  %and8.i = and i64 %mul4.i, 4294967295
  %and9.i = and i64 %mul3.i, 4294967295
  %add.i = add nuw nsw i64 %shr7.i, %and8.i
  %add10.i = add nuw nsw i64 %add.i, %and9.i
  %shr11.i = lshr i64 %add10.i, 32
  %shl.i = shl i64 %add10.i, 32
  %xor68.i = or i64 %shl.i, %and6.i
  %shr13.i = lshr i64 %mul4.i, 32
  %shr14.i = lshr i64 %mul3.i, 32
  %and15.i = and i64 %mul5.i, 4294967295
  %add16.i = add nuw nsw i64 %shr13.i, %shr14.i
  %add17.i = add nuw nsw i64 %add16.i, %and15.i
  %add18.i = add nuw nsw i64 %add17.i, %shr11.i
  %and19.i = and i64 %add18.i, 4294967295
  %and21.i = and i64 %add18.i, 30064771072
  %and22.i = and i64 %mul5.i, -4294967296
  %add23.i = add i64 %and21.i, %and22.i
  %xor2569.i = or i64 %add23.i, %and19.i
  %add8 = add i64 %xor68.i, %v.1216
  %xor.i188 = xor i64 %add8, %shl.i
  %xor1.i189 = xor i64 %shl.i, %v.1216
  %or.i190 = or i64 %xor.i188, %xor1.i189
  %xor2.i191 = xor i64 %or.i190, %add8
  %shr.i192 = lshr i64 %xor2.i191, 63
  %add12 = add i64 %shr.i192, %xor2569.i
  %add13 = add i64 %add12, %u.1217
  %3 = xor i64 %add12, -9223372036854775808
  %xor2.i185 = and i64 %3, %add23.i
  %xor.i176 = xor i64 %add13, %add12
  %xor1.i177 = xor i64 %add12, %u.1217
  %or.i178 = or i64 %xor.i176, %xor1.i177
  %xor2.i179 = xor i64 %or.i178, %add13
  %shr.i186201 = or i64 %xor2.i179, %xor2.i185
  %or17200 = lshr i64 %shr.i186201, 63
  %add19 = add i64 %or17200, %t.1218
  %indvars.iv.next233 = add nuw nsw i64 %indvars.iv232, 1
  %exitcond237 = icmp eq i64 %indvars.iv.next233, %indvars.iv238
  br i1 %exitcond237, label %for.end, label %for.body3

for.end:                                          ; preds = %for.body3
  %arrayidx21 = getelementptr inbounds i64, i64* %c, i64 %indvars.iv240
  store i64 %add8, i64* %arrayidx21, align 8, !tbaa !3
  %indvars.iv.next241 = add nuw nsw i64 %indvars.iv240, 1
  %indvars.iv.next239 = add nuw nsw i64 %indvars.iv238, 1
  %exitcond243 = icmp eq i64 %indvars.iv.next241, %wide.trip.count242
  br i1 %exitcond243, label %for.cond25.preheader, label %for.cond1.preheader

for.body29:                                       ; preds = %for.end62, %for.body29.preheader
  %indvars.iv228 = phi i64 [ %0, %for.body29.preheader ], [ %indvars.iv.next229, %for.end62 ]
  %indvars.iv = phi i32 [ 1, %for.body29.preheader ], [ %indvars.iv.next, %for.end62 ]
  %u.2212 = phi i64 [ %u.0.lcssa, %for.body29.preheader ], [ %t.3.lcssa, %for.end62 ]
  %v.2211 = phi i64 [ %v.0.lcssa, %for.body29.preheader ], [ %u.3.lcssa, %for.end62 ]
  %4 = trunc i64 %indvars.iv228 to i32
  %5 = sub i32 %4, %nwords
  %j.1202 = add i32 %5, 1
  %cmp33203 = icmp ult i32 %j.1202, %nwords
  br i1 %cmp33203, label %for.body35.preheader, label %for.end62

for.body35.preheader:                             ; preds = %for.body29
  %6 = zext i32 %indvars.iv to i64
  br label %for.body35

for.body35:                                       ; preds = %for.body35, %for.body35.preheader
  %indvars.iv226 = phi i64 [ %6, %for.body35.preheader ], [ %indvars.iv.next227, %for.body35 ]
  %t.3206 = phi i64 [ 0, %for.body35.preheader ], [ %add59, %for.body35 ]
  %u.3205 = phi i64 [ %u.2212, %for.body35.preheader ], [ %add53, %for.body35 ]
  %v.3204 = phi i64 [ %v.2211, %for.body35.preheader ], [ %add45, %for.body35 ]
  %arrayidx37 = getelementptr inbounds i64, i64* %a, i64 %indvars.iv226
  %7 = load i64, i64* %arrayidx37, align 8, !tbaa !3
  %sub38 = sub nsw i64 %indvars.iv228, %indvars.iv226
  %idxprom39 = and i64 %sub38, 4294967295
  %arrayidx40 = getelementptr inbounds i64, i64* %b, i64 %idxprom39
  %8 = load i64, i64* %arrayidx40, align 8, !tbaa !3
  %and.i147 = and i64 %7, 4294967295
  %shr.i148 = lshr i64 %7, 32
  %and1.i149 = and i64 %8, 4294967295
  %shr2.i150 = lshr i64 %8, 32
  %mul.i151 = mul nuw i64 %and1.i149, %and.i147
  %mul3.i152 = mul nuw i64 %shr2.i150, %and.i147
  %mul4.i153 = mul nuw i64 %and1.i149, %shr.i148
  %mul5.i154 = mul nuw i64 %shr2.i150, %shr.i148
  %and6.i155 = and i64 %mul.i151, 4294967295
  %shr7.i156 = lshr i64 %mul.i151, 32
  %and8.i157 = and i64 %mul4.i153, 4294967295
  %and9.i158 = and i64 %mul3.i152, 4294967295
  %add.i159 = add nuw nsw i64 %shr7.i156, %and8.i157
  %add10.i160 = add nuw nsw i64 %add.i159, %and9.i158
  %shr11.i161 = lshr i64 %add10.i160, 32
  %shl.i162 = shl i64 %add10.i160, 32
  %xor68.i163 = or i64 %shl.i162, %and6.i155
  %shr13.i164 = lshr i64 %mul4.i153, 32
  %shr14.i165 = lshr i64 %mul3.i152, 32
  %and15.i166 = and i64 %mul5.i154, 4294967295
  %add16.i167 = add nuw nsw i64 %shr13.i164, %shr14.i165
  %add17.i168 = add nuw nsw i64 %add16.i167, %and15.i166
  %add18.i169 = add nuw nsw i64 %add17.i168, %shr11.i161
  %and19.i170 = and i64 %add18.i169, 4294967295
  %and21.i172 = and i64 %add18.i169, 30064771072
  %and22.i173 = and i64 %mul5.i154, -4294967296
  %add23.i174 = add i64 %and21.i172, %and22.i173
  %xor2569.i175 = or i64 %add23.i174, %and19.i170
  %add45 = add i64 %xor68.i163, %v.3204
  %xor.i141 = xor i64 %add45, %shl.i162
  %xor1.i142 = xor i64 %shl.i162, %v.3204
  %or.i143 = or i64 %xor.i141, %xor1.i142
  %xor2.i144 = xor i64 %or.i143, %add45
  %shr.i145 = lshr i64 %xor2.i144, 63
  %add52 = add i64 %shr.i145, %xor2569.i175
  %add53 = add i64 %add52, %u.3205
  %9 = xor i64 %add52, -9223372036854775808
  %xor2.i138 = and i64 %9, %add23.i174
  %xor.i = xor i64 %add53, %add52
  %xor1.i = xor i64 %add52, %u.3205
  %or.i = or i64 %xor.i, %xor1.i
  %xor2.i = xor i64 %or.i, %add53
  %shr.i139199 = or i64 %xor2.i, %xor2.i138
  %or57198 = lshr i64 %shr.i139199, 63
  %add59 = add i64 %or57198, %t.3206
  %indvars.iv.next227 = add nuw nsw i64 %indvars.iv226, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next227 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %nwords
  br i1 %exitcond, label %for.end62, label %for.body35

for.end62:                                        ; preds = %for.body35, %for.body29
  %v.3.lcssa = phi i64 [ %v.2211, %for.body29 ], [ %add45, %for.body35 ]
  %u.3.lcssa = phi i64 [ %u.2212, %for.body29 ], [ %add53, %for.body35 ]
  %t.3.lcssa = phi i64 [ 0, %for.body29 ], [ %add59, %for.body35 ]
  %arrayidx64 = getelementptr inbounds i64, i64* %c, i64 %indvars.iv228
  store i64 %v.3.lcssa, i64* %arrayidx64, align 8, !tbaa !3
  %indvars.iv.next229 = add nuw nsw i64 %indvars.iv228, 1
  %indvars.iv.next = add i32 %indvars.iv, 1
  %exitcond231 = icmp eq i64 %indvars.iv.next229, %wide.trip.count
  br i1 %exitcond231, label %for.end67, label %for.body29

for.end67:                                        ; preds = %for.end62, %for.cond25.preheader
  %v.2.lcssa = phi i64 [ %v.0.lcssa, %for.cond25.preheader ], [ %u.3.lcssa, %for.end62 ]
  %idxprom70.pre-phi = zext i32 %sub26 to i64
  %arrayidx71 = getelementptr inbounds i64, i64* %c, i64 %idxprom70.pre-phi
  store i64 %v.2.lcssa, i64* %arrayidx71, align 8, !tbaa !3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @rdc_mont(i64* nocapture readonly %ma, i64* nocapture %mc) local_unnamed_addr #1 {
for.body6.lr.ph.2:
  %mc370 = bitcast i64* %mc to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %mc370, i8 0, i64 80, i1 false)
  %0 = load i64, i64* %ma, align 8, !tbaa !3
  store i64 %0, i64* %mc, align 8, !tbaa !3
  %1 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 1), align 8, !tbaa !3
  %and.i.1 = and i64 %0, 4294967295
  %shr.i.1 = lshr i64 %0, 32
  %and1.i.1 = and i64 %1, 4294967295
  %shr2.i.1 = lshr i64 %1, 32
  %mul.i.1 = mul nuw i64 %and1.i.1, %and.i.1
  %mul3.i.1 = mul nuw i64 %shr2.i.1, %and.i.1
  %mul4.i.1 = mul nuw i64 %and1.i.1, %shr.i.1
  %mul5.i.1 = mul nuw i64 %shr2.i.1, %shr.i.1
  %and6.i.1 = and i64 %mul.i.1, 4294967295
  %shr7.i.1 = lshr i64 %mul.i.1, 32
  %and8.i.1 = and i64 %mul4.i.1, 4294967295
  %and9.i.1 = and i64 %mul3.i.1, 4294967295
  %add.i.1 = add nuw nsw i64 %shr7.i.1, %and8.i.1
  %add10.i.1 = add nuw nsw i64 %add.i.1, %and9.i.1
  %shr11.i.1 = lshr i64 %add10.i.1, 32
  %shl.i.1 = shl i64 %add10.i.1, 32
  %xor68.i.1 = or i64 %shl.i.1, %and6.i.1
  %shr13.i.1 = lshr i64 %mul4.i.1, 32
  %shr14.i.1 = lshr i64 %mul3.i.1, 32
  %and15.i.1 = and i64 %mul5.i.1, 4294967295
  %add16.i.1 = add nuw nsw i64 %shr13.i.1, %shr14.i.1
  %add17.i.1 = add nuw nsw i64 %add16.i.1, %and15.i.1
  %add18.i.1 = add nuw nsw i64 %add17.i.1, %shr11.i.1
  %and19.i.1 = and i64 %add18.i.1, 4294967295
  %and21.i.1 = and i64 %add18.i.1, 30064771072
  %and22.i.1 = and i64 %mul5.i.1, -4294967296
  %add23.i.1 = add i64 %and21.i.1, %and22.i.1
  %xor2569.i.1 = or i64 %add23.i.1, %and19.i.1
  %arrayidx34.1 = getelementptr inbounds i64, i64* %ma, i64 1
  %2 = load i64, i64* %arrayidx34.1, align 8, !tbaa !3
  %add35.1 = add i64 %2, %xor68.i.1
  %xor.i297.1 = xor i64 %add35.1, %shl.i.1
  %xor1.i298.1 = xor i64 %2, %shl.i.1
  %or.i299.1 = or i64 %xor.i297.1, %xor1.i298.1
  %xor2.i300.1 = xor i64 %or.i299.1, %add35.1
  %shr.i301.1 = lshr i64 %xor2.i300.1, 63
  %add41.1 = add i64 %shr.i301.1, %xor2569.i.1
  %arrayidx50.1 = getelementptr inbounds i64, i64* %mc, i64 1
  store i64 %add35.1, i64* %arrayidx50.1, align 8, !tbaa !3
  %3 = xor i64 %add41.1, -9223372036854775808
  %xor2.i294.1 = and i64 %3, %add23.i.1
  %shr.i295.1 = lshr i64 %xor2.i294.1, 63
  %4 = load i64, i64* %mc, align 8, !tbaa !3
  %5 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 2), align 16, !tbaa !3
  %and.i.2 = and i64 %4, 4294967295
  %shr.i.2 = lshr i64 %4, 32
  %and1.i.2 = and i64 %5, 4294967295
  %shr2.i.2 = lshr i64 %5, 32
  %mul.i.2 = mul nuw i64 %and1.i.2, %and.i.2
  %mul3.i.2 = mul nuw i64 %shr2.i.2, %and.i.2
  %mul4.i.2 = mul nuw i64 %and1.i.2, %shr.i.2
  %mul5.i.2 = mul nuw i64 %shr2.i.2, %shr.i.2
  %and6.i.2 = and i64 %mul.i.2, 4294967295
  %shr7.i.2 = lshr i64 %mul.i.2, 32
  %and8.i.2 = and i64 %mul4.i.2, 4294967295
  %and9.i.2 = and i64 %mul3.i.2, 4294967295
  %add.i.2 = add nuw nsw i64 %shr7.i.2, %and8.i.2
  %add10.i.2 = add nuw nsw i64 %add.i.2, %and9.i.2
  %shr11.i.2 = lshr i64 %add10.i.2, 32
  %shl.i.2 = shl i64 %add10.i.2, 32
  %xor68.i.2 = or i64 %shl.i.2, %and6.i.2
  %shr13.i.2 = lshr i64 %mul4.i.2, 32
  %shr14.i.2 = lshr i64 %mul3.i.2, 32
  %and15.i.2 = and i64 %mul5.i.2, 4294967295
  %add16.i.2 = add nuw nsw i64 %shr13.i.2, %shr14.i.2
  %add17.i.2 = add nuw nsw i64 %add16.i.2, %and15.i.2
  %add18.i.2 = add nuw nsw i64 %add17.i.2, %shr11.i.2
  %and19.i.2 = and i64 %add18.i.2, 4294967295
  %and21.i.2 = and i64 %add18.i.2, 30064771072
  %and22.i.2 = and i64 %mul5.i.2, -4294967296
  %add23.i.2 = add i64 %and21.i.2, %and22.i.2
  %xor2569.i.2 = or i64 %add23.i.2, %and19.i.2
  %add16.2 = add i64 %xor68.i.2, %add41.1
  %xor.i315.2 = xor i64 %add16.2, %shl.i.2
  %xor1.i316.2 = xor i64 %shl.i.2, %add41.1
  %or.i317.2 = or i64 %xor.i315.2, %xor1.i316.2
  %xor2.i318.2 = xor i64 %or.i317.2, %add16.2
  %shr.i319.2 = lshr i64 %xor2.i318.2, 63
  %add20.2 = add i64 %shr.i319.2, %xor2569.i.2
  %add21.2 = add i64 %add20.2, %shr.i295.1
  %6 = xor i64 %add20.2, -9223372036854775808
  %xor2.i312.2 = and i64 %6, %add23.i.2
  %7 = xor i64 %add21.2, -9223372036854775808
  %xor2.i306.2 = and i64 %add20.2, %7
  %shr.i313328.2 = or i64 %xor2.i306.2, %xor2.i312.2
  %or25327.2 = lshr i64 %shr.i313328.2, 63
  %arrayidx9.2.1 = getelementptr inbounds i64, i64* %mc, i64 1
  %8 = load i64, i64* %arrayidx9.2.1, align 8, !tbaa !3
  %9 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 1), align 8, !tbaa !3
  %and.i.2.1 = and i64 %8, 4294967295
  %shr.i.2.1 = lshr i64 %8, 32
  %and1.i.2.1 = and i64 %9, 4294967295
  %shr2.i.2.1 = lshr i64 %9, 32
  %mul.i.2.1 = mul nuw i64 %and1.i.2.1, %and.i.2.1
  %mul3.i.2.1 = mul nuw i64 %shr2.i.2.1, %and.i.2.1
  %mul4.i.2.1 = mul nuw i64 %and1.i.2.1, %shr.i.2.1
  %mul5.i.2.1 = mul nuw i64 %shr2.i.2.1, %shr.i.2.1
  %and6.i.2.1 = and i64 %mul.i.2.1, 4294967295
  %shr7.i.2.1 = lshr i64 %mul.i.2.1, 32
  %and8.i.2.1 = and i64 %mul4.i.2.1, 4294967295
  %and9.i.2.1 = and i64 %mul3.i.2.1, 4294967295
  %add.i.2.1 = add nuw nsw i64 %shr7.i.2.1, %and8.i.2.1
  %add10.i.2.1 = add nuw nsw i64 %add.i.2.1, %and9.i.2.1
  %shr11.i.2.1 = lshr i64 %add10.i.2.1, 32
  %shl.i.2.1 = shl i64 %add10.i.2.1, 32
  %xor68.i.2.1 = or i64 %shl.i.2.1, %and6.i.2.1
  %shr13.i.2.1 = lshr i64 %mul4.i.2.1, 32
  %shr14.i.2.1 = lshr i64 %mul3.i.2.1, 32
  %and15.i.2.1 = and i64 %mul5.i.2.1, 4294967295
  %add16.i.2.1 = add nuw nsw i64 %shr13.i.2.1, %shr14.i.2.1
  %add17.i.2.1 = add nuw nsw i64 %add16.i.2.1, %and15.i.2.1
  %add18.i.2.1 = add nuw nsw i64 %add17.i.2.1, %shr11.i.2.1
  %and19.i.2.1 = and i64 %add18.i.2.1, 4294967295
  %and21.i.2.1 = and i64 %add18.i.2.1, 30064771072
  %and22.i.2.1 = and i64 %mul5.i.2.1, -4294967296
  %add23.i.2.1 = add i64 %and21.i.2.1, %and22.i.2.1
  %xor2569.i.2.1 = or i64 %add23.i.2.1, %and19.i.2.1
  %add16.2.1 = add i64 %xor68.i.2.1, %add16.2
  %xor.i315.2.1 = xor i64 %add16.2.1, %shl.i.2.1
  %xor1.i316.2.1 = xor i64 %shl.i.2.1, %add16.2
  %or.i317.2.1 = or i64 %xor.i315.2.1, %xor1.i316.2.1
  %xor2.i318.2.1 = xor i64 %or.i317.2.1, %add16.2.1
  %shr.i319.2.1 = lshr i64 %xor2.i318.2.1, 63
  %add20.2.1 = add i64 %shr.i319.2.1, %xor2569.i.2.1
  %add21.2.1 = add i64 %add20.2.1, %add21.2
  %10 = xor i64 %add20.2.1, -9223372036854775808
  %xor2.i312.2.1 = and i64 %10, %add23.i.2.1
  %xor.i303.2.1 = xor i64 %add21.2.1, %add20.2.1
  %xor1.i304.2.1 = xor i64 %add20.2.1, %add21.2
  %or.i305.2.1 = or i64 %xor.i303.2.1, %xor1.i304.2.1
  %xor2.i306.2.1 = xor i64 %or.i305.2.1, %add21.2.1
  %shr.i313328.2.1 = or i64 %xor2.i306.2.1, %xor2.i312.2.1
  %or25327.2.1 = lshr i64 %shr.i313328.2.1, 63
  %add27.2.1 = add nuw nsw i64 %or25327.2.1, %or25327.2
  %arrayidx34.2 = getelementptr inbounds i64, i64* %ma, i64 2
  %11 = load i64, i64* %arrayidx34.2, align 8, !tbaa !3
  %add35.2 = add i64 %11, %add16.2.1
  %xor.i297.2 = xor i64 %add35.2, %add16.2.1
  %xor1.i298.2 = xor i64 %11, %add16.2.1
  %or.i299.2 = or i64 %xor.i297.2, %xor1.i298.2
  %xor2.i300.2 = xor i64 %or.i299.2, %add35.2
  %shr.i301.2 = lshr i64 %xor2.i300.2, 63
  %add41.2 = add i64 %shr.i301.2, %add21.2.1
  %12 = xor i64 %add41.2, -9223372036854775808
  %xor2.i294.2 = and i64 %12, %add21.2.1
  %shr.i295.2 = lshr i64 %xor2.i294.2, 63
  %add48.2 = add nsw i64 %shr.i295.2, %add27.2.1
  %arrayidx50.2 = getelementptr inbounds i64, i64* %mc, i64 2
  store i64 %add35.2, i64* %arrayidx50.2, align 8, !tbaa !3
  %arrayidx34.3 = getelementptr inbounds i64, i64* %ma, i64 3
  %13 = load i64, i64* %arrayidx34.3, align 8, !tbaa !3
  %add35.3 = add i64 %13, %add41.2
  %xor.i297.3 = xor i64 %add35.3, %add41.2
  %xor1.i298.3 = xor i64 %13, %add41.2
  %or.i299.3 = or i64 %xor.i297.3, %xor1.i298.3
  %xor2.i300.3 = xor i64 %or.i299.3, %add35.3
  %shr.i301.3 = lshr i64 %xor2.i300.3, 63
  %add41.3 = add nsw i64 %shr.i301.3, %add48.2
  %arrayidx50.3 = getelementptr inbounds i64, i64* %mc, i64 3
  store i64 %add35.3, i64* %arrayidx50.3, align 8, !tbaa !3
  %14 = xor i64 %add41.3, -9223372036854775808
  %xor2.i294.3 = and i64 %14, %add48.2
  %shr.i295.3 = lshr i64 %xor2.i294.3, 63
  %15 = load i64, i64* %mc, align 8, !tbaa !3
  %16 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 4), align 16, !tbaa !3
  %and.i.4 = and i64 %15, 4294967295
  %shr.i.4 = lshr i64 %15, 32
  %and1.i.4 = and i64 %16, 4294967295
  %shr2.i.4 = lshr i64 %16, 32
  %mul.i.4 = mul nuw i64 %and1.i.4, %and.i.4
  %mul3.i.4 = mul nuw i64 %shr2.i.4, %and.i.4
  %mul4.i.4 = mul nuw i64 %and1.i.4, %shr.i.4
  %mul5.i.4 = mul nuw i64 %shr2.i.4, %shr.i.4
  %and6.i.4 = and i64 %mul.i.4, 4294967295
  %shr7.i.4 = lshr i64 %mul.i.4, 32
  %and8.i.4 = and i64 %mul4.i.4, 4294967295
  %and9.i.4 = and i64 %mul3.i.4, 4294967295
  %add.i.4 = add nuw nsw i64 %shr7.i.4, %and8.i.4
  %add10.i.4 = add nuw nsw i64 %add.i.4, %and9.i.4
  %shr11.i.4 = lshr i64 %add10.i.4, 32
  %shl.i.4 = shl i64 %add10.i.4, 32
  %xor68.i.4 = or i64 %shl.i.4, %and6.i.4
  %shr13.i.4 = lshr i64 %mul4.i.4, 32
  %shr14.i.4 = lshr i64 %mul3.i.4, 32
  %and15.i.4 = and i64 %mul5.i.4, 4294967295
  %add16.i.4 = add nuw nsw i64 %shr13.i.4, %shr14.i.4
  %add17.i.4 = add nuw nsw i64 %add16.i.4, %and15.i.4
  %add18.i.4 = add nuw nsw i64 %add17.i.4, %shr11.i.4
  %and19.i.4 = and i64 %add18.i.4, 4294967295
  %and21.i.4 = and i64 %add18.i.4, 30064771072
  %and22.i.4 = and i64 %mul5.i.4, -4294967296
  %add23.i.4 = add i64 %and21.i.4, %and22.i.4
  %xor2569.i.4 = or i64 %add23.i.4, %and19.i.4
  %add16.4 = add i64 %xor68.i.4, %add41.3
  %xor.i315.4 = xor i64 %add16.4, %shl.i.4
  %xor1.i316.4 = xor i64 %shl.i.4, %add41.3
  %or.i317.4 = or i64 %xor.i315.4, %xor1.i316.4
  %xor2.i318.4 = xor i64 %or.i317.4, %add16.4
  %shr.i319.4 = lshr i64 %xor2.i318.4, 63
  %add20.4 = add i64 %shr.i319.4, %xor2569.i.4
  %add21.4 = add i64 %add20.4, %shr.i295.3
  %17 = xor i64 %add20.4, -9223372036854775808
  %xor2.i312.4 = and i64 %17, %add23.i.4
  %18 = xor i64 %add21.4, -9223372036854775808
  %xor2.i306.4 = and i64 %add20.4, %18
  %shr.i313328.4 = or i64 %xor2.i306.4, %xor2.i312.4
  %or25327.4 = lshr i64 %shr.i313328.4, 63
  %arrayidx34.4 = getelementptr inbounds i64, i64* %ma, i64 4
  %19 = load i64, i64* %arrayidx34.4, align 8, !tbaa !3
  %add35.4 = add i64 %19, %add16.4
  %xor.i297.4 = xor i64 %add35.4, %add16.4
  %xor1.i298.4 = xor i64 %19, %add16.4
  %or.i299.4 = or i64 %xor.i297.4, %xor1.i298.4
  %xor2.i300.4 = xor i64 %or.i299.4, %add35.4
  %shr.i301.4 = lshr i64 %xor2.i300.4, 63
  %add41.4 = add i64 %shr.i301.4, %add21.4
  %arrayidx50.4 = getelementptr inbounds i64, i64* %mc, i64 4
  store i64 %add35.4, i64* %arrayidx50.4, align 8, !tbaa !3
  %20 = xor i64 %add41.4, -9223372036854775808
  %xor2.i294.4 = and i64 %20, %add21.4
  %shr.i295.4 = lshr i64 %xor2.i294.4, 63
  %add48.4 = add nuw nsw i64 %shr.i295.4, %or25327.4
  %21 = load i64, i64* %mc, align 8, !tbaa !3
  %22 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 5), align 8, !tbaa !3
  %and.i.5 = and i64 %21, 4294967295
  %shr.i.5 = lshr i64 %21, 32
  %and1.i.5 = and i64 %22, 4294967295
  %shr2.i.5 = lshr i64 %22, 32
  %mul.i.5 = mul nuw i64 %and1.i.5, %and.i.5
  %mul3.i.5 = mul nuw i64 %shr2.i.5, %and.i.5
  %mul4.i.5 = mul nuw i64 %and1.i.5, %shr.i.5
  %mul5.i.5 = mul nuw i64 %shr2.i.5, %shr.i.5
  %and6.i.5 = and i64 %mul.i.5, 4294967295
  %shr7.i.5 = lshr i64 %mul.i.5, 32
  %and8.i.5 = and i64 %mul4.i.5, 4294967295
  %and9.i.5 = and i64 %mul3.i.5, 4294967295
  %add.i.5 = add nuw nsw i64 %shr7.i.5, %and8.i.5
  %add10.i.5 = add nuw nsw i64 %add.i.5, %and9.i.5
  %shr11.i.5 = lshr i64 %add10.i.5, 32
  %shl.i.5 = shl i64 %add10.i.5, 32
  %xor68.i.5 = or i64 %shl.i.5, %and6.i.5
  %shr13.i.5 = lshr i64 %mul4.i.5, 32
  %shr14.i.5 = lshr i64 %mul3.i.5, 32
  %and15.i.5 = and i64 %mul5.i.5, 4294967295
  %add16.i.5 = add nuw nsw i64 %shr13.i.5, %shr14.i.5
  %add17.i.5 = add nuw nsw i64 %add16.i.5, %and15.i.5
  %add18.i.5 = add nuw nsw i64 %add17.i.5, %shr11.i.5
  %and19.i.5 = and i64 %add18.i.5, 4294967295
  %and21.i.5 = and i64 %add18.i.5, 30064771072
  %and22.i.5 = and i64 %mul5.i.5, -4294967296
  %add23.i.5 = add i64 %and21.i.5, %and22.i.5
  %xor2569.i.5 = or i64 %add23.i.5, %and19.i.5
  %add16.5 = add i64 %xor68.i.5, %add41.4
  %xor.i315.5 = xor i64 %add16.5, %shl.i.5
  %xor1.i316.5 = xor i64 %shl.i.5, %add41.4
  %or.i317.5 = or i64 %xor.i315.5, %xor1.i316.5
  %xor2.i318.5 = xor i64 %or.i317.5, %add16.5
  %shr.i319.5 = lshr i64 %xor2.i318.5, 63
  %add20.5 = add i64 %shr.i319.5, %xor2569.i.5
  %add21.5 = add i64 %add20.5, %add48.4
  %23 = xor i64 %add20.5, -9223372036854775808
  %xor2.i312.5 = and i64 %23, %add23.i.5
  %xor.i303.5 = xor i64 %add21.5, %add20.5
  %xor1.i304.5 = xor i64 %add20.5, %add48.4
  %or.i305.5 = or i64 %xor.i303.5, %xor1.i304.5
  %xor2.i306.5 = xor i64 %or.i305.5, %add21.5
  %shr.i313328.5 = or i64 %xor2.i306.5, %xor2.i312.5
  %or25327.5 = lshr i64 %shr.i313328.5, 63
  %arrayidx9.5.1 = getelementptr inbounds i64, i64* %mc, i64 1
  %24 = load i64, i64* %arrayidx9.5.1, align 8, !tbaa !3
  %25 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 4), align 16, !tbaa !3
  %and.i.5.1 = and i64 %24, 4294967295
  %shr.i.5.1 = lshr i64 %24, 32
  %and1.i.5.1 = and i64 %25, 4294967295
  %shr2.i.5.1 = lshr i64 %25, 32
  %mul.i.5.1 = mul nuw i64 %and1.i.5.1, %and.i.5.1
  %mul3.i.5.1 = mul nuw i64 %shr2.i.5.1, %and.i.5.1
  %mul4.i.5.1 = mul nuw i64 %and1.i.5.1, %shr.i.5.1
  %mul5.i.5.1 = mul nuw i64 %shr2.i.5.1, %shr.i.5.1
  %and6.i.5.1 = and i64 %mul.i.5.1, 4294967295
  %shr7.i.5.1 = lshr i64 %mul.i.5.1, 32
  %and8.i.5.1 = and i64 %mul4.i.5.1, 4294967295
  %and9.i.5.1 = and i64 %mul3.i.5.1, 4294967295
  %add.i.5.1 = add nuw nsw i64 %shr7.i.5.1, %and8.i.5.1
  %add10.i.5.1 = add nuw nsw i64 %add.i.5.1, %and9.i.5.1
  %shr11.i.5.1 = lshr i64 %add10.i.5.1, 32
  %shl.i.5.1 = shl i64 %add10.i.5.1, 32
  %xor68.i.5.1 = or i64 %shl.i.5.1, %and6.i.5.1
  %shr13.i.5.1 = lshr i64 %mul4.i.5.1, 32
  %shr14.i.5.1 = lshr i64 %mul3.i.5.1, 32
  %and15.i.5.1 = and i64 %mul5.i.5.1, 4294967295
  %add16.i.5.1 = add nuw nsw i64 %shr13.i.5.1, %shr14.i.5.1
  %add17.i.5.1 = add nuw nsw i64 %add16.i.5.1, %and15.i.5.1
  %add18.i.5.1 = add nuw nsw i64 %add17.i.5.1, %shr11.i.5.1
  %and19.i.5.1 = and i64 %add18.i.5.1, 4294967295
  %and21.i.5.1 = and i64 %add18.i.5.1, 30064771072
  %and22.i.5.1 = and i64 %mul5.i.5.1, -4294967296
  %add23.i.5.1 = add i64 %and21.i.5.1, %and22.i.5.1
  %xor2569.i.5.1 = or i64 %add23.i.5.1, %and19.i.5.1
  %add16.5.1 = add i64 %xor68.i.5.1, %add16.5
  %xor.i315.5.1 = xor i64 %add16.5.1, %shl.i.5.1
  %xor1.i316.5.1 = xor i64 %shl.i.5.1, %add16.5
  %or.i317.5.1 = or i64 %xor.i315.5.1, %xor1.i316.5.1
  %xor2.i318.5.1 = xor i64 %or.i317.5.1, %add16.5.1
  %shr.i319.5.1 = lshr i64 %xor2.i318.5.1, 63
  %add20.5.1 = add i64 %shr.i319.5.1, %xor2569.i.5.1
  %add21.5.1 = add i64 %add20.5.1, %add21.5
  %26 = xor i64 %add20.5.1, -9223372036854775808
  %xor2.i312.5.1 = and i64 %26, %add23.i.5.1
  %xor.i303.5.1 = xor i64 %add21.5.1, %add20.5.1
  %xor1.i304.5.1 = xor i64 %add20.5.1, %add21.5
  %or.i305.5.1 = or i64 %xor.i303.5.1, %xor1.i304.5.1
  %xor2.i306.5.1 = xor i64 %or.i305.5.1, %add21.5.1
  %shr.i313328.5.1 = or i64 %xor2.i306.5.1, %xor2.i312.5.1
  %or25327.5.1 = lshr i64 %shr.i313328.5.1, 63
  %add27.5.1 = add nuw nsw i64 %or25327.5.1, %or25327.5
  %arrayidx34.5 = getelementptr inbounds i64, i64* %ma, i64 5
  %27 = load i64, i64* %arrayidx34.5, align 8, !tbaa !3
  %add35.5 = add i64 %27, %add16.5.1
  %xor.i297.5 = xor i64 %add35.5, %add16.5.1
  %xor1.i298.5 = xor i64 %27, %add16.5.1
  %or.i299.5 = or i64 %xor.i297.5, %xor1.i298.5
  %xor2.i300.5 = xor i64 %or.i299.5, %add35.5
  %shr.i301.5 = lshr i64 %xor2.i300.5, 63
  %add41.5 = add i64 %shr.i301.5, %add21.5.1
  %arrayidx50.5 = getelementptr inbounds i64, i64* %mc, i64 5
  store i64 %add35.5, i64* %arrayidx50.5, align 8, !tbaa !3
  %28 = xor i64 %add41.5, -9223372036854775808
  %xor2.i294.5 = and i64 %28, %add21.5.1
  %shr.i295.5 = lshr i64 %xor2.i294.5, 63
  %add48.5 = add nsw i64 %shr.i295.5, %add27.5.1
  %29 = load i64, i64* %mc, align 8, !tbaa !3
  %30 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 6), align 16, !tbaa !3
  %and.i.6 = and i64 %29, 4294967295
  %shr.i.6 = lshr i64 %29, 32
  %and1.i.6 = and i64 %30, 4294967295
  %shr2.i.6 = lshr i64 %30, 32
  %mul.i.6 = mul nuw i64 %and1.i.6, %and.i.6
  %mul3.i.6 = mul nuw i64 %shr2.i.6, %and.i.6
  %mul4.i.6 = mul nuw i64 %and1.i.6, %shr.i.6
  %mul5.i.6 = mul nuw i64 %shr2.i.6, %shr.i.6
  %and6.i.6 = and i64 %mul.i.6, 4294967295
  %shr7.i.6 = lshr i64 %mul.i.6, 32
  %and8.i.6 = and i64 %mul4.i.6, 4294967295
  %and9.i.6 = and i64 %mul3.i.6, 4294967295
  %add.i.6 = add nuw nsw i64 %shr7.i.6, %and8.i.6
  %add10.i.6 = add nuw nsw i64 %add.i.6, %and9.i.6
  %shr11.i.6 = lshr i64 %add10.i.6, 32
  %shl.i.6 = shl i64 %add10.i.6, 32
  %xor68.i.6 = or i64 %shl.i.6, %and6.i.6
  %shr13.i.6 = lshr i64 %mul4.i.6, 32
  %shr14.i.6 = lshr i64 %mul3.i.6, 32
  %and15.i.6 = and i64 %mul5.i.6, 4294967295
  %add16.i.6 = add nuw nsw i64 %shr13.i.6, %shr14.i.6
  %add17.i.6 = add nuw nsw i64 %add16.i.6, %and15.i.6
  %add18.i.6 = add nuw nsw i64 %add17.i.6, %shr11.i.6
  %and19.i.6 = and i64 %add18.i.6, 4294967295
  %and21.i.6 = and i64 %add18.i.6, 30064771072
  %and22.i.6 = and i64 %mul5.i.6, -4294967296
  %add23.i.6 = add i64 %and21.i.6, %and22.i.6
  %xor2569.i.6 = or i64 %add23.i.6, %and19.i.6
  %add16.6 = add i64 %xor68.i.6, %add41.5
  %xor.i315.6 = xor i64 %add16.6, %shl.i.6
  %xor1.i316.6 = xor i64 %shl.i.6, %add41.5
  %or.i317.6 = or i64 %xor.i315.6, %xor1.i316.6
  %xor2.i318.6 = xor i64 %or.i317.6, %add16.6
  %shr.i319.6 = lshr i64 %xor2.i318.6, 63
  %add20.6 = add i64 %shr.i319.6, %xor2569.i.6
  %add21.6 = add i64 %add20.6, %add48.5
  %31 = xor i64 %add20.6, -9223372036854775808
  %xor2.i312.6 = and i64 %31, %add23.i.6
  %xor.i303.6 = xor i64 %add21.6, %add20.6
  %xor1.i304.6 = xor i64 %add20.6, %add48.5
  %or.i305.6 = or i64 %xor.i303.6, %xor1.i304.6
  %xor2.i306.6 = xor i64 %or.i305.6, %add21.6
  %shr.i313328.6 = or i64 %xor2.i306.6, %xor2.i312.6
  %or25327.6 = lshr i64 %shr.i313328.6, 63
  %arrayidx9.6.1 = getelementptr inbounds i64, i64* %mc, i64 1
  %32 = load i64, i64* %arrayidx9.6.1, align 8, !tbaa !3
  %33 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 5), align 8, !tbaa !3
  %and.i.6.1 = and i64 %32, 4294967295
  %shr.i.6.1 = lshr i64 %32, 32
  %and1.i.6.1 = and i64 %33, 4294967295
  %shr2.i.6.1 = lshr i64 %33, 32
  %mul.i.6.1 = mul nuw i64 %and1.i.6.1, %and.i.6.1
  %mul3.i.6.1 = mul nuw i64 %shr2.i.6.1, %and.i.6.1
  %mul4.i.6.1 = mul nuw i64 %and1.i.6.1, %shr.i.6.1
  %mul5.i.6.1 = mul nuw i64 %shr2.i.6.1, %shr.i.6.1
  %and6.i.6.1 = and i64 %mul.i.6.1, 4294967295
  %shr7.i.6.1 = lshr i64 %mul.i.6.1, 32
  %and8.i.6.1 = and i64 %mul4.i.6.1, 4294967295
  %and9.i.6.1 = and i64 %mul3.i.6.1, 4294967295
  %add.i.6.1 = add nuw nsw i64 %shr7.i.6.1, %and8.i.6.1
  %add10.i.6.1 = add nuw nsw i64 %add.i.6.1, %and9.i.6.1
  %shr11.i.6.1 = lshr i64 %add10.i.6.1, 32
  %shl.i.6.1 = shl i64 %add10.i.6.1, 32
  %xor68.i.6.1 = or i64 %shl.i.6.1, %and6.i.6.1
  %shr13.i.6.1 = lshr i64 %mul4.i.6.1, 32
  %shr14.i.6.1 = lshr i64 %mul3.i.6.1, 32
  %and15.i.6.1 = and i64 %mul5.i.6.1, 4294967295
  %add16.i.6.1 = add nuw nsw i64 %shr13.i.6.1, %shr14.i.6.1
  %add17.i.6.1 = add nuw nsw i64 %add16.i.6.1, %and15.i.6.1
  %add18.i.6.1 = add nuw nsw i64 %add17.i.6.1, %shr11.i.6.1
  %and19.i.6.1 = and i64 %add18.i.6.1, 4294967295
  %and21.i.6.1 = and i64 %add18.i.6.1, 30064771072
  %and22.i.6.1 = and i64 %mul5.i.6.1, -4294967296
  %add23.i.6.1 = add i64 %and21.i.6.1, %and22.i.6.1
  %xor2569.i.6.1 = or i64 %add23.i.6.1, %and19.i.6.1
  %add16.6.1 = add i64 %xor68.i.6.1, %add16.6
  %xor.i315.6.1 = xor i64 %add16.6.1, %shl.i.6.1
  %xor1.i316.6.1 = xor i64 %shl.i.6.1, %add16.6
  %or.i317.6.1 = or i64 %xor.i315.6.1, %xor1.i316.6.1
  %xor2.i318.6.1 = xor i64 %or.i317.6.1, %add16.6.1
  %shr.i319.6.1 = lshr i64 %xor2.i318.6.1, 63
  %add20.6.1 = add i64 %shr.i319.6.1, %xor2569.i.6.1
  %add21.6.1 = add i64 %add20.6.1, %add21.6
  %34 = xor i64 %add20.6.1, -9223372036854775808
  %xor2.i312.6.1 = and i64 %34, %add23.i.6.1
  %xor.i303.6.1 = xor i64 %add21.6.1, %add20.6.1
  %xor1.i304.6.1 = xor i64 %add20.6.1, %add21.6
  %or.i305.6.1 = or i64 %xor.i303.6.1, %xor1.i304.6.1
  %xor2.i306.6.1 = xor i64 %or.i305.6.1, %add21.6.1
  %shr.i313328.6.1 = or i64 %xor2.i306.6.1, %xor2.i312.6.1
  %or25327.6.1 = lshr i64 %shr.i313328.6.1, 63
  %add27.6.1 = add nuw nsw i64 %or25327.6.1, %or25327.6
  %arrayidx9.6.2 = getelementptr inbounds i64, i64* %mc, i64 2
  %35 = load i64, i64* %arrayidx9.6.2, align 8, !tbaa !3
  %36 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 4), align 16, !tbaa !3
  %and.i.6.2 = and i64 %35, 4294967295
  %shr.i.6.2 = lshr i64 %35, 32
  %and1.i.6.2 = and i64 %36, 4294967295
  %shr2.i.6.2 = lshr i64 %36, 32
  %mul.i.6.2 = mul nuw i64 %and1.i.6.2, %and.i.6.2
  %mul3.i.6.2 = mul nuw i64 %shr2.i.6.2, %and.i.6.2
  %mul4.i.6.2 = mul nuw i64 %and1.i.6.2, %shr.i.6.2
  %mul5.i.6.2 = mul nuw i64 %shr2.i.6.2, %shr.i.6.2
  %and6.i.6.2 = and i64 %mul.i.6.2, 4294967295
  %shr7.i.6.2 = lshr i64 %mul.i.6.2, 32
  %and8.i.6.2 = and i64 %mul4.i.6.2, 4294967295
  %and9.i.6.2 = and i64 %mul3.i.6.2, 4294967295
  %add.i.6.2 = add nuw nsw i64 %shr7.i.6.2, %and8.i.6.2
  %add10.i.6.2 = add nuw nsw i64 %add.i.6.2, %and9.i.6.2
  %shr11.i.6.2 = lshr i64 %add10.i.6.2, 32
  %shl.i.6.2 = shl i64 %add10.i.6.2, 32
  %xor68.i.6.2 = or i64 %shl.i.6.2, %and6.i.6.2
  %shr13.i.6.2 = lshr i64 %mul4.i.6.2, 32
  %shr14.i.6.2 = lshr i64 %mul3.i.6.2, 32
  %and15.i.6.2 = and i64 %mul5.i.6.2, 4294967295
  %add16.i.6.2 = add nuw nsw i64 %shr13.i.6.2, %shr14.i.6.2
  %add17.i.6.2 = add nuw nsw i64 %add16.i.6.2, %and15.i.6.2
  %add18.i.6.2 = add nuw nsw i64 %add17.i.6.2, %shr11.i.6.2
  %and19.i.6.2 = and i64 %add18.i.6.2, 4294967295
  %and21.i.6.2 = and i64 %add18.i.6.2, 30064771072
  %and22.i.6.2 = and i64 %mul5.i.6.2, -4294967296
  %add23.i.6.2 = add i64 %and21.i.6.2, %and22.i.6.2
  %xor2569.i.6.2 = or i64 %add23.i.6.2, %and19.i.6.2
  %add16.6.2 = add i64 %xor68.i.6.2, %add16.6.1
  %xor.i315.6.2 = xor i64 %add16.6.2, %shl.i.6.2
  %xor1.i316.6.2 = xor i64 %shl.i.6.2, %add16.6.1
  %or.i317.6.2 = or i64 %xor.i315.6.2, %xor1.i316.6.2
  %xor2.i318.6.2 = xor i64 %or.i317.6.2, %add16.6.2
  %shr.i319.6.2 = lshr i64 %xor2.i318.6.2, 63
  %add20.6.2 = add i64 %shr.i319.6.2, %xor2569.i.6.2
  %add21.6.2 = add i64 %add20.6.2, %add21.6.1
  %37 = xor i64 %add20.6.2, -9223372036854775808
  %xor2.i312.6.2 = and i64 %37, %add23.i.6.2
  %xor.i303.6.2 = xor i64 %add21.6.2, %add20.6.2
  %xor1.i304.6.2 = xor i64 %add20.6.2, %add21.6.1
  %or.i305.6.2 = or i64 %xor.i303.6.2, %xor1.i304.6.2
  %xor2.i306.6.2 = xor i64 %or.i305.6.2, %add21.6.2
  %shr.i313328.6.2 = or i64 %xor2.i306.6.2, %xor2.i312.6.2
  %or25327.6.2 = lshr i64 %shr.i313328.6.2, 63
  %add27.6.2 = add nsw i64 %or25327.6.2, %add27.6.1
  %arrayidx34.6 = getelementptr inbounds i64, i64* %ma, i64 6
  %38 = load i64, i64* %arrayidx34.6, align 8, !tbaa !3
  %add35.6 = add i64 %38, %add16.6.2
  %xor.i297.6 = xor i64 %add35.6, %add16.6.2
  %xor1.i298.6 = xor i64 %38, %add16.6.2
  %or.i299.6 = or i64 %xor.i297.6, %xor1.i298.6
  %xor2.i300.6 = xor i64 %or.i299.6, %add35.6
  %shr.i301.6 = lshr i64 %xor2.i300.6, 63
  %add41.6 = add i64 %shr.i301.6, %add21.6.2
  %arrayidx50.6 = getelementptr inbounds i64, i64* %mc, i64 6
  store i64 %add35.6, i64* %arrayidx50.6, align 8, !tbaa !3
  %39 = xor i64 %add41.6, -9223372036854775808
  %xor2.i294.6 = and i64 %39, %add21.6.2
  %shr.i295.6 = lshr i64 %xor2.i294.6, 63
  %add48.6 = add nsw i64 %shr.i295.6, %add27.6.2
  %40 = load i64, i64* %mc, align 8, !tbaa !3
  %41 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 7), align 8, !tbaa !3
  %and.i.7 = and i64 %40, 4294967295
  %shr.i.7 = lshr i64 %40, 32
  %and1.i.7 = and i64 %41, 4294967295
  %shr2.i.7 = lshr i64 %41, 32
  %mul.i.7 = mul nuw i64 %and1.i.7, %and.i.7
  %mul3.i.7 = mul nuw i64 %shr2.i.7, %and.i.7
  %mul4.i.7 = mul nuw i64 %and1.i.7, %shr.i.7
  %mul5.i.7 = mul nuw i64 %shr2.i.7, %shr.i.7
  %and6.i.7 = and i64 %mul.i.7, 4294967295
  %shr7.i.7 = lshr i64 %mul.i.7, 32
  %and8.i.7 = and i64 %mul4.i.7, 4294967295
  %and9.i.7 = and i64 %mul3.i.7, 4294967295
  %add.i.7 = add nuw nsw i64 %shr7.i.7, %and8.i.7
  %add10.i.7 = add nuw nsw i64 %add.i.7, %and9.i.7
  %shr11.i.7 = lshr i64 %add10.i.7, 32
  %shl.i.7 = shl i64 %add10.i.7, 32
  %xor68.i.7 = or i64 %shl.i.7, %and6.i.7
  %shr13.i.7 = lshr i64 %mul4.i.7, 32
  %shr14.i.7 = lshr i64 %mul3.i.7, 32
  %and15.i.7 = and i64 %mul5.i.7, 4294967295
  %add16.i.7 = add nuw nsw i64 %shr13.i.7, %shr14.i.7
  %add17.i.7 = add nuw nsw i64 %add16.i.7, %and15.i.7
  %add18.i.7 = add nuw nsw i64 %add17.i.7, %shr11.i.7
  %and19.i.7 = and i64 %add18.i.7, 4294967295
  %and21.i.7 = and i64 %add18.i.7, 30064771072
  %and22.i.7 = and i64 %mul5.i.7, -4294967296
  %add23.i.7 = add i64 %and21.i.7, %and22.i.7
  %xor2569.i.7 = or i64 %add23.i.7, %and19.i.7
  %add16.7 = add i64 %xor68.i.7, %add41.6
  %xor.i315.7 = xor i64 %add16.7, %shl.i.7
  %xor1.i316.7 = xor i64 %shl.i.7, %add41.6
  %or.i317.7 = or i64 %xor.i315.7, %xor1.i316.7
  %xor2.i318.7 = xor i64 %or.i317.7, %add16.7
  %shr.i319.7 = lshr i64 %xor2.i318.7, 63
  %add20.7 = add i64 %shr.i319.7, %xor2569.i.7
  %add21.7 = add i64 %add20.7, %add48.6
  %42 = xor i64 %add20.7, -9223372036854775808
  %xor2.i312.7 = and i64 %42, %add23.i.7
  %xor.i303.7 = xor i64 %add21.7, %add20.7
  %xor1.i304.7 = xor i64 %add20.7, %add48.6
  %or.i305.7 = or i64 %xor.i303.7, %xor1.i304.7
  %xor2.i306.7 = xor i64 %or.i305.7, %add21.7
  %shr.i313328.7 = or i64 %xor2.i306.7, %xor2.i312.7
  %or25327.7 = lshr i64 %shr.i313328.7, 63
  %arrayidx9.7.1 = getelementptr inbounds i64, i64* %mc, i64 1
  %43 = load i64, i64* %arrayidx9.7.1, align 8, !tbaa !3
  %44 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 6), align 16, !tbaa !3
  %and.i.7.1 = and i64 %43, 4294967295
  %shr.i.7.1 = lshr i64 %43, 32
  %and1.i.7.1 = and i64 %44, 4294967295
  %shr2.i.7.1 = lshr i64 %44, 32
  %mul.i.7.1 = mul nuw i64 %and1.i.7.1, %and.i.7.1
  %mul3.i.7.1 = mul nuw i64 %shr2.i.7.1, %and.i.7.1
  %mul4.i.7.1 = mul nuw i64 %and1.i.7.1, %shr.i.7.1
  %mul5.i.7.1 = mul nuw i64 %shr2.i.7.1, %shr.i.7.1
  %and6.i.7.1 = and i64 %mul.i.7.1, 4294967295
  %shr7.i.7.1 = lshr i64 %mul.i.7.1, 32
  %and8.i.7.1 = and i64 %mul4.i.7.1, 4294967295
  %and9.i.7.1 = and i64 %mul3.i.7.1, 4294967295
  %add.i.7.1 = add nuw nsw i64 %shr7.i.7.1, %and8.i.7.1
  %add10.i.7.1 = add nuw nsw i64 %add.i.7.1, %and9.i.7.1
  %shr11.i.7.1 = lshr i64 %add10.i.7.1, 32
  %shl.i.7.1 = shl i64 %add10.i.7.1, 32
  %xor68.i.7.1 = or i64 %shl.i.7.1, %and6.i.7.1
  %shr13.i.7.1 = lshr i64 %mul4.i.7.1, 32
  %shr14.i.7.1 = lshr i64 %mul3.i.7.1, 32
  %and15.i.7.1 = and i64 %mul5.i.7.1, 4294967295
  %add16.i.7.1 = add nuw nsw i64 %shr13.i.7.1, %shr14.i.7.1
  %add17.i.7.1 = add nuw nsw i64 %add16.i.7.1, %and15.i.7.1
  %add18.i.7.1 = add nuw nsw i64 %add17.i.7.1, %shr11.i.7.1
  %and19.i.7.1 = and i64 %add18.i.7.1, 4294967295
  %and21.i.7.1 = and i64 %add18.i.7.1, 30064771072
  %and22.i.7.1 = and i64 %mul5.i.7.1, -4294967296
  %add23.i.7.1 = add i64 %and21.i.7.1, %and22.i.7.1
  %xor2569.i.7.1 = or i64 %add23.i.7.1, %and19.i.7.1
  %add16.7.1 = add i64 %xor68.i.7.1, %add16.7
  %xor.i315.7.1 = xor i64 %add16.7.1, %shl.i.7.1
  %xor1.i316.7.1 = xor i64 %shl.i.7.1, %add16.7
  %or.i317.7.1 = or i64 %xor.i315.7.1, %xor1.i316.7.1
  %xor2.i318.7.1 = xor i64 %or.i317.7.1, %add16.7.1
  %shr.i319.7.1 = lshr i64 %xor2.i318.7.1, 63
  %add20.7.1 = add i64 %shr.i319.7.1, %xor2569.i.7.1
  %add21.7.1 = add i64 %add20.7.1, %add21.7
  %45 = xor i64 %add20.7.1, -9223372036854775808
  %xor2.i312.7.1 = and i64 %45, %add23.i.7.1
  %xor.i303.7.1 = xor i64 %add21.7.1, %add20.7.1
  %xor1.i304.7.1 = xor i64 %add20.7.1, %add21.7
  %or.i305.7.1 = or i64 %xor.i303.7.1, %xor1.i304.7.1
  %xor2.i306.7.1 = xor i64 %or.i305.7.1, %add21.7.1
  %shr.i313328.7.1 = or i64 %xor2.i306.7.1, %xor2.i312.7.1
  %or25327.7.1 = lshr i64 %shr.i313328.7.1, 63
  %add27.7.1 = add nuw nsw i64 %or25327.7.1, %or25327.7
  %arrayidx9.7.2 = getelementptr inbounds i64, i64* %mc, i64 2
  %46 = load i64, i64* %arrayidx9.7.2, align 8, !tbaa !3
  %47 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 5), align 8, !tbaa !3
  %and.i.7.2 = and i64 %46, 4294967295
  %shr.i.7.2 = lshr i64 %46, 32
  %and1.i.7.2 = and i64 %47, 4294967295
  %shr2.i.7.2 = lshr i64 %47, 32
  %mul.i.7.2 = mul nuw i64 %and1.i.7.2, %and.i.7.2
  %mul3.i.7.2 = mul nuw i64 %shr2.i.7.2, %and.i.7.2
  %mul4.i.7.2 = mul nuw i64 %and1.i.7.2, %shr.i.7.2
  %mul5.i.7.2 = mul nuw i64 %shr2.i.7.2, %shr.i.7.2
  %and6.i.7.2 = and i64 %mul.i.7.2, 4294967295
  %shr7.i.7.2 = lshr i64 %mul.i.7.2, 32
  %and8.i.7.2 = and i64 %mul4.i.7.2, 4294967295
  %and9.i.7.2 = and i64 %mul3.i.7.2, 4294967295
  %add.i.7.2 = add nuw nsw i64 %shr7.i.7.2, %and8.i.7.2
  %add10.i.7.2 = add nuw nsw i64 %add.i.7.2, %and9.i.7.2
  %shr11.i.7.2 = lshr i64 %add10.i.7.2, 32
  %shl.i.7.2 = shl i64 %add10.i.7.2, 32
  %xor68.i.7.2 = or i64 %shl.i.7.2, %and6.i.7.2
  %shr13.i.7.2 = lshr i64 %mul4.i.7.2, 32
  %shr14.i.7.2 = lshr i64 %mul3.i.7.2, 32
  %and15.i.7.2 = and i64 %mul5.i.7.2, 4294967295
  %add16.i.7.2 = add nuw nsw i64 %shr13.i.7.2, %shr14.i.7.2
  %add17.i.7.2 = add nuw nsw i64 %add16.i.7.2, %and15.i.7.2
  %add18.i.7.2 = add nuw nsw i64 %add17.i.7.2, %shr11.i.7.2
  %and19.i.7.2 = and i64 %add18.i.7.2, 4294967295
  %and21.i.7.2 = and i64 %add18.i.7.2, 30064771072
  %and22.i.7.2 = and i64 %mul5.i.7.2, -4294967296
  %add23.i.7.2 = add i64 %and21.i.7.2, %and22.i.7.2
  %xor2569.i.7.2 = or i64 %add23.i.7.2, %and19.i.7.2
  %add16.7.2 = add i64 %xor68.i.7.2, %add16.7.1
  %xor.i315.7.2 = xor i64 %add16.7.2, %shl.i.7.2
  %xor1.i316.7.2 = xor i64 %shl.i.7.2, %add16.7.1
  %or.i317.7.2 = or i64 %xor.i315.7.2, %xor1.i316.7.2
  %xor2.i318.7.2 = xor i64 %or.i317.7.2, %add16.7.2
  %shr.i319.7.2 = lshr i64 %xor2.i318.7.2, 63
  %add20.7.2 = add i64 %shr.i319.7.2, %xor2569.i.7.2
  %add21.7.2 = add i64 %add20.7.2, %add21.7.1
  %48 = xor i64 %add20.7.2, -9223372036854775808
  %xor2.i312.7.2 = and i64 %48, %add23.i.7.2
  %xor.i303.7.2 = xor i64 %add21.7.2, %add20.7.2
  %xor1.i304.7.2 = xor i64 %add20.7.2, %add21.7.1
  %or.i305.7.2 = or i64 %xor.i303.7.2, %xor1.i304.7.2
  %xor2.i306.7.2 = xor i64 %or.i305.7.2, %add21.7.2
  %shr.i313328.7.2 = or i64 %xor2.i306.7.2, %xor2.i312.7.2
  %or25327.7.2 = lshr i64 %shr.i313328.7.2, 63
  %add27.7.2 = add nsw i64 %or25327.7.2, %add27.7.1
  %arrayidx9.7.3 = getelementptr inbounds i64, i64* %mc, i64 3
  %49 = load i64, i64* %arrayidx9.7.3, align 8, !tbaa !3
  %50 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 4), align 16, !tbaa !3
  %and.i.7.3 = and i64 %49, 4294967295
  %shr.i.7.3 = lshr i64 %49, 32
  %and1.i.7.3 = and i64 %50, 4294967295
  %shr2.i.7.3 = lshr i64 %50, 32
  %mul.i.7.3 = mul nuw i64 %and1.i.7.3, %and.i.7.3
  %mul3.i.7.3 = mul nuw i64 %shr2.i.7.3, %and.i.7.3
  %mul4.i.7.3 = mul nuw i64 %and1.i.7.3, %shr.i.7.3
  %mul5.i.7.3 = mul nuw i64 %shr2.i.7.3, %shr.i.7.3
  %and6.i.7.3 = and i64 %mul.i.7.3, 4294967295
  %shr7.i.7.3 = lshr i64 %mul.i.7.3, 32
  %and8.i.7.3 = and i64 %mul4.i.7.3, 4294967295
  %and9.i.7.3 = and i64 %mul3.i.7.3, 4294967295
  %add.i.7.3 = add nuw nsw i64 %shr7.i.7.3, %and8.i.7.3
  %add10.i.7.3 = add nuw nsw i64 %add.i.7.3, %and9.i.7.3
  %shr11.i.7.3 = lshr i64 %add10.i.7.3, 32
  %shl.i.7.3 = shl i64 %add10.i.7.3, 32
  %xor68.i.7.3 = or i64 %shl.i.7.3, %and6.i.7.3
  %shr13.i.7.3 = lshr i64 %mul4.i.7.3, 32
  %shr14.i.7.3 = lshr i64 %mul3.i.7.3, 32
  %and15.i.7.3 = and i64 %mul5.i.7.3, 4294967295
  %add16.i.7.3 = add nuw nsw i64 %shr13.i.7.3, %shr14.i.7.3
  %add17.i.7.3 = add nuw nsw i64 %add16.i.7.3, %and15.i.7.3
  %add18.i.7.3 = add nuw nsw i64 %add17.i.7.3, %shr11.i.7.3
  %and19.i.7.3 = and i64 %add18.i.7.3, 4294967295
  %and21.i.7.3 = and i64 %add18.i.7.3, 30064771072
  %and22.i.7.3 = and i64 %mul5.i.7.3, -4294967296
  %add23.i.7.3 = add i64 %and21.i.7.3, %and22.i.7.3
  %xor2569.i.7.3 = or i64 %add23.i.7.3, %and19.i.7.3
  %add16.7.3 = add i64 %xor68.i.7.3, %add16.7.2
  %xor.i315.7.3 = xor i64 %add16.7.3, %shl.i.7.3
  %xor1.i316.7.3 = xor i64 %shl.i.7.3, %add16.7.2
  %or.i317.7.3 = or i64 %xor.i315.7.3, %xor1.i316.7.3
  %xor2.i318.7.3 = xor i64 %or.i317.7.3, %add16.7.3
  %shr.i319.7.3 = lshr i64 %xor2.i318.7.3, 63
  %add20.7.3 = add i64 %shr.i319.7.3, %xor2569.i.7.3
  %add21.7.3 = add i64 %add20.7.3, %add21.7.2
  %51 = xor i64 %add20.7.3, -9223372036854775808
  %xor2.i312.7.3 = and i64 %51, %add23.i.7.3
  %xor.i303.7.3 = xor i64 %add21.7.3, %add20.7.3
  %xor1.i304.7.3 = xor i64 %add20.7.3, %add21.7.2
  %or.i305.7.3 = or i64 %xor.i303.7.3, %xor1.i304.7.3
  %xor2.i306.7.3 = xor i64 %or.i305.7.3, %add21.7.3
  %shr.i313328.7.3 = or i64 %xor2.i306.7.3, %xor2.i312.7.3
  %or25327.7.3 = lshr i64 %shr.i313328.7.3, 63
  %add27.7.3 = add nsw i64 %or25327.7.3, %add27.7.2
  %arrayidx34.7 = getelementptr inbounds i64, i64* %ma, i64 7
  %52 = load i64, i64* %arrayidx34.7, align 8, !tbaa !3
  %add35.7 = add i64 %52, %add16.7.3
  %xor.i297.7 = xor i64 %add35.7, %add16.7.3
  %xor1.i298.7 = xor i64 %52, %add16.7.3
  %or.i299.7 = or i64 %xor.i297.7, %xor1.i298.7
  %xor2.i300.7 = xor i64 %or.i299.7, %add35.7
  %shr.i301.7 = lshr i64 %xor2.i300.7, 63
  %add41.7 = add i64 %shr.i301.7, %add21.7.3
  %arrayidx50.7 = getelementptr inbounds i64, i64* %mc, i64 7
  store i64 %add35.7, i64* %arrayidx50.7, align 8, !tbaa !3
  %53 = xor i64 %add41.7, -9223372036854775808
  %xor2.i294.7 = and i64 %53, %add21.7.3
  %shr.i295.7 = lshr i64 %xor2.i294.7, 63
  %add48.7 = add i64 %shr.i295.7, %add27.7.3
  %54 = load i64, i64* %mc, align 8, !tbaa !3
  %55 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 8), align 16, !tbaa !3
  %and.i.8 = and i64 %54, 4294967295
  %shr.i.8 = lshr i64 %54, 32
  %and1.i.8 = and i64 %55, 4294967295
  %shr2.i.8 = lshr i64 %55, 32
  %mul.i.8 = mul nuw i64 %and1.i.8, %and.i.8
  %mul3.i.8 = mul nuw i64 %shr2.i.8, %and.i.8
  %mul4.i.8 = mul nuw i64 %and1.i.8, %shr.i.8
  %mul5.i.8 = mul nuw i64 %shr2.i.8, %shr.i.8
  %and6.i.8 = and i64 %mul.i.8, 4294967295
  %shr7.i.8 = lshr i64 %mul.i.8, 32
  %and8.i.8 = and i64 %mul4.i.8, 4294967295
  %and9.i.8 = and i64 %mul3.i.8, 4294967295
  %add.i.8 = add nuw nsw i64 %shr7.i.8, %and8.i.8
  %add10.i.8 = add nuw nsw i64 %add.i.8, %and9.i.8
  %shr11.i.8 = lshr i64 %add10.i.8, 32
  %shl.i.8 = shl i64 %add10.i.8, 32
  %xor68.i.8 = or i64 %shl.i.8, %and6.i.8
  %shr13.i.8 = lshr i64 %mul4.i.8, 32
  %shr14.i.8 = lshr i64 %mul3.i.8, 32
  %and15.i.8 = and i64 %mul5.i.8, 4294967295
  %add16.i.8 = add nuw nsw i64 %shr13.i.8, %shr14.i.8
  %add17.i.8 = add nuw nsw i64 %add16.i.8, %and15.i.8
  %add18.i.8 = add nuw nsw i64 %add17.i.8, %shr11.i.8
  %and19.i.8 = and i64 %add18.i.8, 4294967295
  %and21.i.8 = and i64 %add18.i.8, 30064771072
  %and22.i.8 = and i64 %mul5.i.8, -4294967296
  %add23.i.8 = add i64 %and21.i.8, %and22.i.8
  %xor2569.i.8 = or i64 %add23.i.8, %and19.i.8
  %add16.8 = add i64 %xor68.i.8, %add41.7
  %xor.i315.8 = xor i64 %add16.8, %shl.i.8
  %xor1.i316.8 = xor i64 %shl.i.8, %add41.7
  %or.i317.8 = or i64 %xor.i315.8, %xor1.i316.8
  %xor2.i318.8 = xor i64 %or.i317.8, %add16.8
  %shr.i319.8 = lshr i64 %xor2.i318.8, 63
  %add20.8 = add i64 %shr.i319.8, %xor2569.i.8
  %add21.8 = add i64 %add20.8, %add48.7
  %56 = xor i64 %add20.8, -9223372036854775808
  %xor2.i312.8 = and i64 %56, %add23.i.8
  %xor.i303.8 = xor i64 %add21.8, %add20.8
  %xor1.i304.8 = xor i64 %add20.8, %add48.7
  %or.i305.8 = or i64 %xor.i303.8, %xor1.i304.8
  %xor2.i306.8 = xor i64 %or.i305.8, %add21.8
  %shr.i313328.8 = or i64 %xor2.i306.8, %xor2.i312.8
  %or25327.8 = lshr i64 %shr.i313328.8, 63
  %arrayidx9.8.1 = getelementptr inbounds i64, i64* %mc, i64 1
  %57 = load i64, i64* %arrayidx9.8.1, align 8, !tbaa !3
  %58 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 7), align 8, !tbaa !3
  %and.i.8.1 = and i64 %57, 4294967295
  %shr.i.8.1 = lshr i64 %57, 32
  %and1.i.8.1 = and i64 %58, 4294967295
  %shr2.i.8.1 = lshr i64 %58, 32
  %mul.i.8.1 = mul nuw i64 %and1.i.8.1, %and.i.8.1
  %mul3.i.8.1 = mul nuw i64 %shr2.i.8.1, %and.i.8.1
  %mul4.i.8.1 = mul nuw i64 %and1.i.8.1, %shr.i.8.1
  %mul5.i.8.1 = mul nuw i64 %shr2.i.8.1, %shr.i.8.1
  %and6.i.8.1 = and i64 %mul.i.8.1, 4294967295
  %shr7.i.8.1 = lshr i64 %mul.i.8.1, 32
  %and8.i.8.1 = and i64 %mul4.i.8.1, 4294967295
  %and9.i.8.1 = and i64 %mul3.i.8.1, 4294967295
  %add.i.8.1 = add nuw nsw i64 %shr7.i.8.1, %and8.i.8.1
  %add10.i.8.1 = add nuw nsw i64 %add.i.8.1, %and9.i.8.1
  %shr11.i.8.1 = lshr i64 %add10.i.8.1, 32
  %shl.i.8.1 = shl i64 %add10.i.8.1, 32
  %xor68.i.8.1 = or i64 %shl.i.8.1, %and6.i.8.1
  %shr13.i.8.1 = lshr i64 %mul4.i.8.1, 32
  %shr14.i.8.1 = lshr i64 %mul3.i.8.1, 32
  %and15.i.8.1 = and i64 %mul5.i.8.1, 4294967295
  %add16.i.8.1 = add nuw nsw i64 %shr13.i.8.1, %shr14.i.8.1
  %add17.i.8.1 = add nuw nsw i64 %add16.i.8.1, %and15.i.8.1
  %add18.i.8.1 = add nuw nsw i64 %add17.i.8.1, %shr11.i.8.1
  %and19.i.8.1 = and i64 %add18.i.8.1, 4294967295
  %and21.i.8.1 = and i64 %add18.i.8.1, 30064771072
  %and22.i.8.1 = and i64 %mul5.i.8.1, -4294967296
  %add23.i.8.1 = add i64 %and21.i.8.1, %and22.i.8.1
  %xor2569.i.8.1 = or i64 %add23.i.8.1, %and19.i.8.1
  %add16.8.1 = add i64 %xor68.i.8.1, %add16.8
  %xor.i315.8.1 = xor i64 %add16.8.1, %shl.i.8.1
  %xor1.i316.8.1 = xor i64 %shl.i.8.1, %add16.8
  %or.i317.8.1 = or i64 %xor.i315.8.1, %xor1.i316.8.1
  %xor2.i318.8.1 = xor i64 %or.i317.8.1, %add16.8.1
  %shr.i319.8.1 = lshr i64 %xor2.i318.8.1, 63
  %add20.8.1 = add i64 %shr.i319.8.1, %xor2569.i.8.1
  %add21.8.1 = add i64 %add20.8.1, %add21.8
  %59 = xor i64 %add20.8.1, -9223372036854775808
  %xor2.i312.8.1 = and i64 %59, %add23.i.8.1
  %xor.i303.8.1 = xor i64 %add21.8.1, %add20.8.1
  %xor1.i304.8.1 = xor i64 %add20.8.1, %add21.8
  %or.i305.8.1 = or i64 %xor.i303.8.1, %xor1.i304.8.1
  %xor2.i306.8.1 = xor i64 %or.i305.8.1, %add21.8.1
  %shr.i313328.8.1 = or i64 %xor2.i306.8.1, %xor2.i312.8.1
  %or25327.8.1 = lshr i64 %shr.i313328.8.1, 63
  %add27.8.1 = add nuw nsw i64 %or25327.8.1, %or25327.8
  %arrayidx9.8.2 = getelementptr inbounds i64, i64* %mc, i64 2
  %60 = load i64, i64* %arrayidx9.8.2, align 8, !tbaa !3
  %61 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 6), align 16, !tbaa !3
  %and.i.8.2 = and i64 %60, 4294967295
  %shr.i.8.2 = lshr i64 %60, 32
  %and1.i.8.2 = and i64 %61, 4294967295
  %shr2.i.8.2 = lshr i64 %61, 32
  %mul.i.8.2 = mul nuw i64 %and1.i.8.2, %and.i.8.2
  %mul3.i.8.2 = mul nuw i64 %shr2.i.8.2, %and.i.8.2
  %mul4.i.8.2 = mul nuw i64 %and1.i.8.2, %shr.i.8.2
  %mul5.i.8.2 = mul nuw i64 %shr2.i.8.2, %shr.i.8.2
  %and6.i.8.2 = and i64 %mul.i.8.2, 4294967295
  %shr7.i.8.2 = lshr i64 %mul.i.8.2, 32
  %and8.i.8.2 = and i64 %mul4.i.8.2, 4294967295
  %and9.i.8.2 = and i64 %mul3.i.8.2, 4294967295
  %add.i.8.2 = add nuw nsw i64 %shr7.i.8.2, %and8.i.8.2
  %add10.i.8.2 = add nuw nsw i64 %add.i.8.2, %and9.i.8.2
  %shr11.i.8.2 = lshr i64 %add10.i.8.2, 32
  %shl.i.8.2 = shl i64 %add10.i.8.2, 32
  %xor68.i.8.2 = or i64 %shl.i.8.2, %and6.i.8.2
  %shr13.i.8.2 = lshr i64 %mul4.i.8.2, 32
  %shr14.i.8.2 = lshr i64 %mul3.i.8.2, 32
  %and15.i.8.2 = and i64 %mul5.i.8.2, 4294967295
  %add16.i.8.2 = add nuw nsw i64 %shr13.i.8.2, %shr14.i.8.2
  %add17.i.8.2 = add nuw nsw i64 %add16.i.8.2, %and15.i.8.2
  %add18.i.8.2 = add nuw nsw i64 %add17.i.8.2, %shr11.i.8.2
  %and19.i.8.2 = and i64 %add18.i.8.2, 4294967295
  %and21.i.8.2 = and i64 %add18.i.8.2, 30064771072
  %and22.i.8.2 = and i64 %mul5.i.8.2, -4294967296
  %add23.i.8.2 = add i64 %and21.i.8.2, %and22.i.8.2
  %xor2569.i.8.2 = or i64 %add23.i.8.2, %and19.i.8.2
  %add16.8.2 = add i64 %xor68.i.8.2, %add16.8.1
  %xor.i315.8.2 = xor i64 %add16.8.2, %shl.i.8.2
  %xor1.i316.8.2 = xor i64 %shl.i.8.2, %add16.8.1
  %or.i317.8.2 = or i64 %xor.i315.8.2, %xor1.i316.8.2
  %xor2.i318.8.2 = xor i64 %or.i317.8.2, %add16.8.2
  %shr.i319.8.2 = lshr i64 %xor2.i318.8.2, 63
  %add20.8.2 = add i64 %shr.i319.8.2, %xor2569.i.8.2
  %add21.8.2 = add i64 %add20.8.2, %add21.8.1
  %62 = xor i64 %add20.8.2, -9223372036854775808
  %xor2.i312.8.2 = and i64 %62, %add23.i.8.2
  %xor.i303.8.2 = xor i64 %add21.8.2, %add20.8.2
  %xor1.i304.8.2 = xor i64 %add20.8.2, %add21.8.1
  %or.i305.8.2 = or i64 %xor.i303.8.2, %xor1.i304.8.2
  %xor2.i306.8.2 = xor i64 %or.i305.8.2, %add21.8.2
  %shr.i313328.8.2 = or i64 %xor2.i306.8.2, %xor2.i312.8.2
  %or25327.8.2 = lshr i64 %shr.i313328.8.2, 63
  %add27.8.2 = add nsw i64 %or25327.8.2, %add27.8.1
  %arrayidx9.8.3 = getelementptr inbounds i64, i64* %mc, i64 3
  %63 = load i64, i64* %arrayidx9.8.3, align 8, !tbaa !3
  %64 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 5), align 8, !tbaa !3
  %and.i.8.3 = and i64 %63, 4294967295
  %shr.i.8.3 = lshr i64 %63, 32
  %and1.i.8.3 = and i64 %64, 4294967295
  %shr2.i.8.3 = lshr i64 %64, 32
  %mul.i.8.3 = mul nuw i64 %and1.i.8.3, %and.i.8.3
  %mul3.i.8.3 = mul nuw i64 %shr2.i.8.3, %and.i.8.3
  %mul4.i.8.3 = mul nuw i64 %and1.i.8.3, %shr.i.8.3
  %mul5.i.8.3 = mul nuw i64 %shr2.i.8.3, %shr.i.8.3
  %and6.i.8.3 = and i64 %mul.i.8.3, 4294967295
  %shr7.i.8.3 = lshr i64 %mul.i.8.3, 32
  %and8.i.8.3 = and i64 %mul4.i.8.3, 4294967295
  %and9.i.8.3 = and i64 %mul3.i.8.3, 4294967295
  %add.i.8.3 = add nuw nsw i64 %shr7.i.8.3, %and8.i.8.3
  %add10.i.8.3 = add nuw nsw i64 %add.i.8.3, %and9.i.8.3
  %shr11.i.8.3 = lshr i64 %add10.i.8.3, 32
  %shl.i.8.3 = shl i64 %add10.i.8.3, 32
  %xor68.i.8.3 = or i64 %shl.i.8.3, %and6.i.8.3
  %shr13.i.8.3 = lshr i64 %mul4.i.8.3, 32
  %shr14.i.8.3 = lshr i64 %mul3.i.8.3, 32
  %and15.i.8.3 = and i64 %mul5.i.8.3, 4294967295
  %add16.i.8.3 = add nuw nsw i64 %shr13.i.8.3, %shr14.i.8.3
  %add17.i.8.3 = add nuw nsw i64 %add16.i.8.3, %and15.i.8.3
  %add18.i.8.3 = add nuw nsw i64 %add17.i.8.3, %shr11.i.8.3
  %and19.i.8.3 = and i64 %add18.i.8.3, 4294967295
  %and21.i.8.3 = and i64 %add18.i.8.3, 30064771072
  %and22.i.8.3 = and i64 %mul5.i.8.3, -4294967296
  %add23.i.8.3 = add i64 %and21.i.8.3, %and22.i.8.3
  %xor2569.i.8.3 = or i64 %add23.i.8.3, %and19.i.8.3
  %add16.8.3 = add i64 %xor68.i.8.3, %add16.8.2
  %xor.i315.8.3 = xor i64 %add16.8.3, %shl.i.8.3
  %xor1.i316.8.3 = xor i64 %shl.i.8.3, %add16.8.2
  %or.i317.8.3 = or i64 %xor.i315.8.3, %xor1.i316.8.3
  %xor2.i318.8.3 = xor i64 %or.i317.8.3, %add16.8.3
  %shr.i319.8.3 = lshr i64 %xor2.i318.8.3, 63
  %add20.8.3 = add i64 %shr.i319.8.3, %xor2569.i.8.3
  %add21.8.3 = add i64 %add20.8.3, %add21.8.2
  %65 = xor i64 %add20.8.3, -9223372036854775808
  %xor2.i312.8.3 = and i64 %65, %add23.i.8.3
  %xor.i303.8.3 = xor i64 %add21.8.3, %add20.8.3
  %xor1.i304.8.3 = xor i64 %add20.8.3, %add21.8.2
  %or.i305.8.3 = or i64 %xor.i303.8.3, %xor1.i304.8.3
  %xor2.i306.8.3 = xor i64 %or.i305.8.3, %add21.8.3
  %shr.i313328.8.3 = or i64 %xor2.i306.8.3, %xor2.i312.8.3
  %or25327.8.3 = lshr i64 %shr.i313328.8.3, 63
  %add27.8.3 = add nsw i64 %or25327.8.3, %add27.8.2
  %arrayidx9.8.4 = getelementptr inbounds i64, i64* %mc, i64 4
  %66 = load i64, i64* %arrayidx9.8.4, align 8, !tbaa !3
  %67 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 4), align 16, !tbaa !3
  %and.i.8.4 = and i64 %66, 4294967295
  %shr.i.8.4 = lshr i64 %66, 32
  %and1.i.8.4 = and i64 %67, 4294967295
  %shr2.i.8.4 = lshr i64 %67, 32
  %mul.i.8.4 = mul nuw i64 %and1.i.8.4, %and.i.8.4
  %mul3.i.8.4 = mul nuw i64 %shr2.i.8.4, %and.i.8.4
  %mul4.i.8.4 = mul nuw i64 %and1.i.8.4, %shr.i.8.4
  %mul5.i.8.4 = mul nuw i64 %shr2.i.8.4, %shr.i.8.4
  %and6.i.8.4 = and i64 %mul.i.8.4, 4294967295
  %shr7.i.8.4 = lshr i64 %mul.i.8.4, 32
  %and8.i.8.4 = and i64 %mul4.i.8.4, 4294967295
  %and9.i.8.4 = and i64 %mul3.i.8.4, 4294967295
  %add.i.8.4 = add nuw nsw i64 %shr7.i.8.4, %and8.i.8.4
  %add10.i.8.4 = add nuw nsw i64 %add.i.8.4, %and9.i.8.4
  %shr11.i.8.4 = lshr i64 %add10.i.8.4, 32
  %shl.i.8.4 = shl i64 %add10.i.8.4, 32
  %xor68.i.8.4 = or i64 %shl.i.8.4, %and6.i.8.4
  %shr13.i.8.4 = lshr i64 %mul4.i.8.4, 32
  %shr14.i.8.4 = lshr i64 %mul3.i.8.4, 32
  %and15.i.8.4 = and i64 %mul5.i.8.4, 4294967295
  %add16.i.8.4 = add nuw nsw i64 %shr13.i.8.4, %shr14.i.8.4
  %add17.i.8.4 = add nuw nsw i64 %add16.i.8.4, %and15.i.8.4
  %add18.i.8.4 = add nuw nsw i64 %add17.i.8.4, %shr11.i.8.4
  %and19.i.8.4 = and i64 %add18.i.8.4, 4294967295
  %and21.i.8.4 = and i64 %add18.i.8.4, 30064771072
  %and22.i.8.4 = and i64 %mul5.i.8.4, -4294967296
  %add23.i.8.4 = add i64 %and21.i.8.4, %and22.i.8.4
  %xor2569.i.8.4 = or i64 %add23.i.8.4, %and19.i.8.4
  %add16.8.4 = add i64 %xor68.i.8.4, %add16.8.3
  %xor.i315.8.4 = xor i64 %add16.8.4, %shl.i.8.4
  %xor1.i316.8.4 = xor i64 %shl.i.8.4, %add16.8.3
  %or.i317.8.4 = or i64 %xor.i315.8.4, %xor1.i316.8.4
  %xor2.i318.8.4 = xor i64 %or.i317.8.4, %add16.8.4
  %shr.i319.8.4 = lshr i64 %xor2.i318.8.4, 63
  %add20.8.4 = add i64 %shr.i319.8.4, %xor2569.i.8.4
  %add21.8.4 = add i64 %add20.8.4, %add21.8.3
  %68 = xor i64 %add20.8.4, -9223372036854775808
  %xor2.i312.8.4 = and i64 %68, %add23.i.8.4
  %xor.i303.8.4 = xor i64 %add21.8.4, %add20.8.4
  %xor1.i304.8.4 = xor i64 %add20.8.4, %add21.8.3
  %or.i305.8.4 = or i64 %xor.i303.8.4, %xor1.i304.8.4
  %xor2.i306.8.4 = xor i64 %or.i305.8.4, %add21.8.4
  %shr.i313328.8.4 = or i64 %xor2.i306.8.4, %xor2.i312.8.4
  %or25327.8.4 = lshr i64 %shr.i313328.8.4, 63
  %add27.8.4 = add i64 %or25327.8.4, %add27.8.3
  %arrayidx34.8 = getelementptr inbounds i64, i64* %ma, i64 8
  %69 = load i64, i64* %arrayidx34.8, align 8, !tbaa !3
  %add35.8 = add i64 %69, %add16.8.4
  %xor.i297.8 = xor i64 %add35.8, %add16.8.4
  %xor1.i298.8 = xor i64 %69, %add16.8.4
  %or.i299.8 = or i64 %xor.i297.8, %xor1.i298.8
  %xor2.i300.8 = xor i64 %or.i299.8, %add35.8
  %shr.i301.8 = lshr i64 %xor2.i300.8, 63
  %add41.8 = add i64 %shr.i301.8, %add21.8.4
  %arrayidx50.8 = getelementptr inbounds i64, i64* %mc, i64 8
  store i64 %add35.8, i64* %arrayidx50.8, align 8, !tbaa !3
  %70 = xor i64 %add41.8, -9223372036854775808
  %xor2.i294.8 = and i64 %70, %add21.8.4
  %shr.i295.8 = lshr i64 %xor2.i294.8, 63
  %add48.8 = add i64 %shr.i295.8, %add27.8.4
  %71 = load i64, i64* %mc, align 8, !tbaa !3
  %72 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 9), align 8, !tbaa !3
  %and.i.9 = and i64 %71, 4294967295
  %shr.i.9 = lshr i64 %71, 32
  %and1.i.9 = and i64 %72, 4294967295
  %shr2.i.9 = lshr i64 %72, 32
  %mul.i.9 = mul nuw i64 %and1.i.9, %and.i.9
  %mul3.i.9 = mul nuw i64 %shr2.i.9, %and.i.9
  %mul4.i.9 = mul nuw i64 %and1.i.9, %shr.i.9
  %mul5.i.9 = mul nuw i64 %shr2.i.9, %shr.i.9
  %and6.i.9 = and i64 %mul.i.9, 4294967295
  %shr7.i.9 = lshr i64 %mul.i.9, 32
  %and8.i.9 = and i64 %mul4.i.9, 4294967295
  %and9.i.9 = and i64 %mul3.i.9, 4294967295
  %add.i.9 = add nuw nsw i64 %shr7.i.9, %and8.i.9
  %add10.i.9 = add nuw nsw i64 %add.i.9, %and9.i.9
  %shr11.i.9 = lshr i64 %add10.i.9, 32
  %shl.i.9 = shl i64 %add10.i.9, 32
  %xor68.i.9 = or i64 %shl.i.9, %and6.i.9
  %shr13.i.9 = lshr i64 %mul4.i.9, 32
  %shr14.i.9 = lshr i64 %mul3.i.9, 32
  %and15.i.9 = and i64 %mul5.i.9, 4294967295
  %add16.i.9 = add nuw nsw i64 %shr13.i.9, %shr14.i.9
  %add17.i.9 = add nuw nsw i64 %add16.i.9, %and15.i.9
  %add18.i.9 = add nuw nsw i64 %add17.i.9, %shr11.i.9
  %and19.i.9 = and i64 %add18.i.9, 4294967295
  %and21.i.9 = and i64 %add18.i.9, 30064771072
  %and22.i.9 = and i64 %mul5.i.9, -4294967296
  %add23.i.9 = add i64 %and21.i.9, %and22.i.9
  %xor2569.i.9 = or i64 %add23.i.9, %and19.i.9
  %add16.9 = add i64 %xor68.i.9, %add41.8
  %xor.i315.9 = xor i64 %add16.9, %shl.i.9
  %xor1.i316.9 = xor i64 %shl.i.9, %add41.8
  %or.i317.9 = or i64 %xor.i315.9, %xor1.i316.9
  %xor2.i318.9 = xor i64 %or.i317.9, %add16.9
  %shr.i319.9 = lshr i64 %xor2.i318.9, 63
  %add20.9 = add i64 %shr.i319.9, %xor2569.i.9
  %add21.9 = add i64 %add20.9, %add48.8
  %73 = xor i64 %add20.9, -9223372036854775808
  %xor2.i312.9 = and i64 %73, %add23.i.9
  %xor.i303.9 = xor i64 %add21.9, %add20.9
  %xor1.i304.9 = xor i64 %add20.9, %add48.8
  %or.i305.9 = or i64 %xor.i303.9, %xor1.i304.9
  %xor2.i306.9 = xor i64 %or.i305.9, %add21.9
  %shr.i313328.9 = or i64 %xor2.i306.9, %xor2.i312.9
  %or25327.9 = lshr i64 %shr.i313328.9, 63
  %arrayidx9.9.1 = getelementptr inbounds i64, i64* %mc, i64 1
  %74 = load i64, i64* %arrayidx9.9.1, align 8, !tbaa !3
  %75 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 8), align 16, !tbaa !3
  %and.i.9.1 = and i64 %74, 4294967295
  %shr.i.9.1 = lshr i64 %74, 32
  %and1.i.9.1 = and i64 %75, 4294967295
  %shr2.i.9.1 = lshr i64 %75, 32
  %mul.i.9.1 = mul nuw i64 %and1.i.9.1, %and.i.9.1
  %mul3.i.9.1 = mul nuw i64 %shr2.i.9.1, %and.i.9.1
  %mul4.i.9.1 = mul nuw i64 %and1.i.9.1, %shr.i.9.1
  %mul5.i.9.1 = mul nuw i64 %shr2.i.9.1, %shr.i.9.1
  %and6.i.9.1 = and i64 %mul.i.9.1, 4294967295
  %shr7.i.9.1 = lshr i64 %mul.i.9.1, 32
  %and8.i.9.1 = and i64 %mul4.i.9.1, 4294967295
  %and9.i.9.1 = and i64 %mul3.i.9.1, 4294967295
  %add.i.9.1 = add nuw nsw i64 %shr7.i.9.1, %and8.i.9.1
  %add10.i.9.1 = add nuw nsw i64 %add.i.9.1, %and9.i.9.1
  %shr11.i.9.1 = lshr i64 %add10.i.9.1, 32
  %shl.i.9.1 = shl i64 %add10.i.9.1, 32
  %xor68.i.9.1 = or i64 %shl.i.9.1, %and6.i.9.1
  %shr13.i.9.1 = lshr i64 %mul4.i.9.1, 32
  %shr14.i.9.1 = lshr i64 %mul3.i.9.1, 32
  %and15.i.9.1 = and i64 %mul5.i.9.1, 4294967295
  %add16.i.9.1 = add nuw nsw i64 %shr13.i.9.1, %shr14.i.9.1
  %add17.i.9.1 = add nuw nsw i64 %add16.i.9.1, %and15.i.9.1
  %add18.i.9.1 = add nuw nsw i64 %add17.i.9.1, %shr11.i.9.1
  %and19.i.9.1 = and i64 %add18.i.9.1, 4294967295
  %and21.i.9.1 = and i64 %add18.i.9.1, 30064771072
  %and22.i.9.1 = and i64 %mul5.i.9.1, -4294967296
  %add23.i.9.1 = add i64 %and21.i.9.1, %and22.i.9.1
  %xor2569.i.9.1 = or i64 %add23.i.9.1, %and19.i.9.1
  %add16.9.1 = add i64 %xor68.i.9.1, %add16.9
  %xor.i315.9.1 = xor i64 %add16.9.1, %shl.i.9.1
  %xor1.i316.9.1 = xor i64 %shl.i.9.1, %add16.9
  %or.i317.9.1 = or i64 %xor.i315.9.1, %xor1.i316.9.1
  %xor2.i318.9.1 = xor i64 %or.i317.9.1, %add16.9.1
  %shr.i319.9.1 = lshr i64 %xor2.i318.9.1, 63
  %add20.9.1 = add i64 %shr.i319.9.1, %xor2569.i.9.1
  %add21.9.1 = add i64 %add20.9.1, %add21.9
  %76 = xor i64 %add20.9.1, -9223372036854775808
  %xor2.i312.9.1 = and i64 %76, %add23.i.9.1
  %xor.i303.9.1 = xor i64 %add21.9.1, %add20.9.1
  %xor1.i304.9.1 = xor i64 %add20.9.1, %add21.9
  %or.i305.9.1 = or i64 %xor.i303.9.1, %xor1.i304.9.1
  %xor2.i306.9.1 = xor i64 %or.i305.9.1, %add21.9.1
  %shr.i313328.9.1 = or i64 %xor2.i306.9.1, %xor2.i312.9.1
  %or25327.9.1 = lshr i64 %shr.i313328.9.1, 63
  %add27.9.1 = add nuw nsw i64 %or25327.9.1, %or25327.9
  %arrayidx9.9.2 = getelementptr inbounds i64, i64* %mc, i64 2
  %77 = load i64, i64* %arrayidx9.9.2, align 8, !tbaa !3
  %78 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 7), align 8, !tbaa !3
  %and.i.9.2 = and i64 %77, 4294967295
  %shr.i.9.2 = lshr i64 %77, 32
  %and1.i.9.2 = and i64 %78, 4294967295
  %shr2.i.9.2 = lshr i64 %78, 32
  %mul.i.9.2 = mul nuw i64 %and1.i.9.2, %and.i.9.2
  %mul3.i.9.2 = mul nuw i64 %shr2.i.9.2, %and.i.9.2
  %mul4.i.9.2 = mul nuw i64 %and1.i.9.2, %shr.i.9.2
  %mul5.i.9.2 = mul nuw i64 %shr2.i.9.2, %shr.i.9.2
  %and6.i.9.2 = and i64 %mul.i.9.2, 4294967295
  %shr7.i.9.2 = lshr i64 %mul.i.9.2, 32
  %and8.i.9.2 = and i64 %mul4.i.9.2, 4294967295
  %and9.i.9.2 = and i64 %mul3.i.9.2, 4294967295
  %add.i.9.2 = add nuw nsw i64 %shr7.i.9.2, %and8.i.9.2
  %add10.i.9.2 = add nuw nsw i64 %add.i.9.2, %and9.i.9.2
  %shr11.i.9.2 = lshr i64 %add10.i.9.2, 32
  %shl.i.9.2 = shl i64 %add10.i.9.2, 32
  %xor68.i.9.2 = or i64 %shl.i.9.2, %and6.i.9.2
  %shr13.i.9.2 = lshr i64 %mul4.i.9.2, 32
  %shr14.i.9.2 = lshr i64 %mul3.i.9.2, 32
  %and15.i.9.2 = and i64 %mul5.i.9.2, 4294967295
  %add16.i.9.2 = add nuw nsw i64 %shr13.i.9.2, %shr14.i.9.2
  %add17.i.9.2 = add nuw nsw i64 %add16.i.9.2, %and15.i.9.2
  %add18.i.9.2 = add nuw nsw i64 %add17.i.9.2, %shr11.i.9.2
  %and19.i.9.2 = and i64 %add18.i.9.2, 4294967295
  %and21.i.9.2 = and i64 %add18.i.9.2, 30064771072
  %and22.i.9.2 = and i64 %mul5.i.9.2, -4294967296
  %add23.i.9.2 = add i64 %and21.i.9.2, %and22.i.9.2
  %xor2569.i.9.2 = or i64 %add23.i.9.2, %and19.i.9.2
  %add16.9.2 = add i64 %xor68.i.9.2, %add16.9.1
  %xor.i315.9.2 = xor i64 %add16.9.2, %shl.i.9.2
  %xor1.i316.9.2 = xor i64 %shl.i.9.2, %add16.9.1
  %or.i317.9.2 = or i64 %xor.i315.9.2, %xor1.i316.9.2
  %xor2.i318.9.2 = xor i64 %or.i317.9.2, %add16.9.2
  %shr.i319.9.2 = lshr i64 %xor2.i318.9.2, 63
  %add20.9.2 = add i64 %shr.i319.9.2, %xor2569.i.9.2
  %add21.9.2 = add i64 %add20.9.2, %add21.9.1
  %79 = xor i64 %add20.9.2, -9223372036854775808
  %xor2.i312.9.2 = and i64 %79, %add23.i.9.2
  %xor.i303.9.2 = xor i64 %add21.9.2, %add20.9.2
  %xor1.i304.9.2 = xor i64 %add20.9.2, %add21.9.1
  %or.i305.9.2 = or i64 %xor.i303.9.2, %xor1.i304.9.2
  %xor2.i306.9.2 = xor i64 %or.i305.9.2, %add21.9.2
  %shr.i313328.9.2 = or i64 %xor2.i306.9.2, %xor2.i312.9.2
  %or25327.9.2 = lshr i64 %shr.i313328.9.2, 63
  %add27.9.2 = add nsw i64 %or25327.9.2, %add27.9.1
  %arrayidx9.9.3 = getelementptr inbounds i64, i64* %mc, i64 3
  %80 = load i64, i64* %arrayidx9.9.3, align 8, !tbaa !3
  %81 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 6), align 16, !tbaa !3
  %and.i.9.3 = and i64 %80, 4294967295
  %shr.i.9.3 = lshr i64 %80, 32
  %and1.i.9.3 = and i64 %81, 4294967295
  %shr2.i.9.3 = lshr i64 %81, 32
  %mul.i.9.3 = mul nuw i64 %and1.i.9.3, %and.i.9.3
  %mul3.i.9.3 = mul nuw i64 %shr2.i.9.3, %and.i.9.3
  %mul4.i.9.3 = mul nuw i64 %and1.i.9.3, %shr.i.9.3
  %mul5.i.9.3 = mul nuw i64 %shr2.i.9.3, %shr.i.9.3
  %and6.i.9.3 = and i64 %mul.i.9.3, 4294967295
  %shr7.i.9.3 = lshr i64 %mul.i.9.3, 32
  %and8.i.9.3 = and i64 %mul4.i.9.3, 4294967295
  %and9.i.9.3 = and i64 %mul3.i.9.3, 4294967295
  %add.i.9.3 = add nuw nsw i64 %shr7.i.9.3, %and8.i.9.3
  %add10.i.9.3 = add nuw nsw i64 %add.i.9.3, %and9.i.9.3
  %shr11.i.9.3 = lshr i64 %add10.i.9.3, 32
  %shl.i.9.3 = shl i64 %add10.i.9.3, 32
  %xor68.i.9.3 = or i64 %shl.i.9.3, %and6.i.9.3
  %shr13.i.9.3 = lshr i64 %mul4.i.9.3, 32
  %shr14.i.9.3 = lshr i64 %mul3.i.9.3, 32
  %and15.i.9.3 = and i64 %mul5.i.9.3, 4294967295
  %add16.i.9.3 = add nuw nsw i64 %shr13.i.9.3, %shr14.i.9.3
  %add17.i.9.3 = add nuw nsw i64 %add16.i.9.3, %and15.i.9.3
  %add18.i.9.3 = add nuw nsw i64 %add17.i.9.3, %shr11.i.9.3
  %and19.i.9.3 = and i64 %add18.i.9.3, 4294967295
  %and21.i.9.3 = and i64 %add18.i.9.3, 30064771072
  %and22.i.9.3 = and i64 %mul5.i.9.3, -4294967296
  %add23.i.9.3 = add i64 %and21.i.9.3, %and22.i.9.3
  %xor2569.i.9.3 = or i64 %add23.i.9.3, %and19.i.9.3
  %add16.9.3 = add i64 %xor68.i.9.3, %add16.9.2
  %xor.i315.9.3 = xor i64 %add16.9.3, %shl.i.9.3
  %xor1.i316.9.3 = xor i64 %shl.i.9.3, %add16.9.2
  %or.i317.9.3 = or i64 %xor.i315.9.3, %xor1.i316.9.3
  %xor2.i318.9.3 = xor i64 %or.i317.9.3, %add16.9.3
  %shr.i319.9.3 = lshr i64 %xor2.i318.9.3, 63
  %add20.9.3 = add i64 %shr.i319.9.3, %xor2569.i.9.3
  %add21.9.3 = add i64 %add20.9.3, %add21.9.2
  %82 = xor i64 %add20.9.3, -9223372036854775808
  %xor2.i312.9.3 = and i64 %82, %add23.i.9.3
  %xor.i303.9.3 = xor i64 %add21.9.3, %add20.9.3
  %xor1.i304.9.3 = xor i64 %add20.9.3, %add21.9.2
  %or.i305.9.3 = or i64 %xor.i303.9.3, %xor1.i304.9.3
  %xor2.i306.9.3 = xor i64 %or.i305.9.3, %add21.9.3
  %shr.i313328.9.3 = or i64 %xor2.i306.9.3, %xor2.i312.9.3
  %or25327.9.3 = lshr i64 %shr.i313328.9.3, 63
  %add27.9.3 = add nsw i64 %or25327.9.3, %add27.9.2
  %arrayidx9.9.4 = getelementptr inbounds i64, i64* %mc, i64 4
  %83 = load i64, i64* %arrayidx9.9.4, align 8, !tbaa !3
  %84 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 5), align 8, !tbaa !3
  %and.i.9.4 = and i64 %83, 4294967295
  %shr.i.9.4 = lshr i64 %83, 32
  %and1.i.9.4 = and i64 %84, 4294967295
  %shr2.i.9.4 = lshr i64 %84, 32
  %mul.i.9.4 = mul nuw i64 %and1.i.9.4, %and.i.9.4
  %mul3.i.9.4 = mul nuw i64 %shr2.i.9.4, %and.i.9.4
  %mul4.i.9.4 = mul nuw i64 %and1.i.9.4, %shr.i.9.4
  %mul5.i.9.4 = mul nuw i64 %shr2.i.9.4, %shr.i.9.4
  %and6.i.9.4 = and i64 %mul.i.9.4, 4294967295
  %shr7.i.9.4 = lshr i64 %mul.i.9.4, 32
  %and8.i.9.4 = and i64 %mul4.i.9.4, 4294967295
  %and9.i.9.4 = and i64 %mul3.i.9.4, 4294967295
  %add.i.9.4 = add nuw nsw i64 %shr7.i.9.4, %and8.i.9.4
  %add10.i.9.4 = add nuw nsw i64 %add.i.9.4, %and9.i.9.4
  %shr11.i.9.4 = lshr i64 %add10.i.9.4, 32
  %shl.i.9.4 = shl i64 %add10.i.9.4, 32
  %xor68.i.9.4 = or i64 %shl.i.9.4, %and6.i.9.4
  %shr13.i.9.4 = lshr i64 %mul4.i.9.4, 32
  %shr14.i.9.4 = lshr i64 %mul3.i.9.4, 32
  %and15.i.9.4 = and i64 %mul5.i.9.4, 4294967295
  %add16.i.9.4 = add nuw nsw i64 %shr13.i.9.4, %shr14.i.9.4
  %add17.i.9.4 = add nuw nsw i64 %add16.i.9.4, %and15.i.9.4
  %add18.i.9.4 = add nuw nsw i64 %add17.i.9.4, %shr11.i.9.4
  %and19.i.9.4 = and i64 %add18.i.9.4, 4294967295
  %and21.i.9.4 = and i64 %add18.i.9.4, 30064771072
  %and22.i.9.4 = and i64 %mul5.i.9.4, -4294967296
  %add23.i.9.4 = add i64 %and21.i.9.4, %and22.i.9.4
  %xor2569.i.9.4 = or i64 %add23.i.9.4, %and19.i.9.4
  %add16.9.4 = add i64 %xor68.i.9.4, %add16.9.3
  %xor.i315.9.4 = xor i64 %add16.9.4, %shl.i.9.4
  %xor1.i316.9.4 = xor i64 %shl.i.9.4, %add16.9.3
  %or.i317.9.4 = or i64 %xor.i315.9.4, %xor1.i316.9.4
  %xor2.i318.9.4 = xor i64 %or.i317.9.4, %add16.9.4
  %shr.i319.9.4 = lshr i64 %xor2.i318.9.4, 63
  %add20.9.4 = add i64 %shr.i319.9.4, %xor2569.i.9.4
  %add21.9.4 = add i64 %add20.9.4, %add21.9.3
  %85 = xor i64 %add20.9.4, -9223372036854775808
  %xor2.i312.9.4 = and i64 %85, %add23.i.9.4
  %xor.i303.9.4 = xor i64 %add21.9.4, %add20.9.4
  %xor1.i304.9.4 = xor i64 %add20.9.4, %add21.9.3
  %or.i305.9.4 = or i64 %xor.i303.9.4, %xor1.i304.9.4
  %xor2.i306.9.4 = xor i64 %or.i305.9.4, %add21.9.4
  %shr.i313328.9.4 = or i64 %xor2.i306.9.4, %xor2.i312.9.4
  %or25327.9.4 = lshr i64 %shr.i313328.9.4, 63
  %add27.9.4 = add i64 %or25327.9.4, %add27.9.3
  %arrayidx9.9.5 = getelementptr inbounds i64, i64* %mc, i64 5
  %86 = load i64, i64* %arrayidx9.9.5, align 8, !tbaa !3
  %87 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 4), align 16, !tbaa !3
  %and.i.9.5 = and i64 %86, 4294967295
  %shr.i.9.5 = lshr i64 %86, 32
  %and1.i.9.5 = and i64 %87, 4294967295
  %shr2.i.9.5 = lshr i64 %87, 32
  %mul.i.9.5 = mul nuw i64 %and1.i.9.5, %and.i.9.5
  %mul3.i.9.5 = mul nuw i64 %shr2.i.9.5, %and.i.9.5
  %mul4.i.9.5 = mul nuw i64 %and1.i.9.5, %shr.i.9.5
  %mul5.i.9.5 = mul nuw i64 %shr2.i.9.5, %shr.i.9.5
  %and6.i.9.5 = and i64 %mul.i.9.5, 4294967295
  %shr7.i.9.5 = lshr i64 %mul.i.9.5, 32
  %and8.i.9.5 = and i64 %mul4.i.9.5, 4294967295
  %and9.i.9.5 = and i64 %mul3.i.9.5, 4294967295
  %add.i.9.5 = add nuw nsw i64 %shr7.i.9.5, %and8.i.9.5
  %add10.i.9.5 = add nuw nsw i64 %add.i.9.5, %and9.i.9.5
  %shr11.i.9.5 = lshr i64 %add10.i.9.5, 32
  %shl.i.9.5 = shl i64 %add10.i.9.5, 32
  %xor68.i.9.5 = or i64 %shl.i.9.5, %and6.i.9.5
  %shr13.i.9.5 = lshr i64 %mul4.i.9.5, 32
  %shr14.i.9.5 = lshr i64 %mul3.i.9.5, 32
  %and15.i.9.5 = and i64 %mul5.i.9.5, 4294967295
  %add16.i.9.5 = add nuw nsw i64 %shr13.i.9.5, %shr14.i.9.5
  %add17.i.9.5 = add nuw nsw i64 %add16.i.9.5, %and15.i.9.5
  %add18.i.9.5 = add nuw nsw i64 %add17.i.9.5, %shr11.i.9.5
  %and19.i.9.5 = and i64 %add18.i.9.5, 4294967295
  %and21.i.9.5 = and i64 %add18.i.9.5, 30064771072
  %and22.i.9.5 = and i64 %mul5.i.9.5, -4294967296
  %add23.i.9.5 = add i64 %and21.i.9.5, %and22.i.9.5
  %xor2569.i.9.5 = or i64 %add23.i.9.5, %and19.i.9.5
  %add16.9.5 = add i64 %xor68.i.9.5, %add16.9.4
  %xor.i315.9.5 = xor i64 %add16.9.5, %shl.i.9.5
  %xor1.i316.9.5 = xor i64 %shl.i.9.5, %add16.9.4
  %or.i317.9.5 = or i64 %xor.i315.9.5, %xor1.i316.9.5
  %xor2.i318.9.5 = xor i64 %or.i317.9.5, %add16.9.5
  %shr.i319.9.5 = lshr i64 %xor2.i318.9.5, 63
  %add20.9.5 = add i64 %shr.i319.9.5, %xor2569.i.9.5
  %add21.9.5 = add i64 %add20.9.5, %add21.9.4
  %88 = xor i64 %add20.9.5, -9223372036854775808
  %xor2.i312.9.5 = and i64 %88, %add23.i.9.5
  %xor.i303.9.5 = xor i64 %add21.9.5, %add20.9.5
  %xor1.i304.9.5 = xor i64 %add20.9.5, %add21.9.4
  %or.i305.9.5 = or i64 %xor.i303.9.5, %xor1.i304.9.5
  %xor2.i306.9.5 = xor i64 %or.i305.9.5, %add21.9.5
  %shr.i313328.9.5 = or i64 %xor2.i306.9.5, %xor2.i312.9.5
  %or25327.9.5 = lshr i64 %shr.i313328.9.5, 63
  %add27.9.5 = add i64 %or25327.9.5, %add27.9.4
  %arrayidx34.9 = getelementptr inbounds i64, i64* %ma, i64 9
  %89 = load i64, i64* %arrayidx34.9, align 8, !tbaa !3
  %add35.9 = add i64 %89, %add16.9.5
  %xor.i297.9 = xor i64 %add35.9, %add16.9.5
  %xor1.i298.9 = xor i64 %89, %add16.9.5
  %or.i299.9 = or i64 %xor.i297.9, %xor1.i298.9
  %xor2.i300.9 = xor i64 %or.i299.9, %add35.9
  %shr.i301.9 = lshr i64 %xor2.i300.9, 63
  %add41.9 = add i64 %shr.i301.9, %add21.9.5
  %arrayidx50.9 = getelementptr inbounds i64, i64* %mc, i64 9
  store i64 %add35.9, i64* %arrayidx50.9, align 8, !tbaa !3
  %90 = xor i64 %add41.9, -9223372036854775808
  %xor2.i294.9 = and i64 %90, %add21.9.5
  %shr.i295.9 = lshr i64 %xor2.i294.9, 63
  %add48.9 = add i64 %shr.i295.9, %add27.9.5
  %arrayidx74 = getelementptr inbounds i64, i64* %mc, i64 1
  %91 = load i64, i64* %arrayidx74, align 8, !tbaa !3
  %92 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 9), align 8, !tbaa !3
  %and.i262 = and i64 %91, 4294967295
  %shr.i263 = lshr i64 %91, 32
  %and1.i264 = and i64 %92, 4294967295
  %shr2.i265 = lshr i64 %92, 32
  %mul.i266 = mul nuw i64 %and1.i264, %and.i262
  %mul3.i267 = mul nuw i64 %shr2.i265, %and.i262
  %mul4.i268 = mul nuw i64 %and1.i264, %shr.i263
  %mul5.i269 = mul nuw i64 %shr2.i265, %shr.i263
  %and6.i270 = and i64 %mul.i266, 4294967295
  %shr7.i271 = lshr i64 %mul.i266, 32
  %and8.i272 = and i64 %mul4.i268, 4294967295
  %and9.i273 = and i64 %mul3.i267, 4294967295
  %add.i274 = add nuw nsw i64 %shr7.i271, %and8.i272
  %add10.i275 = add nuw nsw i64 %add.i274, %and9.i273
  %shr11.i276 = lshr i64 %add10.i275, 32
  %shl.i277 = shl i64 %add10.i275, 32
  %xor68.i278 = or i64 %shl.i277, %and6.i270
  %shr13.i279 = lshr i64 %mul4.i268, 32
  %shr14.i280 = lshr i64 %mul3.i267, 32
  %and15.i281 = and i64 %mul5.i269, 4294967295
  %add16.i282 = add nuw nsw i64 %shr13.i279, %shr14.i280
  %add17.i283 = add nuw nsw i64 %add16.i282, %and15.i281
  %add18.i284 = add nuw nsw i64 %add17.i283, %shr11.i276
  %and19.i285 = and i64 %add18.i284, 4294967295
  %and21.i287 = and i64 %add18.i284, 30064771072
  %and22.i288 = and i64 %mul5.i269, -4294967296
  %add23.i289 = add i64 %and21.i287, %and22.i288
  %xor2569.i290 = or i64 %add23.i289, %and19.i285
  %add82 = add i64 %xor68.i278, %add41.9
  %xor.i256 = xor i64 %add82, %shl.i277
  %xor1.i257 = xor i64 %shl.i277, %add41.9
  %or.i258 = or i64 %xor.i256, %xor1.i257
  %xor2.i259 = xor i64 %or.i258, %add82
  %shr.i260 = lshr i64 %xor2.i259, 63
  %add89 = add i64 %shr.i260, %xor2569.i290
  %add90 = add i64 %add89, %add48.9
  %93 = xor i64 %add89, -9223372036854775808
  %xor2.i253 = and i64 %93, %add23.i289
  %xor.i244 = xor i64 %add90, %add89
  %xor1.i245 = xor i64 %add89, %add48.9
  %or.i246 = or i64 %xor.i244, %xor1.i245
  %xor2.i247 = xor i64 %or.i246, %add90
  %shr.i254326 = or i64 %xor2.i247, %xor2.i253
  %or94325 = lshr i64 %shr.i254326, 63
  %arrayidx74.1372 = getelementptr inbounds i64, i64* %mc, i64 2
  %94 = load i64, i64* %arrayidx74.1372, align 8, !tbaa !3
  %95 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 8), align 16, !tbaa !3
  %and.i262.1373 = and i64 %94, 4294967295
  %shr.i263.1374 = lshr i64 %94, 32
  %and1.i264.1375 = and i64 %95, 4294967295
  %shr2.i265.1376 = lshr i64 %95, 32
  %mul.i266.1377 = mul nuw i64 %and1.i264.1375, %and.i262.1373
  %mul3.i267.1378 = mul nuw i64 %shr2.i265.1376, %and.i262.1373
  %mul4.i268.1379 = mul nuw i64 %and1.i264.1375, %shr.i263.1374
  %mul5.i269.1380 = mul nuw i64 %shr2.i265.1376, %shr.i263.1374
  %and6.i270.1381 = and i64 %mul.i266.1377, 4294967295
  %shr7.i271.1382 = lshr i64 %mul.i266.1377, 32
  %and8.i272.1383 = and i64 %mul4.i268.1379, 4294967295
  %and9.i273.1384 = and i64 %mul3.i267.1378, 4294967295
  %add.i274.1385 = add nuw nsw i64 %shr7.i271.1382, %and8.i272.1383
  %add10.i275.1386 = add nuw nsw i64 %add.i274.1385, %and9.i273.1384
  %shr11.i276.1387 = lshr i64 %add10.i275.1386, 32
  %shl.i277.1388 = shl i64 %add10.i275.1386, 32
  %xor68.i278.1389 = or i64 %shl.i277.1388, %and6.i270.1381
  %shr13.i279.1390 = lshr i64 %mul4.i268.1379, 32
  %shr14.i280.1391 = lshr i64 %mul3.i267.1378, 32
  %and15.i281.1392 = and i64 %mul5.i269.1380, 4294967295
  %add16.i282.1393 = add nuw nsw i64 %shr13.i279.1390, %shr14.i280.1391
  %add17.i283.1394 = add nuw nsw i64 %add16.i282.1393, %and15.i281.1392
  %add18.i284.1395 = add nuw nsw i64 %add17.i283.1394, %shr11.i276.1387
  %and19.i285.1396 = and i64 %add18.i284.1395, 4294967295
  %and21.i287.1397 = and i64 %add18.i284.1395, 30064771072
  %and22.i288.1398 = and i64 %mul5.i269.1380, -4294967296
  %add23.i289.1399 = add i64 %and21.i287.1397, %and22.i288.1398
  %xor2569.i290.1400 = or i64 %add23.i289.1399, %and19.i285.1396
  %add82.1401 = add i64 %xor68.i278.1389, %add82
  %xor.i256.1402 = xor i64 %add82.1401, %shl.i277.1388
  %xor1.i257.1403 = xor i64 %shl.i277.1388, %add82
  %or.i258.1404 = or i64 %xor.i256.1402, %xor1.i257.1403
  %xor2.i259.1405 = xor i64 %or.i258.1404, %add82.1401
  %shr.i260.1406 = lshr i64 %xor2.i259.1405, 63
  %add89.1407 = add i64 %shr.i260.1406, %xor2569.i290.1400
  %add90.1408 = add i64 %add89.1407, %add90
  %96 = xor i64 %add89.1407, -9223372036854775808
  %xor2.i253.1409 = and i64 %96, %add23.i289.1399
  %xor.i244.1410 = xor i64 %add90.1408, %add89.1407
  %xor1.i245.1411 = xor i64 %add89.1407, %add90
  %or.i246.1412 = or i64 %xor.i244.1410, %xor1.i245.1411
  %xor2.i247.1413 = xor i64 %or.i246.1412, %add90.1408
  %shr.i254326.1414 = or i64 %xor2.i247.1413, %xor2.i253.1409
  %or94325.1415 = lshr i64 %shr.i254326.1414, 63
  %add96.1 = add nuw nsw i64 %or94325.1415, %or94325
  %arrayidx74.2422 = getelementptr inbounds i64, i64* %mc, i64 3
  %97 = load i64, i64* %arrayidx74.2422, align 8, !tbaa !3
  %98 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 7), align 8, !tbaa !3
  %and.i262.2423 = and i64 %97, 4294967295
  %shr.i263.2424 = lshr i64 %97, 32
  %and1.i264.2425 = and i64 %98, 4294967295
  %shr2.i265.2426 = lshr i64 %98, 32
  %mul.i266.2427 = mul nuw i64 %and1.i264.2425, %and.i262.2423
  %mul3.i267.2428 = mul nuw i64 %shr2.i265.2426, %and.i262.2423
  %mul4.i268.2429 = mul nuw i64 %and1.i264.2425, %shr.i263.2424
  %mul5.i269.2430 = mul nuw i64 %shr2.i265.2426, %shr.i263.2424
  %and6.i270.2431 = and i64 %mul.i266.2427, 4294967295
  %shr7.i271.2432 = lshr i64 %mul.i266.2427, 32
  %and8.i272.2433 = and i64 %mul4.i268.2429, 4294967295
  %and9.i273.2434 = and i64 %mul3.i267.2428, 4294967295
  %add.i274.2435 = add nuw nsw i64 %shr7.i271.2432, %and8.i272.2433
  %add10.i275.2436 = add nuw nsw i64 %add.i274.2435, %and9.i273.2434
  %shr11.i276.2437 = lshr i64 %add10.i275.2436, 32
  %shl.i277.2438 = shl i64 %add10.i275.2436, 32
  %xor68.i278.2439 = or i64 %shl.i277.2438, %and6.i270.2431
  %shr13.i279.2440 = lshr i64 %mul4.i268.2429, 32
  %shr14.i280.2441 = lshr i64 %mul3.i267.2428, 32
  %and15.i281.2442 = and i64 %mul5.i269.2430, 4294967295
  %add16.i282.2443 = add nuw nsw i64 %shr13.i279.2440, %shr14.i280.2441
  %add17.i283.2444 = add nuw nsw i64 %add16.i282.2443, %and15.i281.2442
  %add18.i284.2445 = add nuw nsw i64 %add17.i283.2444, %shr11.i276.2437
  %and19.i285.2446 = and i64 %add18.i284.2445, 4294967295
  %and21.i287.2447 = and i64 %add18.i284.2445, 30064771072
  %and22.i288.2448 = and i64 %mul5.i269.2430, -4294967296
  %add23.i289.2449 = add i64 %and21.i287.2447, %and22.i288.2448
  %xor2569.i290.2450 = or i64 %add23.i289.2449, %and19.i285.2446
  %add82.2451 = add i64 %xor68.i278.2439, %add82.1401
  %xor.i256.2452 = xor i64 %add82.2451, %shl.i277.2438
  %xor1.i257.2453 = xor i64 %shl.i277.2438, %add82.1401
  %or.i258.2454 = or i64 %xor.i256.2452, %xor1.i257.2453
  %xor2.i259.2455 = xor i64 %or.i258.2454, %add82.2451
  %shr.i260.2456 = lshr i64 %xor2.i259.2455, 63
  %add89.2457 = add i64 %shr.i260.2456, %xor2569.i290.2450
  %add90.2458 = add i64 %add89.2457, %add90.1408
  %99 = xor i64 %add89.2457, -9223372036854775808
  %xor2.i253.2459 = and i64 %99, %add23.i289.2449
  %xor.i244.2460 = xor i64 %add90.2458, %add89.2457
  %xor1.i245.2461 = xor i64 %add89.2457, %add90.1408
  %or.i246.2462 = or i64 %xor.i244.2460, %xor1.i245.2461
  %xor2.i247.2463 = xor i64 %or.i246.2462, %add90.2458
  %shr.i254326.2464 = or i64 %xor2.i247.2463, %xor2.i253.2459
  %or94325.2465 = lshr i64 %shr.i254326.2464, 63
  %add96.2 = add nsw i64 %or94325.2465, %add96.1
  %arrayidx74.3472 = getelementptr inbounds i64, i64* %mc, i64 4
  %100 = load i64, i64* %arrayidx74.3472, align 8, !tbaa !3
  %101 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 6), align 16, !tbaa !3
  %and.i262.3473 = and i64 %100, 4294967295
  %shr.i263.3474 = lshr i64 %100, 32
  %and1.i264.3475 = and i64 %101, 4294967295
  %shr2.i265.3476 = lshr i64 %101, 32
  %mul.i266.3477 = mul nuw i64 %and1.i264.3475, %and.i262.3473
  %mul3.i267.3478 = mul nuw i64 %shr2.i265.3476, %and.i262.3473
  %mul4.i268.3479 = mul nuw i64 %and1.i264.3475, %shr.i263.3474
  %mul5.i269.3480 = mul nuw i64 %shr2.i265.3476, %shr.i263.3474
  %and6.i270.3481 = and i64 %mul.i266.3477, 4294967295
  %shr7.i271.3482 = lshr i64 %mul.i266.3477, 32
  %and8.i272.3483 = and i64 %mul4.i268.3479, 4294967295
  %and9.i273.3484 = and i64 %mul3.i267.3478, 4294967295
  %add.i274.3485 = add nuw nsw i64 %shr7.i271.3482, %and8.i272.3483
  %add10.i275.3486 = add nuw nsw i64 %add.i274.3485, %and9.i273.3484
  %shr11.i276.3487 = lshr i64 %add10.i275.3486, 32
  %shl.i277.3488 = shl i64 %add10.i275.3486, 32
  %xor68.i278.3489 = or i64 %shl.i277.3488, %and6.i270.3481
  %shr13.i279.3490 = lshr i64 %mul4.i268.3479, 32
  %shr14.i280.3491 = lshr i64 %mul3.i267.3478, 32
  %and15.i281.3492 = and i64 %mul5.i269.3480, 4294967295
  %add16.i282.3493 = add nuw nsw i64 %shr13.i279.3490, %shr14.i280.3491
  %add17.i283.3494 = add nuw nsw i64 %add16.i282.3493, %and15.i281.3492
  %add18.i284.3495 = add nuw nsw i64 %add17.i283.3494, %shr11.i276.3487
  %and19.i285.3496 = and i64 %add18.i284.3495, 4294967295
  %and21.i287.3497 = and i64 %add18.i284.3495, 30064771072
  %and22.i288.3498 = and i64 %mul5.i269.3480, -4294967296
  %add23.i289.3499 = add i64 %and21.i287.3497, %and22.i288.3498
  %xor2569.i290.3500 = or i64 %add23.i289.3499, %and19.i285.3496
  %add82.3501 = add i64 %xor68.i278.3489, %add82.2451
  %xor.i256.3502 = xor i64 %add82.3501, %shl.i277.3488
  %xor1.i257.3503 = xor i64 %shl.i277.3488, %add82.2451
  %or.i258.3504 = or i64 %xor.i256.3502, %xor1.i257.3503
  %xor2.i259.3505 = xor i64 %or.i258.3504, %add82.3501
  %shr.i260.3506 = lshr i64 %xor2.i259.3505, 63
  %add89.3507 = add i64 %shr.i260.3506, %xor2569.i290.3500
  %add90.3508 = add i64 %add89.3507, %add90.2458
  %102 = xor i64 %add89.3507, -9223372036854775808
  %xor2.i253.3509 = and i64 %102, %add23.i289.3499
  %xor.i244.3510 = xor i64 %add90.3508, %add89.3507
  %xor1.i245.3511 = xor i64 %add89.3507, %add90.2458
  %or.i246.3512 = or i64 %xor.i244.3510, %xor1.i245.3511
  %xor2.i247.3513 = xor i64 %or.i246.3512, %add90.3508
  %shr.i254326.3514 = or i64 %xor2.i247.3513, %xor2.i253.3509
  %or94325.3515 = lshr i64 %shr.i254326.3514, 63
  %add96.3 = add nsw i64 %or94325.3515, %add96.2
  %arrayidx74.4522 = getelementptr inbounds i64, i64* %mc, i64 5
  %103 = load i64, i64* %arrayidx74.4522, align 8, !tbaa !3
  %104 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 5), align 8, !tbaa !3
  %and.i262.4523 = and i64 %103, 4294967295
  %shr.i263.4524 = lshr i64 %103, 32
  %and1.i264.4525 = and i64 %104, 4294967295
  %shr2.i265.4526 = lshr i64 %104, 32
  %mul.i266.4527 = mul nuw i64 %and1.i264.4525, %and.i262.4523
  %mul3.i267.4528 = mul nuw i64 %shr2.i265.4526, %and.i262.4523
  %mul4.i268.4529 = mul nuw i64 %and1.i264.4525, %shr.i263.4524
  %mul5.i269.4530 = mul nuw i64 %shr2.i265.4526, %shr.i263.4524
  %and6.i270.4531 = and i64 %mul.i266.4527, 4294967295
  %shr7.i271.4532 = lshr i64 %mul.i266.4527, 32
  %and8.i272.4533 = and i64 %mul4.i268.4529, 4294967295
  %and9.i273.4534 = and i64 %mul3.i267.4528, 4294967295
  %add.i274.4535 = add nuw nsw i64 %shr7.i271.4532, %and8.i272.4533
  %add10.i275.4536 = add nuw nsw i64 %add.i274.4535, %and9.i273.4534
  %shr11.i276.4537 = lshr i64 %add10.i275.4536, 32
  %shl.i277.4538 = shl i64 %add10.i275.4536, 32
  %xor68.i278.4539 = or i64 %shl.i277.4538, %and6.i270.4531
  %shr13.i279.4540 = lshr i64 %mul4.i268.4529, 32
  %shr14.i280.4541 = lshr i64 %mul3.i267.4528, 32
  %and15.i281.4542 = and i64 %mul5.i269.4530, 4294967295
  %add16.i282.4543 = add nuw nsw i64 %shr13.i279.4540, %shr14.i280.4541
  %add17.i283.4544 = add nuw nsw i64 %add16.i282.4543, %and15.i281.4542
  %add18.i284.4545 = add nuw nsw i64 %add17.i283.4544, %shr11.i276.4537
  %and19.i285.4546 = and i64 %add18.i284.4545, 4294967295
  %and21.i287.4547 = and i64 %add18.i284.4545, 30064771072
  %and22.i288.4548 = and i64 %mul5.i269.4530, -4294967296
  %add23.i289.4549 = add i64 %and21.i287.4547, %and22.i288.4548
  %xor2569.i290.4550 = or i64 %add23.i289.4549, %and19.i285.4546
  %add82.4551 = add i64 %xor68.i278.4539, %add82.3501
  %xor.i256.4552 = xor i64 %add82.4551, %shl.i277.4538
  %xor1.i257.4553 = xor i64 %shl.i277.4538, %add82.3501
  %or.i258.4554 = or i64 %xor.i256.4552, %xor1.i257.4553
  %xor2.i259.4555 = xor i64 %or.i258.4554, %add82.4551
  %shr.i260.4556 = lshr i64 %xor2.i259.4555, 63
  %add89.4557 = add i64 %shr.i260.4556, %xor2569.i290.4550
  %add90.4558 = add i64 %add89.4557, %add90.3508
  %105 = xor i64 %add89.4557, -9223372036854775808
  %xor2.i253.4559 = and i64 %105, %add23.i289.4549
  %xor.i244.4560 = xor i64 %add90.4558, %add89.4557
  %xor1.i245.4561 = xor i64 %add89.4557, %add90.3508
  %or.i246.4562 = or i64 %xor.i244.4560, %xor1.i245.4561
  %xor2.i247.4563 = xor i64 %or.i246.4562, %add90.4558
  %shr.i254326.4564 = or i64 %xor2.i247.4563, %xor2.i253.4559
  %or94325.4565 = lshr i64 %shr.i254326.4564, 63
  %add96.4 = add i64 %or94325.4565, %add96.3
  %arrayidx74.5572 = getelementptr inbounds i64, i64* %mc, i64 6
  %106 = load i64, i64* %arrayidx74.5572, align 8, !tbaa !3
  %107 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 4), align 16, !tbaa !3
  %and.i262.5573 = and i64 %106, 4294967295
  %shr.i263.5574 = lshr i64 %106, 32
  %and1.i264.5575 = and i64 %107, 4294967295
  %shr2.i265.5576 = lshr i64 %107, 32
  %mul.i266.5577 = mul nuw i64 %and1.i264.5575, %and.i262.5573
  %mul3.i267.5578 = mul nuw i64 %shr2.i265.5576, %and.i262.5573
  %mul4.i268.5579 = mul nuw i64 %and1.i264.5575, %shr.i263.5574
  %mul5.i269.5580 = mul nuw i64 %shr2.i265.5576, %shr.i263.5574
  %and6.i270.5581 = and i64 %mul.i266.5577, 4294967295
  %shr7.i271.5582 = lshr i64 %mul.i266.5577, 32
  %and8.i272.5583 = and i64 %mul4.i268.5579, 4294967295
  %and9.i273.5584 = and i64 %mul3.i267.5578, 4294967295
  %add.i274.5585 = add nuw nsw i64 %shr7.i271.5582, %and8.i272.5583
  %add10.i275.5586 = add nuw nsw i64 %add.i274.5585, %and9.i273.5584
  %shr11.i276.5587 = lshr i64 %add10.i275.5586, 32
  %shl.i277.5588 = shl i64 %add10.i275.5586, 32
  %xor68.i278.5589 = or i64 %shl.i277.5588, %and6.i270.5581
  %shr13.i279.5590 = lshr i64 %mul4.i268.5579, 32
  %shr14.i280.5591 = lshr i64 %mul3.i267.5578, 32
  %and15.i281.5592 = and i64 %mul5.i269.5580, 4294967295
  %add16.i282.5593 = add nuw nsw i64 %shr13.i279.5590, %shr14.i280.5591
  %add17.i283.5594 = add nuw nsw i64 %add16.i282.5593, %and15.i281.5592
  %add18.i284.5595 = add nuw nsw i64 %add17.i283.5594, %shr11.i276.5587
  %and19.i285.5596 = and i64 %add18.i284.5595, 4294967295
  %and21.i287.5597 = and i64 %add18.i284.5595, 30064771072
  %and22.i288.5598 = and i64 %mul5.i269.5580, -4294967296
  %add23.i289.5599 = add i64 %and21.i287.5597, %and22.i288.5598
  %xor2569.i290.5600 = or i64 %add23.i289.5599, %and19.i285.5596
  %add82.5601 = add i64 %xor68.i278.5589, %add82.4551
  %xor.i256.5602 = xor i64 %add82.5601, %shl.i277.5588
  %xor1.i257.5603 = xor i64 %shl.i277.5588, %add82.4551
  %or.i258.5604 = or i64 %xor.i256.5602, %xor1.i257.5603
  %xor2.i259.5605 = xor i64 %or.i258.5604, %add82.5601
  %shr.i260.5606 = lshr i64 %xor2.i259.5605, 63
  %add89.5607 = add i64 %shr.i260.5606, %xor2569.i290.5600
  %add90.5608 = add i64 %add89.5607, %add90.4558
  %108 = xor i64 %add89.5607, -9223372036854775808
  %xor2.i253.5609 = and i64 %108, %add23.i289.5599
  %xor.i244.5610 = xor i64 %add90.5608, %add89.5607
  %xor1.i245.5611 = xor i64 %add89.5607, %add90.4558
  %or.i246.5612 = or i64 %xor.i244.5610, %xor1.i245.5611
  %xor2.i247.5613 = xor i64 %or.i246.5612, %add90.5608
  %shr.i254326.5614 = or i64 %xor2.i247.5613, %xor2.i253.5609
  %or94325.5615 = lshr i64 %shr.i254326.5614, 63
  %add96.5 = add i64 %or94325.5615, %add96.4
  %arrayidx104 = getelementptr inbounds i64, i64* %ma, i64 10
  %109 = load i64, i64* %arrayidx104, align 8, !tbaa !3
  %add105 = add i64 %109, %add82.5601
  %xor.i238 = xor i64 %add105, %add82.5601
  %xor1.i239 = xor i64 %109, %add82.5601
  %or.i240 = or i64 %xor.i238, %xor1.i239
  %xor2.i241 = xor i64 %or.i240, %add105
  %shr.i242 = lshr i64 %xor2.i241, 63
  %add111 = add i64 %shr.i242, %add90.5608
  store i64 %add105, i64* %mc, align 8, !tbaa !3
  %110 = xor i64 %add111, -9223372036854775808
  %xor2.i = and i64 %110, %add90.5608
  %shr.i237 = lshr i64 %xor2.i, 63
  %add118 = add i64 %shr.i237, %add96.5
  %arrayidx74.1 = getelementptr inbounds i64, i64* %mc, i64 2
  %111 = load i64, i64* %arrayidx74.1, align 8, !tbaa !3
  %112 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 9), align 8, !tbaa !3
  %and.i262.1 = and i64 %111, 4294967295
  %shr.i263.1 = lshr i64 %111, 32
  %and1.i264.1 = and i64 %112, 4294967295
  %shr2.i265.1 = lshr i64 %112, 32
  %mul.i266.1 = mul nuw i64 %and1.i264.1, %and.i262.1
  %mul3.i267.1 = mul nuw i64 %shr2.i265.1, %and.i262.1
  %mul4.i268.1 = mul nuw i64 %and1.i264.1, %shr.i263.1
  %mul5.i269.1 = mul nuw i64 %shr2.i265.1, %shr.i263.1
  %and6.i270.1 = and i64 %mul.i266.1, 4294967295
  %shr7.i271.1 = lshr i64 %mul.i266.1, 32
  %and8.i272.1 = and i64 %mul4.i268.1, 4294967295
  %and9.i273.1 = and i64 %mul3.i267.1, 4294967295
  %add.i274.1 = add nuw nsw i64 %shr7.i271.1, %and8.i272.1
  %add10.i275.1 = add nuw nsw i64 %add.i274.1, %and9.i273.1
  %shr11.i276.1 = lshr i64 %add10.i275.1, 32
  %shl.i277.1 = shl i64 %add10.i275.1, 32
  %xor68.i278.1 = or i64 %shl.i277.1, %and6.i270.1
  %shr13.i279.1 = lshr i64 %mul4.i268.1, 32
  %shr14.i280.1 = lshr i64 %mul3.i267.1, 32
  %and15.i281.1 = and i64 %mul5.i269.1, 4294967295
  %add16.i282.1 = add nuw nsw i64 %shr13.i279.1, %shr14.i280.1
  %add17.i283.1 = add nuw nsw i64 %add16.i282.1, %and15.i281.1
  %add18.i284.1 = add nuw nsw i64 %add17.i283.1, %shr11.i276.1
  %and19.i285.1 = and i64 %add18.i284.1, 4294967295
  %and21.i287.1 = and i64 %add18.i284.1, 30064771072
  %and22.i288.1 = and i64 %mul5.i269.1, -4294967296
  %add23.i289.1 = add i64 %and21.i287.1, %and22.i288.1
  %xor2569.i290.1 = or i64 %add23.i289.1, %and19.i285.1
  %add82.1 = add i64 %xor68.i278.1, %add111
  %xor.i256.1 = xor i64 %add82.1, %shl.i277.1
  %xor1.i257.1 = xor i64 %shl.i277.1, %add111
  %or.i258.1 = or i64 %xor.i256.1, %xor1.i257.1
  %xor2.i259.1 = xor i64 %or.i258.1, %add82.1
  %shr.i260.1 = lshr i64 %xor2.i259.1, 63
  %add89.1 = add i64 %shr.i260.1, %xor2569.i290.1
  %add90.1 = add i64 %add89.1, %add118
  %113 = xor i64 %add89.1, -9223372036854775808
  %xor2.i253.1 = and i64 %113, %add23.i289.1
  %xor.i244.1 = xor i64 %add90.1, %add89.1
  %xor1.i245.1 = xor i64 %add89.1, %add118
  %or.i246.1 = or i64 %xor.i244.1, %xor1.i245.1
  %xor2.i247.1 = xor i64 %or.i246.1, %add90.1
  %shr.i254326.1 = or i64 %xor2.i247.1, %xor2.i253.1
  %or94325.1 = lshr i64 %shr.i254326.1, 63
  %arrayidx74.1.1 = getelementptr inbounds i64, i64* %mc, i64 3
  %114 = load i64, i64* %arrayidx74.1.1, align 8, !tbaa !3
  %115 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 8), align 16, !tbaa !3
  %and.i262.1.1 = and i64 %114, 4294967295
  %shr.i263.1.1 = lshr i64 %114, 32
  %and1.i264.1.1 = and i64 %115, 4294967295
  %shr2.i265.1.1 = lshr i64 %115, 32
  %mul.i266.1.1 = mul nuw i64 %and1.i264.1.1, %and.i262.1.1
  %mul3.i267.1.1 = mul nuw i64 %shr2.i265.1.1, %and.i262.1.1
  %mul4.i268.1.1 = mul nuw i64 %and1.i264.1.1, %shr.i263.1.1
  %mul5.i269.1.1 = mul nuw i64 %shr2.i265.1.1, %shr.i263.1.1
  %and6.i270.1.1 = and i64 %mul.i266.1.1, 4294967295
  %shr7.i271.1.1 = lshr i64 %mul.i266.1.1, 32
  %and8.i272.1.1 = and i64 %mul4.i268.1.1, 4294967295
  %and9.i273.1.1 = and i64 %mul3.i267.1.1, 4294967295
  %add.i274.1.1 = add nuw nsw i64 %shr7.i271.1.1, %and8.i272.1.1
  %add10.i275.1.1 = add nuw nsw i64 %add.i274.1.1, %and9.i273.1.1
  %shr11.i276.1.1 = lshr i64 %add10.i275.1.1, 32
  %shl.i277.1.1 = shl i64 %add10.i275.1.1, 32
  %xor68.i278.1.1 = or i64 %shl.i277.1.1, %and6.i270.1.1
  %shr13.i279.1.1 = lshr i64 %mul4.i268.1.1, 32
  %shr14.i280.1.1 = lshr i64 %mul3.i267.1.1, 32
  %and15.i281.1.1 = and i64 %mul5.i269.1.1, 4294967295
  %add16.i282.1.1 = add nuw nsw i64 %shr13.i279.1.1, %shr14.i280.1.1
  %add17.i283.1.1 = add nuw nsw i64 %add16.i282.1.1, %and15.i281.1.1
  %add18.i284.1.1 = add nuw nsw i64 %add17.i283.1.1, %shr11.i276.1.1
  %and19.i285.1.1 = and i64 %add18.i284.1.1, 4294967295
  %and21.i287.1.1 = and i64 %add18.i284.1.1, 30064771072
  %and22.i288.1.1 = and i64 %mul5.i269.1.1, -4294967296
  %add23.i289.1.1 = add i64 %and21.i287.1.1, %and22.i288.1.1
  %xor2569.i290.1.1 = or i64 %add23.i289.1.1, %and19.i285.1.1
  %add82.1.1 = add i64 %xor68.i278.1.1, %add82.1
  %xor.i256.1.1 = xor i64 %add82.1.1, %shl.i277.1.1
  %xor1.i257.1.1 = xor i64 %shl.i277.1.1, %add82.1
  %or.i258.1.1 = or i64 %xor.i256.1.1, %xor1.i257.1.1
  %xor2.i259.1.1 = xor i64 %or.i258.1.1, %add82.1.1
  %shr.i260.1.1 = lshr i64 %xor2.i259.1.1, 63
  %add89.1.1 = add i64 %shr.i260.1.1, %xor2569.i290.1.1
  %add90.1.1 = add i64 %add89.1.1, %add90.1
  %116 = xor i64 %add89.1.1, -9223372036854775808
  %xor2.i253.1.1 = and i64 %116, %add23.i289.1.1
  %xor.i244.1.1 = xor i64 %add90.1.1, %add89.1.1
  %xor1.i245.1.1 = xor i64 %add89.1.1, %add90.1
  %or.i246.1.1 = or i64 %xor.i244.1.1, %xor1.i245.1.1
  %xor2.i247.1.1 = xor i64 %or.i246.1.1, %add90.1.1
  %shr.i254326.1.1 = or i64 %xor2.i247.1.1, %xor2.i253.1.1
  %or94325.1.1 = lshr i64 %shr.i254326.1.1, 63
  %add96.1.1 = add nuw nsw i64 %or94325.1.1, %or94325.1
  %arrayidx74.1.2 = getelementptr inbounds i64, i64* %mc, i64 4
  %117 = load i64, i64* %arrayidx74.1.2, align 8, !tbaa !3
  %118 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 7), align 8, !tbaa !3
  %and.i262.1.2 = and i64 %117, 4294967295
  %shr.i263.1.2 = lshr i64 %117, 32
  %and1.i264.1.2 = and i64 %118, 4294967295
  %shr2.i265.1.2 = lshr i64 %118, 32
  %mul.i266.1.2 = mul nuw i64 %and1.i264.1.2, %and.i262.1.2
  %mul3.i267.1.2 = mul nuw i64 %shr2.i265.1.2, %and.i262.1.2
  %mul4.i268.1.2 = mul nuw i64 %and1.i264.1.2, %shr.i263.1.2
  %mul5.i269.1.2 = mul nuw i64 %shr2.i265.1.2, %shr.i263.1.2
  %and6.i270.1.2 = and i64 %mul.i266.1.2, 4294967295
  %shr7.i271.1.2 = lshr i64 %mul.i266.1.2, 32
  %and8.i272.1.2 = and i64 %mul4.i268.1.2, 4294967295
  %and9.i273.1.2 = and i64 %mul3.i267.1.2, 4294967295
  %add.i274.1.2 = add nuw nsw i64 %shr7.i271.1.2, %and8.i272.1.2
  %add10.i275.1.2 = add nuw nsw i64 %add.i274.1.2, %and9.i273.1.2
  %shr11.i276.1.2 = lshr i64 %add10.i275.1.2, 32
  %shl.i277.1.2 = shl i64 %add10.i275.1.2, 32
  %xor68.i278.1.2 = or i64 %shl.i277.1.2, %and6.i270.1.2
  %shr13.i279.1.2 = lshr i64 %mul4.i268.1.2, 32
  %shr14.i280.1.2 = lshr i64 %mul3.i267.1.2, 32
  %and15.i281.1.2 = and i64 %mul5.i269.1.2, 4294967295
  %add16.i282.1.2 = add nuw nsw i64 %shr13.i279.1.2, %shr14.i280.1.2
  %add17.i283.1.2 = add nuw nsw i64 %add16.i282.1.2, %and15.i281.1.2
  %add18.i284.1.2 = add nuw nsw i64 %add17.i283.1.2, %shr11.i276.1.2
  %and19.i285.1.2 = and i64 %add18.i284.1.2, 4294967295
  %and21.i287.1.2 = and i64 %add18.i284.1.2, 30064771072
  %and22.i288.1.2 = and i64 %mul5.i269.1.2, -4294967296
  %add23.i289.1.2 = add i64 %and21.i287.1.2, %and22.i288.1.2
  %xor2569.i290.1.2 = or i64 %add23.i289.1.2, %and19.i285.1.2
  %add82.1.2 = add i64 %xor68.i278.1.2, %add82.1.1
  %xor.i256.1.2 = xor i64 %add82.1.2, %shl.i277.1.2
  %xor1.i257.1.2 = xor i64 %shl.i277.1.2, %add82.1.1
  %or.i258.1.2 = or i64 %xor.i256.1.2, %xor1.i257.1.2
  %xor2.i259.1.2 = xor i64 %or.i258.1.2, %add82.1.2
  %shr.i260.1.2 = lshr i64 %xor2.i259.1.2, 63
  %add89.1.2 = add i64 %shr.i260.1.2, %xor2569.i290.1.2
  %add90.1.2 = add i64 %add89.1.2, %add90.1.1
  %119 = xor i64 %add89.1.2, -9223372036854775808
  %xor2.i253.1.2 = and i64 %119, %add23.i289.1.2
  %xor.i244.1.2 = xor i64 %add90.1.2, %add89.1.2
  %xor1.i245.1.2 = xor i64 %add89.1.2, %add90.1.1
  %or.i246.1.2 = or i64 %xor.i244.1.2, %xor1.i245.1.2
  %xor2.i247.1.2 = xor i64 %or.i246.1.2, %add90.1.2
  %shr.i254326.1.2 = or i64 %xor2.i247.1.2, %xor2.i253.1.2
  %or94325.1.2 = lshr i64 %shr.i254326.1.2, 63
  %add96.1.2 = add nsw i64 %or94325.1.2, %add96.1.1
  %arrayidx74.1.3 = getelementptr inbounds i64, i64* %mc, i64 5
  %120 = load i64, i64* %arrayidx74.1.3, align 8, !tbaa !3
  %121 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 6), align 16, !tbaa !3
  %and.i262.1.3 = and i64 %120, 4294967295
  %shr.i263.1.3 = lshr i64 %120, 32
  %and1.i264.1.3 = and i64 %121, 4294967295
  %shr2.i265.1.3 = lshr i64 %121, 32
  %mul.i266.1.3 = mul nuw i64 %and1.i264.1.3, %and.i262.1.3
  %mul3.i267.1.3 = mul nuw i64 %shr2.i265.1.3, %and.i262.1.3
  %mul4.i268.1.3 = mul nuw i64 %and1.i264.1.3, %shr.i263.1.3
  %mul5.i269.1.3 = mul nuw i64 %shr2.i265.1.3, %shr.i263.1.3
  %and6.i270.1.3 = and i64 %mul.i266.1.3, 4294967295
  %shr7.i271.1.3 = lshr i64 %mul.i266.1.3, 32
  %and8.i272.1.3 = and i64 %mul4.i268.1.3, 4294967295
  %and9.i273.1.3 = and i64 %mul3.i267.1.3, 4294967295
  %add.i274.1.3 = add nuw nsw i64 %shr7.i271.1.3, %and8.i272.1.3
  %add10.i275.1.3 = add nuw nsw i64 %add.i274.1.3, %and9.i273.1.3
  %shr11.i276.1.3 = lshr i64 %add10.i275.1.3, 32
  %shl.i277.1.3 = shl i64 %add10.i275.1.3, 32
  %xor68.i278.1.3 = or i64 %shl.i277.1.3, %and6.i270.1.3
  %shr13.i279.1.3 = lshr i64 %mul4.i268.1.3, 32
  %shr14.i280.1.3 = lshr i64 %mul3.i267.1.3, 32
  %and15.i281.1.3 = and i64 %mul5.i269.1.3, 4294967295
  %add16.i282.1.3 = add nuw nsw i64 %shr13.i279.1.3, %shr14.i280.1.3
  %add17.i283.1.3 = add nuw nsw i64 %add16.i282.1.3, %and15.i281.1.3
  %add18.i284.1.3 = add nuw nsw i64 %add17.i283.1.3, %shr11.i276.1.3
  %and19.i285.1.3 = and i64 %add18.i284.1.3, 4294967295
  %and21.i287.1.3 = and i64 %add18.i284.1.3, 30064771072
  %and22.i288.1.3 = and i64 %mul5.i269.1.3, -4294967296
  %add23.i289.1.3 = add i64 %and21.i287.1.3, %and22.i288.1.3
  %xor2569.i290.1.3 = or i64 %add23.i289.1.3, %and19.i285.1.3
  %add82.1.3 = add i64 %xor68.i278.1.3, %add82.1.2
  %xor.i256.1.3 = xor i64 %add82.1.3, %shl.i277.1.3
  %xor1.i257.1.3 = xor i64 %shl.i277.1.3, %add82.1.2
  %or.i258.1.3 = or i64 %xor.i256.1.3, %xor1.i257.1.3
  %xor2.i259.1.3 = xor i64 %or.i258.1.3, %add82.1.3
  %shr.i260.1.3 = lshr i64 %xor2.i259.1.3, 63
  %add89.1.3 = add i64 %shr.i260.1.3, %xor2569.i290.1.3
  %add90.1.3 = add i64 %add89.1.3, %add90.1.2
  %122 = xor i64 %add89.1.3, -9223372036854775808
  %xor2.i253.1.3 = and i64 %122, %add23.i289.1.3
  %xor.i244.1.3 = xor i64 %add90.1.3, %add89.1.3
  %xor1.i245.1.3 = xor i64 %add89.1.3, %add90.1.2
  %or.i246.1.3 = or i64 %xor.i244.1.3, %xor1.i245.1.3
  %xor2.i247.1.3 = xor i64 %or.i246.1.3, %add90.1.3
  %shr.i254326.1.3 = or i64 %xor2.i247.1.3, %xor2.i253.1.3
  %or94325.1.3 = lshr i64 %shr.i254326.1.3, 63
  %add96.1.3 = add nsw i64 %or94325.1.3, %add96.1.2
  %arrayidx74.1.4 = getelementptr inbounds i64, i64* %mc, i64 6
  %123 = load i64, i64* %arrayidx74.1.4, align 8, !tbaa !3
  %124 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 5), align 8, !tbaa !3
  %and.i262.1.4 = and i64 %123, 4294967295
  %shr.i263.1.4 = lshr i64 %123, 32
  %and1.i264.1.4 = and i64 %124, 4294967295
  %shr2.i265.1.4 = lshr i64 %124, 32
  %mul.i266.1.4 = mul nuw i64 %and1.i264.1.4, %and.i262.1.4
  %mul3.i267.1.4 = mul nuw i64 %shr2.i265.1.4, %and.i262.1.4
  %mul4.i268.1.4 = mul nuw i64 %and1.i264.1.4, %shr.i263.1.4
  %mul5.i269.1.4 = mul nuw i64 %shr2.i265.1.4, %shr.i263.1.4
  %and6.i270.1.4 = and i64 %mul.i266.1.4, 4294967295
  %shr7.i271.1.4 = lshr i64 %mul.i266.1.4, 32
  %and8.i272.1.4 = and i64 %mul4.i268.1.4, 4294967295
  %and9.i273.1.4 = and i64 %mul3.i267.1.4, 4294967295
  %add.i274.1.4 = add nuw nsw i64 %shr7.i271.1.4, %and8.i272.1.4
  %add10.i275.1.4 = add nuw nsw i64 %add.i274.1.4, %and9.i273.1.4
  %shr11.i276.1.4 = lshr i64 %add10.i275.1.4, 32
  %shl.i277.1.4 = shl i64 %add10.i275.1.4, 32
  %xor68.i278.1.4 = or i64 %shl.i277.1.4, %and6.i270.1.4
  %shr13.i279.1.4 = lshr i64 %mul4.i268.1.4, 32
  %shr14.i280.1.4 = lshr i64 %mul3.i267.1.4, 32
  %and15.i281.1.4 = and i64 %mul5.i269.1.4, 4294967295
  %add16.i282.1.4 = add nuw nsw i64 %shr13.i279.1.4, %shr14.i280.1.4
  %add17.i283.1.4 = add nuw nsw i64 %add16.i282.1.4, %and15.i281.1.4
  %add18.i284.1.4 = add nuw nsw i64 %add17.i283.1.4, %shr11.i276.1.4
  %and19.i285.1.4 = and i64 %add18.i284.1.4, 4294967295
  %and21.i287.1.4 = and i64 %add18.i284.1.4, 30064771072
  %and22.i288.1.4 = and i64 %mul5.i269.1.4, -4294967296
  %add23.i289.1.4 = add i64 %and21.i287.1.4, %and22.i288.1.4
  %xor2569.i290.1.4 = or i64 %add23.i289.1.4, %and19.i285.1.4
  %add82.1.4 = add i64 %xor68.i278.1.4, %add82.1.3
  %xor.i256.1.4 = xor i64 %add82.1.4, %shl.i277.1.4
  %xor1.i257.1.4 = xor i64 %shl.i277.1.4, %add82.1.3
  %or.i258.1.4 = or i64 %xor.i256.1.4, %xor1.i257.1.4
  %xor2.i259.1.4 = xor i64 %or.i258.1.4, %add82.1.4
  %shr.i260.1.4 = lshr i64 %xor2.i259.1.4, 63
  %add89.1.4 = add i64 %shr.i260.1.4, %xor2569.i290.1.4
  %add90.1.4 = add i64 %add89.1.4, %add90.1.3
  %125 = xor i64 %add89.1.4, -9223372036854775808
  %xor2.i253.1.4 = and i64 %125, %add23.i289.1.4
  %xor.i244.1.4 = xor i64 %add90.1.4, %add89.1.4
  %xor1.i245.1.4 = xor i64 %add89.1.4, %add90.1.3
  %or.i246.1.4 = or i64 %xor.i244.1.4, %xor1.i245.1.4
  %xor2.i247.1.4 = xor i64 %or.i246.1.4, %add90.1.4
  %shr.i254326.1.4 = or i64 %xor2.i247.1.4, %xor2.i253.1.4
  %or94325.1.4 = lshr i64 %shr.i254326.1.4, 63
  %add96.1.4 = add i64 %or94325.1.4, %add96.1.3
  %arrayidx74.1.5 = getelementptr inbounds i64, i64* %mc, i64 7
  %126 = load i64, i64* %arrayidx74.1.5, align 8, !tbaa !3
  %127 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 4), align 16, !tbaa !3
  %and.i262.1.5 = and i64 %126, 4294967295
  %shr.i263.1.5 = lshr i64 %126, 32
  %and1.i264.1.5 = and i64 %127, 4294967295
  %shr2.i265.1.5 = lshr i64 %127, 32
  %mul.i266.1.5 = mul nuw i64 %and1.i264.1.5, %and.i262.1.5
  %mul3.i267.1.5 = mul nuw i64 %shr2.i265.1.5, %and.i262.1.5
  %mul4.i268.1.5 = mul nuw i64 %and1.i264.1.5, %shr.i263.1.5
  %mul5.i269.1.5 = mul nuw i64 %shr2.i265.1.5, %shr.i263.1.5
  %and6.i270.1.5 = and i64 %mul.i266.1.5, 4294967295
  %shr7.i271.1.5 = lshr i64 %mul.i266.1.5, 32
  %and8.i272.1.5 = and i64 %mul4.i268.1.5, 4294967295
  %and9.i273.1.5 = and i64 %mul3.i267.1.5, 4294967295
  %add.i274.1.5 = add nuw nsw i64 %shr7.i271.1.5, %and8.i272.1.5
  %add10.i275.1.5 = add nuw nsw i64 %add.i274.1.5, %and9.i273.1.5
  %shr11.i276.1.5 = lshr i64 %add10.i275.1.5, 32
  %shl.i277.1.5 = shl i64 %add10.i275.1.5, 32
  %xor68.i278.1.5 = or i64 %shl.i277.1.5, %and6.i270.1.5
  %shr13.i279.1.5 = lshr i64 %mul4.i268.1.5, 32
  %shr14.i280.1.5 = lshr i64 %mul3.i267.1.5, 32
  %and15.i281.1.5 = and i64 %mul5.i269.1.5, 4294967295
  %add16.i282.1.5 = add nuw nsw i64 %shr13.i279.1.5, %shr14.i280.1.5
  %add17.i283.1.5 = add nuw nsw i64 %add16.i282.1.5, %and15.i281.1.5
  %add18.i284.1.5 = add nuw nsw i64 %add17.i283.1.5, %shr11.i276.1.5
  %and19.i285.1.5 = and i64 %add18.i284.1.5, 4294967295
  %and21.i287.1.5 = and i64 %add18.i284.1.5, 30064771072
  %and22.i288.1.5 = and i64 %mul5.i269.1.5, -4294967296
  %add23.i289.1.5 = add i64 %and21.i287.1.5, %and22.i288.1.5
  %xor2569.i290.1.5 = or i64 %add23.i289.1.5, %and19.i285.1.5
  %add82.1.5 = add i64 %xor68.i278.1.5, %add82.1.4
  %xor.i256.1.5 = xor i64 %add82.1.5, %shl.i277.1.5
  %xor1.i257.1.5 = xor i64 %shl.i277.1.5, %add82.1.4
  %or.i258.1.5 = or i64 %xor.i256.1.5, %xor1.i257.1.5
  %xor2.i259.1.5 = xor i64 %or.i258.1.5, %add82.1.5
  %shr.i260.1.5 = lshr i64 %xor2.i259.1.5, 63
  %add89.1.5 = add i64 %shr.i260.1.5, %xor2569.i290.1.5
  %add90.1.5 = add i64 %add89.1.5, %add90.1.4
  %128 = xor i64 %add89.1.5, -9223372036854775808
  %xor2.i253.1.5 = and i64 %128, %add23.i289.1.5
  %xor.i244.1.5 = xor i64 %add90.1.5, %add89.1.5
  %xor1.i245.1.5 = xor i64 %add89.1.5, %add90.1.4
  %or.i246.1.5 = or i64 %xor.i244.1.5, %xor1.i245.1.5
  %xor2.i247.1.5 = xor i64 %or.i246.1.5, %add90.1.5
  %shr.i254326.1.5 = or i64 %xor2.i247.1.5, %xor2.i253.1.5
  %or94325.1.5 = lshr i64 %shr.i254326.1.5, 63
  %add96.1.5 = add i64 %or94325.1.5, %add96.1.4
  %arrayidx104.1 = getelementptr inbounds i64, i64* %ma, i64 11
  %129 = load i64, i64* %arrayidx104.1, align 8, !tbaa !3
  %add105.1 = add i64 %129, %add82.1.5
  %xor.i238.1 = xor i64 %add105.1, %add82.1.5
  %xor1.i239.1 = xor i64 %129, %add82.1.5
  %or.i240.1 = or i64 %xor.i238.1, %xor1.i239.1
  %xor2.i241.1 = xor i64 %or.i240.1, %add105.1
  %shr.i242.1 = lshr i64 %xor2.i241.1, 63
  %add111.1 = add i64 %shr.i242.1, %add90.1.5
  store i64 %add105.1, i64* %arrayidx50.1, align 8, !tbaa !3
  %130 = xor i64 %add111.1, -9223372036854775808
  %xor2.i.1 = and i64 %130, %add90.1.5
  %shr.i237.1 = lshr i64 %xor2.i.1, 63
  %add118.1 = add i64 %shr.i237.1, %add96.1.5
  %arrayidx74.2 = getelementptr inbounds i64, i64* %mc, i64 3
  %131 = load i64, i64* %arrayidx74.2, align 8, !tbaa !3
  %132 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 9), align 8, !tbaa !3
  %and.i262.2 = and i64 %131, 4294967295
  %shr.i263.2 = lshr i64 %131, 32
  %and1.i264.2 = and i64 %132, 4294967295
  %shr2.i265.2 = lshr i64 %132, 32
  %mul.i266.2 = mul nuw i64 %and1.i264.2, %and.i262.2
  %mul3.i267.2 = mul nuw i64 %shr2.i265.2, %and.i262.2
  %mul4.i268.2 = mul nuw i64 %and1.i264.2, %shr.i263.2
  %mul5.i269.2 = mul nuw i64 %shr2.i265.2, %shr.i263.2
  %and6.i270.2 = and i64 %mul.i266.2, 4294967295
  %shr7.i271.2 = lshr i64 %mul.i266.2, 32
  %and8.i272.2 = and i64 %mul4.i268.2, 4294967295
  %and9.i273.2 = and i64 %mul3.i267.2, 4294967295
  %add.i274.2 = add nuw nsw i64 %shr7.i271.2, %and8.i272.2
  %add10.i275.2 = add nuw nsw i64 %add.i274.2, %and9.i273.2
  %shr11.i276.2 = lshr i64 %add10.i275.2, 32
  %shl.i277.2 = shl i64 %add10.i275.2, 32
  %xor68.i278.2 = or i64 %shl.i277.2, %and6.i270.2
  %shr13.i279.2 = lshr i64 %mul4.i268.2, 32
  %shr14.i280.2 = lshr i64 %mul3.i267.2, 32
  %and15.i281.2 = and i64 %mul5.i269.2, 4294967295
  %add16.i282.2 = add nuw nsw i64 %shr13.i279.2, %shr14.i280.2
  %add17.i283.2 = add nuw nsw i64 %add16.i282.2, %and15.i281.2
  %add18.i284.2 = add nuw nsw i64 %add17.i283.2, %shr11.i276.2
  %and19.i285.2 = and i64 %add18.i284.2, 4294967295
  %and21.i287.2 = and i64 %add18.i284.2, 30064771072
  %and22.i288.2 = and i64 %mul5.i269.2, -4294967296
  %add23.i289.2 = add i64 %and21.i287.2, %and22.i288.2
  %xor2569.i290.2 = or i64 %add23.i289.2, %and19.i285.2
  %add82.2 = add i64 %xor68.i278.2, %add111.1
  %xor.i256.2 = xor i64 %add82.2, %shl.i277.2
  %xor1.i257.2 = xor i64 %shl.i277.2, %add111.1
  %or.i258.2 = or i64 %xor.i256.2, %xor1.i257.2
  %xor2.i259.2 = xor i64 %or.i258.2, %add82.2
  %shr.i260.2 = lshr i64 %xor2.i259.2, 63
  %add89.2 = add i64 %shr.i260.2, %xor2569.i290.2
  %add90.2 = add i64 %add89.2, %add118.1
  %133 = xor i64 %add89.2, -9223372036854775808
  %xor2.i253.2 = and i64 %133, %add23.i289.2
  %xor.i244.2 = xor i64 %add90.2, %add89.2
  %xor1.i245.2 = xor i64 %add89.2, %add118.1
  %or.i246.2 = or i64 %xor.i244.2, %xor1.i245.2
  %xor2.i247.2 = xor i64 %or.i246.2, %add90.2
  %shr.i254326.2 = or i64 %xor2.i247.2, %xor2.i253.2
  %or94325.2 = lshr i64 %shr.i254326.2, 63
  %arrayidx74.2.1 = getelementptr inbounds i64, i64* %mc, i64 4
  %134 = load i64, i64* %arrayidx74.2.1, align 8, !tbaa !3
  %135 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 8), align 16, !tbaa !3
  %and.i262.2.1 = and i64 %134, 4294967295
  %shr.i263.2.1 = lshr i64 %134, 32
  %and1.i264.2.1 = and i64 %135, 4294967295
  %shr2.i265.2.1 = lshr i64 %135, 32
  %mul.i266.2.1 = mul nuw i64 %and1.i264.2.1, %and.i262.2.1
  %mul3.i267.2.1 = mul nuw i64 %shr2.i265.2.1, %and.i262.2.1
  %mul4.i268.2.1 = mul nuw i64 %and1.i264.2.1, %shr.i263.2.1
  %mul5.i269.2.1 = mul nuw i64 %shr2.i265.2.1, %shr.i263.2.1
  %and6.i270.2.1 = and i64 %mul.i266.2.1, 4294967295
  %shr7.i271.2.1 = lshr i64 %mul.i266.2.1, 32
  %and8.i272.2.1 = and i64 %mul4.i268.2.1, 4294967295
  %and9.i273.2.1 = and i64 %mul3.i267.2.1, 4294967295
  %add.i274.2.1 = add nuw nsw i64 %shr7.i271.2.1, %and8.i272.2.1
  %add10.i275.2.1 = add nuw nsw i64 %add.i274.2.1, %and9.i273.2.1
  %shr11.i276.2.1 = lshr i64 %add10.i275.2.1, 32
  %shl.i277.2.1 = shl i64 %add10.i275.2.1, 32
  %xor68.i278.2.1 = or i64 %shl.i277.2.1, %and6.i270.2.1
  %shr13.i279.2.1 = lshr i64 %mul4.i268.2.1, 32
  %shr14.i280.2.1 = lshr i64 %mul3.i267.2.1, 32
  %and15.i281.2.1 = and i64 %mul5.i269.2.1, 4294967295
  %add16.i282.2.1 = add nuw nsw i64 %shr13.i279.2.1, %shr14.i280.2.1
  %add17.i283.2.1 = add nuw nsw i64 %add16.i282.2.1, %and15.i281.2.1
  %add18.i284.2.1 = add nuw nsw i64 %add17.i283.2.1, %shr11.i276.2.1
  %and19.i285.2.1 = and i64 %add18.i284.2.1, 4294967295
  %and21.i287.2.1 = and i64 %add18.i284.2.1, 30064771072
  %and22.i288.2.1 = and i64 %mul5.i269.2.1, -4294967296
  %add23.i289.2.1 = add i64 %and21.i287.2.1, %and22.i288.2.1
  %xor2569.i290.2.1 = or i64 %add23.i289.2.1, %and19.i285.2.1
  %add82.2.1 = add i64 %xor68.i278.2.1, %add82.2
  %xor.i256.2.1 = xor i64 %add82.2.1, %shl.i277.2.1
  %xor1.i257.2.1 = xor i64 %shl.i277.2.1, %add82.2
  %or.i258.2.1 = or i64 %xor.i256.2.1, %xor1.i257.2.1
  %xor2.i259.2.1 = xor i64 %or.i258.2.1, %add82.2.1
  %shr.i260.2.1 = lshr i64 %xor2.i259.2.1, 63
  %add89.2.1 = add i64 %shr.i260.2.1, %xor2569.i290.2.1
  %add90.2.1 = add i64 %add89.2.1, %add90.2
  %136 = xor i64 %add89.2.1, -9223372036854775808
  %xor2.i253.2.1 = and i64 %136, %add23.i289.2.1
  %xor.i244.2.1 = xor i64 %add90.2.1, %add89.2.1
  %xor1.i245.2.1 = xor i64 %add89.2.1, %add90.2
  %or.i246.2.1 = or i64 %xor.i244.2.1, %xor1.i245.2.1
  %xor2.i247.2.1 = xor i64 %or.i246.2.1, %add90.2.1
  %shr.i254326.2.1 = or i64 %xor2.i247.2.1, %xor2.i253.2.1
  %or94325.2.1 = lshr i64 %shr.i254326.2.1, 63
  %add96.2.1 = add nuw nsw i64 %or94325.2.1, %or94325.2
  %arrayidx74.2.2 = getelementptr inbounds i64, i64* %mc, i64 5
  %137 = load i64, i64* %arrayidx74.2.2, align 8, !tbaa !3
  %138 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 7), align 8, !tbaa !3
  %and.i262.2.2 = and i64 %137, 4294967295
  %shr.i263.2.2 = lshr i64 %137, 32
  %and1.i264.2.2 = and i64 %138, 4294967295
  %shr2.i265.2.2 = lshr i64 %138, 32
  %mul.i266.2.2 = mul nuw i64 %and1.i264.2.2, %and.i262.2.2
  %mul3.i267.2.2 = mul nuw i64 %shr2.i265.2.2, %and.i262.2.2
  %mul4.i268.2.2 = mul nuw i64 %and1.i264.2.2, %shr.i263.2.2
  %mul5.i269.2.2 = mul nuw i64 %shr2.i265.2.2, %shr.i263.2.2
  %and6.i270.2.2 = and i64 %mul.i266.2.2, 4294967295
  %shr7.i271.2.2 = lshr i64 %mul.i266.2.2, 32
  %and8.i272.2.2 = and i64 %mul4.i268.2.2, 4294967295
  %and9.i273.2.2 = and i64 %mul3.i267.2.2, 4294967295
  %add.i274.2.2 = add nuw nsw i64 %shr7.i271.2.2, %and8.i272.2.2
  %add10.i275.2.2 = add nuw nsw i64 %add.i274.2.2, %and9.i273.2.2
  %shr11.i276.2.2 = lshr i64 %add10.i275.2.2, 32
  %shl.i277.2.2 = shl i64 %add10.i275.2.2, 32
  %xor68.i278.2.2 = or i64 %shl.i277.2.2, %and6.i270.2.2
  %shr13.i279.2.2 = lshr i64 %mul4.i268.2.2, 32
  %shr14.i280.2.2 = lshr i64 %mul3.i267.2.2, 32
  %and15.i281.2.2 = and i64 %mul5.i269.2.2, 4294967295
  %add16.i282.2.2 = add nuw nsw i64 %shr13.i279.2.2, %shr14.i280.2.2
  %add17.i283.2.2 = add nuw nsw i64 %add16.i282.2.2, %and15.i281.2.2
  %add18.i284.2.2 = add nuw nsw i64 %add17.i283.2.2, %shr11.i276.2.2
  %and19.i285.2.2 = and i64 %add18.i284.2.2, 4294967295
  %and21.i287.2.2 = and i64 %add18.i284.2.2, 30064771072
  %and22.i288.2.2 = and i64 %mul5.i269.2.2, -4294967296
  %add23.i289.2.2 = add i64 %and21.i287.2.2, %and22.i288.2.2
  %xor2569.i290.2.2 = or i64 %add23.i289.2.2, %and19.i285.2.2
  %add82.2.2 = add i64 %xor68.i278.2.2, %add82.2.1
  %xor.i256.2.2 = xor i64 %add82.2.2, %shl.i277.2.2
  %xor1.i257.2.2 = xor i64 %shl.i277.2.2, %add82.2.1
  %or.i258.2.2 = or i64 %xor.i256.2.2, %xor1.i257.2.2
  %xor2.i259.2.2 = xor i64 %or.i258.2.2, %add82.2.2
  %shr.i260.2.2 = lshr i64 %xor2.i259.2.2, 63
  %add89.2.2 = add i64 %shr.i260.2.2, %xor2569.i290.2.2
  %add90.2.2 = add i64 %add89.2.2, %add90.2.1
  %139 = xor i64 %add89.2.2, -9223372036854775808
  %xor2.i253.2.2 = and i64 %139, %add23.i289.2.2
  %xor.i244.2.2 = xor i64 %add90.2.2, %add89.2.2
  %xor1.i245.2.2 = xor i64 %add89.2.2, %add90.2.1
  %or.i246.2.2 = or i64 %xor.i244.2.2, %xor1.i245.2.2
  %xor2.i247.2.2 = xor i64 %or.i246.2.2, %add90.2.2
  %shr.i254326.2.2 = or i64 %xor2.i247.2.2, %xor2.i253.2.2
  %or94325.2.2 = lshr i64 %shr.i254326.2.2, 63
  %add96.2.2 = add nsw i64 %or94325.2.2, %add96.2.1
  %arrayidx74.2.3 = getelementptr inbounds i64, i64* %mc, i64 6
  %140 = load i64, i64* %arrayidx74.2.3, align 8, !tbaa !3
  %141 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 6), align 16, !tbaa !3
  %and.i262.2.3 = and i64 %140, 4294967295
  %shr.i263.2.3 = lshr i64 %140, 32
  %and1.i264.2.3 = and i64 %141, 4294967295
  %shr2.i265.2.3 = lshr i64 %141, 32
  %mul.i266.2.3 = mul nuw i64 %and1.i264.2.3, %and.i262.2.3
  %mul3.i267.2.3 = mul nuw i64 %shr2.i265.2.3, %and.i262.2.3
  %mul4.i268.2.3 = mul nuw i64 %and1.i264.2.3, %shr.i263.2.3
  %mul5.i269.2.3 = mul nuw i64 %shr2.i265.2.3, %shr.i263.2.3
  %and6.i270.2.3 = and i64 %mul.i266.2.3, 4294967295
  %shr7.i271.2.3 = lshr i64 %mul.i266.2.3, 32
  %and8.i272.2.3 = and i64 %mul4.i268.2.3, 4294967295
  %and9.i273.2.3 = and i64 %mul3.i267.2.3, 4294967295
  %add.i274.2.3 = add nuw nsw i64 %shr7.i271.2.3, %and8.i272.2.3
  %add10.i275.2.3 = add nuw nsw i64 %add.i274.2.3, %and9.i273.2.3
  %shr11.i276.2.3 = lshr i64 %add10.i275.2.3, 32
  %shl.i277.2.3 = shl i64 %add10.i275.2.3, 32
  %xor68.i278.2.3 = or i64 %shl.i277.2.3, %and6.i270.2.3
  %shr13.i279.2.3 = lshr i64 %mul4.i268.2.3, 32
  %shr14.i280.2.3 = lshr i64 %mul3.i267.2.3, 32
  %and15.i281.2.3 = and i64 %mul5.i269.2.3, 4294967295
  %add16.i282.2.3 = add nuw nsw i64 %shr13.i279.2.3, %shr14.i280.2.3
  %add17.i283.2.3 = add nuw nsw i64 %add16.i282.2.3, %and15.i281.2.3
  %add18.i284.2.3 = add nuw nsw i64 %add17.i283.2.3, %shr11.i276.2.3
  %and19.i285.2.3 = and i64 %add18.i284.2.3, 4294967295
  %and21.i287.2.3 = and i64 %add18.i284.2.3, 30064771072
  %and22.i288.2.3 = and i64 %mul5.i269.2.3, -4294967296
  %add23.i289.2.3 = add i64 %and21.i287.2.3, %and22.i288.2.3
  %xor2569.i290.2.3 = or i64 %add23.i289.2.3, %and19.i285.2.3
  %add82.2.3 = add i64 %xor68.i278.2.3, %add82.2.2
  %xor.i256.2.3 = xor i64 %add82.2.3, %shl.i277.2.3
  %xor1.i257.2.3 = xor i64 %shl.i277.2.3, %add82.2.2
  %or.i258.2.3 = or i64 %xor.i256.2.3, %xor1.i257.2.3
  %xor2.i259.2.3 = xor i64 %or.i258.2.3, %add82.2.3
  %shr.i260.2.3 = lshr i64 %xor2.i259.2.3, 63
  %add89.2.3 = add i64 %shr.i260.2.3, %xor2569.i290.2.3
  %add90.2.3 = add i64 %add89.2.3, %add90.2.2
  %142 = xor i64 %add89.2.3, -9223372036854775808
  %xor2.i253.2.3 = and i64 %142, %add23.i289.2.3
  %xor.i244.2.3 = xor i64 %add90.2.3, %add89.2.3
  %xor1.i245.2.3 = xor i64 %add89.2.3, %add90.2.2
  %or.i246.2.3 = or i64 %xor.i244.2.3, %xor1.i245.2.3
  %xor2.i247.2.3 = xor i64 %or.i246.2.3, %add90.2.3
  %shr.i254326.2.3 = or i64 %xor2.i247.2.3, %xor2.i253.2.3
  %or94325.2.3 = lshr i64 %shr.i254326.2.3, 63
  %add96.2.3 = add nsw i64 %or94325.2.3, %add96.2.2
  %arrayidx74.2.4 = getelementptr inbounds i64, i64* %mc, i64 7
  %143 = load i64, i64* %arrayidx74.2.4, align 8, !tbaa !3
  %144 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 5), align 8, !tbaa !3
  %and.i262.2.4 = and i64 %143, 4294967295
  %shr.i263.2.4 = lshr i64 %143, 32
  %and1.i264.2.4 = and i64 %144, 4294967295
  %shr2.i265.2.4 = lshr i64 %144, 32
  %mul.i266.2.4 = mul nuw i64 %and1.i264.2.4, %and.i262.2.4
  %mul3.i267.2.4 = mul nuw i64 %shr2.i265.2.4, %and.i262.2.4
  %mul4.i268.2.4 = mul nuw i64 %and1.i264.2.4, %shr.i263.2.4
  %mul5.i269.2.4 = mul nuw i64 %shr2.i265.2.4, %shr.i263.2.4
  %and6.i270.2.4 = and i64 %mul.i266.2.4, 4294967295
  %shr7.i271.2.4 = lshr i64 %mul.i266.2.4, 32
  %and8.i272.2.4 = and i64 %mul4.i268.2.4, 4294967295
  %and9.i273.2.4 = and i64 %mul3.i267.2.4, 4294967295
  %add.i274.2.4 = add nuw nsw i64 %shr7.i271.2.4, %and8.i272.2.4
  %add10.i275.2.4 = add nuw nsw i64 %add.i274.2.4, %and9.i273.2.4
  %shr11.i276.2.4 = lshr i64 %add10.i275.2.4, 32
  %shl.i277.2.4 = shl i64 %add10.i275.2.4, 32
  %xor68.i278.2.4 = or i64 %shl.i277.2.4, %and6.i270.2.4
  %shr13.i279.2.4 = lshr i64 %mul4.i268.2.4, 32
  %shr14.i280.2.4 = lshr i64 %mul3.i267.2.4, 32
  %and15.i281.2.4 = and i64 %mul5.i269.2.4, 4294967295
  %add16.i282.2.4 = add nuw nsw i64 %shr13.i279.2.4, %shr14.i280.2.4
  %add17.i283.2.4 = add nuw nsw i64 %add16.i282.2.4, %and15.i281.2.4
  %add18.i284.2.4 = add nuw nsw i64 %add17.i283.2.4, %shr11.i276.2.4
  %and19.i285.2.4 = and i64 %add18.i284.2.4, 4294967295
  %and21.i287.2.4 = and i64 %add18.i284.2.4, 30064771072
  %and22.i288.2.4 = and i64 %mul5.i269.2.4, -4294967296
  %add23.i289.2.4 = add i64 %and21.i287.2.4, %and22.i288.2.4
  %xor2569.i290.2.4 = or i64 %add23.i289.2.4, %and19.i285.2.4
  %add82.2.4 = add i64 %xor68.i278.2.4, %add82.2.3
  %xor.i256.2.4 = xor i64 %add82.2.4, %shl.i277.2.4
  %xor1.i257.2.4 = xor i64 %shl.i277.2.4, %add82.2.3
  %or.i258.2.4 = or i64 %xor.i256.2.4, %xor1.i257.2.4
  %xor2.i259.2.4 = xor i64 %or.i258.2.4, %add82.2.4
  %shr.i260.2.4 = lshr i64 %xor2.i259.2.4, 63
  %add89.2.4 = add i64 %shr.i260.2.4, %xor2569.i290.2.4
  %add90.2.4 = add i64 %add89.2.4, %add90.2.3
  %145 = xor i64 %add89.2.4, -9223372036854775808
  %xor2.i253.2.4 = and i64 %145, %add23.i289.2.4
  %xor.i244.2.4 = xor i64 %add90.2.4, %add89.2.4
  %xor1.i245.2.4 = xor i64 %add89.2.4, %add90.2.3
  %or.i246.2.4 = or i64 %xor.i244.2.4, %xor1.i245.2.4
  %xor2.i247.2.4 = xor i64 %or.i246.2.4, %add90.2.4
  %shr.i254326.2.4 = or i64 %xor2.i247.2.4, %xor2.i253.2.4
  %or94325.2.4 = lshr i64 %shr.i254326.2.4, 63
  %add96.2.4 = add i64 %or94325.2.4, %add96.2.3
  %arrayidx74.2.5 = getelementptr inbounds i64, i64* %mc, i64 8
  %146 = load i64, i64* %arrayidx74.2.5, align 8, !tbaa !3
  %147 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 4), align 16, !tbaa !3
  %and.i262.2.5 = and i64 %146, 4294967295
  %shr.i263.2.5 = lshr i64 %146, 32
  %and1.i264.2.5 = and i64 %147, 4294967295
  %shr2.i265.2.5 = lshr i64 %147, 32
  %mul.i266.2.5 = mul nuw i64 %and1.i264.2.5, %and.i262.2.5
  %mul3.i267.2.5 = mul nuw i64 %shr2.i265.2.5, %and.i262.2.5
  %mul4.i268.2.5 = mul nuw i64 %and1.i264.2.5, %shr.i263.2.5
  %mul5.i269.2.5 = mul nuw i64 %shr2.i265.2.5, %shr.i263.2.5
  %and6.i270.2.5 = and i64 %mul.i266.2.5, 4294967295
  %shr7.i271.2.5 = lshr i64 %mul.i266.2.5, 32
  %and8.i272.2.5 = and i64 %mul4.i268.2.5, 4294967295
  %and9.i273.2.5 = and i64 %mul3.i267.2.5, 4294967295
  %add.i274.2.5 = add nuw nsw i64 %shr7.i271.2.5, %and8.i272.2.5
  %add10.i275.2.5 = add nuw nsw i64 %add.i274.2.5, %and9.i273.2.5
  %shr11.i276.2.5 = lshr i64 %add10.i275.2.5, 32
  %shl.i277.2.5 = shl i64 %add10.i275.2.5, 32
  %xor68.i278.2.5 = or i64 %shl.i277.2.5, %and6.i270.2.5
  %shr13.i279.2.5 = lshr i64 %mul4.i268.2.5, 32
  %shr14.i280.2.5 = lshr i64 %mul3.i267.2.5, 32
  %and15.i281.2.5 = and i64 %mul5.i269.2.5, 4294967295
  %add16.i282.2.5 = add nuw nsw i64 %shr13.i279.2.5, %shr14.i280.2.5
  %add17.i283.2.5 = add nuw nsw i64 %add16.i282.2.5, %and15.i281.2.5
  %add18.i284.2.5 = add nuw nsw i64 %add17.i283.2.5, %shr11.i276.2.5
  %and19.i285.2.5 = and i64 %add18.i284.2.5, 4294967295
  %and21.i287.2.5 = and i64 %add18.i284.2.5, 30064771072
  %and22.i288.2.5 = and i64 %mul5.i269.2.5, -4294967296
  %add23.i289.2.5 = add i64 %and21.i287.2.5, %and22.i288.2.5
  %xor2569.i290.2.5 = or i64 %add23.i289.2.5, %and19.i285.2.5
  %add82.2.5 = add i64 %xor68.i278.2.5, %add82.2.4
  %xor.i256.2.5 = xor i64 %add82.2.5, %shl.i277.2.5
  %xor1.i257.2.5 = xor i64 %shl.i277.2.5, %add82.2.4
  %or.i258.2.5 = or i64 %xor.i256.2.5, %xor1.i257.2.5
  %xor2.i259.2.5 = xor i64 %or.i258.2.5, %add82.2.5
  %shr.i260.2.5 = lshr i64 %xor2.i259.2.5, 63
  %add89.2.5 = add i64 %shr.i260.2.5, %xor2569.i290.2.5
  %add90.2.5 = add i64 %add89.2.5, %add90.2.4
  %148 = xor i64 %add89.2.5, -9223372036854775808
  %xor2.i253.2.5 = and i64 %148, %add23.i289.2.5
  %xor.i244.2.5 = xor i64 %add90.2.5, %add89.2.5
  %xor1.i245.2.5 = xor i64 %add89.2.5, %add90.2.4
  %or.i246.2.5 = or i64 %xor.i244.2.5, %xor1.i245.2.5
  %xor2.i247.2.5 = xor i64 %or.i246.2.5, %add90.2.5
  %shr.i254326.2.5 = or i64 %xor2.i247.2.5, %xor2.i253.2.5
  %or94325.2.5 = lshr i64 %shr.i254326.2.5, 63
  %add96.2.5 = add i64 %or94325.2.5, %add96.2.4
  %arrayidx104.2 = getelementptr inbounds i64, i64* %ma, i64 12
  %149 = load i64, i64* %arrayidx104.2, align 8, !tbaa !3
  %add105.2 = add i64 %149, %add82.2.5
  %xor.i238.2 = xor i64 %add105.2, %add82.2.5
  %xor1.i239.2 = xor i64 %149, %add82.2.5
  %or.i240.2 = or i64 %xor.i238.2, %xor1.i239.2
  %xor2.i241.2 = xor i64 %or.i240.2, %add105.2
  %shr.i242.2 = lshr i64 %xor2.i241.2, 63
  %add111.2 = add i64 %shr.i242.2, %add90.2.5
  store i64 %add105.2, i64* %arrayidx50.2, align 8, !tbaa !3
  %150 = xor i64 %add111.2, -9223372036854775808
  %xor2.i.2 = and i64 %150, %add90.2.5
  %shr.i237.2 = lshr i64 %xor2.i.2, 63
  %add118.2 = add i64 %shr.i237.2, %add96.2.5
  %arrayidx74.3 = getelementptr inbounds i64, i64* %mc, i64 4
  %151 = load i64, i64* %arrayidx74.3, align 8, !tbaa !3
  %152 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 9), align 8, !tbaa !3
  %and.i262.3 = and i64 %151, 4294967295
  %shr.i263.3 = lshr i64 %151, 32
  %and1.i264.3 = and i64 %152, 4294967295
  %shr2.i265.3 = lshr i64 %152, 32
  %mul.i266.3 = mul nuw i64 %and1.i264.3, %and.i262.3
  %mul3.i267.3 = mul nuw i64 %shr2.i265.3, %and.i262.3
  %mul4.i268.3 = mul nuw i64 %and1.i264.3, %shr.i263.3
  %mul5.i269.3 = mul nuw i64 %shr2.i265.3, %shr.i263.3
  %and6.i270.3 = and i64 %mul.i266.3, 4294967295
  %shr7.i271.3 = lshr i64 %mul.i266.3, 32
  %and8.i272.3 = and i64 %mul4.i268.3, 4294967295
  %and9.i273.3 = and i64 %mul3.i267.3, 4294967295
  %add.i274.3 = add nuw nsw i64 %shr7.i271.3, %and8.i272.3
  %add10.i275.3 = add nuw nsw i64 %add.i274.3, %and9.i273.3
  %shr11.i276.3 = lshr i64 %add10.i275.3, 32
  %shl.i277.3 = shl i64 %add10.i275.3, 32
  %xor68.i278.3 = or i64 %shl.i277.3, %and6.i270.3
  %shr13.i279.3 = lshr i64 %mul4.i268.3, 32
  %shr14.i280.3 = lshr i64 %mul3.i267.3, 32
  %and15.i281.3 = and i64 %mul5.i269.3, 4294967295
  %add16.i282.3 = add nuw nsw i64 %shr13.i279.3, %shr14.i280.3
  %add17.i283.3 = add nuw nsw i64 %add16.i282.3, %and15.i281.3
  %add18.i284.3 = add nuw nsw i64 %add17.i283.3, %shr11.i276.3
  %and19.i285.3 = and i64 %add18.i284.3, 4294967295
  %and21.i287.3 = and i64 %add18.i284.3, 30064771072
  %and22.i288.3 = and i64 %mul5.i269.3, -4294967296
  %add23.i289.3 = add i64 %and21.i287.3, %and22.i288.3
  %xor2569.i290.3 = or i64 %add23.i289.3, %and19.i285.3
  %add82.3 = add i64 %xor68.i278.3, %add111.2
  %xor.i256.3 = xor i64 %add82.3, %shl.i277.3
  %xor1.i257.3 = xor i64 %shl.i277.3, %add111.2
  %or.i258.3 = or i64 %xor.i256.3, %xor1.i257.3
  %xor2.i259.3 = xor i64 %or.i258.3, %add82.3
  %shr.i260.3 = lshr i64 %xor2.i259.3, 63
  %add89.3 = add i64 %shr.i260.3, %xor2569.i290.3
  %add90.3 = add i64 %add89.3, %add118.2
  %153 = xor i64 %add89.3, -9223372036854775808
  %xor2.i253.3 = and i64 %153, %add23.i289.3
  %xor.i244.3 = xor i64 %add90.3, %add89.3
  %xor1.i245.3 = xor i64 %add89.3, %add118.2
  %or.i246.3 = or i64 %xor.i244.3, %xor1.i245.3
  %xor2.i247.3 = xor i64 %or.i246.3, %add90.3
  %shr.i254326.3 = or i64 %xor2.i247.3, %xor2.i253.3
  %or94325.3 = lshr i64 %shr.i254326.3, 63
  %arrayidx74.3.1 = getelementptr inbounds i64, i64* %mc, i64 5
  %154 = load i64, i64* %arrayidx74.3.1, align 8, !tbaa !3
  %155 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 8), align 16, !tbaa !3
  %and.i262.3.1 = and i64 %154, 4294967295
  %shr.i263.3.1 = lshr i64 %154, 32
  %and1.i264.3.1 = and i64 %155, 4294967295
  %shr2.i265.3.1 = lshr i64 %155, 32
  %mul.i266.3.1 = mul nuw i64 %and1.i264.3.1, %and.i262.3.1
  %mul3.i267.3.1 = mul nuw i64 %shr2.i265.3.1, %and.i262.3.1
  %mul4.i268.3.1 = mul nuw i64 %and1.i264.3.1, %shr.i263.3.1
  %mul5.i269.3.1 = mul nuw i64 %shr2.i265.3.1, %shr.i263.3.1
  %and6.i270.3.1 = and i64 %mul.i266.3.1, 4294967295
  %shr7.i271.3.1 = lshr i64 %mul.i266.3.1, 32
  %and8.i272.3.1 = and i64 %mul4.i268.3.1, 4294967295
  %and9.i273.3.1 = and i64 %mul3.i267.3.1, 4294967295
  %add.i274.3.1 = add nuw nsw i64 %shr7.i271.3.1, %and8.i272.3.1
  %add10.i275.3.1 = add nuw nsw i64 %add.i274.3.1, %and9.i273.3.1
  %shr11.i276.3.1 = lshr i64 %add10.i275.3.1, 32
  %shl.i277.3.1 = shl i64 %add10.i275.3.1, 32
  %xor68.i278.3.1 = or i64 %shl.i277.3.1, %and6.i270.3.1
  %shr13.i279.3.1 = lshr i64 %mul4.i268.3.1, 32
  %shr14.i280.3.1 = lshr i64 %mul3.i267.3.1, 32
  %and15.i281.3.1 = and i64 %mul5.i269.3.1, 4294967295
  %add16.i282.3.1 = add nuw nsw i64 %shr13.i279.3.1, %shr14.i280.3.1
  %add17.i283.3.1 = add nuw nsw i64 %add16.i282.3.1, %and15.i281.3.1
  %add18.i284.3.1 = add nuw nsw i64 %add17.i283.3.1, %shr11.i276.3.1
  %and19.i285.3.1 = and i64 %add18.i284.3.1, 4294967295
  %and21.i287.3.1 = and i64 %add18.i284.3.1, 30064771072
  %and22.i288.3.1 = and i64 %mul5.i269.3.1, -4294967296
  %add23.i289.3.1 = add i64 %and21.i287.3.1, %and22.i288.3.1
  %xor2569.i290.3.1 = or i64 %add23.i289.3.1, %and19.i285.3.1
  %add82.3.1 = add i64 %xor68.i278.3.1, %add82.3
  %xor.i256.3.1 = xor i64 %add82.3.1, %shl.i277.3.1
  %xor1.i257.3.1 = xor i64 %shl.i277.3.1, %add82.3
  %or.i258.3.1 = or i64 %xor.i256.3.1, %xor1.i257.3.1
  %xor2.i259.3.1 = xor i64 %or.i258.3.1, %add82.3.1
  %shr.i260.3.1 = lshr i64 %xor2.i259.3.1, 63
  %add89.3.1 = add i64 %shr.i260.3.1, %xor2569.i290.3.1
  %add90.3.1 = add i64 %add89.3.1, %add90.3
  %156 = xor i64 %add89.3.1, -9223372036854775808
  %xor2.i253.3.1 = and i64 %156, %add23.i289.3.1
  %xor.i244.3.1 = xor i64 %add90.3.1, %add89.3.1
  %xor1.i245.3.1 = xor i64 %add89.3.1, %add90.3
  %or.i246.3.1 = or i64 %xor.i244.3.1, %xor1.i245.3.1
  %xor2.i247.3.1 = xor i64 %or.i246.3.1, %add90.3.1
  %shr.i254326.3.1 = or i64 %xor2.i247.3.1, %xor2.i253.3.1
  %or94325.3.1 = lshr i64 %shr.i254326.3.1, 63
  %add96.3.1 = add nuw nsw i64 %or94325.3.1, %or94325.3
  %arrayidx74.3.2 = getelementptr inbounds i64, i64* %mc, i64 6
  %157 = load i64, i64* %arrayidx74.3.2, align 8, !tbaa !3
  %158 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 7), align 8, !tbaa !3
  %and.i262.3.2 = and i64 %157, 4294967295
  %shr.i263.3.2 = lshr i64 %157, 32
  %and1.i264.3.2 = and i64 %158, 4294967295
  %shr2.i265.3.2 = lshr i64 %158, 32
  %mul.i266.3.2 = mul nuw i64 %and1.i264.3.2, %and.i262.3.2
  %mul3.i267.3.2 = mul nuw i64 %shr2.i265.3.2, %and.i262.3.2
  %mul4.i268.3.2 = mul nuw i64 %and1.i264.3.2, %shr.i263.3.2
  %mul5.i269.3.2 = mul nuw i64 %shr2.i265.3.2, %shr.i263.3.2
  %and6.i270.3.2 = and i64 %mul.i266.3.2, 4294967295
  %shr7.i271.3.2 = lshr i64 %mul.i266.3.2, 32
  %and8.i272.3.2 = and i64 %mul4.i268.3.2, 4294967295
  %and9.i273.3.2 = and i64 %mul3.i267.3.2, 4294967295
  %add.i274.3.2 = add nuw nsw i64 %shr7.i271.3.2, %and8.i272.3.2
  %add10.i275.3.2 = add nuw nsw i64 %add.i274.3.2, %and9.i273.3.2
  %shr11.i276.3.2 = lshr i64 %add10.i275.3.2, 32
  %shl.i277.3.2 = shl i64 %add10.i275.3.2, 32
  %xor68.i278.3.2 = or i64 %shl.i277.3.2, %and6.i270.3.2
  %shr13.i279.3.2 = lshr i64 %mul4.i268.3.2, 32
  %shr14.i280.3.2 = lshr i64 %mul3.i267.3.2, 32
  %and15.i281.3.2 = and i64 %mul5.i269.3.2, 4294967295
  %add16.i282.3.2 = add nuw nsw i64 %shr13.i279.3.2, %shr14.i280.3.2
  %add17.i283.3.2 = add nuw nsw i64 %add16.i282.3.2, %and15.i281.3.2
  %add18.i284.3.2 = add nuw nsw i64 %add17.i283.3.2, %shr11.i276.3.2
  %and19.i285.3.2 = and i64 %add18.i284.3.2, 4294967295
  %and21.i287.3.2 = and i64 %add18.i284.3.2, 30064771072
  %and22.i288.3.2 = and i64 %mul5.i269.3.2, -4294967296
  %add23.i289.3.2 = add i64 %and21.i287.3.2, %and22.i288.3.2
  %xor2569.i290.3.2 = or i64 %add23.i289.3.2, %and19.i285.3.2
  %add82.3.2 = add i64 %xor68.i278.3.2, %add82.3.1
  %xor.i256.3.2 = xor i64 %add82.3.2, %shl.i277.3.2
  %xor1.i257.3.2 = xor i64 %shl.i277.3.2, %add82.3.1
  %or.i258.3.2 = or i64 %xor.i256.3.2, %xor1.i257.3.2
  %xor2.i259.3.2 = xor i64 %or.i258.3.2, %add82.3.2
  %shr.i260.3.2 = lshr i64 %xor2.i259.3.2, 63
  %add89.3.2 = add i64 %shr.i260.3.2, %xor2569.i290.3.2
  %add90.3.2 = add i64 %add89.3.2, %add90.3.1
  %159 = xor i64 %add89.3.2, -9223372036854775808
  %xor2.i253.3.2 = and i64 %159, %add23.i289.3.2
  %xor.i244.3.2 = xor i64 %add90.3.2, %add89.3.2
  %xor1.i245.3.2 = xor i64 %add89.3.2, %add90.3.1
  %or.i246.3.2 = or i64 %xor.i244.3.2, %xor1.i245.3.2
  %xor2.i247.3.2 = xor i64 %or.i246.3.2, %add90.3.2
  %shr.i254326.3.2 = or i64 %xor2.i247.3.2, %xor2.i253.3.2
  %or94325.3.2 = lshr i64 %shr.i254326.3.2, 63
  %add96.3.2 = add nsw i64 %or94325.3.2, %add96.3.1
  %arrayidx74.3.3 = getelementptr inbounds i64, i64* %mc, i64 7
  %160 = load i64, i64* %arrayidx74.3.3, align 8, !tbaa !3
  %161 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 6), align 16, !tbaa !3
  %and.i262.3.3 = and i64 %160, 4294967295
  %shr.i263.3.3 = lshr i64 %160, 32
  %and1.i264.3.3 = and i64 %161, 4294967295
  %shr2.i265.3.3 = lshr i64 %161, 32
  %mul.i266.3.3 = mul nuw i64 %and1.i264.3.3, %and.i262.3.3
  %mul3.i267.3.3 = mul nuw i64 %shr2.i265.3.3, %and.i262.3.3
  %mul4.i268.3.3 = mul nuw i64 %and1.i264.3.3, %shr.i263.3.3
  %mul5.i269.3.3 = mul nuw i64 %shr2.i265.3.3, %shr.i263.3.3
  %and6.i270.3.3 = and i64 %mul.i266.3.3, 4294967295
  %shr7.i271.3.3 = lshr i64 %mul.i266.3.3, 32
  %and8.i272.3.3 = and i64 %mul4.i268.3.3, 4294967295
  %and9.i273.3.3 = and i64 %mul3.i267.3.3, 4294967295
  %add.i274.3.3 = add nuw nsw i64 %shr7.i271.3.3, %and8.i272.3.3
  %add10.i275.3.3 = add nuw nsw i64 %add.i274.3.3, %and9.i273.3.3
  %shr11.i276.3.3 = lshr i64 %add10.i275.3.3, 32
  %shl.i277.3.3 = shl i64 %add10.i275.3.3, 32
  %xor68.i278.3.3 = or i64 %shl.i277.3.3, %and6.i270.3.3
  %shr13.i279.3.3 = lshr i64 %mul4.i268.3.3, 32
  %shr14.i280.3.3 = lshr i64 %mul3.i267.3.3, 32
  %and15.i281.3.3 = and i64 %mul5.i269.3.3, 4294967295
  %add16.i282.3.3 = add nuw nsw i64 %shr13.i279.3.3, %shr14.i280.3.3
  %add17.i283.3.3 = add nuw nsw i64 %add16.i282.3.3, %and15.i281.3.3
  %add18.i284.3.3 = add nuw nsw i64 %add17.i283.3.3, %shr11.i276.3.3
  %and19.i285.3.3 = and i64 %add18.i284.3.3, 4294967295
  %and21.i287.3.3 = and i64 %add18.i284.3.3, 30064771072
  %and22.i288.3.3 = and i64 %mul5.i269.3.3, -4294967296
  %add23.i289.3.3 = add i64 %and21.i287.3.3, %and22.i288.3.3
  %xor2569.i290.3.3 = or i64 %add23.i289.3.3, %and19.i285.3.3
  %add82.3.3 = add i64 %xor68.i278.3.3, %add82.3.2
  %xor.i256.3.3 = xor i64 %add82.3.3, %shl.i277.3.3
  %xor1.i257.3.3 = xor i64 %shl.i277.3.3, %add82.3.2
  %or.i258.3.3 = or i64 %xor.i256.3.3, %xor1.i257.3.3
  %xor2.i259.3.3 = xor i64 %or.i258.3.3, %add82.3.3
  %shr.i260.3.3 = lshr i64 %xor2.i259.3.3, 63
  %add89.3.3 = add i64 %shr.i260.3.3, %xor2569.i290.3.3
  %add90.3.3 = add i64 %add89.3.3, %add90.3.2
  %162 = xor i64 %add89.3.3, -9223372036854775808
  %xor2.i253.3.3 = and i64 %162, %add23.i289.3.3
  %xor.i244.3.3 = xor i64 %add90.3.3, %add89.3.3
  %xor1.i245.3.3 = xor i64 %add89.3.3, %add90.3.2
  %or.i246.3.3 = or i64 %xor.i244.3.3, %xor1.i245.3.3
  %xor2.i247.3.3 = xor i64 %or.i246.3.3, %add90.3.3
  %shr.i254326.3.3 = or i64 %xor2.i247.3.3, %xor2.i253.3.3
  %or94325.3.3 = lshr i64 %shr.i254326.3.3, 63
  %add96.3.3 = add nsw i64 %or94325.3.3, %add96.3.2
  %arrayidx74.3.4 = getelementptr inbounds i64, i64* %mc, i64 8
  %163 = load i64, i64* %arrayidx74.3.4, align 8, !tbaa !3
  %164 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 5), align 8, !tbaa !3
  %and.i262.3.4 = and i64 %163, 4294967295
  %shr.i263.3.4 = lshr i64 %163, 32
  %and1.i264.3.4 = and i64 %164, 4294967295
  %shr2.i265.3.4 = lshr i64 %164, 32
  %mul.i266.3.4 = mul nuw i64 %and1.i264.3.4, %and.i262.3.4
  %mul3.i267.3.4 = mul nuw i64 %shr2.i265.3.4, %and.i262.3.4
  %mul4.i268.3.4 = mul nuw i64 %and1.i264.3.4, %shr.i263.3.4
  %mul5.i269.3.4 = mul nuw i64 %shr2.i265.3.4, %shr.i263.3.4
  %and6.i270.3.4 = and i64 %mul.i266.3.4, 4294967295
  %shr7.i271.3.4 = lshr i64 %mul.i266.3.4, 32
  %and8.i272.3.4 = and i64 %mul4.i268.3.4, 4294967295
  %and9.i273.3.4 = and i64 %mul3.i267.3.4, 4294967295
  %add.i274.3.4 = add nuw nsw i64 %shr7.i271.3.4, %and8.i272.3.4
  %add10.i275.3.4 = add nuw nsw i64 %add.i274.3.4, %and9.i273.3.4
  %shr11.i276.3.4 = lshr i64 %add10.i275.3.4, 32
  %shl.i277.3.4 = shl i64 %add10.i275.3.4, 32
  %xor68.i278.3.4 = or i64 %shl.i277.3.4, %and6.i270.3.4
  %shr13.i279.3.4 = lshr i64 %mul4.i268.3.4, 32
  %shr14.i280.3.4 = lshr i64 %mul3.i267.3.4, 32
  %and15.i281.3.4 = and i64 %mul5.i269.3.4, 4294967295
  %add16.i282.3.4 = add nuw nsw i64 %shr13.i279.3.4, %shr14.i280.3.4
  %add17.i283.3.4 = add nuw nsw i64 %add16.i282.3.4, %and15.i281.3.4
  %add18.i284.3.4 = add nuw nsw i64 %add17.i283.3.4, %shr11.i276.3.4
  %and19.i285.3.4 = and i64 %add18.i284.3.4, 4294967295
  %and21.i287.3.4 = and i64 %add18.i284.3.4, 30064771072
  %and22.i288.3.4 = and i64 %mul5.i269.3.4, -4294967296
  %add23.i289.3.4 = add i64 %and21.i287.3.4, %and22.i288.3.4
  %xor2569.i290.3.4 = or i64 %add23.i289.3.4, %and19.i285.3.4
  %add82.3.4 = add i64 %xor68.i278.3.4, %add82.3.3
  %xor.i256.3.4 = xor i64 %add82.3.4, %shl.i277.3.4
  %xor1.i257.3.4 = xor i64 %shl.i277.3.4, %add82.3.3
  %or.i258.3.4 = or i64 %xor.i256.3.4, %xor1.i257.3.4
  %xor2.i259.3.4 = xor i64 %or.i258.3.4, %add82.3.4
  %shr.i260.3.4 = lshr i64 %xor2.i259.3.4, 63
  %add89.3.4 = add i64 %shr.i260.3.4, %xor2569.i290.3.4
  %add90.3.4 = add i64 %add89.3.4, %add90.3.3
  %165 = xor i64 %add89.3.4, -9223372036854775808
  %xor2.i253.3.4 = and i64 %165, %add23.i289.3.4
  %xor.i244.3.4 = xor i64 %add90.3.4, %add89.3.4
  %xor1.i245.3.4 = xor i64 %add89.3.4, %add90.3.3
  %or.i246.3.4 = or i64 %xor.i244.3.4, %xor1.i245.3.4
  %xor2.i247.3.4 = xor i64 %or.i246.3.4, %add90.3.4
  %shr.i254326.3.4 = or i64 %xor2.i247.3.4, %xor2.i253.3.4
  %or94325.3.4 = lshr i64 %shr.i254326.3.4, 63
  %add96.3.4 = add i64 %or94325.3.4, %add96.3.3
  %arrayidx74.3.5 = getelementptr inbounds i64, i64* %mc, i64 9
  %166 = load i64, i64* %arrayidx74.3.5, align 8, !tbaa !3
  %167 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 4), align 16, !tbaa !3
  %and.i262.3.5 = and i64 %166, 4294967295
  %shr.i263.3.5 = lshr i64 %166, 32
  %and1.i264.3.5 = and i64 %167, 4294967295
  %shr2.i265.3.5 = lshr i64 %167, 32
  %mul.i266.3.5 = mul nuw i64 %and1.i264.3.5, %and.i262.3.5
  %mul3.i267.3.5 = mul nuw i64 %shr2.i265.3.5, %and.i262.3.5
  %mul4.i268.3.5 = mul nuw i64 %and1.i264.3.5, %shr.i263.3.5
  %mul5.i269.3.5 = mul nuw i64 %shr2.i265.3.5, %shr.i263.3.5
  %and6.i270.3.5 = and i64 %mul.i266.3.5, 4294967295
  %shr7.i271.3.5 = lshr i64 %mul.i266.3.5, 32
  %and8.i272.3.5 = and i64 %mul4.i268.3.5, 4294967295
  %and9.i273.3.5 = and i64 %mul3.i267.3.5, 4294967295
  %add.i274.3.5 = add nuw nsw i64 %shr7.i271.3.5, %and8.i272.3.5
  %add10.i275.3.5 = add nuw nsw i64 %add.i274.3.5, %and9.i273.3.5
  %shr11.i276.3.5 = lshr i64 %add10.i275.3.5, 32
  %shl.i277.3.5 = shl i64 %add10.i275.3.5, 32
  %xor68.i278.3.5 = or i64 %shl.i277.3.5, %and6.i270.3.5
  %shr13.i279.3.5 = lshr i64 %mul4.i268.3.5, 32
  %shr14.i280.3.5 = lshr i64 %mul3.i267.3.5, 32
  %and15.i281.3.5 = and i64 %mul5.i269.3.5, 4294967295
  %add16.i282.3.5 = add nuw nsw i64 %shr13.i279.3.5, %shr14.i280.3.5
  %add17.i283.3.5 = add nuw nsw i64 %add16.i282.3.5, %and15.i281.3.5
  %add18.i284.3.5 = add nuw nsw i64 %add17.i283.3.5, %shr11.i276.3.5
  %and19.i285.3.5 = and i64 %add18.i284.3.5, 4294967295
  %and21.i287.3.5 = and i64 %add18.i284.3.5, 30064771072
  %and22.i288.3.5 = and i64 %mul5.i269.3.5, -4294967296
  %add23.i289.3.5 = add i64 %and21.i287.3.5, %and22.i288.3.5
  %xor2569.i290.3.5 = or i64 %add23.i289.3.5, %and19.i285.3.5
  %add82.3.5 = add i64 %xor68.i278.3.5, %add82.3.4
  %xor.i256.3.5 = xor i64 %add82.3.5, %shl.i277.3.5
  %xor1.i257.3.5 = xor i64 %shl.i277.3.5, %add82.3.4
  %or.i258.3.5 = or i64 %xor.i256.3.5, %xor1.i257.3.5
  %xor2.i259.3.5 = xor i64 %or.i258.3.5, %add82.3.5
  %shr.i260.3.5 = lshr i64 %xor2.i259.3.5, 63
  %add89.3.5 = add i64 %shr.i260.3.5, %xor2569.i290.3.5
  %add90.3.5 = add i64 %add89.3.5, %add90.3.4
  %168 = xor i64 %add89.3.5, -9223372036854775808
  %xor2.i253.3.5 = and i64 %168, %add23.i289.3.5
  %xor.i244.3.5 = xor i64 %add90.3.5, %add89.3.5
  %xor1.i245.3.5 = xor i64 %add89.3.5, %add90.3.4
  %or.i246.3.5 = or i64 %xor.i244.3.5, %xor1.i245.3.5
  %xor2.i247.3.5 = xor i64 %or.i246.3.5, %add90.3.5
  %shr.i254326.3.5 = or i64 %xor2.i247.3.5, %xor2.i253.3.5
  %or94325.3.5 = lshr i64 %shr.i254326.3.5, 63
  %add96.3.5 = add i64 %or94325.3.5, %add96.3.4
  %arrayidx104.3 = getelementptr inbounds i64, i64* %ma, i64 13
  %169 = load i64, i64* %arrayidx104.3, align 8, !tbaa !3
  %add105.3 = add i64 %169, %add82.3.5
  %xor.i238.3 = xor i64 %add105.3, %add82.3.5
  %xor1.i239.3 = xor i64 %169, %add82.3.5
  %or.i240.3 = or i64 %xor.i238.3, %xor1.i239.3
  %xor2.i241.3 = xor i64 %or.i240.3, %add105.3
  %shr.i242.3 = lshr i64 %xor2.i241.3, 63
  %add111.3 = add i64 %shr.i242.3, %add90.3.5
  store i64 %add105.3, i64* %arrayidx50.3, align 8, !tbaa !3
  %170 = xor i64 %add111.3, -9223372036854775808
  %xor2.i.3 = and i64 %170, %add90.3.5
  %shr.i237.3 = lshr i64 %xor2.i.3, 63
  %add118.3 = add i64 %shr.i237.3, %add96.3.5
  %arrayidx74.4 = getelementptr inbounds i64, i64* %mc, i64 5
  %171 = load i64, i64* %arrayidx74.4, align 8, !tbaa !3
  %172 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 9), align 8, !tbaa !3
  %and.i262.4 = and i64 %171, 4294967295
  %shr.i263.4 = lshr i64 %171, 32
  %and1.i264.4 = and i64 %172, 4294967295
  %shr2.i265.4 = lshr i64 %172, 32
  %mul.i266.4 = mul nuw i64 %and1.i264.4, %and.i262.4
  %mul3.i267.4 = mul nuw i64 %shr2.i265.4, %and.i262.4
  %mul4.i268.4 = mul nuw i64 %and1.i264.4, %shr.i263.4
  %mul5.i269.4 = mul nuw i64 %shr2.i265.4, %shr.i263.4
  %and6.i270.4 = and i64 %mul.i266.4, 4294967295
  %shr7.i271.4 = lshr i64 %mul.i266.4, 32
  %and8.i272.4 = and i64 %mul4.i268.4, 4294967295
  %and9.i273.4 = and i64 %mul3.i267.4, 4294967295
  %add.i274.4 = add nuw nsw i64 %shr7.i271.4, %and8.i272.4
  %add10.i275.4 = add nuw nsw i64 %add.i274.4, %and9.i273.4
  %shr11.i276.4 = lshr i64 %add10.i275.4, 32
  %shl.i277.4 = shl i64 %add10.i275.4, 32
  %xor68.i278.4 = or i64 %shl.i277.4, %and6.i270.4
  %shr13.i279.4 = lshr i64 %mul4.i268.4, 32
  %shr14.i280.4 = lshr i64 %mul3.i267.4, 32
  %and15.i281.4 = and i64 %mul5.i269.4, 4294967295
  %add16.i282.4 = add nuw nsw i64 %shr13.i279.4, %shr14.i280.4
  %add17.i283.4 = add nuw nsw i64 %add16.i282.4, %and15.i281.4
  %add18.i284.4 = add nuw nsw i64 %add17.i283.4, %shr11.i276.4
  %and19.i285.4 = and i64 %add18.i284.4, 4294967295
  %and21.i287.4 = and i64 %add18.i284.4, 30064771072
  %and22.i288.4 = and i64 %mul5.i269.4, -4294967296
  %add23.i289.4 = add i64 %and21.i287.4, %and22.i288.4
  %xor2569.i290.4 = or i64 %add23.i289.4, %and19.i285.4
  %add82.4 = add i64 %xor68.i278.4, %add111.3
  %xor.i256.4 = xor i64 %add82.4, %shl.i277.4
  %xor1.i257.4 = xor i64 %shl.i277.4, %add111.3
  %or.i258.4 = or i64 %xor.i256.4, %xor1.i257.4
  %xor2.i259.4 = xor i64 %or.i258.4, %add82.4
  %shr.i260.4 = lshr i64 %xor2.i259.4, 63
  %add89.4 = add i64 %shr.i260.4, %xor2569.i290.4
  %add90.4 = add i64 %add89.4, %add118.3
  %173 = xor i64 %add89.4, -9223372036854775808
  %xor2.i253.4 = and i64 %173, %add23.i289.4
  %xor.i244.4 = xor i64 %add90.4, %add89.4
  %xor1.i245.4 = xor i64 %add89.4, %add118.3
  %or.i246.4 = or i64 %xor.i244.4, %xor1.i245.4
  %xor2.i247.4 = xor i64 %or.i246.4, %add90.4
  %shr.i254326.4 = or i64 %xor2.i247.4, %xor2.i253.4
  %or94325.4 = lshr i64 %shr.i254326.4, 63
  %arrayidx74.4.1 = getelementptr inbounds i64, i64* %mc, i64 6
  %174 = load i64, i64* %arrayidx74.4.1, align 8, !tbaa !3
  %175 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 8), align 16, !tbaa !3
  %and.i262.4.1 = and i64 %174, 4294967295
  %shr.i263.4.1 = lshr i64 %174, 32
  %and1.i264.4.1 = and i64 %175, 4294967295
  %shr2.i265.4.1 = lshr i64 %175, 32
  %mul.i266.4.1 = mul nuw i64 %and1.i264.4.1, %and.i262.4.1
  %mul3.i267.4.1 = mul nuw i64 %shr2.i265.4.1, %and.i262.4.1
  %mul4.i268.4.1 = mul nuw i64 %and1.i264.4.1, %shr.i263.4.1
  %mul5.i269.4.1 = mul nuw i64 %shr2.i265.4.1, %shr.i263.4.1
  %and6.i270.4.1 = and i64 %mul.i266.4.1, 4294967295
  %shr7.i271.4.1 = lshr i64 %mul.i266.4.1, 32
  %and8.i272.4.1 = and i64 %mul4.i268.4.1, 4294967295
  %and9.i273.4.1 = and i64 %mul3.i267.4.1, 4294967295
  %add.i274.4.1 = add nuw nsw i64 %shr7.i271.4.1, %and8.i272.4.1
  %add10.i275.4.1 = add nuw nsw i64 %add.i274.4.1, %and9.i273.4.1
  %shr11.i276.4.1 = lshr i64 %add10.i275.4.1, 32
  %shl.i277.4.1 = shl i64 %add10.i275.4.1, 32
  %xor68.i278.4.1 = or i64 %shl.i277.4.1, %and6.i270.4.1
  %shr13.i279.4.1 = lshr i64 %mul4.i268.4.1, 32
  %shr14.i280.4.1 = lshr i64 %mul3.i267.4.1, 32
  %and15.i281.4.1 = and i64 %mul5.i269.4.1, 4294967295
  %add16.i282.4.1 = add nuw nsw i64 %shr13.i279.4.1, %shr14.i280.4.1
  %add17.i283.4.1 = add nuw nsw i64 %add16.i282.4.1, %and15.i281.4.1
  %add18.i284.4.1 = add nuw nsw i64 %add17.i283.4.1, %shr11.i276.4.1
  %and19.i285.4.1 = and i64 %add18.i284.4.1, 4294967295
  %and21.i287.4.1 = and i64 %add18.i284.4.1, 30064771072
  %and22.i288.4.1 = and i64 %mul5.i269.4.1, -4294967296
  %add23.i289.4.1 = add i64 %and21.i287.4.1, %and22.i288.4.1
  %xor2569.i290.4.1 = or i64 %add23.i289.4.1, %and19.i285.4.1
  %add82.4.1 = add i64 %xor68.i278.4.1, %add82.4
  %xor.i256.4.1 = xor i64 %add82.4.1, %shl.i277.4.1
  %xor1.i257.4.1 = xor i64 %shl.i277.4.1, %add82.4
  %or.i258.4.1 = or i64 %xor.i256.4.1, %xor1.i257.4.1
  %xor2.i259.4.1 = xor i64 %or.i258.4.1, %add82.4.1
  %shr.i260.4.1 = lshr i64 %xor2.i259.4.1, 63
  %add89.4.1 = add i64 %shr.i260.4.1, %xor2569.i290.4.1
  %add90.4.1 = add i64 %add89.4.1, %add90.4
  %176 = xor i64 %add89.4.1, -9223372036854775808
  %xor2.i253.4.1 = and i64 %176, %add23.i289.4.1
  %xor.i244.4.1 = xor i64 %add90.4.1, %add89.4.1
  %xor1.i245.4.1 = xor i64 %add89.4.1, %add90.4
  %or.i246.4.1 = or i64 %xor.i244.4.1, %xor1.i245.4.1
  %xor2.i247.4.1 = xor i64 %or.i246.4.1, %add90.4.1
  %shr.i254326.4.1 = or i64 %xor2.i247.4.1, %xor2.i253.4.1
  %or94325.4.1 = lshr i64 %shr.i254326.4.1, 63
  %add96.4.1 = add nuw nsw i64 %or94325.4.1, %or94325.4
  %arrayidx74.4.2 = getelementptr inbounds i64, i64* %mc, i64 7
  %177 = load i64, i64* %arrayidx74.4.2, align 8, !tbaa !3
  %178 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 7), align 8, !tbaa !3
  %and.i262.4.2 = and i64 %177, 4294967295
  %shr.i263.4.2 = lshr i64 %177, 32
  %and1.i264.4.2 = and i64 %178, 4294967295
  %shr2.i265.4.2 = lshr i64 %178, 32
  %mul.i266.4.2 = mul nuw i64 %and1.i264.4.2, %and.i262.4.2
  %mul3.i267.4.2 = mul nuw i64 %shr2.i265.4.2, %and.i262.4.2
  %mul4.i268.4.2 = mul nuw i64 %and1.i264.4.2, %shr.i263.4.2
  %mul5.i269.4.2 = mul nuw i64 %shr2.i265.4.2, %shr.i263.4.2
  %and6.i270.4.2 = and i64 %mul.i266.4.2, 4294967295
  %shr7.i271.4.2 = lshr i64 %mul.i266.4.2, 32
  %and8.i272.4.2 = and i64 %mul4.i268.4.2, 4294967295
  %and9.i273.4.2 = and i64 %mul3.i267.4.2, 4294967295
  %add.i274.4.2 = add nuw nsw i64 %shr7.i271.4.2, %and8.i272.4.2
  %add10.i275.4.2 = add nuw nsw i64 %add.i274.4.2, %and9.i273.4.2
  %shr11.i276.4.2 = lshr i64 %add10.i275.4.2, 32
  %shl.i277.4.2 = shl i64 %add10.i275.4.2, 32
  %xor68.i278.4.2 = or i64 %shl.i277.4.2, %and6.i270.4.2
  %shr13.i279.4.2 = lshr i64 %mul4.i268.4.2, 32
  %shr14.i280.4.2 = lshr i64 %mul3.i267.4.2, 32
  %and15.i281.4.2 = and i64 %mul5.i269.4.2, 4294967295
  %add16.i282.4.2 = add nuw nsw i64 %shr13.i279.4.2, %shr14.i280.4.2
  %add17.i283.4.2 = add nuw nsw i64 %add16.i282.4.2, %and15.i281.4.2
  %add18.i284.4.2 = add nuw nsw i64 %add17.i283.4.2, %shr11.i276.4.2
  %and19.i285.4.2 = and i64 %add18.i284.4.2, 4294967295
  %and21.i287.4.2 = and i64 %add18.i284.4.2, 30064771072
  %and22.i288.4.2 = and i64 %mul5.i269.4.2, -4294967296
  %add23.i289.4.2 = add i64 %and21.i287.4.2, %and22.i288.4.2
  %xor2569.i290.4.2 = or i64 %add23.i289.4.2, %and19.i285.4.2
  %add82.4.2 = add i64 %xor68.i278.4.2, %add82.4.1
  %xor.i256.4.2 = xor i64 %add82.4.2, %shl.i277.4.2
  %xor1.i257.4.2 = xor i64 %shl.i277.4.2, %add82.4.1
  %or.i258.4.2 = or i64 %xor.i256.4.2, %xor1.i257.4.2
  %xor2.i259.4.2 = xor i64 %or.i258.4.2, %add82.4.2
  %shr.i260.4.2 = lshr i64 %xor2.i259.4.2, 63
  %add89.4.2 = add i64 %shr.i260.4.2, %xor2569.i290.4.2
  %add90.4.2 = add i64 %add89.4.2, %add90.4.1
  %179 = xor i64 %add89.4.2, -9223372036854775808
  %xor2.i253.4.2 = and i64 %179, %add23.i289.4.2
  %xor.i244.4.2 = xor i64 %add90.4.2, %add89.4.2
  %xor1.i245.4.2 = xor i64 %add89.4.2, %add90.4.1
  %or.i246.4.2 = or i64 %xor.i244.4.2, %xor1.i245.4.2
  %xor2.i247.4.2 = xor i64 %or.i246.4.2, %add90.4.2
  %shr.i254326.4.2 = or i64 %xor2.i247.4.2, %xor2.i253.4.2
  %or94325.4.2 = lshr i64 %shr.i254326.4.2, 63
  %add96.4.2 = add nsw i64 %or94325.4.2, %add96.4.1
  %arrayidx74.4.3 = getelementptr inbounds i64, i64* %mc, i64 8
  %180 = load i64, i64* %arrayidx74.4.3, align 8, !tbaa !3
  %181 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 6), align 16, !tbaa !3
  %and.i262.4.3 = and i64 %180, 4294967295
  %shr.i263.4.3 = lshr i64 %180, 32
  %and1.i264.4.3 = and i64 %181, 4294967295
  %shr2.i265.4.3 = lshr i64 %181, 32
  %mul.i266.4.3 = mul nuw i64 %and1.i264.4.3, %and.i262.4.3
  %mul3.i267.4.3 = mul nuw i64 %shr2.i265.4.3, %and.i262.4.3
  %mul4.i268.4.3 = mul nuw i64 %and1.i264.4.3, %shr.i263.4.3
  %mul5.i269.4.3 = mul nuw i64 %shr2.i265.4.3, %shr.i263.4.3
  %and6.i270.4.3 = and i64 %mul.i266.4.3, 4294967295
  %shr7.i271.4.3 = lshr i64 %mul.i266.4.3, 32
  %and8.i272.4.3 = and i64 %mul4.i268.4.3, 4294967295
  %and9.i273.4.3 = and i64 %mul3.i267.4.3, 4294967295
  %add.i274.4.3 = add nuw nsw i64 %shr7.i271.4.3, %and8.i272.4.3
  %add10.i275.4.3 = add nuw nsw i64 %add.i274.4.3, %and9.i273.4.3
  %shr11.i276.4.3 = lshr i64 %add10.i275.4.3, 32
  %shl.i277.4.3 = shl i64 %add10.i275.4.3, 32
  %xor68.i278.4.3 = or i64 %shl.i277.4.3, %and6.i270.4.3
  %shr13.i279.4.3 = lshr i64 %mul4.i268.4.3, 32
  %shr14.i280.4.3 = lshr i64 %mul3.i267.4.3, 32
  %and15.i281.4.3 = and i64 %mul5.i269.4.3, 4294967295
  %add16.i282.4.3 = add nuw nsw i64 %shr13.i279.4.3, %shr14.i280.4.3
  %add17.i283.4.3 = add nuw nsw i64 %add16.i282.4.3, %and15.i281.4.3
  %add18.i284.4.3 = add nuw nsw i64 %add17.i283.4.3, %shr11.i276.4.3
  %and19.i285.4.3 = and i64 %add18.i284.4.3, 4294967295
  %and21.i287.4.3 = and i64 %add18.i284.4.3, 30064771072
  %and22.i288.4.3 = and i64 %mul5.i269.4.3, -4294967296
  %add23.i289.4.3 = add i64 %and21.i287.4.3, %and22.i288.4.3
  %xor2569.i290.4.3 = or i64 %add23.i289.4.3, %and19.i285.4.3
  %add82.4.3 = add i64 %xor68.i278.4.3, %add82.4.2
  %xor.i256.4.3 = xor i64 %add82.4.3, %shl.i277.4.3
  %xor1.i257.4.3 = xor i64 %shl.i277.4.3, %add82.4.2
  %or.i258.4.3 = or i64 %xor.i256.4.3, %xor1.i257.4.3
  %xor2.i259.4.3 = xor i64 %or.i258.4.3, %add82.4.3
  %shr.i260.4.3 = lshr i64 %xor2.i259.4.3, 63
  %add89.4.3 = add i64 %shr.i260.4.3, %xor2569.i290.4.3
  %add90.4.3 = add i64 %add89.4.3, %add90.4.2
  %182 = xor i64 %add89.4.3, -9223372036854775808
  %xor2.i253.4.3 = and i64 %182, %add23.i289.4.3
  %xor.i244.4.3 = xor i64 %add90.4.3, %add89.4.3
  %xor1.i245.4.3 = xor i64 %add89.4.3, %add90.4.2
  %or.i246.4.3 = or i64 %xor.i244.4.3, %xor1.i245.4.3
  %xor2.i247.4.3 = xor i64 %or.i246.4.3, %add90.4.3
  %shr.i254326.4.3 = or i64 %xor2.i247.4.3, %xor2.i253.4.3
  %or94325.4.3 = lshr i64 %shr.i254326.4.3, 63
  %add96.4.3 = add nsw i64 %or94325.4.3, %add96.4.2
  %arrayidx74.4.4 = getelementptr inbounds i64, i64* %mc, i64 9
  %183 = load i64, i64* %arrayidx74.4.4, align 8, !tbaa !3
  %184 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 5), align 8, !tbaa !3
  %and.i262.4.4 = and i64 %183, 4294967295
  %shr.i263.4.4 = lshr i64 %183, 32
  %and1.i264.4.4 = and i64 %184, 4294967295
  %shr2.i265.4.4 = lshr i64 %184, 32
  %mul.i266.4.4 = mul nuw i64 %and1.i264.4.4, %and.i262.4.4
  %mul3.i267.4.4 = mul nuw i64 %shr2.i265.4.4, %and.i262.4.4
  %mul4.i268.4.4 = mul nuw i64 %and1.i264.4.4, %shr.i263.4.4
  %mul5.i269.4.4 = mul nuw i64 %shr2.i265.4.4, %shr.i263.4.4
  %and6.i270.4.4 = and i64 %mul.i266.4.4, 4294967295
  %shr7.i271.4.4 = lshr i64 %mul.i266.4.4, 32
  %and8.i272.4.4 = and i64 %mul4.i268.4.4, 4294967295
  %and9.i273.4.4 = and i64 %mul3.i267.4.4, 4294967295
  %add.i274.4.4 = add nuw nsw i64 %shr7.i271.4.4, %and8.i272.4.4
  %add10.i275.4.4 = add nuw nsw i64 %add.i274.4.4, %and9.i273.4.4
  %shr11.i276.4.4 = lshr i64 %add10.i275.4.4, 32
  %shl.i277.4.4 = shl i64 %add10.i275.4.4, 32
  %xor68.i278.4.4 = or i64 %shl.i277.4.4, %and6.i270.4.4
  %shr13.i279.4.4 = lshr i64 %mul4.i268.4.4, 32
  %shr14.i280.4.4 = lshr i64 %mul3.i267.4.4, 32
  %and15.i281.4.4 = and i64 %mul5.i269.4.4, 4294967295
  %add16.i282.4.4 = add nuw nsw i64 %shr13.i279.4.4, %shr14.i280.4.4
  %add17.i283.4.4 = add nuw nsw i64 %add16.i282.4.4, %and15.i281.4.4
  %add18.i284.4.4 = add nuw nsw i64 %add17.i283.4.4, %shr11.i276.4.4
  %and19.i285.4.4 = and i64 %add18.i284.4.4, 4294967295
  %and21.i287.4.4 = and i64 %add18.i284.4.4, 30064771072
  %and22.i288.4.4 = and i64 %mul5.i269.4.4, -4294967296
  %add23.i289.4.4 = add i64 %and21.i287.4.4, %and22.i288.4.4
  %xor2569.i290.4.4 = or i64 %add23.i289.4.4, %and19.i285.4.4
  %add82.4.4 = add i64 %xor68.i278.4.4, %add82.4.3
  %xor.i256.4.4 = xor i64 %add82.4.4, %shl.i277.4.4
  %xor1.i257.4.4 = xor i64 %shl.i277.4.4, %add82.4.3
  %or.i258.4.4 = or i64 %xor.i256.4.4, %xor1.i257.4.4
  %xor2.i259.4.4 = xor i64 %or.i258.4.4, %add82.4.4
  %shr.i260.4.4 = lshr i64 %xor2.i259.4.4, 63
  %add89.4.4 = add i64 %shr.i260.4.4, %xor2569.i290.4.4
  %add90.4.4 = add i64 %add89.4.4, %add90.4.3
  %185 = xor i64 %add89.4.4, -9223372036854775808
  %xor2.i253.4.4 = and i64 %185, %add23.i289.4.4
  %xor.i244.4.4 = xor i64 %add90.4.4, %add89.4.4
  %xor1.i245.4.4 = xor i64 %add89.4.4, %add90.4.3
  %or.i246.4.4 = or i64 %xor.i244.4.4, %xor1.i245.4.4
  %xor2.i247.4.4 = xor i64 %or.i246.4.4, %add90.4.4
  %shr.i254326.4.4 = or i64 %xor2.i247.4.4, %xor2.i253.4.4
  %or94325.4.4 = lshr i64 %shr.i254326.4.4, 63
  %add96.4.4 = add i64 %or94325.4.4, %add96.4.3
  %arrayidx104.4 = getelementptr inbounds i64, i64* %ma, i64 14
  %186 = load i64, i64* %arrayidx104.4, align 8, !tbaa !3
  %add105.4 = add i64 %186, %add82.4.4
  %xor.i238.4 = xor i64 %add105.4, %add82.4.4
  %xor1.i239.4 = xor i64 %186, %add82.4.4
  %or.i240.4 = or i64 %xor.i238.4, %xor1.i239.4
  %xor2.i241.4 = xor i64 %or.i240.4, %add105.4
  %shr.i242.4 = lshr i64 %xor2.i241.4, 63
  %add111.4 = add i64 %shr.i242.4, %add90.4.4
  store i64 %add105.4, i64* %arrayidx50.4, align 8, !tbaa !3
  %187 = xor i64 %add111.4, -9223372036854775808
  %xor2.i.4 = and i64 %187, %add90.4.4
  %shr.i237.4 = lshr i64 %xor2.i.4, 63
  %add118.4 = add i64 %shr.i237.4, %add96.4.4
  %arrayidx74.5 = getelementptr inbounds i64, i64* %mc, i64 6
  %188 = load i64, i64* %arrayidx74.5, align 8, !tbaa !3
  %189 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 9), align 8, !tbaa !3
  %and.i262.5 = and i64 %188, 4294967295
  %shr.i263.5 = lshr i64 %188, 32
  %and1.i264.5 = and i64 %189, 4294967295
  %shr2.i265.5 = lshr i64 %189, 32
  %mul.i266.5 = mul nuw i64 %and1.i264.5, %and.i262.5
  %mul3.i267.5 = mul nuw i64 %shr2.i265.5, %and.i262.5
  %mul4.i268.5 = mul nuw i64 %and1.i264.5, %shr.i263.5
  %mul5.i269.5 = mul nuw i64 %shr2.i265.5, %shr.i263.5
  %and6.i270.5 = and i64 %mul.i266.5, 4294967295
  %shr7.i271.5 = lshr i64 %mul.i266.5, 32
  %and8.i272.5 = and i64 %mul4.i268.5, 4294967295
  %and9.i273.5 = and i64 %mul3.i267.5, 4294967295
  %add.i274.5 = add nuw nsw i64 %shr7.i271.5, %and8.i272.5
  %add10.i275.5 = add nuw nsw i64 %add.i274.5, %and9.i273.5
  %shr11.i276.5 = lshr i64 %add10.i275.5, 32
  %shl.i277.5 = shl i64 %add10.i275.5, 32
  %xor68.i278.5 = or i64 %shl.i277.5, %and6.i270.5
  %shr13.i279.5 = lshr i64 %mul4.i268.5, 32
  %shr14.i280.5 = lshr i64 %mul3.i267.5, 32
  %and15.i281.5 = and i64 %mul5.i269.5, 4294967295
  %add16.i282.5 = add nuw nsw i64 %shr13.i279.5, %shr14.i280.5
  %add17.i283.5 = add nuw nsw i64 %add16.i282.5, %and15.i281.5
  %add18.i284.5 = add nuw nsw i64 %add17.i283.5, %shr11.i276.5
  %and19.i285.5 = and i64 %add18.i284.5, 4294967295
  %and21.i287.5 = and i64 %add18.i284.5, 30064771072
  %and22.i288.5 = and i64 %mul5.i269.5, -4294967296
  %add23.i289.5 = add i64 %and21.i287.5, %and22.i288.5
  %xor2569.i290.5 = or i64 %add23.i289.5, %and19.i285.5
  %add82.5 = add i64 %xor68.i278.5, %add111.4
  %xor.i256.5 = xor i64 %add82.5, %shl.i277.5
  %xor1.i257.5 = xor i64 %shl.i277.5, %add111.4
  %or.i258.5 = or i64 %xor.i256.5, %xor1.i257.5
  %xor2.i259.5 = xor i64 %or.i258.5, %add82.5
  %shr.i260.5 = lshr i64 %xor2.i259.5, 63
  %add89.5 = add i64 %shr.i260.5, %xor2569.i290.5
  %add90.5 = add i64 %add89.5, %add118.4
  %190 = xor i64 %add89.5, -9223372036854775808
  %xor2.i253.5 = and i64 %190, %add23.i289.5
  %xor.i244.5 = xor i64 %add90.5, %add89.5
  %xor1.i245.5 = xor i64 %add89.5, %add118.4
  %or.i246.5 = or i64 %xor.i244.5, %xor1.i245.5
  %xor2.i247.5 = xor i64 %or.i246.5, %add90.5
  %shr.i254326.5 = or i64 %xor2.i247.5, %xor2.i253.5
  %or94325.5 = lshr i64 %shr.i254326.5, 63
  %arrayidx74.5.1 = getelementptr inbounds i64, i64* %mc, i64 7
  %191 = load i64, i64* %arrayidx74.5.1, align 8, !tbaa !3
  %192 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 8), align 16, !tbaa !3
  %and.i262.5.1 = and i64 %191, 4294967295
  %shr.i263.5.1 = lshr i64 %191, 32
  %and1.i264.5.1 = and i64 %192, 4294967295
  %shr2.i265.5.1 = lshr i64 %192, 32
  %mul.i266.5.1 = mul nuw i64 %and1.i264.5.1, %and.i262.5.1
  %mul3.i267.5.1 = mul nuw i64 %shr2.i265.5.1, %and.i262.5.1
  %mul4.i268.5.1 = mul nuw i64 %and1.i264.5.1, %shr.i263.5.1
  %mul5.i269.5.1 = mul nuw i64 %shr2.i265.5.1, %shr.i263.5.1
  %and6.i270.5.1 = and i64 %mul.i266.5.1, 4294967295
  %shr7.i271.5.1 = lshr i64 %mul.i266.5.1, 32
  %and8.i272.5.1 = and i64 %mul4.i268.5.1, 4294967295
  %and9.i273.5.1 = and i64 %mul3.i267.5.1, 4294967295
  %add.i274.5.1 = add nuw nsw i64 %shr7.i271.5.1, %and8.i272.5.1
  %add10.i275.5.1 = add nuw nsw i64 %add.i274.5.1, %and9.i273.5.1
  %shr11.i276.5.1 = lshr i64 %add10.i275.5.1, 32
  %shl.i277.5.1 = shl i64 %add10.i275.5.1, 32
  %xor68.i278.5.1 = or i64 %shl.i277.5.1, %and6.i270.5.1
  %shr13.i279.5.1 = lshr i64 %mul4.i268.5.1, 32
  %shr14.i280.5.1 = lshr i64 %mul3.i267.5.1, 32
  %and15.i281.5.1 = and i64 %mul5.i269.5.1, 4294967295
  %add16.i282.5.1 = add nuw nsw i64 %shr13.i279.5.1, %shr14.i280.5.1
  %add17.i283.5.1 = add nuw nsw i64 %add16.i282.5.1, %and15.i281.5.1
  %add18.i284.5.1 = add nuw nsw i64 %add17.i283.5.1, %shr11.i276.5.1
  %and19.i285.5.1 = and i64 %add18.i284.5.1, 4294967295
  %and21.i287.5.1 = and i64 %add18.i284.5.1, 30064771072
  %and22.i288.5.1 = and i64 %mul5.i269.5.1, -4294967296
  %add23.i289.5.1 = add i64 %and21.i287.5.1, %and22.i288.5.1
  %xor2569.i290.5.1 = or i64 %add23.i289.5.1, %and19.i285.5.1
  %add82.5.1 = add i64 %xor68.i278.5.1, %add82.5
  %xor.i256.5.1 = xor i64 %add82.5.1, %shl.i277.5.1
  %xor1.i257.5.1 = xor i64 %shl.i277.5.1, %add82.5
  %or.i258.5.1 = or i64 %xor.i256.5.1, %xor1.i257.5.1
  %xor2.i259.5.1 = xor i64 %or.i258.5.1, %add82.5.1
  %shr.i260.5.1 = lshr i64 %xor2.i259.5.1, 63
  %add89.5.1 = add i64 %shr.i260.5.1, %xor2569.i290.5.1
  %add90.5.1 = add i64 %add89.5.1, %add90.5
  %193 = xor i64 %add89.5.1, -9223372036854775808
  %xor2.i253.5.1 = and i64 %193, %add23.i289.5.1
  %xor.i244.5.1 = xor i64 %add90.5.1, %add89.5.1
  %xor1.i245.5.1 = xor i64 %add89.5.1, %add90.5
  %or.i246.5.1 = or i64 %xor.i244.5.1, %xor1.i245.5.1
  %xor2.i247.5.1 = xor i64 %or.i246.5.1, %add90.5.1
  %shr.i254326.5.1 = or i64 %xor2.i247.5.1, %xor2.i253.5.1
  %or94325.5.1 = lshr i64 %shr.i254326.5.1, 63
  %add96.5.1 = add nuw nsw i64 %or94325.5.1, %or94325.5
  %arrayidx74.5.2 = getelementptr inbounds i64, i64* %mc, i64 8
  %194 = load i64, i64* %arrayidx74.5.2, align 8, !tbaa !3
  %195 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 7), align 8, !tbaa !3
  %and.i262.5.2 = and i64 %194, 4294967295
  %shr.i263.5.2 = lshr i64 %194, 32
  %and1.i264.5.2 = and i64 %195, 4294967295
  %shr2.i265.5.2 = lshr i64 %195, 32
  %mul.i266.5.2 = mul nuw i64 %and1.i264.5.2, %and.i262.5.2
  %mul3.i267.5.2 = mul nuw i64 %shr2.i265.5.2, %and.i262.5.2
  %mul4.i268.5.2 = mul nuw i64 %and1.i264.5.2, %shr.i263.5.2
  %mul5.i269.5.2 = mul nuw i64 %shr2.i265.5.2, %shr.i263.5.2
  %and6.i270.5.2 = and i64 %mul.i266.5.2, 4294967295
  %shr7.i271.5.2 = lshr i64 %mul.i266.5.2, 32
  %and8.i272.5.2 = and i64 %mul4.i268.5.2, 4294967295
  %and9.i273.5.2 = and i64 %mul3.i267.5.2, 4294967295
  %add.i274.5.2 = add nuw nsw i64 %shr7.i271.5.2, %and8.i272.5.2
  %add10.i275.5.2 = add nuw nsw i64 %add.i274.5.2, %and9.i273.5.2
  %shr11.i276.5.2 = lshr i64 %add10.i275.5.2, 32
  %shl.i277.5.2 = shl i64 %add10.i275.5.2, 32
  %xor68.i278.5.2 = or i64 %shl.i277.5.2, %and6.i270.5.2
  %shr13.i279.5.2 = lshr i64 %mul4.i268.5.2, 32
  %shr14.i280.5.2 = lshr i64 %mul3.i267.5.2, 32
  %and15.i281.5.2 = and i64 %mul5.i269.5.2, 4294967295
  %add16.i282.5.2 = add nuw nsw i64 %shr13.i279.5.2, %shr14.i280.5.2
  %add17.i283.5.2 = add nuw nsw i64 %add16.i282.5.2, %and15.i281.5.2
  %add18.i284.5.2 = add nuw nsw i64 %add17.i283.5.2, %shr11.i276.5.2
  %and19.i285.5.2 = and i64 %add18.i284.5.2, 4294967295
  %and21.i287.5.2 = and i64 %add18.i284.5.2, 30064771072
  %and22.i288.5.2 = and i64 %mul5.i269.5.2, -4294967296
  %add23.i289.5.2 = add i64 %and21.i287.5.2, %and22.i288.5.2
  %xor2569.i290.5.2 = or i64 %add23.i289.5.2, %and19.i285.5.2
  %add82.5.2 = add i64 %xor68.i278.5.2, %add82.5.1
  %xor.i256.5.2 = xor i64 %add82.5.2, %shl.i277.5.2
  %xor1.i257.5.2 = xor i64 %shl.i277.5.2, %add82.5.1
  %or.i258.5.2 = or i64 %xor.i256.5.2, %xor1.i257.5.2
  %xor2.i259.5.2 = xor i64 %or.i258.5.2, %add82.5.2
  %shr.i260.5.2 = lshr i64 %xor2.i259.5.2, 63
  %add89.5.2 = add i64 %shr.i260.5.2, %xor2569.i290.5.2
  %add90.5.2 = add i64 %add89.5.2, %add90.5.1
  %196 = xor i64 %add89.5.2, -9223372036854775808
  %xor2.i253.5.2 = and i64 %196, %add23.i289.5.2
  %xor.i244.5.2 = xor i64 %add90.5.2, %add89.5.2
  %xor1.i245.5.2 = xor i64 %add89.5.2, %add90.5.1
  %or.i246.5.2 = or i64 %xor.i244.5.2, %xor1.i245.5.2
  %xor2.i247.5.2 = xor i64 %or.i246.5.2, %add90.5.2
  %shr.i254326.5.2 = or i64 %xor2.i247.5.2, %xor2.i253.5.2
  %or94325.5.2 = lshr i64 %shr.i254326.5.2, 63
  %add96.5.2 = add nsw i64 %or94325.5.2, %add96.5.1
  %arrayidx74.5.3 = getelementptr inbounds i64, i64* %mc, i64 9
  %197 = load i64, i64* %arrayidx74.5.3, align 8, !tbaa !3
  %198 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 6), align 16, !tbaa !3
  %and.i262.5.3 = and i64 %197, 4294967295
  %shr.i263.5.3 = lshr i64 %197, 32
  %and1.i264.5.3 = and i64 %198, 4294967295
  %shr2.i265.5.3 = lshr i64 %198, 32
  %mul.i266.5.3 = mul nuw i64 %and1.i264.5.3, %and.i262.5.3
  %mul3.i267.5.3 = mul nuw i64 %shr2.i265.5.3, %and.i262.5.3
  %mul4.i268.5.3 = mul nuw i64 %and1.i264.5.3, %shr.i263.5.3
  %mul5.i269.5.3 = mul nuw i64 %shr2.i265.5.3, %shr.i263.5.3
  %and6.i270.5.3 = and i64 %mul.i266.5.3, 4294967295
  %shr7.i271.5.3 = lshr i64 %mul.i266.5.3, 32
  %and8.i272.5.3 = and i64 %mul4.i268.5.3, 4294967295
  %and9.i273.5.3 = and i64 %mul3.i267.5.3, 4294967295
  %add.i274.5.3 = add nuw nsw i64 %shr7.i271.5.3, %and8.i272.5.3
  %add10.i275.5.3 = add nuw nsw i64 %add.i274.5.3, %and9.i273.5.3
  %shr11.i276.5.3 = lshr i64 %add10.i275.5.3, 32
  %shl.i277.5.3 = shl i64 %add10.i275.5.3, 32
  %xor68.i278.5.3 = or i64 %shl.i277.5.3, %and6.i270.5.3
  %shr13.i279.5.3 = lshr i64 %mul4.i268.5.3, 32
  %shr14.i280.5.3 = lshr i64 %mul3.i267.5.3, 32
  %and15.i281.5.3 = and i64 %mul5.i269.5.3, 4294967295
  %add16.i282.5.3 = add nuw nsw i64 %shr13.i279.5.3, %shr14.i280.5.3
  %add17.i283.5.3 = add nuw nsw i64 %add16.i282.5.3, %and15.i281.5.3
  %add18.i284.5.3 = add nuw nsw i64 %add17.i283.5.3, %shr11.i276.5.3
  %and19.i285.5.3 = and i64 %add18.i284.5.3, 4294967295
  %and21.i287.5.3 = and i64 %add18.i284.5.3, 30064771072
  %and22.i288.5.3 = and i64 %mul5.i269.5.3, -4294967296
  %add23.i289.5.3 = add i64 %and21.i287.5.3, %and22.i288.5.3
  %xor2569.i290.5.3 = or i64 %add23.i289.5.3, %and19.i285.5.3
  %add82.5.3 = add i64 %xor68.i278.5.3, %add82.5.2
  %xor.i256.5.3 = xor i64 %add82.5.3, %shl.i277.5.3
  %xor1.i257.5.3 = xor i64 %shl.i277.5.3, %add82.5.2
  %or.i258.5.3 = or i64 %xor.i256.5.3, %xor1.i257.5.3
  %xor2.i259.5.3 = xor i64 %or.i258.5.3, %add82.5.3
  %shr.i260.5.3 = lshr i64 %xor2.i259.5.3, 63
  %add89.5.3 = add i64 %shr.i260.5.3, %xor2569.i290.5.3
  %add90.5.3 = add i64 %add89.5.3, %add90.5.2
  %199 = xor i64 %add89.5.3, -9223372036854775808
  %xor2.i253.5.3 = and i64 %199, %add23.i289.5.3
  %xor.i244.5.3 = xor i64 %add90.5.3, %add89.5.3
  %xor1.i245.5.3 = xor i64 %add89.5.3, %add90.5.2
  %or.i246.5.3 = or i64 %xor.i244.5.3, %xor1.i245.5.3
  %xor2.i247.5.3 = xor i64 %or.i246.5.3, %add90.5.3
  %shr.i254326.5.3 = or i64 %xor2.i247.5.3, %xor2.i253.5.3
  %or94325.5.3 = lshr i64 %shr.i254326.5.3, 63
  %add96.5.3 = add nsw i64 %or94325.5.3, %add96.5.2
  %arrayidx104.5 = getelementptr inbounds i64, i64* %ma, i64 15
  %200 = load i64, i64* %arrayidx104.5, align 8, !tbaa !3
  %add105.5 = add i64 %200, %add82.5.3
  %xor.i238.5 = xor i64 %add105.5, %add82.5.3
  %xor1.i239.5 = xor i64 %200, %add82.5.3
  %or.i240.5 = or i64 %xor.i238.5, %xor1.i239.5
  %xor2.i241.5 = xor i64 %or.i240.5, %add105.5
  %shr.i242.5 = lshr i64 %xor2.i241.5, 63
  %add111.5 = add i64 %shr.i242.5, %add90.5.3
  store i64 %add105.5, i64* %arrayidx50.5, align 8, !tbaa !3
  %201 = xor i64 %add111.5, -9223372036854775808
  %xor2.i.5 = and i64 %201, %add90.5.3
  %shr.i237.5 = lshr i64 %xor2.i.5, 63
  %add118.5 = add i64 %shr.i237.5, %add96.5.3
  %arrayidx74.6 = getelementptr inbounds i64, i64* %mc, i64 7
  %202 = load i64, i64* %arrayidx74.6, align 8, !tbaa !3
  %203 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 9), align 8, !tbaa !3
  %and.i262.6 = and i64 %202, 4294967295
  %shr.i263.6 = lshr i64 %202, 32
  %and1.i264.6 = and i64 %203, 4294967295
  %shr2.i265.6 = lshr i64 %203, 32
  %mul.i266.6 = mul nuw i64 %and1.i264.6, %and.i262.6
  %mul3.i267.6 = mul nuw i64 %shr2.i265.6, %and.i262.6
  %mul4.i268.6 = mul nuw i64 %and1.i264.6, %shr.i263.6
  %mul5.i269.6 = mul nuw i64 %shr2.i265.6, %shr.i263.6
  %and6.i270.6 = and i64 %mul.i266.6, 4294967295
  %shr7.i271.6 = lshr i64 %mul.i266.6, 32
  %and8.i272.6 = and i64 %mul4.i268.6, 4294967295
  %and9.i273.6 = and i64 %mul3.i267.6, 4294967295
  %add.i274.6 = add nuw nsw i64 %shr7.i271.6, %and8.i272.6
  %add10.i275.6 = add nuw nsw i64 %add.i274.6, %and9.i273.6
  %shr11.i276.6 = lshr i64 %add10.i275.6, 32
  %shl.i277.6 = shl i64 %add10.i275.6, 32
  %xor68.i278.6 = or i64 %shl.i277.6, %and6.i270.6
  %shr13.i279.6 = lshr i64 %mul4.i268.6, 32
  %shr14.i280.6 = lshr i64 %mul3.i267.6, 32
  %and15.i281.6 = and i64 %mul5.i269.6, 4294967295
  %add16.i282.6 = add nuw nsw i64 %shr13.i279.6, %shr14.i280.6
  %add17.i283.6 = add nuw nsw i64 %add16.i282.6, %and15.i281.6
  %add18.i284.6 = add nuw nsw i64 %add17.i283.6, %shr11.i276.6
  %and19.i285.6 = and i64 %add18.i284.6, 4294967295
  %and21.i287.6 = and i64 %add18.i284.6, 30064771072
  %and22.i288.6 = and i64 %mul5.i269.6, -4294967296
  %add23.i289.6 = add i64 %and21.i287.6, %and22.i288.6
  %xor2569.i290.6 = or i64 %add23.i289.6, %and19.i285.6
  %add82.6 = add i64 %xor68.i278.6, %add111.5
  %xor.i256.6 = xor i64 %add82.6, %shl.i277.6
  %xor1.i257.6 = xor i64 %shl.i277.6, %add111.5
  %or.i258.6 = or i64 %xor.i256.6, %xor1.i257.6
  %xor2.i259.6 = xor i64 %or.i258.6, %add82.6
  %shr.i260.6 = lshr i64 %xor2.i259.6, 63
  %add89.6 = add i64 %shr.i260.6, %xor2569.i290.6
  %add90.6 = add i64 %add89.6, %add118.5
  %204 = xor i64 %add89.6, -9223372036854775808
  %xor2.i253.6 = and i64 %204, %add23.i289.6
  %xor.i244.6 = xor i64 %add90.6, %add89.6
  %xor1.i245.6 = xor i64 %add89.6, %add118.5
  %or.i246.6 = or i64 %xor.i244.6, %xor1.i245.6
  %xor2.i247.6 = xor i64 %or.i246.6, %add90.6
  %shr.i254326.6 = or i64 %xor2.i247.6, %xor2.i253.6
  %or94325.6 = lshr i64 %shr.i254326.6, 63
  %arrayidx74.6.1 = getelementptr inbounds i64, i64* %mc, i64 8
  %205 = load i64, i64* %arrayidx74.6.1, align 8, !tbaa !3
  %206 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 8), align 16, !tbaa !3
  %and.i262.6.1 = and i64 %205, 4294967295
  %shr.i263.6.1 = lshr i64 %205, 32
  %and1.i264.6.1 = and i64 %206, 4294967295
  %shr2.i265.6.1 = lshr i64 %206, 32
  %mul.i266.6.1 = mul nuw i64 %and1.i264.6.1, %and.i262.6.1
  %mul3.i267.6.1 = mul nuw i64 %shr2.i265.6.1, %and.i262.6.1
  %mul4.i268.6.1 = mul nuw i64 %and1.i264.6.1, %shr.i263.6.1
  %mul5.i269.6.1 = mul nuw i64 %shr2.i265.6.1, %shr.i263.6.1
  %and6.i270.6.1 = and i64 %mul.i266.6.1, 4294967295
  %shr7.i271.6.1 = lshr i64 %mul.i266.6.1, 32
  %and8.i272.6.1 = and i64 %mul4.i268.6.1, 4294967295
  %and9.i273.6.1 = and i64 %mul3.i267.6.1, 4294967295
  %add.i274.6.1 = add nuw nsw i64 %shr7.i271.6.1, %and8.i272.6.1
  %add10.i275.6.1 = add nuw nsw i64 %add.i274.6.1, %and9.i273.6.1
  %shr11.i276.6.1 = lshr i64 %add10.i275.6.1, 32
  %shl.i277.6.1 = shl i64 %add10.i275.6.1, 32
  %xor68.i278.6.1 = or i64 %shl.i277.6.1, %and6.i270.6.1
  %shr13.i279.6.1 = lshr i64 %mul4.i268.6.1, 32
  %shr14.i280.6.1 = lshr i64 %mul3.i267.6.1, 32
  %and15.i281.6.1 = and i64 %mul5.i269.6.1, 4294967295
  %add16.i282.6.1 = add nuw nsw i64 %shr13.i279.6.1, %shr14.i280.6.1
  %add17.i283.6.1 = add nuw nsw i64 %add16.i282.6.1, %and15.i281.6.1
  %add18.i284.6.1 = add nuw nsw i64 %add17.i283.6.1, %shr11.i276.6.1
  %and19.i285.6.1 = and i64 %add18.i284.6.1, 4294967295
  %and21.i287.6.1 = and i64 %add18.i284.6.1, 30064771072
  %and22.i288.6.1 = and i64 %mul5.i269.6.1, -4294967296
  %add23.i289.6.1 = add i64 %and21.i287.6.1, %and22.i288.6.1
  %xor2569.i290.6.1 = or i64 %add23.i289.6.1, %and19.i285.6.1
  %add82.6.1 = add i64 %xor68.i278.6.1, %add82.6
  %xor.i256.6.1 = xor i64 %add82.6.1, %shl.i277.6.1
  %xor1.i257.6.1 = xor i64 %shl.i277.6.1, %add82.6
  %or.i258.6.1 = or i64 %xor.i256.6.1, %xor1.i257.6.1
  %xor2.i259.6.1 = xor i64 %or.i258.6.1, %add82.6.1
  %shr.i260.6.1 = lshr i64 %xor2.i259.6.1, 63
  %add89.6.1 = add i64 %shr.i260.6.1, %xor2569.i290.6.1
  %add90.6.1 = add i64 %add89.6.1, %add90.6
  %207 = xor i64 %add89.6.1, -9223372036854775808
  %xor2.i253.6.1 = and i64 %207, %add23.i289.6.1
  %xor.i244.6.1 = xor i64 %add90.6.1, %add89.6.1
  %xor1.i245.6.1 = xor i64 %add89.6.1, %add90.6
  %or.i246.6.1 = or i64 %xor.i244.6.1, %xor1.i245.6.1
  %xor2.i247.6.1 = xor i64 %or.i246.6.1, %add90.6.1
  %shr.i254326.6.1 = or i64 %xor2.i247.6.1, %xor2.i253.6.1
  %or94325.6.1 = lshr i64 %shr.i254326.6.1, 63
  %add96.6.1 = add nuw nsw i64 %or94325.6.1, %or94325.6
  %arrayidx74.6.2 = getelementptr inbounds i64, i64* %mc, i64 9
  %208 = load i64, i64* %arrayidx74.6.2, align 8, !tbaa !3
  %209 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 7), align 8, !tbaa !3
  %and.i262.6.2 = and i64 %208, 4294967295
  %shr.i263.6.2 = lshr i64 %208, 32
  %and1.i264.6.2 = and i64 %209, 4294967295
  %shr2.i265.6.2 = lshr i64 %209, 32
  %mul.i266.6.2 = mul nuw i64 %and1.i264.6.2, %and.i262.6.2
  %mul3.i267.6.2 = mul nuw i64 %shr2.i265.6.2, %and.i262.6.2
  %mul4.i268.6.2 = mul nuw i64 %and1.i264.6.2, %shr.i263.6.2
  %mul5.i269.6.2 = mul nuw i64 %shr2.i265.6.2, %shr.i263.6.2
  %and6.i270.6.2 = and i64 %mul.i266.6.2, 4294967295
  %shr7.i271.6.2 = lshr i64 %mul.i266.6.2, 32
  %and8.i272.6.2 = and i64 %mul4.i268.6.2, 4294967295
  %and9.i273.6.2 = and i64 %mul3.i267.6.2, 4294967295
  %add.i274.6.2 = add nuw nsw i64 %shr7.i271.6.2, %and8.i272.6.2
  %add10.i275.6.2 = add nuw nsw i64 %add.i274.6.2, %and9.i273.6.2
  %shr11.i276.6.2 = lshr i64 %add10.i275.6.2, 32
  %shl.i277.6.2 = shl i64 %add10.i275.6.2, 32
  %xor68.i278.6.2 = or i64 %shl.i277.6.2, %and6.i270.6.2
  %shr13.i279.6.2 = lshr i64 %mul4.i268.6.2, 32
  %shr14.i280.6.2 = lshr i64 %mul3.i267.6.2, 32
  %and15.i281.6.2 = and i64 %mul5.i269.6.2, 4294967295
  %add16.i282.6.2 = add nuw nsw i64 %shr13.i279.6.2, %shr14.i280.6.2
  %add17.i283.6.2 = add nuw nsw i64 %add16.i282.6.2, %and15.i281.6.2
  %add18.i284.6.2 = add nuw nsw i64 %add17.i283.6.2, %shr11.i276.6.2
  %and19.i285.6.2 = and i64 %add18.i284.6.2, 4294967295
  %and21.i287.6.2 = and i64 %add18.i284.6.2, 30064771072
  %and22.i288.6.2 = and i64 %mul5.i269.6.2, -4294967296
  %add23.i289.6.2 = add i64 %and21.i287.6.2, %and22.i288.6.2
  %xor2569.i290.6.2 = or i64 %add23.i289.6.2, %and19.i285.6.2
  %add82.6.2 = add i64 %xor68.i278.6.2, %add82.6.1
  %xor.i256.6.2 = xor i64 %add82.6.2, %shl.i277.6.2
  %xor1.i257.6.2 = xor i64 %shl.i277.6.2, %add82.6.1
  %or.i258.6.2 = or i64 %xor.i256.6.2, %xor1.i257.6.2
  %xor2.i259.6.2 = xor i64 %or.i258.6.2, %add82.6.2
  %shr.i260.6.2 = lshr i64 %xor2.i259.6.2, 63
  %add89.6.2 = add i64 %shr.i260.6.2, %xor2569.i290.6.2
  %add90.6.2 = add i64 %add89.6.2, %add90.6.1
  %210 = xor i64 %add89.6.2, -9223372036854775808
  %xor2.i253.6.2 = and i64 %210, %add23.i289.6.2
  %xor.i244.6.2 = xor i64 %add90.6.2, %add89.6.2
  %xor1.i245.6.2 = xor i64 %add89.6.2, %add90.6.1
  %or.i246.6.2 = or i64 %xor.i244.6.2, %xor1.i245.6.2
  %xor2.i247.6.2 = xor i64 %or.i246.6.2, %add90.6.2
  %shr.i254326.6.2 = or i64 %xor2.i247.6.2, %xor2.i253.6.2
  %or94325.6.2 = lshr i64 %shr.i254326.6.2, 63
  %add96.6.2 = add nsw i64 %or94325.6.2, %add96.6.1
  %arrayidx104.6 = getelementptr inbounds i64, i64* %ma, i64 16
  %211 = load i64, i64* %arrayidx104.6, align 8, !tbaa !3
  %add105.6 = add i64 %211, %add82.6.2
  %xor.i238.6 = xor i64 %add105.6, %add82.6.2
  %xor1.i239.6 = xor i64 %211, %add82.6.2
  %or.i240.6 = or i64 %xor.i238.6, %xor1.i239.6
  %xor2.i241.6 = xor i64 %or.i240.6, %add105.6
  %shr.i242.6 = lshr i64 %xor2.i241.6, 63
  %add111.6 = add i64 %shr.i242.6, %add90.6.2
  store i64 %add105.6, i64* %arrayidx50.6, align 8, !tbaa !3
  %212 = xor i64 %add111.6, -9223372036854775808
  %xor2.i.6 = and i64 %212, %add90.6.2
  %shr.i237.6 = lshr i64 %xor2.i.6, 63
  %add118.6 = add nsw i64 %shr.i237.6, %add96.6.2
  %arrayidx74.7 = getelementptr inbounds i64, i64* %mc, i64 8
  %213 = load i64, i64* %arrayidx74.7, align 8, !tbaa !3
  %214 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 9), align 8, !tbaa !3
  %and.i262.7 = and i64 %213, 4294967295
  %shr.i263.7 = lshr i64 %213, 32
  %and1.i264.7 = and i64 %214, 4294967295
  %shr2.i265.7 = lshr i64 %214, 32
  %mul.i266.7 = mul nuw i64 %and1.i264.7, %and.i262.7
  %mul3.i267.7 = mul nuw i64 %shr2.i265.7, %and.i262.7
  %mul4.i268.7 = mul nuw i64 %and1.i264.7, %shr.i263.7
  %mul5.i269.7 = mul nuw i64 %shr2.i265.7, %shr.i263.7
  %and6.i270.7 = and i64 %mul.i266.7, 4294967295
  %shr7.i271.7 = lshr i64 %mul.i266.7, 32
  %and8.i272.7 = and i64 %mul4.i268.7, 4294967295
  %and9.i273.7 = and i64 %mul3.i267.7, 4294967295
  %add.i274.7 = add nuw nsw i64 %shr7.i271.7, %and8.i272.7
  %add10.i275.7 = add nuw nsw i64 %add.i274.7, %and9.i273.7
  %shr11.i276.7 = lshr i64 %add10.i275.7, 32
  %shl.i277.7 = shl i64 %add10.i275.7, 32
  %xor68.i278.7 = or i64 %shl.i277.7, %and6.i270.7
  %shr13.i279.7 = lshr i64 %mul4.i268.7, 32
  %shr14.i280.7 = lshr i64 %mul3.i267.7, 32
  %and15.i281.7 = and i64 %mul5.i269.7, 4294967295
  %add16.i282.7 = add nuw nsw i64 %shr13.i279.7, %shr14.i280.7
  %add17.i283.7 = add nuw nsw i64 %add16.i282.7, %and15.i281.7
  %add18.i284.7 = add nuw nsw i64 %add17.i283.7, %shr11.i276.7
  %and19.i285.7 = and i64 %add18.i284.7, 4294967295
  %and21.i287.7 = and i64 %add18.i284.7, 30064771072
  %and22.i288.7 = and i64 %mul5.i269.7, -4294967296
  %add23.i289.7 = add i64 %and21.i287.7, %and22.i288.7
  %xor2569.i290.7 = or i64 %add23.i289.7, %and19.i285.7
  %add82.7 = add i64 %xor68.i278.7, %add111.6
  %xor.i256.7 = xor i64 %add82.7, %shl.i277.7
  %xor1.i257.7 = xor i64 %shl.i277.7, %add111.6
  %or.i258.7 = or i64 %xor.i256.7, %xor1.i257.7
  %xor2.i259.7 = xor i64 %or.i258.7, %add82.7
  %shr.i260.7 = lshr i64 %xor2.i259.7, 63
  %add89.7 = add i64 %shr.i260.7, %xor2569.i290.7
  %add90.7 = add i64 %add89.7, %add118.6
  %215 = xor i64 %add89.7, -9223372036854775808
  %xor2.i253.7 = and i64 %215, %add23.i289.7
  %xor.i244.7 = xor i64 %add90.7, %add89.7
  %xor1.i245.7 = xor i64 %add89.7, %add118.6
  %or.i246.7 = or i64 %xor.i244.7, %xor1.i245.7
  %xor2.i247.7 = xor i64 %or.i246.7, %add90.7
  %shr.i254326.7 = or i64 %xor2.i247.7, %xor2.i253.7
  %or94325.7 = lshr i64 %shr.i254326.7, 63
  %arrayidx74.7.1 = getelementptr inbounds i64, i64* %mc, i64 9
  %216 = load i64, i64* %arrayidx74.7.1, align 8, !tbaa !3
  %217 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 8), align 16, !tbaa !3
  %and.i262.7.1 = and i64 %216, 4294967295
  %shr.i263.7.1 = lshr i64 %216, 32
  %and1.i264.7.1 = and i64 %217, 4294967295
  %shr2.i265.7.1 = lshr i64 %217, 32
  %mul.i266.7.1 = mul nuw i64 %and1.i264.7.1, %and.i262.7.1
  %mul3.i267.7.1 = mul nuw i64 %shr2.i265.7.1, %and.i262.7.1
  %mul4.i268.7.1 = mul nuw i64 %and1.i264.7.1, %shr.i263.7.1
  %mul5.i269.7.1 = mul nuw i64 %shr2.i265.7.1, %shr.i263.7.1
  %and6.i270.7.1 = and i64 %mul.i266.7.1, 4294967295
  %shr7.i271.7.1 = lshr i64 %mul.i266.7.1, 32
  %and8.i272.7.1 = and i64 %mul4.i268.7.1, 4294967295
  %and9.i273.7.1 = and i64 %mul3.i267.7.1, 4294967295
  %add.i274.7.1 = add nuw nsw i64 %shr7.i271.7.1, %and8.i272.7.1
  %add10.i275.7.1 = add nuw nsw i64 %add.i274.7.1, %and9.i273.7.1
  %shr11.i276.7.1 = lshr i64 %add10.i275.7.1, 32
  %shl.i277.7.1 = shl i64 %add10.i275.7.1, 32
  %xor68.i278.7.1 = or i64 %shl.i277.7.1, %and6.i270.7.1
  %shr13.i279.7.1 = lshr i64 %mul4.i268.7.1, 32
  %shr14.i280.7.1 = lshr i64 %mul3.i267.7.1, 32
  %and15.i281.7.1 = and i64 %mul5.i269.7.1, 4294967295
  %add16.i282.7.1 = add nuw nsw i64 %shr13.i279.7.1, %shr14.i280.7.1
  %add17.i283.7.1 = add nuw nsw i64 %add16.i282.7.1, %and15.i281.7.1
  %add18.i284.7.1 = add nuw nsw i64 %add17.i283.7.1, %shr11.i276.7.1
  %and19.i285.7.1 = and i64 %add18.i284.7.1, 4294967295
  %and21.i287.7.1 = and i64 %add18.i284.7.1, 30064771072
  %and22.i288.7.1 = and i64 %mul5.i269.7.1, -4294967296
  %add23.i289.7.1 = add i64 %and21.i287.7.1, %and22.i288.7.1
  %xor2569.i290.7.1 = or i64 %add23.i289.7.1, %and19.i285.7.1
  %add82.7.1 = add i64 %xor68.i278.7.1, %add82.7
  %xor.i256.7.1 = xor i64 %add82.7.1, %shl.i277.7.1
  %xor1.i257.7.1 = xor i64 %shl.i277.7.1, %add82.7
  %or.i258.7.1 = or i64 %xor.i256.7.1, %xor1.i257.7.1
  %xor2.i259.7.1 = xor i64 %or.i258.7.1, %add82.7.1
  %shr.i260.7.1 = lshr i64 %xor2.i259.7.1, 63
  %add89.7.1 = add i64 %shr.i260.7.1, %xor2569.i290.7.1
  %add90.7.1 = add i64 %add89.7.1, %add90.7
  %218 = xor i64 %add89.7.1, -9223372036854775808
  %xor2.i253.7.1 = and i64 %218, %add23.i289.7.1
  %xor.i244.7.1 = xor i64 %add90.7.1, %add89.7.1
  %xor1.i245.7.1 = xor i64 %add89.7.1, %add90.7
  %or.i246.7.1 = or i64 %xor.i244.7.1, %xor1.i245.7.1
  %xor2.i247.7.1 = xor i64 %or.i246.7.1, %add90.7.1
  %shr.i254326.7.1 = or i64 %xor2.i247.7.1, %xor2.i253.7.1
  %or94325.7.1 = lshr i64 %shr.i254326.7.1, 63
  %add96.7.1 = add nuw nsw i64 %or94325.7.1, %or94325.7
  %arrayidx104.7 = getelementptr inbounds i64, i64* %ma, i64 17
  %219 = load i64, i64* %arrayidx104.7, align 8, !tbaa !3
  %add105.7 = add i64 %219, %add82.7.1
  %xor.i238.7 = xor i64 %add105.7, %add82.7.1
  %xor1.i239.7 = xor i64 %219, %add82.7.1
  %or.i240.7 = or i64 %xor.i238.7, %xor1.i239.7
  %xor2.i241.7 = xor i64 %or.i240.7, %add105.7
  %shr.i242.7 = lshr i64 %xor2.i241.7, 63
  %add111.7 = add i64 %shr.i242.7, %add90.7.1
  store i64 %add105.7, i64* %arrayidx50.7, align 8, !tbaa !3
  %220 = xor i64 %add111.7, -9223372036854775808
  %xor2.i.7 = and i64 %220, %add90.7.1
  %shr.i237.7 = lshr i64 %xor2.i.7, 63
  %add118.7 = add nsw i64 %shr.i237.7, %add96.7.1
  %arrayidx74.8 = getelementptr inbounds i64, i64* %mc, i64 9
  %221 = load i64, i64* %arrayidx74.8, align 8, !tbaa !3
  %222 = load i64, i64* getelementptr inbounds ([10 x i64], [10 x i64]* @p610p1, i64 0, i64 9), align 8, !tbaa !3
  %and.i262.8 = and i64 %221, 4294967295
  %shr.i263.8 = lshr i64 %221, 32
  %and1.i264.8 = and i64 %222, 4294967295
  %shr2.i265.8 = lshr i64 %222, 32
  %mul.i266.8 = mul nuw i64 %and1.i264.8, %and.i262.8
  %mul3.i267.8 = mul nuw i64 %shr2.i265.8, %and.i262.8
  %mul4.i268.8 = mul nuw i64 %and1.i264.8, %shr.i263.8
  %mul5.i269.8 = mul nuw i64 %shr2.i265.8, %shr.i263.8
  %and6.i270.8 = and i64 %mul.i266.8, 4294967295
  %shr7.i271.8 = lshr i64 %mul.i266.8, 32
  %and8.i272.8 = and i64 %mul4.i268.8, 4294967295
  %and9.i273.8 = and i64 %mul3.i267.8, 4294967295
  %add.i274.8 = add nuw nsw i64 %shr7.i271.8, %and8.i272.8
  %add10.i275.8 = add nuw nsw i64 %add.i274.8, %and9.i273.8
  %shr11.i276.8 = lshr i64 %add10.i275.8, 32
  %shl.i277.8 = shl i64 %add10.i275.8, 32
  %xor68.i278.8 = or i64 %shl.i277.8, %and6.i270.8
  %shr13.i279.8 = lshr i64 %mul4.i268.8, 32
  %shr14.i280.8 = lshr i64 %mul3.i267.8, 32
  %and15.i281.8 = and i64 %mul5.i269.8, 4294967295
  %add16.i282.8 = add nuw nsw i64 %shr13.i279.8, %shr14.i280.8
  %add17.i283.8 = add nuw nsw i64 %add16.i282.8, %and15.i281.8
  %add18.i284.8 = add nuw nsw i64 %add17.i283.8, %shr11.i276.8
  %and19.i285.8 = and i64 %add18.i284.8, 4294967295
  %and21.i287.8 = and i64 %add18.i284.8, 30064771072
  %and22.i288.8 = and i64 %mul5.i269.8, -4294967296
  %add23.i289.8 = add i64 %and21.i287.8, %and22.i288.8
  %xor2569.i290.8 = or i64 %add23.i289.8, %and19.i285.8
  %add82.8 = add i64 %xor68.i278.8, %add111.7
  %xor.i256.8 = xor i64 %add82.8, %shl.i277.8
  %xor1.i257.8 = xor i64 %shl.i277.8, %add111.7
  %or.i258.8 = or i64 %xor.i256.8, %xor1.i257.8
  %xor2.i259.8 = xor i64 %or.i258.8, %add82.8
  %shr.i260.8 = lshr i64 %xor2.i259.8, 63
  %add89.8 = add i64 %shr.i260.8, %xor2569.i290.8
  %add90.8 = add i64 %add89.8, %add118.7
  %arrayidx104.8 = getelementptr inbounds i64, i64* %ma, i64 18
  %223 = load i64, i64* %arrayidx104.8, align 8, !tbaa !3
  %add105.8 = add i64 %223, %add82.8
  %xor.i238.8 = xor i64 %add105.8, %add82.8
  %xor1.i239.8 = xor i64 %223, %add82.8
  %or.i240.8 = or i64 %xor.i238.8, %xor1.i239.8
  %xor2.i241.8 = xor i64 %or.i240.8, %add105.8
  %shr.i242.8 = lshr i64 %xor2.i241.8, 63
  %add111.8 = add i64 %shr.i242.8, %add90.8
  store i64 %add105.8, i64* %arrayidx50.8, align 8, !tbaa !3
  %arrayidx127 = getelementptr inbounds i64, i64* %ma, i64 19
  %224 = load i64, i64* %arrayidx127, align 8, !tbaa !3
  %add128 = add i64 %224, %add111.8
  store i64 %add128, i64* %arrayidx50.9, align 8, !tbaa !3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #4

attributes #0 = { inlinehint norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sahf,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-cldemote,-clflushopt,-clwb,-clzero,-fma4,-gfni,-lwp,-movdir64b,-movdiri,-mwaitx,-pconfig,-pku,-prefetchwt1,-prfchw,-ptwrite,-rdpid,-rdseed,-rtm,-sgx,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop,-xsavec,-xsaves" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sahf,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-cldemote,-clflushopt,-clwb,-clzero,-fma4,-gfni,-lwp,-movdir64b,-movdiri,-mwaitx,-pconfig,-pku,-prefetchwt1,-prfchw,-ptwrite,-rdpid,-rdseed,-rtm,-sgx,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop,-xsavec,-xsaves" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sahf,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-cldemote,-clflushopt,-clwb,-clzero,-fma4,-gfni,-lwp,-movdir64b,-movdiri,-mwaitx,-pconfig,-pku,-prefetchwt1,-prfchw,-ptwrite,-rdpid,-rdseed,-rtm,-sgx,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop,-xsavec,-xsaves" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="haswell" "target-features"="+aes,+avx,+avx2,+bmi,+bmi2,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+pclmul,+popcnt,+rdrnd,+sahf,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsaveopt,-adx,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-cldemote,-clflushopt,-clwb,-clzero,-fma4,-gfni,-lwp,-movdir64b,-movdiri,-mwaitx,-pconfig,-pku,-prefetchwt1,-prfchw,-ptwrite,-rdpid,-rdseed,-rtm,-sgx,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop,-xsavec,-xsaves" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
!3 = !{!4, !4, i64 0}
!4 = !{!"long long", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C/C++ TBAA"}
