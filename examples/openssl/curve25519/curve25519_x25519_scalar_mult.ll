; ModuleID = 'crypto/ec/curve25519.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ge_precomp = type { [10 x i32], [10 x i32], [10 x i32] }
%struct.ge_p3 = type { [10 x i32], [10 x i32], [10 x i32], [10 x i32] }
%struct.SHA512state_st = type { [8 x i64], i64, i64, %union.anon, i32, i32 }
%union.anon = type { [16 x i64] }
%struct.ge_p2 = type { [10 x i32], [10 x i32], [10 x i32] }
%struct.ge_p1p1 = type { [10 x i32], [10 x i32], [10 x i32], [10 x i32] }
%struct.ge_cached = type { [10 x i32], [10 x i32], [10 x i32], [10 x i32] }

@X25519.kZeros = internal constant [32 x i8] zeroinitializer, align 16
@k25519Precomp = internal constant [32 x [8 x %struct.ge_precomp]] [[8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 25967493, i32 -14356035, i32 29566456, i32 3660896, i32 -12694345, i32 4014787, i32 27544626, i32 -11754271, i32 -6079156, i32 2047605], [10 x i32] [i32 -12545711, i32 934262, i32 -2722910, i32 3049990, i32 -727428, i32 9406986, i32 12720692, i32 5043384, i32 19500929, i32 -15469378], [10 x i32] [i32 -8738181, i32 4489570, i32 9688441, i32 -14785194, i32 10184609, i32 -12363380, i32 29287919, i32 11864899, i32 -24514362, i32 -4438546] }, %struct.ge_precomp { [10 x i32] [i32 -12815894, i32 -12976347, i32 -21581243, i32 11784320, i32 -25355658, i32 -2750717, i32 -11717903, i32 -3814571, i32 -358445, i32 -10211303], [10 x i32] [i32 -21703237, i32 6903825, i32 27185491, i32 6451973, i32 -29577724, i32 -9554005, i32 -15616551, i32 11189268, i32 -26829678, i32 -5319081], [10 x i32] [i32 26966642, i32 11152617, i32 32442495, i32 15396054, i32 14353839, i32 -12752335, i32 -3128826, i32 -9541118, i32 -15472047, i32 -4166697] }, %struct.ge_precomp { [10 x i32] [i32 15636291, i32 -9688557, i32 24204773, i32 -7912398, i32 616977, i32 -16685262, i32 27787600, i32 -14772189, i32 28944400, i32 -1550024], [10 x i32] [i32 16568933, i32 4717097, i32 -11556148, i32 -1102322, i32 15682896, i32 -11807043, i32 16354577, i32 -11775962, i32 7689662, i32 11199574], [10 x i32] [i32 30464156, i32 -5976125, i32 -11779434, i32 -15670865, i32 23220365, i32 15915852, i32 7512774, i32 10017326, i32 -17749093, i32 -9920357] }, %struct.ge_precomp { [10 x i32] [i32 -17036878, i32 13921892, i32 10945806, i32 -6033431, i32 27105052, i32 -16084379, i32 -28926210, i32 15006023, i32 3284568, i32 -6276540], [10 x i32] [i32 23599295, i32 -8306047, i32 -11193664, i32 -7687416, i32 13236774, i32 10506355, i32 7464579, i32 9656445, i32 13059162, i32 10374397], [10 x i32] [i32 7798556, i32 16710257, i32 3033922, i32 2874086, i32 28997861, i32 2835604, i32 32406664, i32 -3839045, i32 -641708, i32 -101325] }, %struct.ge_precomp { [10 x i32] [i32 10861363, i32 11473154, i32 27284546, i32 1981175, i32 -30064349, i32 12577861, i32 32867885, i32 14515107, i32 -15438304, i32 10819380], [10 x i32] [i32 4708026, i32 6336745, i32 20377586, i32 9066809, i32 -11272109, i32 6594696, i32 -25653668, i32 12483688, i32 -12668491, i32 5581306], [10 x i32] [i32 19563160, i32 16186464, i32 -29386857, i32 4097519, i32 10237984, i32 -4348115, i32 28542350, i32 13850243, i32 -23678021, i32 -15815942] }, %struct.ge_precomp { [10 x i32] [i32 -15371964, i32 -12862754, i32 32573250, i32 4720197, i32 -26436522, i32 5875511, i32 -19188627, i32 -15224819, i32 -9818940, i32 -12085777], [10 x i32] [i32 -8549212, i32 109983, i32 15149363, i32 2178705, i32 22900618, i32 4543417, i32 3044240, i32 -15689887, i32 1762328, i32 14866737], [10 x i32] [i32 -18199695, i32 -15951423, i32 -10473290, i32 1707278, i32 -17185920, i32 3916101, i32 -28236412, i32 3959421, i32 27914454, i32 4383652] }, %struct.ge_precomp { [10 x i32] [i32 5153746, i32 9909285, i32 1723747, i32 -2777874, i32 30523605, i32 5516873, i32 19480852, i32 5230134, i32 -23952439, i32 -15175766], [10 x i32] [i32 -30269007, i32 -3463509, i32 7665486, i32 10083793, i32 28475525, i32 1649722, i32 20654025, i32 16520125, i32 30598449, i32 7715701], [10 x i32] [i32 28881845, i32 14381568, i32 9657904, i32 3680757, i32 -20181635, i32 7843316, i32 -31400660, i32 1370708, i32 29794553, i32 -1409300] }, %struct.ge_precomp { [10 x i32] [i32 14499471, i32 -2729599, i32 -33191113, i32 -4254652, i32 28494862, i32 14271267, i32 30290735, i32 10876454, i32 -33154098, i32 2381726], [10 x i32] [i32 -7195431, i32 -2655363, i32 -14730155, i32 462251, i32 -27724326, i32 3941372, i32 -6236617, i32 3696005, i32 -32300832, i32 15351955], [10 x i32] [i32 27431194, i32 8222322, i32 16448760, i32 -3907995, i32 -18707002, i32 11938355, i32 -32961401, i32 -2970515, i32 29551813, i32 10109425] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -13657040, i32 -13155431, i32 -31283750, i32 11777098, i32 21447386, i32 6519384, i32 -2378284, i32 -1627556, i32 10092783, i32 -4764171], [10 x i32] [i32 27939166, i32 14210322, i32 4677035, i32 16277044, i32 -22964462, i32 -12398139, i32 -32508754, i32 12005538, i32 -17810127, i32 12803510], [10 x i32] [i32 17228999, i32 -15661624, i32 -1233527, i32 300140, i32 -1224870, i32 -11714777, i32 30364213, i32 -9038194, i32 18016357, i32 4397660] }, %struct.ge_precomp { [10 x i32] [i32 -10958843, i32 -7690207, i32 4776341, i32 -14954238, i32 27850028, i32 -15602212, i32 -26619106, i32 14544525, i32 -17477504, i32 982639], [10 x i32] [i32 29253598, i32 15796703, i32 -2863982, i32 -9908884, i32 10057023, i32 3163536, i32 7332899, i32 -4120128, i32 -21047696, i32 9934963], [10 x i32] [i32 5793303, i32 16271923, i32 -24131614, i32 -10116404, i32 29188560, i32 1206517, i32 -14747930, i32 4559895, i32 -30123922, i32 -10897950] }, %struct.ge_precomp { [10 x i32] [i32 -27643952, i32 -11493006, i32 16282657, i32 -11036493, i32 28414021, i32 -15012264, i32 24191034, i32 4541697, i32 -13338309, i32 5500568], [10 x i32] [i32 12650548, i32 -1497113, i32 9052871, i32 11355358, i32 -17680037, i32 -8400164, i32 -17430592, i32 12264343, i32 10874051, i32 13524335], [10 x i32] [i32 25556948, i32 -3045990, i32 714651, i32 2510400, i32 23394682, i32 -10415330, i32 33119038, i32 5080568, i32 -22528059, i32 5376628] }, %struct.ge_precomp { [10 x i32] [i32 -26088264, i32 -4011052, i32 -17013699, i32 -3537628, i32 -6726793, i32 1920897, i32 -22321305, i32 -9447443, i32 4535768, i32 1569007], [10 x i32] [i32 -2255422, i32 14606630, i32 -21692440, i32 -8039818, i32 28430649, i32 8775819, i32 -30494562, i32 3044290, i32 31848280, i32 12543772], [10 x i32] [i32 -22028579, i32 2943893, i32 -31857513, i32 6777306, i32 13784462, i32 -4292203, i32 -27377195, i32 -2062731, i32 7718482, i32 14474653] }, %struct.ge_precomp { [10 x i32] [i32 2385315, i32 2454213, i32 -22631320, i32 46603, i32 -4437935, i32 -15680415, i32 656965, i32 -7236665, i32 24316168, i32 -5253567], [10 x i32] [i32 13741529, i32 10911568, i32 -33233417, i32 -8603737, i32 -20177830, i32 -1033297, i32 33040651, i32 -13424532, i32 -20729456, i32 8321686], [10 x i32] [i32 21060490, i32 -2212744, i32 15712757, i32 -4336099, i32 1639040, i32 10656336, i32 23845965, i32 -11874838, i32 -9984458, i32 608372] }, %struct.ge_precomp { [10 x i32] [i32 -13672732, i32 -15087586, i32 -10889693, i32 -7557059, i32 -6036909, i32 11305547, i32 1123968, i32 -6780577, i32 27229399, i32 23887], [10 x i32] [i32 -23244140, i32 -294205, i32 -11744728, i32 14712571, i32 -29465699, i32 -2029617, i32 12797024, i32 -6440308, i32 -1633405, i32 16678954], [10 x i32] [i32 -29500620, i32 4770662, i32 -16054387, i32 14001338, i32 7830047, i32 9564805, i32 -1508144, i32 -4795045, i32 -17169265, i32 4904953] }, %struct.ge_precomp { [10 x i32] [i32 24059557, i32 14617003, i32 19037157, i32 -15039908, i32 19766093, i32 -14906429, i32 5169211, i32 16191880, i32 2128236, i32 -4326833], [10 x i32] [i32 -16981152, i32 4124966, i32 -8540610, i32 -10653797, i32 30336522, i32 -14105247, i32 -29806336, i32 916033, i32 -6882542, i32 -2986532], [10 x i32] [i32 -22630907, i32 12419372, i32 -7134229, i32 -7473371, i32 -16478904, i32 16739175, i32 285431, i32 2763829, i32 15736322, i32 4143876] }, %struct.ge_precomp { [10 x i32] [i32 2379352, i32 11839345, i32 -4110402, i32 -5988665, i32 11274298, i32 794957, i32 212801, i32 -14594663, i32 23527084, i32 -16458268], [10 x i32] [i32 33431127, i32 -11130478, i32 -17838966, i32 -15626900, i32 8909499, i32 8376530, i32 -32625340, i32 4087881, i32 -15188911, i32 -14416214], [10 x i32] [i32 1767683, i32 7197987, i32 -13205226, i32 -2022635, i32 -13091350, i32 448826, i32 5799055, i32 4357868, i32 -4774191, i32 -16323038] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 6721966, i32 13833823, i32 -23523388, i32 -1551314, i32 26354293, i32 -11863321, i32 23365147, i32 -3949732, i32 7390890, i32 2759800], [10 x i32] [i32 4409041, i32 2052381, i32 23373853, i32 10530217, i32 7676779, i32 -12885954, i32 21302353, i32 -4264057, i32 1244380, i32 -12919645], [10 x i32] [i32 -4421239, i32 7169619, i32 4982368, i32 -2957590, i32 30256825, i32 -2777540, i32 14086413, i32 9208236, i32 15886429, i32 16489664] }, %struct.ge_precomp { [10 x i32] [i32 1996075, i32 10375649, i32 14346367, i32 13311202, i32 -6874135, i32 -16438411, i32 -13693198, i32 398369, i32 -30606455, i32 -712933], [10 x i32] [i32 -25307465, i32 9795880, i32 -2777414, i32 14878809, i32 -33531835, i32 14780363, i32 13348553, i32 12076947, i32 -30836462, i32 5113182], [10 x i32] [i32 -17770784, i32 11797796, i32 31950843, i32 13929123, i32 -25888302, i32 12288344, i32 -30341101, i32 -7336386, i32 13847711, i32 5387222] }, %struct.ge_precomp { [10 x i32] [i32 -18582163, i32 -3416217, i32 17824843, i32 -2340966, i32 22744343, i32 -10442611, i32 8763061, i32 3617786, i32 -19600662, i32 10370991], [10 x i32] [i32 20246567, i32 -14369378, i32 22358229, i32 -543712, i32 18507283, i32 -10413996, i32 14554437, i32 -8746092, i32 32232924, i32 16763880], [10 x i32] [i32 9648505, i32 10094563, i32 26416693, i32 14745928, i32 -30374318, i32 -6472621, i32 11094161, i32 15689506, i32 3140038, i32 -16510092] }, %struct.ge_precomp { [10 x i32] [i32 -16160072, i32 5472695, i32 31895588, i32 4744994, i32 8823515, i32 10365685, i32 -27224800, i32 9448613, i32 -28774454, i32 366295], [10 x i32] [i32 19153450, i32 11523972, i32 -11096490, i32 -6503142, i32 -24647631, i32 5420647, i32 28344573, i32 8041113, i32 719605, i32 11671788], [10 x i32] [i32 8678025, i32 2694440, i32 -6808014, i32 2517372, i32 4964326, i32 11152271, i32 -15432916, i32 -15266516, i32 27000813, i32 -10195553] }, %struct.ge_precomp { [10 x i32] [i32 -15157904, i32 7134312, i32 8639287, i32 -2814877, i32 -7235688, i32 10421742, i32 564065, i32 5336097, i32 6750977, i32 -14521026], [10 x i32] [i32 11836410, i32 -3979488, i32 26297894, i32 16080799, i32 23455045, i32 15735944, i32 1695823, i32 -8819122, i32 8169720, i32 16220347], [10 x i32] [i32 -18115838, i32 8653647, i32 17578566, i32 -6092619, i32 -8025777, i32 -16012763, i32 -11144307, i32 -2627664, i32 -5990708, i32 -14166033] }, %struct.ge_precomp { [10 x i32] [i32 -23308498, i32 -10968312, i32 15213228, i32 -10081214, i32 -30853605, i32 -11050004, i32 27884329, i32 2847284, i32 2655861, i32 1738395], [10 x i32] [i32 -27537433, i32 -14253021, i32 -25336301, i32 -8002780, i32 -9370762, i32 8129821, i32 21651608, i32 -3239336, i32 -19087449, i32 -11005278], [10 x i32] [i32 1533110, i32 3437855, i32 23735889, i32 459276, i32 29970501, i32 11335377, i32 26030092, i32 5821408, i32 10478196, i32 8544890] }, %struct.ge_precomp { [10 x i32] [i32 32173121, i32 -16129311, i32 24896207, i32 3921497, i32 22579056, i32 -3410854, i32 19270449, i32 12217473, i32 17789017, i32 -3395995], [10 x i32] [i32 -30552961, i32 -2228401, i32 -15578829, i32 -10147201, i32 13243889, i32 517024, i32 15479401, i32 -3853233, i32 30460520, i32 1052596], [10 x i32] [i32 -11614875, i32 13323618, i32 32618793, i32 8175907, i32 -15230173, i32 12596687, i32 27491595, i32 -4612359, i32 3179268, i32 -9478891] }, %struct.ge_precomp { [10 x i32] [i32 31947069, i32 -14366651, i32 -4640583, i32 -15339921, i32 -15125977, i32 -6039709, i32 -14756777, i32 -16411740, i32 19072640, i32 -9511060], [10 x i32] [i32 11685058, i32 11822410, i32 3158003, i32 -13952594, i32 33402194, i32 -4165066, i32 5977896, i32 -5215017, i32 473099, i32 5040608], [10 x i32] [i32 -20290863, i32 8198642, i32 -27410132, i32 11602123, i32 1290375, i32 -2799760, i32 28326862, i32 1721092, i32 -19558642, i32 -3131606] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 7881532, i32 10687937, i32 7578723, i32 7738378, i32 -18951012, i32 -2553952, i32 21820786, i32 8076149, i32 -27868496, i32 11538389], [10 x i32] [i32 -19935666, i32 3899861, i32 18283497, i32 -6801568, i32 -15728660, i32 -11249211, i32 8754525, i32 7446702, i32 -5676054, i32 5797016], [10 x i32] [i32 -11295600, i32 -3793569, i32 -15782110, i32 -7964573, i32 12708869, i32 -8456199, i32 2014099, i32 -9050574, i32 -2369172, i32 -5877341] }, %struct.ge_precomp { [10 x i32] [i32 -22472376, i32 -11568741, i32 -27682020, i32 1146375, i32 18956691, i32 16640559, i32 1192730, i32 -3714199, i32 15123619, i32 10811505], [10 x i32] [i32 14352098, i32 -3419715, i32 -18942044, i32 10822655, i32 32750596, i32 4699007, i32 -70363, i32 15776356, i32 -28886779, i32 -11974553], [10 x i32] [i32 -28241164, i32 -8072475, i32 -4978962, i32 -5315317, i32 29416931, i32 1847569, i32 -20654173, i32 -16484855, i32 4714547, i32 -9600655] }, %struct.ge_precomp { [10 x i32] [i32 15200332, i32 8368572, i32 19679101, i32 15970074, i32 -31872674, i32 1959451, i32 24611599, i32 -4543832, i32 -11745876, i32 12340220], [10 x i32] [i32 12876937, i32 -10480056, i32 33134381, i32 6590940, i32 -6307776, i32 14872440, i32 9613953, i32 8241152, i32 15370987, i32 9608631], [10 x i32] [i32 -4143277, i32 -12014408, i32 8446281, i32 -391603, i32 4407738, i32 13629032, i32 -7724868, i32 15866074, i32 -28210621, i32 -8814099] }, %struct.ge_precomp { [10 x i32] [i32 26660628, i32 -15677655, i32 8393734, i32 358047, i32 -7401291, i32 992988, i32 -23904233, i32 858697, i32 20571223, i32 8420556], [10 x i32] [i32 14620715, i32 13067227, i32 -15447274, i32 8264467, i32 14106269, i32 15080814, i32 33531827, i32 12516406, i32 -21574435, i32 -12476749], [10 x i32] [i32 236881, i32 10476226, i32 57258, i32 -14677024, i32 6472998, i32 2466984, i32 17258519, i32 7256740, i32 8791136, i32 15069930] }, %struct.ge_precomp { [10 x i32] [i32 1276410, i32 -9371918, i32 22949635, i32 -16322807, i32 -23493039, i32 -5702186, i32 14711875, i32 4874229, i32 -30663140, i32 -2331391], [10 x i32] [i32 5855666, i32 4990204, i32 -13711848, i32 7294284, i32 -7804282, i32 1924647, i32 -1423175, i32 -7912378, i32 -33069337, i32 9234253], [10 x i32] [i32 20590503, i32 -9018988, i32 31529744, i32 -7352666, i32 -2706834, i32 10650548, i32 31559055, i32 -11609587, i32 18979186, i32 13396066] }, %struct.ge_precomp { [10 x i32] [i32 24474287, i32 4968103, i32 22267082, i32 4407354, i32 24063882, i32 -8325180, i32 -18816887, i32 13594782, i32 33514650, i32 7021958], [10 x i32] [i32 -11566906, i32 -6565505, i32 -21365085, i32 15928892, i32 -26158305, i32 4315421, i32 -25948728, i32 -3916677, i32 -21480480, i32 12868082], [10 x i32] [i32 -28635013, i32 13504661, i32 19988037, i32 -2132761, i32 21078225, i32 6443208, i32 -21446107, i32 2244500, i32 -12455797, i32 -8089383] }, %struct.ge_precomp { [10 x i32] [i32 -30595528, i32 13793479, i32 -5852820, i32 319136, i32 -25723172, i32 -6263899, i32 33086546, i32 8957937, i32 -15233648, i32 5540521], [10 x i32] [i32 -11630176, i32 -11503902, i32 -8119500, i32 -7643073, i32 2620056, i32 1022908, i32 -23710744, i32 -1568984, i32 -16128528, i32 -14962807], [10 x i32] [i32 23152971, i32 775386, i32 27395463, i32 14006635, i32 -9701118, i32 4649512, i32 1689819, i32 892185, i32 -11513277, i32 -15205948] }, %struct.ge_precomp { [10 x i32] [i32 9770129, i32 9586738, i32 26496094, i32 4324120, i32 1556511, i32 -3550024, i32 27453819, i32 4763127, i32 -19179614, i32 5867134], [10 x i32] [i32 -32765025, i32 1927590, i32 31726409, i32 -4753295, i32 23962434, i32 -16019500, i32 27846559, i32 5931263, i32 -29749703, i32 -16108455], [10 x i32] [i32 27461885, i32 -2977536, i32 22380810, i32 1815854, i32 -23033753, i32 -3031938, i32 7283490, i32 -15148073, i32 -19526700, i32 7734629] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -8010264, i32 -9590817, i32 -11120403, i32 6196038, i32 29344158, i32 -13430885, i32 7585295, i32 -3176626, i32 18549497, i32 15302069], [10 x i32] [i32 -32658337, i32 -6171222, i32 -7672793, i32 -11051681, i32 6258878, i32 13504381, i32 10458790, i32 -6418461, i32 -8872242, i32 8424746], [10 x i32] [i32 24687205, i32 8613276, i32 -30667046, i32 -3233545, i32 1863892, i32 -1830544, i32 19206234, i32 7134917, i32 -11284482, i32 -828919] }, %struct.ge_precomp { [10 x i32] [i32 11334899, i32 -9218022, i32 8025293, i32 12707519, i32 17523892, i32 -10476071, i32 10243738, i32 -14685461, i32 -5066034, i32 16498837], [10 x i32] [i32 8911542, i32 6887158, i32 -9584260, i32 -6958590, i32 11145641, i32 -9543680, i32 17303925, i32 -14124238, i32 6536641, i32 10543906], [10 x i32] [i32 -28946384, i32 15479763, i32 -17466835, i32 568876, i32 -1497683, i32 11223454, i32 -2669190, i32 -16625574, i32 -27235709, i32 8876771] }, %struct.ge_precomp { [10 x i32] [i32 -25742899, i32 -12566864, i32 -15649966, i32 -846607, i32 -33026686, i32 -796288, i32 -33481822, i32 15824474, i32 -604426, i32 -9039817], [10 x i32] [i32 10330056, i32 70051, i32 7957388, i32 -9002667, i32 9764902, i32 15609756, i32 27698697, i32 -4890037, i32 1657394, i32 3084098], [10 x i32] [i32 10477963, i32 -7470260, i32 12119566, i32 -13250805, i32 29016247, i32 -5365589, i32 31280319, i32 14396151, i32 -30233575, i32 15272409] }, %struct.ge_precomp { [10 x i32] [i32 -12288309, i32 3169463, i32 28813183, i32 16658753, i32 25116432, i32 -5630466, i32 -25173957, i32 -12636138, i32 -25014757, i32 1950504], [10 x i32] [i32 -26180358, i32 9489187, i32 11053416, i32 -14746161, i32 -31053720, i32 5825630, i32 -8384306, i32 -8767532, i32 15341279, i32 8373727], [10 x i32] [i32 28685821, i32 7759505, i32 -14378516, i32 -12002860, i32 -31971820, i32 4079242, i32 298136, i32 -10232602, i32 -2878207, i32 15190420] }, %struct.ge_precomp { [10 x i32] [i32 -32932876, i32 13806336, i32 -14337485, i32 -15794431, i32 -24004620, i32 10940928, i32 8669718, i32 2742393, i32 -26033313, i32 -6875003], [10 x i32] [i32 -1580388, i32 -11729417, i32 -25979658, i32 -11445023, i32 -17411874, i32 -10912854, i32 9291594, i32 -16247779, i32 -12154742, i32 6048605], [10 x i32] [i32 -30305315, i32 14843444, i32 1539301, i32 11864366, i32 20201677, i32 1900163, i32 13934231, i32 5128323, i32 11213262, i32 9168384] }, %struct.ge_precomp { [10 x i32] [i32 -26280513, i32 11007847, i32 19408960, i32 -940758, i32 -18592965, i32 -4328580, i32 -5088060, i32 -11105150, i32 20470157, i32 -16398701], [10 x i32] [i32 -23136053, i32 9282192, i32 14855179, i32 -15390078, i32 -7362815, i32 -14408560, i32 -22783952, i32 14461608, i32 14042978, i32 5230683], [10 x i32] [i32 29969567, i32 -2741594, i32 -16711867, i32 -8552442, i32 9175486, i32 -2468974, i32 21556951, i32 3506042, i32 -5933891, i32 -12449708] }, %struct.ge_precomp { [10 x i32] [i32 -3144746, i32 8744661, i32 19704003, i32 4581278, i32 -20430686, i32 6830683, i32 -21284170, i32 8971513, i32 -28539189, i32 15326563], [10 x i32] [i32 -19464629, i32 10110288, i32 -17262528, i32 -3503892, i32 -23500387, i32 1355669, i32 -15523050, i32 15300988, i32 -20514118, i32 9168260], [10 x i32] [i32 -5353335, i32 4488613, i32 -23803248, i32 16314347, i32 7780487, i32 -15638939, i32 -28948358, i32 9601605, i32 33087103, i32 -9011387] }, %struct.ge_precomp { [10 x i32] [i32 -19443170, i32 -15512900, i32 -20797467, i32 -12445323, i32 -29824447, i32 10229461, i32 -27444329, i32 -15000531, i32 -5996870, i32 15664672], [10 x i32] [i32 23294591, i32 -16632613, i32 -22650781, i32 -8470978, i32 27844204, i32 11461195, i32 13099750, i32 -2460356, i32 18151676, i32 13417686], [10 x i32] [i32 -24722913, i32 -4176517, i32 -31150679, i32 5988919, i32 -26858785, i32 6685065, i32 1661597, i32 -12551441, i32 15271676, i32 -15452665] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 11433042, i32 -13228665, i32 8239631, i32 -5279517, i32 -1985436, i32 -725718, i32 -18698764, i32 2167544, i32 -6921301, i32 -13440182], [10 x i32] [i32 -31436171, i32 15575146, i32 30436815, i32 12192228, i32 -22463353, i32 9395379, i32 -9917708, i32 -8638997, i32 12215110, i32 12028277], [10 x i32] [i32 14098400, i32 6555944, i32 23007258, i32 5757252, i32 -15427832, i32 -12950502, i32 30123440, i32 4617780, i32 -16900089, i32 -655628] }, %struct.ge_precomp { [10 x i32] [i32 -4026201, i32 -15240835, i32 11893168, i32 13718664, i32 -14809462, i32 1847385, i32 -15819999, i32 10154009, i32 23973261, i32 -12684474], [10 x i32] [i32 -26531820, i32 -3695990, i32 -1908898, i32 2534301, i32 -31870557, i32 -16550355, i32 18341390, i32 -11419951, i32 32013174, i32 -10103539], [10 x i32] [i32 -25479301, i32 10876443, i32 -11771086, i32 -14625140, i32 -12369567, i32 1838104, i32 21911214, i32 6354752, i32 4425632, i32 -837822] }, %struct.ge_precomp { [10 x i32] [i32 -10433389, i32 -14612966, i32 22229858, i32 -3091047, i32 -13191166, i32 776729, i32 -17415375, i32 -12020462, i32 4725005, i32 14044970], [10 x i32] [i32 19268650, i32 -7304421, i32 1555349, i32 8692754, i32 -21474059, i32 -9910664, i32 6347390, i32 -1411784, i32 -19522291, i32 -16109756], [10 x i32] [i32 -24864089, i32 12986008, i32 -10898878, i32 -5558584, i32 -11312371, i32 -148526, i32 19541418, i32 8180106, i32 9282262, i32 10282508] }, %struct.ge_precomp { [10 x i32] [i32 -26205082, i32 4428547, i32 -8661196, i32 -13194263, i32 4098402, i32 -14165257, i32 15522535, i32 8372215, i32 5542595, i32 -10702683], [10 x i32] [i32 -10562541, i32 14895633, i32 26814552, i32 -16673850, i32 -17480754, i32 -2489360, i32 -2781891, i32 6993761, i32 -18093885, i32 10114655], [10 x i32] [i32 -20107055, i32 -929418, i32 31422704, i32 10427861, i32 -7110749, i32 6150669, i32 -29091755, i32 -11529146, i32 25953725, i32 -106158] }, %struct.ge_precomp { [10 x i32] [i32 -4234397, i32 -8039292, i32 -9119125, i32 3046000, i32 2101609, i32 -12607294, i32 19390020, i32 6094296, i32 -3315279, i32 12831125], [10 x i32] [i32 -15998678, i32 7578152, i32 5310217, i32 14408357, i32 -33548620, i32 -224739, i32 31575954, i32 6326196, i32 7381791, i32 -2421839], [10 x i32] [i32 -20902779, i32 3296811, i32 24736065, i32 -16328389, i32 18374254, i32 7318640, i32 6295303, i32 8082724, i32 -15362489, i32 12339664] }, %struct.ge_precomp { [10 x i32] [i32 27724736, i32 2291157, i32 6088201, i32 -14184798, i32 1792727, i32 5857634, i32 13848414, i32 15768922, i32 25091167, i32 14856294], [10 x i32] [i32 -18866652, i32 8331043, i32 24373479, i32 8541013, i32 -701998, i32 -9269457, i32 12927300, i32 -12695493, i32 -22182473, i32 -9012899], [10 x i32] [i32 -11423429, i32 -5421590, i32 11632845, i32 3405020, i32 30536730, i32 -11674039, i32 -27260765, i32 13866390, i32 30146206, i32 9142070] }, %struct.ge_precomp { [10 x i32] [i32 3924129, i32 -15307516, i32 -13817122, i32 -10054960, i32 12291820, i32 -668366, i32 -27702774, i32 9326384, i32 -8237858, i32 4171294], [10 x i32] [i32 -15921940, i32 16037937, i32 6713787, i32 16606682, i32 -21612135, i32 2790944, i32 26396185, i32 3731949, i32 345228, i32 -5462949], [10 x i32] [i32 -21327538, i32 13448259, i32 25284571, i32 1143661, i32 20614966, i32 -8849387, i32 2031539, i32 -12391231, i32 -16253183, i32 -13582083] }, %struct.ge_precomp { [10 x i32] [i32 31016211, i32 -16722429, i32 26371392, i32 -14451233, i32 -5027349, i32 14854137, i32 17477601, i32 3842657, i32 28012650, i32 -16405420], [10 x i32] [i32 -5075835, i32 9368966, i32 -8562079, i32 -4600902, i32 -15249953, i32 6970560, i32 -9189873, i32 16292057, i32 -8867157, i32 3507940], [10 x i32] [i32 29439664, i32 3537914, i32 23333589, i32 6997794, i32 -17555561, i32 -11018068, i32 -15209202, i32 -15051267, i32 -9164929, i32 6580396] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -12185861, i32 -7679788, i32 16438269, i32 10826160, i32 -8696817, i32 -6235611, i32 17860444, i32 -9273846, i32 -2095802, i32 9304567], [10 x i32] [i32 20714564, i32 -4336911, i32 29088195, i32 7406487, i32 11426967, i32 -5095705, i32 14792667, i32 -14608617, i32 5289421, i32 -477127], [10 x i32] [i32 -16665533, i32 -10650790, i32 -6160345, i32 -13305760, i32 9192020, i32 -1802462, i32 17271490, i32 12349094, i32 26939669, i32 -3752294] }, %struct.ge_precomp { [10 x i32] [i32 -12889898, i32 9373458, i32 31595848, i32 16374215, i32 21471720, i32 13221525, i32 -27283495, i32 -12348559, i32 -3698806, i32 117887], [10 x i32] [i32 22263325, i32 -6560050, i32 3984570, i32 -11174646, i32 -15114008, i32 -566785, i32 28311253, i32 5358056, i32 -23319780, i32 541964], [10 x i32] [i32 16259219, i32 3261970, i32 2309254, i32 -15534474, i32 -16885711, i32 -4581916, i32 24134070, i32 -16705829, i32 -13337066, i32 -13552195] }, %struct.ge_precomp { [10 x i32] [i32 9378160, i32 -13140186, i32 -22845982, i32 -12745264, i32 28198281, i32 -7244098, i32 -2399684, i32 -717351, i32 690426, i32 14876244], [10 x i32] [i32 24977353, i32 -314384, i32 -8223969, i32 -13465086, i32 28432343, i32 -1176353, i32 -13068804, i32 -12297348, i32 -22380984, i32 6618999], [10 x i32] [i32 -1538174, i32 11685646, i32 12944378, i32 13682314, i32 -24389511, i32 -14413193, i32 8044829, i32 -13817328, i32 32239829, i32 -5652762] }, %struct.ge_precomp { [10 x i32] [i32 -18603066, i32 4762990, i32 -926250, i32 8885304, i32 -28412480, i32 -3187315, i32 9781647, i32 -10350059, i32 32779359, i32 5095274], [10 x i32] [i32 -33008130, i32 -5214506, i32 -32264887, i32 -3685216, i32 9460461, i32 -9327423, i32 -24601656, i32 14506724, i32 21639561, i32 -2630236], [10 x i32] [i32 -16400943, i32 -13112215, i32 25239338, i32 15531969, i32 3987758, i32 -4499318, i32 -1289502, i32 -6863535, i32 17874574, i32 558605] }, %struct.ge_precomp { [10 x i32] [i32 -13600129, i32 10240081, i32 9171883, i32 16131053, i32 -20869254, i32 9599700, i32 33499487, i32 5080151, i32 2085892, i32 5119761], [10 x i32] [i32 -22205145, i32 -2519528, i32 -16381601, i32 414691, i32 -25019550, i32 2170430, i32 30634760, i32 -8363614, i32 -31999993, i32 -5759884], [10 x i32] [i32 -6845704, i32 15791202, i32 8550074, i32 -1312654, i32 29928809, i32 -12092256, i32 27534430, i32 -7192145, i32 -22351378, i32 12961482] }, %struct.ge_precomp { [10 x i32] [i32 -24492060, i32 -9570771, i32 10368194, i32 11582341, i32 -23397293, i32 -2245287, i32 16533930, i32 8206996, i32 -30194652, i32 -5159638], [10 x i32] [i32 -11121496, i32 -3382234, i32 2307366, i32 6362031, i32 -135455, i32 8868177, i32 -16835630, i32 7031275, i32 7589640, i32 8945490], [10 x i32] [i32 -32152748, i32 8917967, i32 6661220, i32 -11677616, i32 -1192060, i32 -15793393, i32 7251489, i32 -11182180, i32 24099109, i32 -14456170] }, %struct.ge_precomp { [10 x i32] [i32 5019558, i32 -7907470, i32 4244127, i32 -14714356, i32 -26933272, i32 6453165, i32 -19118182, i32 -13289025, i32 -6231896, i32 -10280736], [10 x i32] [i32 10853594, i32 10721687, i32 26480089, i32 5861829, i32 -22995819, i32 1972175, i32 -1866647, i32 -10557898, i32 -3363451, i32 -6441124], [10 x i32] [i32 -17002408, i32 5906790, i32 221599, i32 -6563147, i32 7828208, i32 -13248918, i32 24362661, i32 -2008168, i32 -13866408, i32 7421392] }, %struct.ge_precomp { [10 x i32] [i32 8139927, i32 -6546497, i32 32257646, i32 -5890546, i32 30375719, i32 1886181, i32 -21175108, i32 15441252, i32 28826358, i32 -4123029], [10 x i32] [i32 6267086, i32 9695052, i32 7709135, i32 -16603597, i32 -32869068, i32 -1886135, i32 14795160, i32 -7840124, i32 13746021, i32 -1742048], [10 x i32] [i32 28584902, i32 7787108, i32 -6732942, i32 -15050729, i32 22846041, i32 -7571236, i32 -3181936, i32 -363524, i32 4771362, i32 -8419958] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 24949256, i32 6376279, i32 -27466481, i32 -8174608, i32 -18646154, i32 -9930606, i32 33543569, i32 -12141695, i32 3569627, i32 11342593], [10 x i32] [i32 26514989, i32 4740088, i32 27912651, i32 3697550, i32 19331575, i32 -11472339, i32 6809886, i32 4608608, i32 7325975, i32 -14801071], [10 x i32] [i32 -11618399, i32 -14554430, i32 -24321212, i32 7655128, i32 -1369274, i32 5214312, i32 -27400540, i32 10258390, i32 -17646694, i32 -8186692] }, %struct.ge_precomp { [10 x i32] [i32 11431204, i32 15823007, i32 26570245, i32 14329124, i32 18029990, i32 4796082, i32 -31446179, i32 15580664, i32 9280358, i32 -3973687], [10 x i32] [i32 -160783, i32 -10326257, i32 -22855316, i32 -4304997, i32 -20861367, i32 -13621002, i32 -32810901, i32 -11181622, i32 -15545091, i32 4387441], [10 x i32] [i32 -20799378, i32 12194512, i32 3937617, i32 -5805892, i32 -27154820, i32 9340370, i32 -24513992, i32 8548137, i32 20617071, i32 -7482001] }, %struct.ge_precomp { [10 x i32] [i32 -938825, i32 -3930586, i32 -8714311, i32 16124718, i32 24603125, i32 -6225393, i32 -13775352, i32 -11875822, i32 24345683, i32 10325460], [10 x i32] [i32 -19855277, i32 -1568885, i32 -22202708, i32 8714034, i32 14007766, i32 6928528, i32 16318175, i32 -1010689, i32 4766743, i32 3552007], [10 x i32] [i32 -21751364, i32 -16730916, i32 1351763, i32 -803421, i32 -4009670, i32 3950935, i32 3217514, i32 14481909, i32 10988822, i32 -3994762] }, %struct.ge_precomp { [10 x i32] [i32 15564307, i32 -14311570, i32 3101243, i32 5684148, i32 30446780, i32 -8051356, i32 12677127, i32 -6505343, i32 -8295852, i32 13296005], [10 x i32] [i32 -9442290, i32 6624296, i32 -30298964, i32 -11913677, i32 -4670981, i32 -2057379, i32 31521204, i32 9614054, i32 -30000824, i32 12074674], [10 x i32] [i32 4771191, i32 -135239, i32 14290749, i32 -13089852, i32 27992298, i32 14998318, i32 -1413936, i32 -1556716, i32 29832613, i32 -16391035] }, %struct.ge_precomp { [10 x i32] [i32 7064884, i32 -7541174, i32 -19161962, i32 -5067537, i32 -18891269, i32 -2912736, i32 25825242, i32 5293297, i32 -27122660, i32 13101590], [10 x i32] [i32 -2298563, i32 2439670, i32 -7466610, i32 1719965, i32 -27267541, i32 -16328445, i32 32512469, i32 -5317593, i32 -30356070, i32 -4190957], [10 x i32] [i32 -30006540, i32 10162316, i32 -33180176, i32 3981723, i32 -16482138, i32 -13070044, i32 14413974, i32 9515896, i32 19568978, i32 9628812] }, %struct.ge_precomp { [10 x i32] [i32 33053803, i32 199357, i32 15894591, i32 1583059, i32 27380243, i32 -4580435, i32 -17838894, i32 -6106839, i32 -6291786, i32 3437740], [10 x i32] [i32 -18978877, i32 3884493, i32 19469877, i32 12726490, i32 15913552, i32 13614290, i32 -22961733, i32 70104, i32 7463304, i32 4176122], [10 x i32] [i32 -27124001, i32 10659917, i32 11482427, i32 -16070381, i32 12771467, i32 -6635117, i32 -32719404, i32 -5322751, i32 24216882, i32 5944158] }, %struct.ge_precomp { [10 x i32] [i32 8894125, i32 7450974, i32 -2664149, i32 -9765752, i32 -28080517, i32 -12389115, i32 19345746, i32 14680796, i32 11632993, i32 5847885], [10 x i32] [i32 26942781, i32 -2315317, i32 9129564, i32 -4906607, i32 26024105, i32 11769399, i32 -11518837, i32 6367194, i32 -9727230, i32 4782140], [10 x i32] [i32 19916461, i32 -4828410, i32 -22910704, i32 -11414391, i32 25606324, i32 -5972441, i32 33253853, i32 8220911, i32 6358847, i32 -1873857] }, %struct.ge_precomp { [10 x i32] [i32 801428, i32 -2081702, i32 16569428, i32 11065167, i32 29875704, i32 96627, i32 7908388, i32 -4480480, i32 -13538503, i32 1387155], [10 x i32] [i32 19646058, i32 5720633, i32 -11416706, i32 12814209, i32 11607948, i32 12749789, i32 14147075, i32 15156355, i32 -21866831, i32 11835260], [10 x i32] [i32 19299512, i32 1155910, i32 28703737, i32 14890794, i32 2925026, i32 7269399, i32 26121523, i32 15467869, i32 -26560550, i32 5052483] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -3017432, i32 10058206, i32 1980837, i32 3964243, i32 22160966, i32 12322533, i32 -6431123, i32 -12618185, i32 12228557, i32 -7003677], [10 x i32] [i32 32944382, i32 14922211, i32 -22844894, i32 5188528, i32 21913450, i32 -8719943, i32 4001465, i32 13238564, i32 -6114803, i32 8653815], [10 x i32] [i32 22865569, i32 -4652735, i32 27603668, i32 -12545395, i32 14348958, i32 8234005, i32 24808405, i32 5719875, i32 28483275, i32 2841751] }, %struct.ge_precomp { [10 x i32] [i32 -16420968, i32 -1113305, i32 -327719, i32 -12107856, i32 21886282, i32 -15552774, i32 -1887966, i32 -315658, i32 19932058, i32 -12739203], [10 x i32] [i32 -11656086, i32 10087521, i32 -8864888, i32 -5536143, i32 -19278573, i32 -3055912, i32 3999228, i32 13239134, i32 -4777469, i32 -13910208], [10 x i32] [i32 1382174, i32 -11694719, i32 17266790, i32 9194690, i32 -13324356, i32 9720081, i32 20403944, i32 11284705, i32 -14013818, i32 3093230] }, %struct.ge_precomp { [10 x i32] [i32 16650921, i32 -11037932, i32 -1064178, i32 1570629, i32 -8329746, i32 7352753, i32 -302424, i32 16271225, i32 -24049421, i32 -6691850], [10 x i32] [i32 -21911077, i32 -5927941, i32 -4611316, i32 -5560156, i32 -31744103, i32 -10785293, i32 24123614, i32 15193618, i32 -21652117, i32 -16739389], [10 x i32] [i32 -9935934, i32 -4289447, i32 -25279823, i32 4372842, i32 2087473, i32 10399484, i32 31870908, i32 14690798, i32 17361620, i32 11864968] }, %struct.ge_precomp { [10 x i32] [i32 -11307610, i32 6210372, i32 13206574, i32 5806320, i32 -29017692, i32 -13967200, i32 -12331205, i32 -7486601, i32 -25578460, i32 -16240689], [10 x i32] [i32 14668462, i32 -12270235, i32 26039039, i32 15305210, i32 25515617, i32 4542480, i32 10453892, i32 6577524, i32 9145645, i32 -6443880], [10 x i32] [i32 5974874, i32 3053895, i32 -9433049, i32 -10385191, i32 -31865124, i32 3225009, i32 -7972642, i32 3936128, i32 -5652273, i32 -3050304] }, %struct.ge_precomp { [10 x i32] [i32 30625386, i32 -4729400, i32 -25555961, i32 -12792866, i32 -20484575, i32 7695099, i32 17097188, i32 -16303496, i32 -27999779, i32 1803632], [10 x i32] [i32 -3553091, i32 9865099, i32 -5228566, i32 4272701, i32 -5673832, i32 -16689700, i32 14911344, i32 12196514, i32 -21405489, i32 7047412], [10 x i32] [i32 20093277, i32 9920966, i32 -11138194, i32 -5343857, i32 13161587, i32 12044805, i32 -32856851, i32 4124601, i32 -32343828, i32 -10257566] }, %struct.ge_precomp { [10 x i32] [i32 -20788824, i32 14084654, i32 -13531713, i32 7842147, i32 19119038, i32 -13822605, i32 4752377, i32 -8714640, i32 -21679658, i32 2288038], [10 x i32] [i32 -26819236, i32 -3283715, i32 29965059, i32 3039786, i32 -14473765, i32 2540457, i32 29457502, i32 14625692, i32 -24819617, i32 12570232], [10 x i32] [i32 -1063558, i32 -11551823, i32 16920318, i32 12494842, i32 1278292, i32 -5869109, i32 -21159943, i32 -3498680, i32 -11974704, i32 4724943] }, %struct.ge_precomp { [10 x i32] [i32 17960970, i32 -11775534, i32 -4140968, i32 -9702530, i32 -8876562, i32 -1410617, i32 -12907383, i32 -8659932, i32 -29576300, i32 1903856], [10 x i32] [i32 23134274, i32 -14279132, i32 -10681997, i32 -1611936, i32 20684485, i32 15770816, i32 -12989750, i32 3190296, i32 26955097, i32 14109738], [10 x i32] [i32 15308788, i32 5320727, i32 -30113809, i32 -14318877, i32 22902008, i32 7767164, i32 29425325, i32 -11277562, i32 31960942, i32 11934971] }, %struct.ge_precomp { [10 x i32] [i32 -27395711, i32 8435796, i32 4109644, i32 12222639, i32 -24627868, i32 14818669, i32 20638173, i32 4875028, i32 10491392, i32 1379718], [10 x i32] [i32 -13159415, i32 9197841, i32 3875503, i32 -8936108, i32 -1383712, i32 -5879801, i32 33518459, i32 16176658, i32 21432314, i32 12180697], [10 x i32] [i32 -11787308, i32 11500838, i32 13787581, i32 -13832590, i32 -22430679, i32 10140205, i32 1465425, i32 12689540, i32 -10301319, i32 -13872883] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 5414091, i32 -15386041, i32 -21007664, i32 9643570, i32 12834970, i32 1186149, i32 -2622916, i32 -1342231, i32 26128231, i32 6032912], [10 x i32] [i32 -26337395, i32 -13766162, i32 32496025, i32 -13653919, i32 17847801, i32 -12669156, i32 3604025, i32 8316894, i32 -25875034, i32 -10437358], [10 x i32] [i32 3296484, i32 6223048, i32 24680646, i32 -12246460, i32 -23052020, i32 5903205, i32 -8862297, i32 -4639164, i32 12376617, i32 3188849] }, %struct.ge_precomp { [10 x i32] [i32 29190488, i32 -14659046, i32 27549113, i32 -1183516, i32 3520066, i32 -10697301, i32 32049515, i32 -7309113, i32 -16109234, i32 -9852307], [10 x i32] [i32 -14744486, i32 -9309156, i32 735818, i32 -598978, i32 -20407687, i32 -5057904, i32 25246078, i32 -15795669, i32 18640741, i32 -960977], [10 x i32] [i32 -6928835, i32 -16430795, i32 10361374, i32 5642961, i32 4910474, i32 12345252, i32 -31638386, i32 -494430, i32 10530747, i32 1053335] }, %struct.ge_precomp { [10 x i32] [i32 -29265967, i32 -14186805, i32 -13538216, i32 -12117373, i32 -19457059, i32 -10655384, i32 -31462369, i32 -2948985, i32 24018831, i32 15026644], [10 x i32] [i32 -22592535, i32 -3145277, i32 -2289276, i32 5953843, i32 -13440189, i32 9425631, i32 25310643, i32 13003497, i32 -2314791, i32 -15145616], [10 x i32] [i32 -27419985, i32 -603321, i32 -8043984, i32 -1669117, i32 -26092265, i32 13987819, i32 -27297622, i32 187899, i32 -23166419, i32 -2531735] }, %struct.ge_precomp { [10 x i32] [i32 -21744398, i32 -13810475, i32 1844840, i32 5021428, i32 -10434399, i32 -15911473, i32 9716667, i32 16266922, i32 -5070217, i32 726099], [10 x i32] [i32 29370922, i32 -6053998, i32 7334071, i32 -15342259, i32 9385287, i32 2247707, i32 -13661962, i32 -4839461, i32 30007388, i32 -15823341], [10 x i32] [i32 -936379, i32 16086691, i32 23751945, i32 -543318, i32 -1167538, i32 -5189036, i32 9137109, i32 730663, i32 9835848, i32 4555336] }, %struct.ge_precomp { [10 x i32] [i32 -23376435, i32 1410446, i32 -22253753, i32 -12899614, i32 30867635, i32 15826977, i32 17693930, i32 544696, i32 -11985298, i32 12422646], [10 x i32] [i32 31117226, i32 -12215734, i32 -13502838, i32 6561947, i32 -9876867, i32 -12757670, i32 -5118685, i32 -4096706, i32 29120153, i32 13924425], [10 x i32] [i32 -17400879, i32 -14233209, i32 19675799, i32 -2734756, i32 -11006962, i32 -5858820, i32 -9383939, i32 -11317700, i32 7240931, i32 -237388] }, %struct.ge_precomp { [10 x i32] [i32 -31361739, i32 -11346780, i32 -15007447, i32 -5856218, i32 -22453340, i32 -12152771, i32 1222336, i32 4389483, i32 3293637, i32 -15551743], [10 x i32] [i32 -16684801, i32 -14444245, i32 11038544, i32 11054958, i32 -13801175, i32 -3338533, i32 -24319580, i32 7733547, i32 12796905, i32 -6335822], [10 x i32] [i32 -8759414, i32 -10817836, i32 -25418864, i32 10783769, i32 -30615557, i32 -9746811, i32 -28253339, i32 3647836, i32 3222231, i32 -11160462] }, %struct.ge_precomp { [10 x i32] [i32 18606113, i32 1693100, i32 -25448386, i32 -15170272, i32 4112353, i32 10045021, i32 23603893, i32 -2048234, i32 -7550776, i32 2484985], [10 x i32] [i32 9255317, i32 -3131197, i32 -12156162, i32 -1004256, i32 13098013, i32 -9214866, i32 16377220, i32 -2102812, i32 -19802075, i32 -3034702], [10 x i32] [i32 -22729289, i32 7496160, i32 -5742199, i32 11329249, i32 19991973, i32 -3347502, i32 -31718148, i32 9936966, i32 -30097688, i32 -10618797] }, %struct.ge_precomp { [10 x i32] [i32 21878590, i32 -5001297, i32 4338336, i32 13643897, i32 -3036865, i32 13160960, i32 19708896, i32 5415497, i32 -7360503, i32 -4109293], [10 x i32] [i32 27736861, i32 10103576, i32 12500508, i32 8502413, i32 -3413016, i32 -9633558, i32 10436918, i32 -1550276, i32 -23659143, i32 -8132100], [10 x i32] [i32 19492550, i32 -12104365, i32 -29681976, i32 -852630, i32 -3208171, i32 12403437, i32 30066266, i32 8367329, i32 13243957, i32 8709688] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 12015105, i32 2801261, i32 28198131, i32 10151021, i32 24818120, i32 -4743133, i32 -11194191, i32 -5645734, i32 5150968, i32 7274186], [10 x i32] [i32 2831366, i32 -12492146, i32 1478975, i32 6122054, i32 23825128, i32 -12733586, i32 31097299, i32 6083058, i32 31021603, i32 -9793610], [10 x i32] [i32 -2529932, i32 -2229646, i32 445613, i32 10720828, i32 -13849527, i32 -11505937, i32 -23507731, i32 16354465, i32 15067285, i32 -14147707] }, %struct.ge_precomp { [10 x i32] [i32 7840942, i32 14037873, i32 -33364863, i32 15934016, i32 -728213, i32 -3642706, i32 21403988, i32 1057586, i32 -19379462, i32 -12403220], [10 x i32] [i32 915865, i32 -16469274, i32 15608285, i32 -8789130, i32 -24357026, i32 6060030, i32 -17371319, i32 8410997, i32 -7220461, i32 16527025], [10 x i32] [i32 32922597, i32 -556987, i32 20336074, i32 -16184568, i32 10903705, i32 -5384487, i32 16957574, i32 52992, i32 23834301, i32 6588044] }, %struct.ge_precomp { [10 x i32] [i32 32752030, i32 11232950, i32 3381995, i32 -8714866, i32 22652988, i32 -10744103, i32 17159699, i32 16689107, i32 -20314580, i32 -1305992], [10 x i32] [i32 -4689649, i32 9166776, i32 -25710296, i32 -10847306, i32 11576752, i32 12733943, i32 7924251, i32 -2752281, i32 1976123, i32 -7249027], [10 x i32] [i32 21251222, i32 16309901, i32 -2983015, i32 -6783122, i32 30810597, i32 12967303, i32 156041, i32 -3371252, i32 12331345, i32 -8237197] }, %struct.ge_precomp { [10 x i32] [i32 8651614, i32 -4477032, i32 -16085636, i32 -4996994, i32 13002507, i32 2950805, i32 29054427, i32 -5106970, i32 10008136, i32 -4667901], [10 x i32] [i32 31486080, i32 15114593, i32 -14261250, i32 12951354, i32 14369431, i32 -7387845, i32 16347321, i32 -13662089, i32 8684155, i32 -10532952], [10 x i32] [i32 19443825, i32 11385320, i32 24468943, i32 -9659068, i32 -23919258, i32 2187569, i32 -26263207, i32 -6086921, i32 31316348, i32 14219878] }, %struct.ge_precomp { [10 x i32] [i32 -28594490, i32 1193785, i32 32245219, i32 11392485, i32 31092169, i32 15722801, i32 27146014, i32 6992409, i32 29126555, i32 9207390], [10 x i32] [i32 32382935, i32 1110093, i32 18477781, i32 11028262, i32 -27411763, i32 -7548111, i32 -4980517, i32 10843782, i32 -7957600, i32 -14435730], [10 x i32] [i32 2814918, i32 7836403, i32 27519878, i32 -7868156, i32 -20894015, i32 -11553689, i32 -21494559, i32 8550130, i32 28346258, i32 1994730] }, %struct.ge_precomp { [10 x i32] [i32 -19578299, i32 8085545, i32 -14000519, i32 -3948622, i32 2785838, i32 -16231307, i32 -19516951, i32 7174894, i32 22628102, i32 8115180], [10 x i32] [i32 -30405132, i32 955511, i32 -11133838, i32 -15078069, i32 -32447087, i32 -13278079, i32 -25651578, i32 3317160, i32 -9943017, i32 930272], [10 x i32] [i32 -15303681, i32 -6833769, i32 28856490, i32 1357446, i32 23421993, i32 1057177, i32 24091212, i32 -1388970, i32 -22765376, i32 -10650715] }, %struct.ge_precomp { [10 x i32] [i32 -22751231, i32 -5303997, i32 -12907607, i32 -12768866, i32 -15811511, i32 -7797053, i32 -14839018, i32 -16554220, i32 -1867018, i32 8398970], [10 x i32] [i32 -31969310, i32 2106403, i32 -4736360, i32 1362501, i32 12813763, i32 16200670, i32 22981545, i32 -6291273, i32 18009408, i32 -15772772], [10 x i32] [i32 -17220923, i32 -9545221, i32 -27784654, i32 14166835, i32 29815394, i32 7444469, i32 29551787, i32 -3727419, i32 19288549, i32 1325865] }, %struct.ge_precomp { [10 x i32] [i32 15100157, i32 -15835752, i32 -23923978, i32 -1005098, i32 -26450192, i32 15509408, i32 12376730, i32 -3479146, i32 33166107, i32 -8042750], [10 x i32] [i32 20909231, i32 13023121, i32 -9209752, i32 16251778, i32 -5778415, i32 -8094914, i32 12412151, i32 10018715, i32 2213263, i32 -13878373], [10 x i32] [i32 32529814, i32 -11074689, i32 30361439, i32 -16689753, i32 -9135940, i32 1513226, i32 22922121, i32 6382134, i32 -5766928, i32 8371348] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 9923462, i32 11271500, i32 12616794, i32 3544722, i32 -29998368, i32 -1721626, i32 12891687, i32 -8193132, i32 -26442943, i32 10486144], [10 x i32] [i32 -22597207, i32 -7012665, i32 8587003, i32 -8257861, i32 4084309, i32 -12970062, i32 361726, i32 2610596, i32 -23921530, i32 -11455195], [10 x i32] [i32 5408411, i32 -1136691, i32 -4969122, i32 10561668, i32 24145918, i32 14240566, i32 31319731, i32 -4235541, i32 19985175, i32 -3436086] }, %struct.ge_precomp { [10 x i32] [i32 -13994457, i32 16616821, i32 14549246, i32 3341099, i32 32155958, i32 13648976, i32 -17577068, i32 8849297, i32 65030, i32 8370684], [10 x i32] [i32 -8320926, i32 -12049626, i32 31204563, i32 5839400, i32 -20627288, i32 -1057277, i32 -19442942, i32 6922164, i32 12743482, i32 -9800518], [10 x i32] [i32 -2361371, i32 12678785, i32 28815050, i32 4759974, i32 -23893047, i32 4884717, i32 23783145, i32 11038569, i32 18800704, i32 255233] }, %struct.ge_precomp { [10 x i32] [i32 -5269658, i32 -1773886, i32 13957886, i32 7990715, i32 23132995, i32 728773, i32 13393847, i32 9066957, i32 19258688, i32 -14753793], [10 x i32] [i32 -2936654, i32 -10827535, i32 -10432089, i32 14516793, i32 -3640786, i32 4372541, i32 -31934921, i32 2209390, i32 -1524053, i32 2055794], [10 x i32] [i32 580882, i32 16705327, i32 5468415, i32 -2683018, i32 -30926419, i32 -14696000, i32 -7203346, i32 -8994389, i32 -30021019, i32 7394435] }, %struct.ge_precomp { [10 x i32] [i32 23838809, i32 1822728, i32 -15738443, i32 15242727, i32 8318092, i32 -3733104, i32 -21672180, i32 -3492205, i32 -4821741, i32 14799921], [10 x i32] [i32 13345610, i32 9759151, i32 3371034, i32 -16137791, i32 16353039, i32 8577942, i32 31129804, i32 13496856, i32 -9056018, i32 7402518], [10 x i32] [i32 2286874, i32 -4435931, i32 -20042458, i32 -2008336, i32 -13696227, i32 5038122, i32 11006906, i32 -15760352, i32 8205061, i32 1607563] }, %struct.ge_precomp { [10 x i32] [i32 14414086, i32 -8002132, i32 3331830, i32 -3208217, i32 22249151, i32 -5594188, i32 18364661, i32 -2906958, i32 30019587, i32 -9029278], [10 x i32] [i32 -27688051, i32 1585953, i32 -10775053, i32 931069, i32 -29120221, i32 -11002319, i32 -14410829, i32 12029093, i32 9944378, i32 8024], [10 x i32] [i32 4368715, i32 -3709630, i32 29874200, i32 -15022983, i32 -20230386, i32 -11410704, i32 -16114594, i32 -999085, i32 -8142388, i32 5640030] }, %struct.ge_precomp { [10 x i32] [i32 10299610, i32 13746483, i32 11661824, i32 16234854, i32 7630238, i32 5998374, i32 9809887, i32 -16694564, i32 15219798, i32 -14327783], [10 x i32] [i32 27425505, i32 -5719081, i32 3055006, i32 10660664, i32 23458024, i32 595578, i32 -15398605, i32 -1173195, i32 -18342183, i32 9742717], [10 x i32] [i32 6744077, i32 2427284, i32 26042789, i32 2720740, i32 -847906, i32 1118974, i32 32324614, i32 7406442, i32 12420155, i32 1994844] }, %struct.ge_precomp { [10 x i32] [i32 14012521, i32 -5024720, i32 -18384453, i32 -9578469, i32 -26485342, i32 -3936439, i32 -13033478, i32 -10909803, i32 24319929, i32 -6446333], [10 x i32] [i32 16412690, i32 -4507367, i32 10772641, i32 15929391, i32 -17068788, i32 -4658621, i32 10555945, i32 -10484049, i32 -30102368, i32 -4739048], [10 x i32] [i32 22397382, i32 -7767684, i32 -9293161, i32 -12792868, i32 17166287, i32 -9755136, i32 -27333065, i32 6199366, i32 21880021, i32 -12250760] }, %struct.ge_precomp { [10 x i32] [i32 -4283307, i32 5368523, i32 -31117018, i32 8163389, i32 -30323063, i32 3209128, i32 16557151, i32 8890729, i32 8840445, i32 4957760], [10 x i32] [i32 -15447727, i32 709327, i32 -6919446, i32 -10870178, i32 -29777922, i32 6522332, i32 -21720181, i32 12130072, i32 -14796503, i32 5005757], [10 x i32] [i32 -2114751, i32 -14308128, i32 23019042, i32 15765735, i32 -25269683, i32 6002752, i32 10183197, i32 -13239326, i32 -16395286, i32 -2176112] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -19025756, i32 1632005, i32 13466291, i32 -7995100, i32 -23640451, i32 16573537, i32 -32013908, i32 -3057104, i32 22208662, i32 2000468], [10 x i32] [i32 3065073, i32 -1412761, i32 -25598674, i32 -361432, i32 -17683065, i32 -5703415, i32 -8164212, i32 11248527, i32 -3691214, i32 -7414184], [10 x i32] [i32 10379208, i32 -6045554, i32 8877319, i32 1473647, i32 -29291284, i32 -12507580, i32 16690915, i32 2553332, i32 -3132688, i32 16400289] }, %struct.ge_precomp { [10 x i32] [i32 15716668, i32 1254266, i32 -18472690, i32 7446274, i32 -8448918, i32 6344164, i32 -22097271, i32 -7285580, i32 26894937, i32 9132066], [10 x i32] [i32 24158887, i32 12938817, i32 11085297, i32 -8177598, i32 -28063478, i32 -4457083, i32 -30576463, i32 64452, i32 -6817084, i32 -2692882], [10 x i32] [i32 13488534, i32 7794716, i32 22236231, i32 5989356, i32 25426474, i32 -12578208, i32 2350710, i32 -3418511, i32 -4688006, i32 2364226] }, %struct.ge_precomp { [10 x i32] [i32 16335052, i32 9132434, i32 25640582, i32 6678888, i32 1725628, i32 8517937, i32 -11807024, i32 -11697457, i32 15445875, i32 -7798101], [10 x i32] [i32 29004207, i32 -7867081, i32 28661402, i32 -640412, i32 -12794003, i32 -7943086, i32 31863255, i32 -4135540, i32 -278050, i32 -15759279], [10 x i32] [i32 -6122061, i32 -14866665, i32 -28614905, i32 14569919, i32 -10857999, i32 -3591829, i32 10343412, i32 -6976290, i32 -29828287, i32 -10815811] }, %struct.ge_precomp { [10 x i32] [i32 27081650, i32 3463984, i32 14099042, i32 -4517604, i32 1616303, i32 -6205604, i32 29542636, i32 15372179, i32 17293797, i32 960709], [10 x i32] [i32 20263915, i32 11434237, i32 -5765435, i32 11236810, i32 13505955, i32 -10857102, i32 -16111345, i32 6493122, i32 -19384511, i32 7639714], [10 x i32] [i32 -2830798, i32 -14839232, i32 25403038, i32 -8215196, i32 -8317012, i32 -16173699, i32 18006287, i32 -16043750, i32 29994677, i32 -15808121] }, %struct.ge_precomp { [10 x i32] [i32 9769828, i32 5202651, i32 -24157398, i32 -13631392, i32 -28051003, i32 -11561624, i32 -24613141, i32 -13860782, i32 -31184575, i32 709464], [10 x i32] [i32 12286395, i32 13076066, i32 -21775189, i32 -1176622, i32 -25003198, i32 4057652, i32 -32018128, i32 -8890874, i32 16102007, i32 13205847], [10 x i32] [i32 13733362, i32 5599946, i32 10557076, i32 3195751, i32 -5557991, i32 8536970, i32 -25540170, i32 8525972, i32 10151379, i32 10394400] }, %struct.ge_precomp { [10 x i32] [i32 4024660, i32 -16137551, i32 22436262, i32 12276534, i32 -9099015, i32 -2686099, i32 19698229, i32 11743039, i32 -33302334, i32 8934414], [10 x i32] [i32 -15879800, i32 -4525240, i32 -8580747, i32 -2934061, i32 14634845, i32 -698278, i32 -9449077, i32 3137094, i32 -11536886, i32 11721158], [10 x i32] [i32 17555939, i32 -5013938, i32 8268606, i32 2331751, i32 -22738815, i32 9761013, i32 9319229, i32 8835153, i32 -9205489, i32 -1280045] }, %struct.ge_precomp { [10 x i32] [i32 -461409, i32 -7830014, i32 20614118, i32 16688288, i32 -7514766, i32 -4807119, i32 22300304, i32 505429, i32 6108462, i32 -6183415], [10 x i32] [i32 -5070281, i32 12367917, i32 -30663534, i32 3234473, i32 32617080, i32 -8422642, i32 29880583, i32 -13483331, i32 -26898490, i32 -7867459], [10 x i32] [i32 -31975283, i32 5726539, i32 26934134, i32 10237677, i32 -3173717, i32 -605053, i32 24199304, i32 3795095, i32 7592688, i32 -14992079] }, %struct.ge_precomp { [10 x i32] [i32 21594432, i32 -14964228, i32 17466408, i32 -4077222, i32 32537084, i32 2739898, i32 6407723, i32 12018833, i32 -28256052, i32 4298412], [10 x i32] [i32 -20650503, i32 -11961496, i32 -27236275, i32 570498, i32 3767144, i32 -1717540, i32 13891942, i32 -1569194, i32 13717174, i32 10805743], [10 x i32] [i32 -14676630, i32 -15644296, i32 15287174, i32 11927123, i32 24177847, i32 -8175568, i32 -796431, i32 14860609, i32 -26938930, i32 -5863836] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 12962541, i32 5311799, i32 -10060768, i32 11658280, i32 18855286, i32 -7954201, i32 13286263, i32 -12808704, i32 -4381056, i32 9882022], [10 x i32] [i32 18512079, i32 11319350, i32 -20123124, i32 15090309, i32 18818594, i32 5271736, i32 -22727904, i32 3666879, i32 -23967430, i32 -3299429], [10 x i32] [i32 -6789020, i32 -3146043, i32 16192429, i32 13241070, i32 15898607, i32 -14206114, i32 -10084880, i32 -6661110, i32 -2403099, i32 5276065] }, %struct.ge_precomp { [10 x i32] [i32 30169808, i32 -5317648, i32 26306206, i32 -11750859, i32 27814964, i32 7069267, i32 7152851, i32 3684982, i32 1449224, i32 13082861], [10 x i32] [i32 10342826, i32 3098505, i32 2119311, i32 193222, i32 25702612, i32 12233820, i32 23697382, i32 15056736, i32 -21016438, i32 -8202000], [10 x i32] [i32 -33150110, i32 3261608, i32 22745853, i32 7948688, i32 19370557, i32 -15177665, i32 -26171976, i32 6482814, i32 -10300080, i32 -11060101] }, %struct.ge_precomp { [10 x i32] [i32 32869458, i32 -5408545, i32 25609743, i32 15678670, i32 -10687769, i32 -15471071, i32 26112421, i32 2521008, i32 -22664288, i32 6904815], [10 x i32] [i32 29506923, i32 4457497, i32 3377935, i32 -9796444, i32 -30510046, i32 12935080, i32 1561737, i32 3841096, i32 -29003639, i32 -6657642], [10 x i32] [i32 10340844, i32 -6630377, i32 -18656632, i32 -2278430, i32 12621151, i32 -13339055, i32 30878497, i32 -11824370, i32 -25584551, i32 5181966] }, %struct.ge_precomp { [10 x i32] [i32 25940115, i32 -12658025, i32 17324188, i32 -10307374, i32 -8671468, i32 15029094, i32 24396252, i32 -16450922, i32 -2322852, i32 -12388574], [10 x i32] [i32 -21765684, i32 9916823, i32 -1300409, i32 4079498, i32 -1028346, i32 11909559, i32 1782390, i32 12641087, i32 20603771, i32 -6561742], [10 x i32] [i32 -18882287, i32 -11673380, i32 24849422, i32 11501709, i32 13161720, i32 -4768874, i32 1925523, i32 11914390, i32 4662781, i32 7820689] }, %struct.ge_precomp { [10 x i32] [i32 12241050, i32 -425982, i32 8132691, i32 9393934, i32 32846760, i32 -1599620, i32 29749456, i32 12172924, i32 16136752, i32 15264020], [10 x i32] [i32 -10349955, i32 -14680563, i32 -8211979, i32 2330220, i32 -17662549, i32 -14545780, i32 10658213, i32 6671822, i32 19012087, i32 3772772], [10 x i32] [i32 3753511, i32 -3421066, i32 10617074, i32 2028709, i32 14841030, i32 -6721664, i32 28718732, i32 -15762884, i32 20527771, i32 12988982] }, %struct.ge_precomp { [10 x i32] [i32 -14822485, i32 -5797269, i32 -3707987, i32 12689773, i32 -898983, i32 -10914866, i32 -24183046, i32 -10564943, i32 3299665, i32 -12424953], [10 x i32] [i32 -16777703, i32 -15253301, i32 -9642417, i32 4978983, i32 3308785, i32 8755439, i32 6943197, i32 6461331, i32 -25583147, i32 8991218], [10 x i32] [i32 -17226263, i32 1816362, i32 -1673288, i32 -6086439, i32 31783888, i32 -8175991, i32 -32948145, i32 7417950, i32 -30242287, i32 1507265] }, %struct.ge_precomp { [10 x i32] [i32 29692663, i32 6829891, i32 -10498800, i32 4334896, i32 20945975, i32 -11906496, i32 -28887608, i32 8209391, i32 14606362, i32 -10647073], [10 x i32] [i32 -3481570, i32 8707081, i32 32188102, i32 5672294, i32 22096700, i32 1711240, i32 -33020695, i32 9761487, i32 4170404, i32 -2085325], [10 x i32] [i32 -11587470, i32 14855945, i32 -4127778, i32 -1531857, i32 -26649089, i32 15084046, i32 22186522, i32 16002000, i32 -14276837, i32 -8400798] }, %struct.ge_precomp { [10 x i32] [i32 -4811456, i32 13761029, i32 -31703877, i32 -2483919, i32 -3312471, i32 7869047, i32 -7113572, i32 -9620092, i32 13240845, i32 10965870], [10 x i32] [i32 -7742563, i32 -8256762, i32 -14768334, i32 -13656260, i32 -23232383, i32 12387166, i32 4498947, i32 14147411, i32 29514390, i32 4302863], [10 x i32] [i32 -13413405, i32 -12407859, i32 20757302, i32 -13801832, i32 14785143, i32 8976368, i32 -5061276, i32 -2144373, i32 17846988, i32 -13971927] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -2244452, i32 -754728, i32 -4597030, i32 -1066309, i32 -6247172, i32 1455299, i32 -21647728, i32 -9214789, i32 -5222701, i32 12650267], [10 x i32] [i32 -9906797, i32 -16070310, i32 21134160, i32 12198166, i32 -27064575, i32 708126, i32 387813, i32 13770293, i32 -19134326, i32 10958663], [10 x i32] [i32 22470984, i32 12369526, i32 23446014, i32 -5441109, i32 -21520802, i32 -9698723, i32 -11772496, i32 -11574455, i32 -25083830, i32 4271862] }, %struct.ge_precomp { [10 x i32] [i32 -25169565, i32 -10053642, i32 -19909332, i32 15361595, i32 -5984358, i32 2159192, i32 75375, i32 -4278529, i32 -32526221, i32 8469673], [10 x i32] [i32 15854970, i32 4148314, i32 -8893890, i32 7259002, i32 11666551, i32 13824734, i32 -30531198, i32 2697372, i32 24154791, i32 -9460943], [10 x i32] [i32 15446137, i32 -15806644, i32 29759747, i32 14019369, i32 30811221, i32 -9610191, i32 -31582008, i32 12840104, i32 24913809, i32 9815020] }, %struct.ge_precomp { [10 x i32] [i32 -4709286, i32 -5614269, i32 -31841498, i32 -12288893, i32 -14443537, i32 10799414, i32 -9103676, i32 13438769, i32 18735128, i32 9466238], [10 x i32] [i32 11933045, i32 9281483, i32 5081055, i32 -5183824, i32 -2628162, i32 -4905629, i32 -7727821, i32 -10896103, i32 -22728655, i32 16199064], [10 x i32] [i32 14576810, i32 379472, i32 -26786533, i32 -8317236, i32 -29426508, i32 -10812974, i32 -102766, i32 1876699, i32 30801119, i32 2164795] }, %struct.ge_precomp { [10 x i32] [i32 15995086, i32 3199873, i32 13672555, i32 13712240, i32 -19378835, i32 -4647646, i32 -13081610, i32 -15496269, i32 -13492807, i32 1268052], [10 x i32] [i32 -10290614, i32 -3659039, i32 -3286592, i32 10948818, i32 23037027, i32 3794475, i32 -3470338, i32 -12600221, i32 -17055369, i32 3565904], [10 x i32] [i32 29210088, i32 -9419337, i32 -5919792, i32 -4952785, i32 10834811, i32 -13327726, i32 -16512102, i32 -10820713, i32 -27162222, i32 -14030531] }, %struct.ge_precomp { [10 x i32] [i32 -13161890, i32 15508588, i32 16663704, i32 -8156150, i32 -28349942, i32 9019123, i32 -29183421, i32 -3769423, i32 2244111, i32 -14001979], [10 x i32] [i32 -5152875, i32 -3800936, i32 -9306475, i32 -6071583, i32 16243069, i32 14684434, i32 -25673088, i32 -16180800, i32 13491506, i32 4641841], [10 x i32] [i32 10813417, i32 643330, i32 -19188515, i32 -728916, i32 30292062, i32 -16600078, i32 27548447, i32 -7721242, i32 14476989, i32 -12767431] }, %struct.ge_precomp { [10 x i32] [i32 10292079, i32 9984945, i32 6481436, i32 8279905, i32 -7251514, i32 7032743, i32 27282937, i32 -1644259, i32 -27912810, i32 12651324], [10 x i32] [i32 -31185513, i32 -813383, i32 22271204, i32 11835308, i32 10201545, i32 15351028, i32 17099662, i32 3988035, i32 21721536, i32 -3148940], [10 x i32] [i32 10202177, i32 -6545839, i32 -31373232, i32 -9574638, i32 -32150642, i32 -8119683, i32 -12906320, i32 3852694, i32 13216206, i32 14842320] }, %struct.ge_precomp { [10 x i32] [i32 -15815640, i32 -10601066, i32 -6538952, i32 -7258995, i32 -6984659, i32 -6581778, i32 -31500847, i32 13765824, i32 -27434397, i32 9900184], [10 x i32] [i32 14465505, i32 -13833331, i32 -32133984, i32 -14738873, i32 -27443187, i32 12990492, i32 33046193, i32 15796406, i32 -7051866, i32 -8040114], [10 x i32] [i32 30924417, i32 -8279620, i32 6359016, i32 -12816335, i32 16508377, i32 9071735, i32 -25488601, i32 15413635, i32 9524356, i32 -7018878] }, %struct.ge_precomp { [10 x i32] [i32 12274201, i32 -13175547, i32 32627641, i32 -1785326, i32 6736625, i32 13267305, i32 5237659, i32 -5109483, i32 15663516, i32 4035784], [10 x i32] [i32 -2951309, i32 8903985, i32 17349946, i32 601635, i32 -16432815, i32 -4612556, i32 -13732739, i32 -15889334, i32 -22258478, i32 4659091], [10 x i32] [i32 -16916263, i32 -4952973, i32 -30393711, i32 -15158821, i32 20774812, i32 15897498, i32 5736189, i32 15026997, i32 -2178256, i32 -13455585] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -8858980, i32 -2219056, i32 28571666, i32 -10155518, i32 -474467, i32 -10105698, i32 -3801496, i32 278095, i32 23440562, i32 -290208], [10 x i32] [i32 10226241, i32 -5928702, i32 15139956, i32 120818, i32 -14867693, i32 5218603, i32 32937275, i32 11551483, i32 -16571960, i32 -7442864], [10 x i32] [i32 17932739, i32 -12437276, i32 -24039557, i32 10749060, i32 11316803, i32 7535897, i32 22503767, i32 5561594, i32 -3646624, i32 3898661] }, %struct.ge_precomp { [10 x i32] [i32 7749907, i32 -969567, i32 -16339731, i32 -16464, i32 -25018111, i32 15122143, i32 -1573531, i32 7152530, i32 21831162, i32 1245233], [10 x i32] [i32 26958459, i32 -14658026, i32 4314586, i32 8346991, i32 -5677764, i32 11960072, i32 -32589295, i32 -620035, i32 -30402091, i32 -16716212], [10 x i32] [i32 -12165896, i32 9166947, i32 33491384, i32 13673479, i32 29787085, i32 13096535, i32 6280834, i32 14587357, i32 -22338025, i32 13987525] }, %struct.ge_precomp { [10 x i32] [i32 -24349909, i32 7778775, i32 21116000, i32 15572597, i32 -4833266, i32 -5357778, i32 -4300898, i32 -5124639, i32 -7469781, i32 -2858068], [10 x i32] [i32 9681908, i32 -6737123, i32 -31951644, i32 13591838, i32 -6883821, i32 386950, i32 31622781, i32 6439245, i32 -14581012, i32 4091397], [10 x i32] [i32 -8426427, i32 1470727, i32 -28109679, i32 -1596990, i32 3978627, i32 -5123623, i32 -19622683, i32 12092163, i32 29077877, i32 -14741988] }, %struct.ge_precomp { [10 x i32] [i32 5269168, i32 -6859726, i32 -13230211, i32 -8020715, i32 25932563, i32 1763552, i32 -5606110, i32 -5505881, i32 -20017847, i32 2357889], [10 x i32] [i32 32264008, i32 -15407652, i32 -5387735, i32 -1160093, i32 -2091322, i32 -3946900, i32 23104804, i32 -12869908, i32 5727338, i32 189038], [10 x i32] [i32 14609123, i32 -8954470, i32 -6000566, i32 -16622781, i32 -14577387, i32 -7743898, i32 -26745169, i32 10942115, i32 -25888931, i32 -14884697] }, %struct.ge_precomp { [10 x i32] [i32 20513500, i32 5557931, i32 -15604613, i32 7829531, i32 26413943, i32 -2019404, i32 -21378968, i32 7471781, i32 13913677, i32 -5137875], [10 x i32] [i32 -25574376, i32 11967826, i32 29233242, i32 12948236, i32 -6754465, i32 4713227, i32 -8940970, i32 14059180, i32 12878652, i32 8511905], [10 x i32] [i32 -25656801, i32 3393631, i32 -2955415, i32 -7075526, i32 -2250709, i32 9366908, i32 -30223418, i32 6812974, i32 5568676, i32 -3127656] }, %struct.ge_precomp { [10 x i32] [i32 11630004, i32 12144454, i32 2116339, i32 13606037, i32 27378885, i32 15676917, i32 -17408753, i32 -13504373, i32 -14395196, i32 8070818], [10 x i32] [i32 27117696, i32 -10007378, i32 -31282771, i32 -5570088, i32 1127282, i32 12772488, i32 -29845906, i32 10483306, i32 -11552749, i32 -1028714], [10 x i32] [i32 10637467, i32 -5688064, i32 5674781, i32 1072708, i32 -26343588, i32 -6982302, i32 -1683975, i32 9177853, i32 -27493162, i32 15431203] }, %struct.ge_precomp { [10 x i32] [i32 20525145, i32 10892566, i32 -12742472, i32 12779443, i32 -29493034, i32 16150075, i32 -28240519, i32 14943142, i32 -15056790, i32 -7935931], [10 x i32] [i32 -30024462, i32 5626926, i32 -551567, i32 -9981087, i32 753598, i32 11981191, i32 25244767, i32 -3239766, i32 -3356550, i32 9594024], [10 x i32] [i32 -23752644, i32 2636870, i32 -5163910, i32 -10103818, i32 585134, i32 7877383, i32 11345683, i32 -6492290, i32 13352335, i32 -10977084] }, %struct.ge_precomp { [10 x i32] [i32 -1931799, i32 -5407458, i32 3304649, i32 -12884869, i32 17015806, i32 -4877091, i32 -29783850, i32 -7752482, i32 -13215537, i32 -319204], [10 x i32] [i32 20239939, i32 6607058, i32 6203985, i32 3483793, i32 -18386976, i32 -779229, i32 -20723742, i32 15077870, i32 -22750759, i32 14523817], [10 x i32] [i32 27406042, i32 -6041657, i32 27423596, i32 -4497394, i32 4996214, i32 10002360, i32 -28842031, i32 -4545494, i32 -30172742, i32 -4805667] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 11374242, i32 12660715, i32 17861383, i32 -12540833, i32 10935568, i32 1099227, i32 -13886076, i32 -9091740, i32 -27727044, i32 11358504], [10 x i32] [i32 -12730809, i32 10311867, i32 1510375, i32 10778093, i32 -2119455, i32 -9145702, i32 32676003, i32 11149336, i32 -26123651, i32 4985768], [10 x i32] [i32 -19096303, i32 341147, i32 -6197485, i32 -239033, i32 15756973, i32 -8796662, i32 -983043, i32 13794114, i32 -19414307, i32 -15621255] }, %struct.ge_precomp { [10 x i32] [i32 6490081, i32 11940286, i32 25495923, i32 -7726360, i32 8668373, i32 -8751316, i32 3367603, i32 6970005, i32 -1691065, i32 -9004790], [10 x i32] [i32 1656497, i32 13457317, i32 15370807, i32 6364910, i32 13605745, i32 8362338, i32 -19174622, i32 -5475723, i32 -16796596, i32 -5031438], [10 x i32] [i32 -22273315, i32 -13524424, i32 -64685, i32 -4334223, i32 -18605636, i32 -10921968, i32 -20571065, i32 -7007978, i32 -99853, i32 -10237333] }, %struct.ge_precomp { [10 x i32] [i32 17747465, i32 10039260, i32 19368299, i32 -4050591, i32 -20630635, i32 -16041286, i32 31992683, i32 -15857976, i32 -29260363, i32 -5511971], [10 x i32] [i32 31932027, i32 -4986141, i32 -19612382, i32 16366580, i32 22023614, i32 88450, i32 11371999, i32 -3744247, i32 4882242, i32 -10626905], [10 x i32] [i32 29796507, i32 37186, i32 19818052, i32 10115756, i32 -11829032, i32 3352736, i32 18551198, i32 3272828, i32 -5190932, i32 -4162409] }, %struct.ge_precomp { [10 x i32] [i32 12501286, i32 4044383, i32 -8612957, i32 -13392385, i32 -32430052, i32 5136599, i32 -19230378, i32 -3529697, i32 330070, i32 -3659409], [10 x i32] [i32 6384877, i32 2899513, i32 17807477, i32 7663917, i32 -2358888, i32 12363165, i32 25366522, i32 -8573892, i32 -271295, i32 12071499], [10 x i32] [i32 -8365515, i32 -4042521, i32 25133448, i32 -4517355, i32 -6211027, i32 2265927, i32 -32769618, i32 1936675, i32 -5159697, i32 3829363] }, %struct.ge_precomp { [10 x i32] [i32 28425966, i32 -5835433, i32 -577090, i32 -4697198, i32 -14217555, i32 6870930, i32 7921550, i32 -6567787, i32 26333140, i32 14267664], [10 x i32] [i32 -11067219, i32 11871231, i32 27385719, i32 -10559544, i32 -4585914, i32 -11189312, i32 10004786, i32 -8709488, i32 -21761224, i32 8930324], [10 x i32] [i32 -21197785, i32 -16396035, i32 25654216, i32 -1725397, i32 12282012, i32 11008919, i32 1541940, i32 4757911, i32 -26491501, i32 -16408940] }, %struct.ge_precomp { [10 x i32] [i32 13537262, i32 -7759490, i32 -20604840, i32 10961927, i32 -5922820, i32 -13218065, i32 -13156584, i32 6217254, i32 -15943699, i32 13814990], [10 x i32] [i32 -17422573, i32 15157790, i32 18705543, i32 29619, i32 24409717, i32 -260476, i32 27361681, i32 9257833, i32 -1956526, i32 -1776914], [10 x i32] [i32 -25045300, i32 -10191966, i32 15366585, i32 15166509, i32 -13105086, i32 8423556, i32 -29171540, i32 12361135, i32 -18685978, i32 4578290] }, %struct.ge_precomp { [10 x i32] [i32 24579768, i32 3711570, i32 1342322, i32 -11180126, i32 -27005135, i32 14124956, i32 -22544529, i32 14074919, i32 21964432, i32 8235257], [10 x i32] [i32 -6528613, i32 -2411497, i32 9442966, i32 -5925588, i32 12025640, i32 -1487420, i32 -2981514, i32 -1669206, i32 13006806, i32 2355433], [10 x i32] [i32 -16304899, i32 -13605259, i32 -6632427, i32 -5142349, i32 16974359, i32 -10911083, i32 27202044, i32 1719366, i32 1141648, i32 -12796236] }, %struct.ge_precomp { [10 x i32] [i32 -12863944, i32 -13219986, i32 -8318266, i32 -11018091, i32 -6810145, i32 -4843894, i32 13475066, i32 -3133972, i32 32674895, i32 13715045], [10 x i32] [i32 11423335, i32 -5468059, i32 32344216, i32 8962751, i32 24989809, i32 9241752, i32 -13265253, i32 16086212, i32 -28740881, i32 -15642093], [10 x i32] [i32 -1409668, i32 12530728, i32 -6368726, i32 10847387, i32 19531186, i32 -14132160, i32 -11709148, i32 7791794, i32 -27245943, i32 4383347] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -28970898, i32 5271447, i32 -1266009, i32 -9736989, i32 -12455236, i32 16732599, i32 -4862407, i32 -4906449, i32 27193557, i32 6245191], [10 x i32] [i32 -15193956, i32 5362278, i32 -1783893, i32 2695834, i32 4960227, i32 12840725, i32 23061898, i32 3260492, i32 22510453, i32 8577507], [10 x i32] [i32 -12632451, i32 11257346, i32 -32692994, i32 13548177, i32 -721004, i32 10879011, i32 31168030, i32 13952092, i32 -29571492, i32 -3635906] }, %struct.ge_precomp { [10 x i32] [i32 3877321, i32 -9572739, i32 32416692, i32 5405324, i32 -11004407, i32 -13656635, i32 3759769, i32 11935320, i32 5611860, i32 8164018], [10 x i32] [i32 -16275802, i32 14667797, i32 15906460, i32 12155291, i32 -22111149, i32 -9039718, i32 32003002, i32 -8832289, i32 5773085, i32 -8422109], [10 x i32] [i32 -23788118, i32 -8254300, i32 1950875, i32 8937633, i32 18686727, i32 16459170, i32 -905725, i32 12376320, i32 31632953, i32 190926] }, %struct.ge_precomp { [10 x i32] [i32 -24593607, i32 -16138885, i32 -8423991, i32 13378746, i32 14162407, i32 6901328, i32 -8288749, i32 4508564, i32 -25341555, i32 -3627528], [10 x i32] [i32 8884438, i32 -5884009, i32 6023974, i32 10104341, i32 -6881569, i32 -4941533, i32 18722941, i32 -14786005, i32 -1672488, i32 827625], [10 x i32] [i32 -32720583, i32 -16289296, i32 -32503547, i32 7101210, i32 13354605, i32 2659080, i32 -1800575, i32 -14108036, i32 -24878478, i32 1541286] }, %struct.ge_precomp { [10 x i32] [i32 2901347, i32 -1117687, i32 3880376, i32 -10059388, i32 -17620940, i32 -3612781, i32 -21802117, i32 -3567481, i32 20456845, i32 -1885033], [10 x i32] [i32 27019610, i32 12299467, i32 -13658288, i32 -1603234, i32 -12861660, i32 -4861471, i32 -19540150, i32 -5016058, i32 29439641, i32 15138866], [10 x i32] [i32 21536104, i32 -6626420, i32 -32447818, i32 -10690208, i32 -22408077, i32 5175814, i32 -5420040, i32 -16361163, i32 7779328, i32 109896] }, %struct.ge_precomp { [10 x i32] [i32 30279744, i32 14648750, i32 -8044871, i32 6425558, i32 13639621, i32 -743509, i32 28698390, i32 12180118, i32 23177719, i32 -554075], [10 x i32] [i32 26572847, i32 3405927, i32 -31701700, i32 12890905, i32 -19265668, i32 5335866, i32 -6493768, i32 2378492, i32 4439158, i32 -13279347], [10 x i32] [i32 -22716706, i32 3489070, i32 -9225266, i32 -332753, i32 18875722, i32 -1140095, i32 14819434, i32 -12731527, i32 -17717757, i32 -5461437] }, %struct.ge_precomp { [10 x i32] [i32 -5056483, i32 16566551, i32 15953661, i32 3767752, i32 -10436499, i32 15627060, i32 -820954, i32 2177225, i32 8550082, i32 -15114165], [10 x i32] [i32 -18473302, i32 16596775, i32 -381660, i32 15663611, i32 22860960, i32 15585581, i32 -27844109, i32 -3582739, i32 -23260460, i32 -8428588], [10 x i32] [i32 -32480551, i32 15707275, i32 -8205912, i32 -5652081, i32 29464558, i32 2713815, i32 -22725137, i32 15860482, i32 -21902570, i32 1494193] }, %struct.ge_precomp { [10 x i32] [i32 -19562091, i32 -14087393, i32 -25583872, i32 -9299552, i32 13127842, i32 759709, i32 21923482, i32 16529112, i32 8742704, i32 12967017], [10 x i32] [i32 -28464899, i32 1553205, i32 32536856, i32 -10473729, i32 -24691605, i32 -406174, i32 -8914625, i32 -2933896, i32 -29903758, i32 15553883], [10 x i32] [i32 21877909, i32 3230008, i32 9881174, i32 10539357, i32 -4797115, i32 2841332, i32 11543572, i32 14513274, i32 19375923, i32 -12647961] }, %struct.ge_precomp { [10 x i32] [i32 8832269, i32 -14495485, i32 13253511, i32 5137575, i32 5037871, i32 4078777, i32 24880818, i32 -6222716, i32 2862653, i32 9455043], [10 x i32] [i32 29306751, i32 5123106, i32 20245049, i32 -14149889, i32 9592566, i32 8447059, i32 -2077124, i32 -2990080, i32 15511449, i32 4789663], [10 x i32] [i32 -20679756, i32 7004547, i32 8824831, i32 -9434977, i32 -4045704, i32 -3750736, i32 -5754762, i32 108893, i32 23513200, i32 16652362] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -33256173, i32 4144782, i32 -4476029, i32 -6579123, i32 10770039, i32 -7155542, i32 -6650416, i32 -12936300, i32 -18319198, i32 10212860], [10 x i32] [i32 2756081, i32 8598110, i32 7383731, i32 -6859892, i32 22312759, i32 -1105012, i32 21179801, i32 2600940, i32 -9988298, i32 -12506466], [10 x i32] [i32 -24645692, i32 13317462, i32 -30449259, i32 -15653928, i32 21365574, i32 -10869657, i32 11344424, i32 864440, i32 -2499677, i32 -16710063] }, %struct.ge_precomp { [10 x i32] [i32 -26432803, i32 6148329, i32 -17184412, i32 -14474154, i32 18782929, i32 -275997, i32 -22561534, i32 211300, i32 2719757, i32 4940997], [10 x i32] [i32 -1323882, i32 3911313, i32 -6948744, i32 14759765, i32 -30027150, i32 7851207, i32 21690126, i32 8518463, i32 26699843, i32 5276295], [10 x i32] [i32 -13149873, i32 -6429067, i32 9396249, i32 365013, i32 24703301, i32 -10488939, i32 1321586, i32 149635, i32 -15452774, i32 7159369] }, %struct.ge_precomp { [10 x i32] [i32 9987780, i32 -3404759, i32 17507962, i32 9505530, i32 9731535, i32 -2165514, i32 22356009, i32 8312176, i32 22477218, i32 -8403385], [10 x i32] [i32 18155857, i32 -16504990, i32 19744716, i32 9006923, i32 15154154, i32 -10538976, i32 24256460, i32 -4864995, i32 -22548173, i32 9334109], [10 x i32] [i32 2986088, i32 -4911893, i32 10776628, i32 -3473844, i32 10620590, i32 -7083203, i32 -21413845, i32 14253545, i32 -22587149, i32 536906] }, %struct.ge_precomp { [10 x i32] [i32 4377756, i32 8115836, i32 24567078, i32 15495314, i32 11625074, i32 13064599, i32 7390551, i32 10589625, i32 10838060, i32 -15420424], [10 x i32] [i32 -19342404, i32 867880, i32 9277171, i32 -3218459, i32 -14431572, i32 -1986443, i32 19295826, i32 -15796950, i32 6378260, i32 699185], [10 x i32] [i32 7895026, i32 4057113, i32 -7081772, i32 -13077756, i32 -17886831, i32 -323126, i32 -716039, i32 15693155, i32 -5045064, i32 -13373962] }, %struct.ge_precomp { [10 x i32] [i32 -7737563, i32 -5869402, i32 -14566319, i32 -7406919, i32 11385654, i32 13201616, i32 31730678, i32 -10962840, i32 -3918636, i32 -9669325], [10 x i32] [i32 10188286, i32 -15770834, i32 -7336361, i32 13427543, i32 22223443, i32 14896287, i32 30743455, i32 7116568, i32 -21786507, i32 5427593], [10 x i32] [i32 696102, i32 13206899, i32 27047647, i32 -10632082, i32 15285305, i32 -9853179, i32 10798490, i32 -4578720, i32 19236243, i32 12477404] }, %struct.ge_precomp { [10 x i32] [i32 -11229439, i32 11243796, i32 -17054270, i32 -8040865, i32 -788228, i32 -8167967, i32 -3897669, i32 11180504, i32 -23169516, i32 7733644], [10 x i32] [i32 17800790, i32 -14036179, i32 -27000429, i32 -11766671, i32 23887827, i32 3149671, i32 23466177, i32 -10538171, i32 10322027, i32 15313801], [10 x i32] [i32 26246234, i32 11968874, i32 32263343, i32 -5468728, i32 6830755, i32 -13323031, i32 -15794704, i32 -101982, i32 -24449242, i32 10890804] }, %struct.ge_precomp { [10 x i32] [i32 -31365647, i32 10271363, i32 -12660625, i32 -6267268, i32 16690207, i32 -13062544, i32 -14982212, i32 16484931, i32 25180797, i32 -5334884], [10 x i32] [i32 -586574, i32 10376444, i32 -32586414, i32 -11286356, i32 19801893, i32 10997610, i32 2276632, i32 9482883, i32 316878, i32 13820577], [10 x i32] [i32 -9882808, i32 -4510367, i32 -2115506, i32 16457136, i32 -11100081, i32 11674996, i32 30756178, i32 -7515054, i32 30696930, i32 -3712849] }, %struct.ge_precomp { [10 x i32] [i32 32988917, i32 -9603412, i32 12499366, i32 7910787, i32 -10617257, i32 -11931514, i32 -7342816, i32 -9985397, i32 -32349517, i32 7392473], [10 x i32] [i32 -8855661, i32 15927861, i32 9866406, i32 -3649411, i32 -2396914, i32 -16655781, i32 -30409476, i32 -9134995, i32 25112947, i32 -2926644], [10 x i32] [i32 -2504044, i32 -436966, i32 25621774, i32 -5678772, i32 15085042, i32 -5479877, i32 -24884878, i32 -13526194, i32 5537438, i32 -13914319] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -11225584, i32 2320285, i32 -9584280, i32 10149187, i32 -33444663, i32 5808648, i32 -14876251, i32 -1729667, i32 31234590, i32 6090599], [10 x i32] [i32 -9633316, i32 116426, i32 26083934, i32 2897444, i32 -6364437, i32 -2688086, i32 609721, i32 15878753, i32 -6970405, i32 -9034768], [10 x i32] [i32 -27757857, i32 247744, i32 -15194774, i32 -9002551, i32 23288161, i32 -10011936, i32 -23869595, i32 6503646, i32 20650474, i32 1804084] }, %struct.ge_precomp { [10 x i32] [i32 -27589786, i32 15456424, i32 8972517, i32 8469608, i32 15640622, i32 4439847, i32 3121995, i32 -10329713, i32 27842616, i32 -202328], [10 x i32] [i32 -15306973, i32 2839644, i32 22530074, i32 10026331, i32 4602058, i32 5048462, i32 28248656, i32 5031932, i32 -11375082, i32 12714369], [10 x i32] [i32 20807691, i32 -7270825, i32 29286141, i32 11421711, i32 -27876523, i32 -13868230, i32 -21227475, i32 1035546, i32 -19733229, i32 12796920] }, %struct.ge_precomp { [10 x i32] [i32 12076899, i32 -14301286, i32 -8785001, i32 -11848922, i32 -25012791, i32 16400684, i32 -17591495, i32 -12899438, i32 3480665, i32 -15182815], [10 x i32] [i32 -32361549, i32 5457597, i32 28548107, i32 7833186, i32 7303070, i32 -11953545, i32 -24363064, i32 -15921875, i32 -33374054, i32 2771025], [10 x i32] [i32 -21389266, i32 421932, i32 26597266, i32 6860826, i32 22486084, i32 -6737172, i32 -17137485, i32 -4210226, i32 -24552282, i32 15673397] }, %struct.ge_precomp { [10 x i32] [i32 -20184622, i32 2338216, i32 19788685, i32 -9620956, i32 -4001265, i32 -8740893, i32 -20271184, i32 4733254, i32 3727144, i32 -12934448], [10 x i32] [i32 6120119, i32 814863, i32 -11794402, i32 -622716, i32 6812205, i32 -15747771, i32 2019594, i32 7975683, i32 31123697, i32 -10958981], [10 x i32] [i32 30069250, i32 -11435332, i32 30434654, i32 2958439, i32 18399564, i32 -976289, i32 12296869, i32 9204260, i32 -16432438, i32 9648165] }, %struct.ge_precomp { [10 x i32] [i32 32705432, i32 -1550977, i32 30705658, i32 7451065, i32 -11805606, i32 9631813, i32 3305266, i32 5248604, i32 -26008332, i32 -11377501], [10 x i32] [i32 17219865, i32 2375039, i32 -31570947, i32 -5575615, i32 -19459679, i32 9219903, i32 294711, i32 15298639, i32 2662509, i32 -16297073], [10 x i32] [i32 -1172927, i32 -7558695, i32 -4366770, i32 -4287744, i32 -21346413, i32 -8434326, i32 32087529, i32 -1222777, i32 32247248, i32 -14389861] }, %struct.ge_precomp { [10 x i32] [i32 14312628, i32 1221556, i32 17395390, i32 -8700143, i32 -4945741, i32 -8684635, i32 -28197744, i32 -9637817, i32 -16027623, i32 -13378845], [10 x i32] [i32 -1428825, i32 -9678990, i32 -9235681, i32 6549687, i32 -7383069, i32 -468664, i32 23046502, i32 9803137, i32 17597934, i32 2346211], [10 x i32] [i32 18510800, i32 15337574, i32 26171504, i32 981392, i32 -22241552, i32 7827556, i32 -23491134, i32 -11323352, i32 3059833, i32 -11782870] }, %struct.ge_precomp { [10 x i32] [i32 10141598, i32 6082907, i32 17829293, i32 -1947643, i32 9830092, i32 13613136, i32 -25556636, i32 -5544586, i32 -33502212, i32 3592096], [10 x i32] [i32 33114168, i32 -15889352, i32 -26525686, i32 -13343397, i32 33076705, i32 8716171, i32 1151462, i32 1521897, i32 -982665, i32 -6837803], [10 x i32] [i32 -32939165, i32 -4255815, i32 23947181, i32 -324178, i32 -33072974, i32 -12305637, i32 -16637686, i32 3891704, i32 26353178, i32 693168] }, %struct.ge_precomp { [10 x i32] [i32 30374239, i32 1595580, i32 -16884039, i32 13186931, i32 4600344, i32 406904, i32 9585294, i32 -400668, i32 31375464, i32 14369965], [10 x i32] [i32 -14370654, i32 -7772529, i32 1510301, i32 6434173, i32 -18784789, i32 -6262728, i32 32732230, i32 -13108839, i32 17901441, i32 16011505], [10 x i32] [i32 18171223, i32 -11934626, i32 -12500402, i32 15197122, i32 -11038147, i32 -15230035, i32 -19172240, i32 -16046376, i32 8764035, i32 12309598] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 5975908, i32 -5243188, i32 -19459362, i32 -9681747, i32 -11541277, i32 14015782, i32 -23665757, i32 1228319, i32 17544096, i32 -10593782], [10 x i32] [i32 5811932, i32 -1715293, i32 3442887, i32 -2269310, i32 -18367348, i32 -8359541, i32 -18044043, i32 -15410127, i32 -5565381, i32 12348900], [10 x i32] [i32 -31399660, i32 11407555, i32 25755363, i32 6891399, i32 -3256938, i32 14872274, i32 -24849353, i32 8141295, i32 -10632534, i32 -585479] }, %struct.ge_precomp { [10 x i32] [i32 -12675304, i32 694026, i32 -5076145, i32 13300344, i32 14015258, i32 -14451394, i32 -9698672, i32 -11329050, i32 30944593, i32 1130208], [10 x i32] [i32 8247766, i32 -6710942, i32 -26562381, i32 -7709309, i32 -14401939, i32 -14648910, i32 4652152, i32 2488540, i32 23550156, i32 -271232], [10 x i32] [i32 17294316, i32 -3788438, i32 7026748, i32 15626851, i32 22990044, i32 113481, i32 2267737, i32 -5908146, i32 -408818, i32 -137719] }, %struct.ge_precomp { [10 x i32] [i32 16091085, i32 -16253926, i32 18599252, i32 7340678, i32 2137637, i32 -1221657, i32 -3364161, i32 14550936, i32 3260525, i32 -7166271], [10 x i32] [i32 -4910104, i32 -13332887, i32 18550887, i32 10864893, i32 -16459325, i32 -7291596, i32 -23028869, i32 -13204905, i32 -12748722, i32 2701326], [10 x i32] [i32 -8574695, i32 16099415, i32 4629974, i32 -16340524, i32 -20786213, i32 -6005432, i32 -10018363, i32 9276971, i32 11329923, i32 1862132] }, %struct.ge_precomp { [10 x i32] [i32 14763076, i32 -15903608, i32 -30918270, i32 3689867, i32 3511892, i32 10313526, i32 -21951088, i32 12219231, i32 -9037963, i32 -940300], [10 x i32] [i32 8894987, i32 -3446094, i32 6150753, i32 3013931, i32 301220, i32 15693451, i32 -31981216, i32 -2909717, i32 -15438168, i32 11595570], [10 x i32] [i32 15214962, i32 3537601, i32 -26238722, i32 -14058872, i32 4418657, i32 -15230761, i32 13947276, i32 10730794, i32 -13489462, i32 -4363670] }, %struct.ge_precomp { [10 x i32] [i32 -2538306, i32 7682793, i32 32759013, i32 263109, i32 -29984731, i32 -7955452, i32 -22332124, i32 -10188635, i32 977108, i32 699994], [10 x i32] [i32 -12466472, i32 4195084, i32 -9211532, i32 550904, i32 -15565337, i32 12917920, i32 19118110, i32 -439841, i32 -30534533, i32 -14337913], [10 x i32] [i32 31788461, i32 -14507657, i32 4799989, i32 7372237, i32 8808585, i32 -14747943, i32 9408237, i32 -10051775, i32 12493932, i32 -5409317] }, %struct.ge_precomp { [10 x i32] [i32 -25680606, i32 5260744, i32 -19235809, i32 -6284470, i32 -3695942, i32 16566087, i32 27218280, i32 2607121, i32 29375955, i32 6024730], [10 x i32] [i32 842132, i32 -2794693, i32 -4763381, i32 -8722815, i32 26332018, i32 -12405641, i32 11831880, i32 6985184, i32 -9940361, i32 2854096], [10 x i32] [i32 -4847262, i32 -7969331, i32 2516242, i32 -5847713, i32 9695691, i32 -7221186, i32 16512645, i32 960770, i32 12121869, i32 16648078] }, %struct.ge_precomp { [10 x i32] [i32 -15218652, i32 14667096, i32 -13336229, i32 2013717, i32 30598287, i32 -464137, i32 -31504922, i32 -7882064, i32 20237806, i32 2838411], [10 x i32] [i32 -19288047, i32 4453152, i32 15298546, i32 -16178388, i32 22115043, i32 -15972604, i32 12544294, i32 -13470457, i32 1068881, i32 -12499905], [10 x i32] [i32 -9558883, i32 -16518835, i32 33238498, i32 13506958, i32 30505848, i32 -1114596, i32 -8486907, i32 -2630053, i32 12521378, i32 4845654] }, %struct.ge_precomp { [10 x i32] [i32 -28198521, i32 10744108, i32 -2958380, i32 10199664, i32 7759311, i32 -13088600, i32 3409348, i32 -873400, i32 -6482306, i32 -12885870], [10 x i32] [i32 -23561822, i32 6230156, i32 -20382013, i32 10655314, i32 -24040585, i32 -11621172, i32 10477734, i32 -1240216, i32 -3113227, i32 13974498], [10 x i32] [i32 12966261, i32 15550616, i32 -32038948, i32 -1615346, i32 21025980, i32 -629444, i32 5642325, i32 7188737, i32 18895762, i32 12629579] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 14741879, i32 -14946887, i32 22177208, i32 -11721237, i32 1279741, i32 8058600, i32 11758140, i32 789443, i32 32195181, i32 3895677], [10 x i32] [i32 10758205, i32 15755439, i32 -4509950, i32 9243698, i32 -4879422, i32 6879879, i32 -2204575, i32 -3566119, i32 -8982069, i32 4429647], [10 x i32] [i32 -2453894, i32 15725973, i32 -20436342, i32 -10410672, i32 -5803908, i32 -11040220, i32 -7135870, i32 -11642895, i32 18047436, i32 -15281743] }, %struct.ge_precomp { [10 x i32] [i32 -25173001, i32 -11307165, i32 29759956, i32 11776784, i32 -22262383, i32 -15820455, i32 10993114, i32 -12850837, i32 -17620701, i32 -9408468], [10 x i32] [i32 21987233, i32 700364, i32 -24505048, i32 14972008, i32 -7774265, i32 -5718395, i32 32155026, i32 2581431, i32 -29958985, i32 8773375], [10 x i32] [i32 -25568350, i32 454463, i32 -13211935, i32 16126715, i32 25240068, i32 8594567, i32 20656846, i32 12017935, i32 -7874389, i32 -13920155] }, %struct.ge_precomp { [10 x i32] [i32 6028182, i32 6263078, i32 -31011806, i32 -11301710, i32 -818919, i32 2461772, i32 -31841174, i32 -5468042, i32 -1721788, i32 -2776725], [10 x i32] [i32 -12278994, i32 16624277, i32 987579, i32 -5922598, i32 32908203, i32 1248608, i32 7719845, i32 -4166698, i32 28408820, i32 6816612], [10 x i32] [i32 -10358094, i32 -8237829, i32 19549651, i32 -12169222, i32 22082623, i32 16147817, i32 20613181, i32 13982702, i32 -10339570, i32 5067943] }, %struct.ge_precomp { [10 x i32] [i32 -30505967, i32 -3821767, i32 12074681, i32 13582412, i32 -19877972, i32 2443951, i32 -19719286, i32 12746132, i32 5331210, i32 -10105944], [10 x i32] [i32 30528811, i32 3601899, i32 -1957090, i32 4619785, i32 -27361822, i32 -15436388, i32 24180793, i32 -12570394, i32 27679908, i32 -1648928], [10 x i32] [i32 9402404, i32 -13957065, i32 32834043, i32 10838634, i32 -26580150, i32 -13237195, i32 26653274, i32 -8685565, i32 22611444, i32 -12715406] }, %struct.ge_precomp { [10 x i32] [i32 22190590, i32 1118029, i32 22736441, i32 15130463, i32 -30460692, i32 -5991321, i32 19189625, i32 -4648942, i32 4854859, i32 6622139], [10 x i32] [i32 -8310738, i32 -2953450, i32 -8262579, i32 -3388049, i32 -10401731, i32 -271929, i32 13424426, i32 -3567227, i32 26404409, i32 13001963], [10 x i32] [i32 -31241838, i32 -15415700, i32 -2994250, i32 8939346, i32 11562230, i32 -12840670, i32 -26064365, i32 -11621720, i32 -15405155, i32 11020693] }, %struct.ge_precomp { [10 x i32] [i32 1866042, i32 -7949489, i32 -7898649, i32 -10301010, i32 12483315, i32 13477547, i32 3175636, i32 -12424163, i32 28761762, i32 1406734], [10 x i32] [i32 -448555, i32 -1777666, i32 13018551, i32 3194501, i32 -9580420, i32 -11161737, i32 24760585, i32 -4347088, i32 25577411, i32 -13378680], [10 x i32] [i32 -24290378, i32 4759345, i32 -690653, i32 -1852816, i32 2066747, i32 10693769, i32 -29595790, i32 9884936, i32 -9368926, i32 4745410] }, %struct.ge_precomp { [10 x i32] [i32 -9141284, i32 6049714, i32 -19531061, i32 -4341411, i32 -31260798, i32 9944276, i32 -15462008, i32 -11311852, i32 10931924, i32 -11931931], [10 x i32] [i32 -16561513, i32 14112680, i32 -8012645, i32 4817318, i32 -8040464, i32 -11414606, i32 -22853429, i32 10856641, i32 -20470770, i32 13434654], [10 x i32] [i32 22759489, i32 -10073434, i32 -16766264, i32 -1871422, i32 13637442, i32 -10168091, i32 1765144, i32 -12654326, i32 28445307, i32 -5364710] }, %struct.ge_precomp { [10 x i32] [i32 29875063, i32 12493613, i32 2795536, i32 -3786330, i32 1710620, i32 15181182, i32 -10195717, i32 -8788675, i32 9074234, i32 1167180], [10 x i32] [i32 -26205683, i32 11014233, i32 -9842651, i32 -2635485, i32 -26908120, i32 7532294, i32 -18716888, i32 -9535498, i32 3843903, i32 9367684], [10 x i32] [i32 -10969595, i32 -6403711, i32 9591134, i32 9582310, i32 11349256, i32 108879, i32 16235123, i32 8601684, i32 -139197, i32 4242895] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 22092954, i32 -13191123, i32 -2042793, i32 -11968512, i32 32186753, i32 -11517388, i32 -6574341, i32 2470660, i32 -27417366, i32 16625501], [10 x i32] [i32 -11057722, i32 3042016, i32 13770083, i32 -9257922, i32 584236, i32 -544855, i32 -7770857, i32 2602725, i32 -27351616, i32 14247413], [10 x i32] [i32 6314175, i32 -10264892, i32 -32772502, i32 15957557, i32 -10157730, i32 168750, i32 -8618807, i32 14290061, i32 27108877, i32 -1180880] }, %struct.ge_precomp { [10 x i32] [i32 -8586597, i32 -7170966, i32 13241782, i32 10960156, i32 -32991015, i32 -13794596, i32 33547976, i32 -11058889, i32 -27148451, i32 981874], [10 x i32] [i32 22833440, i32 9293594, i32 -32649448, i32 -13618667, i32 -9136966, i32 14756819, i32 -22928859, i32 -13970780, i32 -10479804, i32 -16197962], [10 x i32] [i32 -7768587, i32 3326786, i32 -28111797, i32 10783824, i32 19178761, i32 14905060, i32 22680049, i32 13906969, i32 -15933690, i32 3797899] }, %struct.ge_precomp { [10 x i32] [i32 21721356, i32 -4212746, i32 -12206123, i32 9310182, i32 -3882239, i32 -13653110, i32 23740224, i32 -2709232, i32 20491983, i32 -8042152], [10 x i32] [i32 9209270, i32 -15135055, i32 -13256557, i32 -6167798, i32 -731016, i32 15289673, i32 25947805, i32 15286587, i32 30997318, i32 -6703063], [10 x i32] [i32 7392032, i32 16618386, i32 23946583, i32 -8039892, i32 -13265164, i32 -1533858, i32 -14197445, i32 -2321576, i32 17649998, i32 -250080] }, %struct.ge_precomp { [10 x i32] [i32 -9301088, i32 -14193827, i32 30609526, i32 -3049543, i32 -25175069, i32 -1283752, i32 -15241566, i32 -9525724, i32 -2233253, i32 7662146], [10 x i32] [i32 -17558673, i32 1763594, i32 -33114336, i32 15908610, i32 -30040870, i32 -12174295, i32 7335080, i32 -8472199, i32 -3174674, i32 3440183], [10 x i32] [i32 -19889700, i32 -5977008, i32 -24111293, i32 -9688870, i32 10799743, i32 -16571957, i32 40450, i32 -4431835, i32 4862400, i32 1133] }, %struct.ge_precomp { [10 x i32] [i32 -32856209, i32 -7873957, i32 -5422389, i32 14860950, i32 -16319031, i32 7956142, i32 7258061, i32 311861, i32 -30594991, i32 -7379421], [10 x i32] [i32 -3773428, i32 -1565936, i32 28985340, i32 7499440, i32 24445838, i32 9325937, i32 29727763, i32 16527196, i32 18278453, i32 15405622], [10 x i32] [i32 -4381906, i32 8508652, i32 -19898366, i32 -3674424, i32 -5984453, i32 15149970, i32 -13313598, i32 843523, i32 -21875062, i32 13626197] }, %struct.ge_precomp { [10 x i32] [i32 2281448, i32 -13487055, i32 -10915418, i32 -2609910, i32 1879358, i32 16164207, i32 -10783882, i32 3953792, i32 13340839, i32 15928663], [10 x i32] [i32 31727126, i32 -7179855, i32 -18437503, i32 -8283652, i32 2875793, i32 -16390330, i32 -25269894, i32 -7014826, i32 -23452306, i32 5964753], [10 x i32] [i32 4100420, i32 -5959452, i32 -17179337, i32 6017714, i32 -18705837, i32 12227141, i32 -26684835, i32 11344144, i32 2538215, i32 -7570755] }, %struct.ge_precomp { [10 x i32] [i32 -9433605, i32 6123113, i32 11159803, i32 -2156608, i32 30016280, i32 14966241, i32 -20474983, i32 1485421, i32 -629256, i32 -15958862], [10 x i32] [i32 -26804558, i32 4260919, i32 11851389, i32 9658551, i32 -32017107, i32 16367492, i32 -20205425, i32 -13191288, i32 11659922, i32 -11115118], [10 x i32] [i32 26180396, i32 10015009, i32 -30844224, i32 -8581293, i32 5418197, i32 9480663, i32 2231568, i32 -10170080, i32 33100372, i32 -1306171] }, %struct.ge_precomp { [10 x i32] [i32 15121113, i32 -5201871, i32 -10389905, i32 15427821, i32 -27509937, i32 -15992507, i32 21670947, i32 4486675, i32 -5931810, i32 -14466380], [10 x i32] [i32 16166486, i32 -9483733, i32 -11104130, i32 6023908, i32 -31926798, i32 -1364923, i32 2340060, i32 -16254968, i32 -10735770, i32 -10039824], [10 x i32] [i32 28042865, i32 -3557089, i32 -12126526, i32 12259706, i32 -3717498, i32 -6945899, i32 6766453, i32 -8689599, i32 18036436, i32 5803270] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -817581, i32 6763912, i32 11803561, i32 1585585, i32 10958447, i32 -2671165, i32 23855391, i32 4598332, i32 -6159431, i32 -14117438], [10 x i32] [i32 -31031306, i32 -14256194, i32 17332029, i32 -2383520, i32 31312682, i32 -5967183, i32 696309, i32 50292, i32 -20095739, i32 11763584], [10 x i32] [i32 -594563, i32 -2514283, i32 -32234153, i32 12643980, i32 12650761, i32 14811489, i32 665117, i32 -12613632, i32 -19773211, i32 -10713562] }, %struct.ge_precomp { [10 x i32] [i32 30464590, i32 -11262872, i32 -4127476, i32 -12734478, i32 19835327, i32 -7105613, i32 -24396175, i32 2075773, i32 -17020157, i32 992471], [10 x i32] [i32 18357185, i32 -6994433, i32 7766382, i32 16342475, i32 -29324918, i32 411174, i32 14578841, i32 8080033, i32 -11574335, i32 -10601610], [10 x i32] [i32 19598397, i32 10334610, i32 12555054, i32 2555664, i32 18821899, i32 -10339780, i32 21873263, i32 16014234, i32 26224780, i32 16452269] }, %struct.ge_precomp { [10 x i32] [i32 -30223925, i32 5145196, i32 5944548, i32 16385966, i32 3976735, i32 2009897, i32 -11377804, i32 -7618186, i32 -20533829, i32 3698650], [10 x i32] [i32 14187449, i32 3448569, i32 -10636236, i32 -10810935, i32 -22663880, i32 -3433596, i32 7268410, i32 -10890444, i32 27394301, i32 12015369], [10 x i32] [i32 19695761, i32 16087646, i32 28032085, i32 12999827, i32 6817792, i32 11427614, i32 20244189, i32 -1312777, i32 -13259127, i32 -3402461] }, %struct.ge_precomp { [10 x i32] [i32 30860103, i32 12735208, i32 -1888245, i32 -4699734, i32 -16974906, i32 2256940, i32 -8166013, i32 12298312, i32 -8550524, i32 -10393462], [10 x i32] [i32 -5719826, i32 -11245325, i32 -1910649, i32 15569035, i32 26642876, i32 -7587760, i32 -5789354, i32 -15118654, i32 -4976164, i32 12651793], [10 x i32] [i32 -2848395, i32 9953421, i32 11531313, i32 -5282879, i32 26895123, i32 -12697089, i32 -13118820, i32 -16517902, i32 9768698, i32 -2533218] }, %struct.ge_precomp { [10 x i32] [i32 -24719459, i32 1894651, i32 -287698, i32 -4704085, i32 15348719, i32 -8156530, i32 32767513, i32 12765450, i32 4940095, i32 10678226], [10 x i32] [i32 18860224, i32 15980149, i32 -18987240, i32 -1562570, i32 -26233012, i32 -11071856, i32 -7843882, i32 13944024, i32 -24372348, i32 16582019], [10 x i32] [i32 -15504260, i32 4970268, i32 -29893044, i32 4175593, i32 -20993212, i32 -2199756, i32 -11704054, i32 15444560, i32 -11003761, i32 7989037] }, %struct.ge_precomp { [10 x i32] [i32 31490452, i32 5568061, i32 -2412803, i32 2182383, i32 -32336847, i32 4531686, i32 -32078269, i32 6200206, i32 -19686113, i32 -14800171], [10 x i32] [i32 -17308668, i32 -15879940, i32 -31522777, i32 -2831, i32 -32887382, i32 16375549, i32 8680158, i32 -16371713, i32 28550068, i32 -6857132], [10 x i32] [i32 -28126887, i32 -5688091, i32 16837845, i32 -1820458, i32 -6850681, i32 12700016, i32 -30039981, i32 4364038, i32 1155602, i32 5988841] }, %struct.ge_precomp { [10 x i32] [i32 21890435, i32 -13272907, i32 -12624011, i32 12154349, i32 -7831873, i32 15300496, i32 23148983, i32 -4470481, i32 24618407, i32 8283181], [10 x i32] [i32 -33136107, i32 -10512751, i32 9975416, i32 6841041, i32 -31559793, i32 16356536, i32 3070187, i32 -7025928, i32 1466169, i32 10740210], [10 x i32] [i32 -1509399, i32 -15488185, i32 -13503385, i32 -10655916, i32 32799044, i32 909394, i32 -13938903, i32 -5779719, i32 -32164649, i32 -15327040] }, %struct.ge_precomp { [10 x i32] [i32 3960823, i32 -14267803, i32 -28026090, i32 -15918051, i32 -19404858, i32 13146868, i32 15567327, i32 951507, i32 -3260321, i32 -573935], [10 x i32] [i32 24740841, i32 5052253, i32 -30094131, i32 8961361, i32 25877428, i32 6165135, i32 -24368180, i32 14397372, i32 -7380369, i32 -6144105], [10 x i32] [i32 -28888365, i32 3510803, i32 -28103278, i32 -1158478, i32 -11238128, i32 -10631454, i32 -15441463, i32 -14453128, i32 -1625486, i32 -6494814] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 793299, i32 -9230478, i32 8836302, i32 -6235707, i32 -27360908, i32 -2369593, i32 33152843, i32 -4885251, i32 -9906200, i32 -621852], [10 x i32] [i32 5666233, i32 525582, i32 20782575, i32 -8038419, i32 -24538499, i32 14657740, i32 16099374, i32 1468826, i32 -6171428, i32 -15186581], [10 x i32] [i32 -4859255, i32 -3779343, i32 -2917758, i32 -6748019, i32 7778750, i32 11688288, i32 -30404353, i32 -9871238, i32 -1558923, i32 -9863646] }, %struct.ge_precomp { [10 x i32] [i32 10896332, i32 -7719704, i32 824275, i32 472601, i32 -19460308, i32 3009587, i32 25248958, i32 14783338, i32 -30581476, i32 -15757844], [10 x i32] [i32 10566929, i32 12612572, i32 -31944212, i32 11118703, i32 -12633376, i32 12362879, i32 21752402, i32 8822496, i32 24003793, i32 14264025], [10 x i32] [i32 27713862, i32 -7355973, i32 -11008240, i32 9227530, i32 27050101, i32 2504721, i32 23886875, i32 -13117525, i32 13958495, i32 -5732453] }, %struct.ge_precomp { [10 x i32] [i32 -23481610, i32 4867226, i32 -27247128, i32 3900521, i32 29838369, i32 -8212291, i32 -31889399, i32 -10041781, i32 7340521, i32 -15410068], [10 x i32] [i32 4646514, i32 -8011124, i32 -22766023, i32 -11532654, i32 23184553, i32 8566613, i32 31366726, i32 -1381061, i32 -15066784, i32 -10375192], [10 x i32] [i32 -17270517, i32 12723032, i32 -16993061, i32 14878794, i32 21619651, i32 -6197576, i32 27584817, i32 3093888, i32 -8843694, i32 3849921] }, %struct.ge_precomp { [10 x i32] [i32 -9064912, i32 2103172, i32 25561640, i32 -15125738, i32 -5239824, i32 9582958, i32 32477045, i32 -9017955, i32 5002294, i32 -15550259], [10 x i32] [i32 -12057553, i32 -11177906, i32 21115585, i32 -13365155, i32 8808712, i32 -12030708, i32 16489530, i32 13378448, i32 -25845716, i32 12741426], [10 x i32] [i32 -5946367, i32 10645103, i32 -30911586, i32 15390284, i32 -3286982, i32 -7118677, i32 24306472, i32 15852464, i32 28834118, i32 -7646072] }, %struct.ge_precomp { [10 x i32] [i32 -17335748, i32 -9107057, i32 -24531279, i32 9434953, i32 -8472084, i32 -583362, i32 -13090771, i32 455841, i32 20461858, i32 5491305], [10 x i32] [i32 13669248, i32 -16095482, i32 -12481974, i32 -10203039, i32 -14569770, i32 -11893198, i32 -24995986, i32 11293807, i32 -28588204, i32 -9421832], [10 x i32] [i32 28497928, i32 6272777, i32 -33022994, i32 14470570, i32 8906179, i32 -1225630, i32 18504674, i32 -14165166, i32 29867745, i32 -8795943] }, %struct.ge_precomp { [10 x i32] [i32 -16207023, i32 13517196, i32 -27799630, i32 -13697798, i32 24009064, i32 -6373891, i32 -6367600, i32 -13175392, i32 22853429, i32 -4012011], [10 x i32] [i32 24191378, i32 16712145, i32 -13931797, i32 15217831, i32 14542237, i32 1646131, i32 18603514, i32 -11037887, i32 12876623, i32 -2112447], [10 x i32] [i32 17902668, i32 4518229, i32 -411702, i32 -2829247, i32 26878217, i32 5258055, i32 -12860753, i32 608397, i32 16031844, i32 3723494] }, %struct.ge_precomp { [10 x i32] [i32 -28632773, i32 12763728, i32 -20446446, i32 7577504, i32 33001348, i32 -13017745, i32 17558842, i32 -7872890, i32 23896954, i32 -4314245], [10 x i32] [i32 -20005381, i32 -12011952, i32 31520464, i32 605201, i32 2543521, i32 5991821, i32 -2945064, i32 7229064, i32 -9919646, i32 -8826859], [10 x i32] [i32 28816045, i32 298879, i32 -28165016, i32 -15920938, i32 19000928, i32 -1665890, i32 -12680833, i32 -2949325, i32 -18051778, i32 -2082915] }, %struct.ge_precomp { [10 x i32] [i32 16000882, i32 -344896, i32 3493092, i32 -11447198, i32 -29504595, i32 -13159789, i32 12577740, i32 16041268, i32 -19715240, i32 7847707], [10 x i32] [i32 10151868, i32 10572098, i32 27312476, i32 7922682, i32 14825339, i32 4723128, i32 -32855931, i32 -6519018, i32 -10020567, i32 3852848], [10 x i32] [i32 -11430470, i32 15697596, i32 -21121557, i32 -4420647, i32 5386314, i32 15063598, i32 16514493, i32 -15932110, i32 29330899, i32 -15076224] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -25499735, i32 -4378794, i32 -15222908, i32 -6901211, i32 16615731, i32 2051784, i32 3303702, i32 15490, i32 -27548796, i32 12314391], [10 x i32] [i32 15683520, i32 -6003043, i32 18109120, i32 -9980648, i32 15337968, i32 -5997823, i32 -16717435, i32 15921866, i32 16103996, i32 -3731215], [10 x i32] [i32 -23169824, i32 -10781249, i32 13588192, i32 -1628807, i32 -3798557, i32 -1074929, i32 -19273607, i32 5402699, i32 -29815713, i32 -9841101] }, %struct.ge_precomp { [10 x i32] [i32 23190676, i32 2384583, i32 -32714340, i32 3462154, i32 -29903655, i32 -1529132, i32 -11266856, i32 8911517, i32 -25205859, i32 2739713], [10 x i32] [i32 21374101, i32 -3554250, i32 -33524649, i32 9874411, i32 15377179, i32 11831242, i32 -33529904, i32 6134907, i32 4931255, i32 11987849], [10 x i32] [i32 -7732, i32 -2978858, i32 -16223486, i32 7277597, i32 105524, i32 -322051, i32 -31480539, i32 13861388, i32 -30076310, i32 10117930] }, %struct.ge_precomp { [10 x i32] [i32 -29501170, i32 -10744872, i32 -26163768, i32 13051539, i32 -25625564, i32 5089643, i32 -6325503, i32 6704079, i32 12890019, i32 15728940], [10 x i32] [i32 -21972360, i32 -11771379, i32 -951059, i32 -4418840, i32 14704840, i32 2695116, i32 903376, i32 -10428139, i32 12885167, i32 8311031], [10 x i32] [i32 -17516482, i32 5352194, i32 10384213, i32 -13811658, i32 7506451, i32 13453191, i32 26423267, i32 4384730, i32 1888765, i32 -5435404] }, %struct.ge_precomp { [10 x i32] [i32 -25817338, i32 -3107312, i32 -13494599, i32 -3182506, i32 30896459, i32 -13921729, i32 -32251644, i32 -12707869, i32 -19464434, i32 -3340243], [10 x i32] [i32 -23607977, i32 -2665774, i32 -526091, i32 4651136, i32 5765089, i32 4618330, i32 6092245, i32 14845197, i32 17151279, i32 -9854116], [10 x i32] [i32 -24830458, i32 -12733720, i32 -15165978, i32 10367250, i32 -29530908, i32 -265356, i32 22825805, i32 -7087279, i32 -16866484, i32 16176525] }, %struct.ge_precomp { [10 x i32] [i32 -23583256, i32 6564961, i32 20063689, i32 3798228, i32 -4740178, i32 7359225, i32 2006182, i32 -10363426, i32 -28746253, i32 -10197509], [10 x i32] [i32 -10626600, i32 -4486402, i32 -13320562, i32 -5125317, i32 3432136, i32 -6393229, i32 23632037, i32 -1940610, i32 32808310, i32 1099883], [10 x i32] [i32 15030977, i32 5768825, i32 -27451236, i32 -2887299, i32 -6427378, i32 -15361371, i32 -15277896, i32 -6809350, i32 2051441, i32 -15225865] }, %struct.ge_precomp { [10 x i32] [i32 -3362323, i32 -7239372, i32 7517890, i32 9824992, i32 23555850, i32 295369, i32 5148398, i32 -14154188, i32 -22686354, i32 16633660], [10 x i32] [i32 4577086, i32 -16752288, i32 13249841, i32 -15304328, i32 19958763, i32 -14537274, i32 18559670, i32 -10759549, i32 8402478, i32 -9864273], [10 x i32] [i32 -28406330, i32 -1051581, i32 -26790155, i32 -907698, i32 -17212414, i32 -11030789, i32 9453451, i32 -14980072, i32 17983010, i32 9967138] }, %struct.ge_precomp { [10 x i32] [i32 -25762494, i32 6524722, i32 26585488, i32 9969270, i32 24709298, i32 1220360, i32 -1677990, i32 7806337, i32 17507396, i32 3651560], [10 x i32] [i32 -10420457, i32 -4118111, i32 14584639, i32 15971087, i32 -15768321, i32 8861010, i32 26556809, i32 -5574557, i32 -18553322, i32 -11357135], [10 x i32] [i32 2839101, i32 14284142, i32 4029895, i32 3472686, i32 14402957, i32 12689363, i32 -26642121, i32 8459447, i32 -5605463, i32 -7621941] }, %struct.ge_precomp { [10 x i32] [i32 -4839289, i32 -3535444, i32 9744961, i32 2871048, i32 25113978, i32 3187018, i32 -25110813, i32 -849066, i32 17258084, i32 -7977739], [10 x i32] [i32 18164541, i32 -10595176, i32 -17154882, i32 -1542417, i32 19237078, i32 -9745295, i32 23357533, i32 -15217008, i32 26908270, i32 12150756], [10 x i32] [i32 -30264870, i32 -7647865, i32 5112249, i32 -7036672, i32 -1499807, i32 -6974257, i32 43168, i32 -5537701, i32 -32302074, i32 16215819] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -6898905, i32 9824394, i32 -12304779, i32 -4401089, i32 -31397141, i32 -6276835, i32 32574489, i32 12532905, i32 -7503072, i32 -8675347], [10 x i32] [i32 -27343522, i32 -16515468, i32 -27151524, i32 -10722951, i32 946346, i32 16291093, i32 254968, i32 7168080, i32 21676107, i32 -1943028], [10 x i32] [i32 21260961, i32 -8424752, i32 -16831886, i32 -11920822, i32 -23677961, i32 3968121, i32 -3651949, i32 -6215466, i32 -3556191, i32 -7913075] }, %struct.ge_precomp { [10 x i32] [i32 16544754, i32 13250366, i32 -16804428, i32 15546242, i32 -4583003, i32 12757258, i32 -2462308, i32 -8680336, i32 -18907032, i32 -9662799], [10 x i32] [i32 -2415239, i32 -15577728, i32 18312303, i32 4964443, i32 -15272530, i32 -12653564, i32 26820651, i32 16690659, i32 25459437, i32 -4564609], [10 x i32] [i32 -25144690, i32 11425020, i32 28423002, i32 -11020557, i32 -6144921, i32 -15826224, i32 9142795, i32 -2391602, i32 -6432418, i32 -1644817] }, %struct.ge_precomp { [10 x i32] [i32 -23104652, i32 6253476, i32 16964147, i32 -3768872, i32 -25113972, i32 -12296437, i32 -27457225, i32 -16344658, i32 6335692, i32 7249989], [10 x i32] [i32 -30333227, i32 13979675, i32 7503222, i32 -12368314, i32 -11956721, i32 -4621693, i32 -30272269, i32 2682242, i32 25993170, i32 -12478523], [10 x i32] [i32 4364628, i32 5930691, i32 32304656, i32 -10044554, i32 -8054781, i32 15091131, i32 22857016, i32 -10598955, i32 31820368, i32 15075278] }, %struct.ge_precomp { [10 x i32] [i32 31879134, i32 -8918693, i32 17258761, i32 90626, i32 -8041836, i32 -4917709, i32 24162788, i32 -9650886, i32 -17970238, i32 12833045], [10 x i32] [i32 19073683, i32 14851414, i32 -24403169, i32 -11860168, i32 7625278, i32 11091125, i32 -19619190, i32 2074449, i32 -9413939, i32 14905377], [10 x i32] [i32 24483667, i32 -11935567, i32 -2518866, i32 -11547418, i32 -1553130, i32 15355506, i32 -25282080, i32 9253129, i32 27628530, i32 -7555480] }, %struct.ge_precomp { [10 x i32] [i32 17597607, i32 8340603, i32 19355617, i32 552187, i32 26198470, i32 -3176583, i32 4593324, i32 -9157582, i32 -14110875, i32 15297016], [10 x i32] [i32 510886, i32 14337390, i32 -31785257, i32 16638632, i32 6328095, i32 2713355, i32 -20217417, i32 -11864220, i32 8683221, i32 2921426], [10 x i32] [i32 18606791, i32 11874196, i32 27155355, i32 -5281482, i32 -24031742, i32 6265446, i32 -25178240, i32 -1278924, i32 4674690, i32 13890525] }, %struct.ge_precomp { [10 x i32] [i32 13609624, i32 13069022, i32 -27372361, i32 -13055908, i32 24360586, i32 9592974, i32 14977157, i32 9835105, i32 4389687, i32 288396], [10 x i32] [i32 9922506, i32 -519394, i32 13613107, i32 5883594, i32 -18758345, i32 -434263, i32 -12304062, i32 8317628, i32 23388070, i32 16052080], [10 x i32] [i32 12720016, i32 11937594, i32 -31970060, i32 -5028689, i32 26900120, i32 8561328, i32 -20155687, i32 -11632979, i32 -14754271, i32 -10812892] }, %struct.ge_precomp { [10 x i32] [i32 15961858, i32 14150409, i32 26716931, i32 -665832, i32 -22794328, i32 13603569, i32 11829573, i32 7467844, i32 -28822128, i32 929275], [10 x i32] [i32 11038231, i32 -11582396, i32 -27310482, i32 -7316562, i32 -10498527, i32 -16307831, i32 -23479533, i32 -9371869, i32 -21393143, i32 2465074], [10 x i32] [i32 20017163, i32 -4323226, i32 27915242, i32 1529148, i32 12396362, i32 15675764, i32 13817261, i32 -9658066, i32 2463391, i32 -4622140] }, %struct.ge_precomp { [10 x i32] [i32 -16358878, i32 -12663911, i32 -12065183, i32 4996454, i32 -1256422, i32 1073572, i32 9583558, i32 12851107, i32 4003896, i32 12673717], [10 x i32] [i32 -1731589, i32 -15155870, i32 -3262930, i32 16143082, i32 19294135, i32 13385325, i32 14741514, i32 -9103726, i32 7903886, i32 2348101], [10 x i32] [i32 24536016, i32 -16515207, i32 12715592, i32 -3862155, i32 1511293, i32 10047386, i32 -3842346, i32 -7129159, i32 -28377538, i32 10048127] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -12622226, i32 -6204820, i32 30718825, i32 2591312, i32 -10617028, i32 12192840, i32 18873298, i32 -7297090, i32 -32297756, i32 15221632], [10 x i32] [i32 -26478122, i32 -11103864, i32 11546244, i32 -1852483, i32 9180880, i32 7656409, i32 -21343950, i32 2095755, i32 29769758, i32 6593415], [10 x i32] [i32 -31994208, i32 -2907461, i32 4176912, i32 3264766, i32 12538965, i32 -868111, i32 26312345, i32 -6118678, i32 30958054, i32 8292160] }, %struct.ge_precomp { [10 x i32] [i32 31429822, i32 -13959116, i32 29173532, i32 15632448, i32 12174511, i32 -2760094, i32 32808831, i32 3977186, i32 26143136, i32 -3148876], [10 x i32] [i32 22648901, i32 1402143, i32 -22799984, i32 13746059, i32 7936347, i32 365344, i32 -8668633, i32 -1674433, i32 -3758243, i32 -2304625], [10 x i32] [i32 -15491917, i32 8012313, i32 -2514730, i32 -12702462, i32 -23965846, i32 -10254029, i32 -1612713, i32 -1535569, i32 -16664475, i32 8194478] }, %struct.ge_precomp { [10 x i32] [i32 27338066, i32 -7507420, i32 -7414224, i32 10140405, i32 -19026427, i32 -6589889, i32 27277191, i32 8855376, i32 28572286, i32 3005164], [10 x i32] [i32 26287124, i32 4821776, i32 25476601, i32 -4145903, i32 -3764513, i32 -15788984, i32 -18008582, i32 1182479, i32 -26094821, i32 -13079595], [10 x i32] [i32 -7171154, i32 3178080, i32 23970071, i32 6201893, i32 -17195577, i32 -4489192, i32 -21876275, i32 -13982627, i32 32208683, i32 -1198248] }, %struct.ge_precomp { [10 x i32] [i32 -16657702, i32 2817643, i32 -10286362, i32 14811298, i32 6024667, i32 13349505, i32 -27315504, i32 -10497842, i32 -27672585, i32 -11539858], [10 x i32] [i32 15941029, i32 -9405932, i32 -21367050, i32 8062055, i32 31876073, i32 -238629, i32 -15278393, i32 -1444429, i32 15397331, i32 -4130193], [10 x i32] [i32 8934485, i32 -13485467, i32 -23286397, i32 -13423241, i32 -32446090, i32 14047986, i32 31170398, i32 -1441021, i32 -27505566, i32 15087184] }, %struct.ge_precomp { [10 x i32] [i32 -18357243, i32 -2156491, i32 24524913, i32 -16677868, i32 15520427, i32 -6360776, i32 -15502406, i32 11461896, i32 16788528, i32 -5868942], [10 x i32] [i32 -1947386, i32 16013773, i32 21750665, i32 3714552, i32 -17401782, i32 -16055433, i32 -3770287, i32 -10323320, i32 31322514, i32 -11615635], [10 x i32] [i32 21426655, i32 -5650218, i32 -13648287, i32 -5347537, i32 -28812189, i32 -4920970, i32 -18275391, i32 -14621414, i32 13040862, i32 -12112948] }, %struct.ge_precomp { [10 x i32] [i32 11293895, i32 12478086, i32 -27136401, i32 15083750, i32 -29307421, i32 14748872, i32 14555558, i32 -13417103, i32 1613711, i32 4896935], [10 x i32] [i32 -25894883, i32 15323294, i32 -8489791, i32 -8057900, i32 25967126, i32 -13425460, i32 2825960, i32 -4897045, i32 -23971776, i32 -11267415], [10 x i32] [i32 -15924766, i32 -5229880, i32 -17443532, i32 6410664, i32 3622847, i32 10243618, i32 20615400, i32 12405433, i32 -23753030, i32 -8436416] }, %struct.ge_precomp { [10 x i32] [i32 -7091295, i32 12556208, i32 -20191352, i32 9025187, i32 -17072479, i32 4333801, i32 4378436, i32 2432030, i32 23097949, i32 -566018], [10 x i32] [i32 4565804, i32 -16025654, i32 20084412, i32 -7842817, i32 1724999, i32 189254, i32 24767264, i32 10103221, i32 -18512313, i32 2424778], [10 x i32] [i32 366633, i32 -11976806, i32 8173090, i32 -6890119, i32 30788634, i32 5745705, i32 -7168678, i32 1344109, i32 -3642553, i32 12412659] }, %struct.ge_precomp { [10 x i32] [i32 -24001791, i32 7690286, i32 14929416, i32 -168257, i32 -32210835, i32 -13412986, i32 24162697, i32 -15326504, i32 -3141501, i32 11179385], [10 x i32] [i32 18289522, i32 -14724954, i32 8056945, i32 16430056, i32 -21729724, i32 7842514, i32 -6001441, i32 -1486897, i32 -18684645, i32 -11443503], [10 x i32] [i32 476239, i32 6601091, i32 -6152790, i32 -9723375, i32 17503545, i32 -4863900, i32 27672959, i32 13403813, i32 11052904, i32 5219329] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 20678546, i32 -8375738, i32 -32671898, i32 8849123, i32 -5009758, i32 14574752, i32 31186971, i32 -3973730, i32 9014762, i32 -8579056], [10 x i32] [i32 -13644050, i32 -10350239, i32 -15962508, i32 5075808, i32 -1514661, i32 -11534600, i32 -33102500, i32 9160280, i32 8473550, i32 -3256838], [10 x i32] [i32 24900749, i32 14435722, i32 17209120, i32 -15292541, i32 -22592275, i32 9878983, i32 -7689309, i32 -16335821, i32 -24568481, i32 11788948] }, %struct.ge_precomp { [10 x i32] [i32 -3118155, i32 -11395194, i32 -13802089, i32 14797441, i32 9652448, i32 -6845904, i32 -20037437, i32 10410733, i32 -24568470, i32 -1458691], [10 x i32] [i32 -15659161, i32 16736706, i32 -22467150, i32 10215878, i32 -9097177, i32 7563911, i32 11871841, i32 -12505194, i32 -18513325, i32 8464118], [10 x i32] [i32 -23400612, i32 8348507, i32 -14585951, i32 -861714, i32 -3950205, i32 -6373419, i32 14325289, i32 8628612, i32 33313881, i32 -8370517] }, %struct.ge_precomp { [10 x i32] [i32 -20186973, i32 -4967935, i32 22367356, i32 5271547, i32 -1097117, i32 -4788838, i32 -24805667, i32 -10236854, i32 -8940735, i32 -5818269], [10 x i32] [i32 -6948785, i32 -1795212, i32 -32625683, i32 -16021179, i32 32635414, i32 -7374245, i32 15989197, i32 -12838188, i32 28358192, i32 -4253904], [10 x i32] [i32 -23561781, i32 -2799059, i32 -32351682, i32 -1661963, i32 -9147719, i32 10429267, i32 -16637684, i32 4072016, i32 -5351664, i32 5596589] }, %struct.ge_precomp { [10 x i32] [i32 -28236598, i32 -3390048, i32 12312896, i32 6213178, i32 3117142, i32 16078565, i32 29266239, i32 2557221, i32 1768301, i32 15373193], [10 x i32] [i32 -7243358, i32 -3246960, i32 -4593467, i32 -7553353, i32 -127927, i32 -912245, i32 -1090902, i32 -4504991, i32 -24660491, i32 3442910], [10 x i32] [i32 -30210571, i32 5124043, i32 14181784, i32 8197961, i32 18964734, i32 -11939093, i32 22597931, i32 7176455, i32 -18585478, i32 13365930] }, %struct.ge_precomp { [10 x i32] [i32 -7877390, i32 -1499958, i32 8324673, i32 4690079, i32 6261860, i32 890446, i32 24538107, i32 -8570186, i32 -9689599, i32 -3031667], [10 x i32] [i32 25008904, i32 -10771599, i32 -4305031, i32 -9638010, i32 16265036, i32 15721635, i32 683793, i32 -11823784, i32 15723479, i32 -15163481], [10 x i32] [i32 -9660625, i32 12374379, i32 -27006999, i32 -7026148, i32 -7724114, i32 -12314514, i32 11879682, i32 5400171, i32 519526, i32 -1235876] }, %struct.ge_precomp { [10 x i32] [i32 22258397, i32 -16332233, i32 -7869817, i32 14613016, i32 -22520255, i32 -2950923, i32 -20353881, i32 7315967, i32 16648397, i32 7605640], [10 x i32] [i32 -8081308, i32 -8464597, i32 -8223311, i32 9719710, i32 19259459, i32 -15348212, i32 23994942, i32 -5281555, i32 -9468848, i32 4763278], [10 x i32] [i32 -21699244, i32 9220969, i32 -15730624, i32 1084137, i32 -25476107, i32 -2852390, i32 31088447, i32 -7764523, i32 -11356529, i32 728112] }, %struct.ge_precomp { [10 x i32] [i32 26047220, i32 -11751471, i32 -6900323, i32 -16521798, i32 24092068, i32 9158119, i32 -4273545, i32 -12555558, i32 -29365436, i32 -5498272], [10 x i32] [i32 17510331, i32 -322857, i32 5854289, i32 8403524, i32 17133918, i32 -3112612, i32 -28111007, i32 12327945, i32 10750447, i32 10014012], [10 x i32] [i32 -10312768, i32 3936952, i32 9156313, i32 -8897683, i32 16498692, i32 -994647, i32 -27481051, i32 -666732, i32 3424691, i32 7540221] }, %struct.ge_precomp { [10 x i32] [i32 30322361, i32 -6964110, i32 11361005, i32 -4143317, i32 7433304, i32 4989748, i32 -7071422, i32 -16317219, i32 -9244265, i32 15258046], [10 x i32] [i32 13054562, i32 -2779497, i32 19155474, i32 469045, i32 -12482797, i32 4566042, i32 5631406, i32 2711395, i32 1062915, i32 -5136345], [10 x i32] [i32 -19240248, i32 -11254599, i32 -29509029, i32 -7499965, i32 -5835763, i32 13005411, i32 -6066489, i32 12194497, i32 32960380, i32 1459310] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 19852034, i32 7027924, i32 23669353, i32 10020366, i32 8586503, i32 -6657907, i32 394197, i32 -6101885, i32 18638003, i32 -11174937], [10 x i32] [i32 31395534, i32 15098109, i32 26581030, i32 8030562, i32 -16527914, i32 -5007134, i32 9012486, i32 -7584354, i32 -6643087, i32 -5442636], [10 x i32] [i32 -9192165, i32 -2347377, i32 -1997099, i32 4529534, i32 25766844, i32 607986, i32 -13222, i32 9677543, i32 -32294889, i32 -6456008] }, %struct.ge_precomp { [10 x i32] [i32 -2444496, i32 -149937, i32 29348902, i32 8186665, i32 1873760, i32 12489863, i32 -30934579, i32 -7839692, i32 -7852844, i32 -8138429], [10 x i32] [i32 -15236356, i32 -15433509, i32 7766470, i32 746860, i32 26346930, i32 -10221762, i32 -27333451, i32 10754588, i32 -9431476, i32 5203576], [10 x i32] [i32 31834314, i32 14135496, i32 -770007, i32 5159118, i32 20917671, i32 -16768096, i32 -7467973, i32 -7337524, i32 31809243, i32 7347066] }, %struct.ge_precomp { [10 x i32] [i32 -9606723, i32 -11874240, i32 20414459, i32 13033986, i32 13716524, i32 -11691881, i32 19797970, i32 -12211255, i32 15192876, i32 -2087490], [10 x i32] [i32 -12663563, i32 -2181719, i32 1168162, i32 -3804809, i32 26747877, i32 -14138091, i32 10609330, i32 12694420, i32 33473243, i32 -13382104], [10 x i32] [i32 33184999, i32 11180355, i32 15832085, i32 -11385430, i32 -1633671, i32 225884, i32 15089336, i32 -11023903, i32 -6135662, i32 14480053] }, %struct.ge_precomp { [10 x i32] [i32 31308717, i32 -5619998, i32 31030840, i32 -1897099, i32 15674547, i32 -6582883, i32 5496208, i32 13685227, i32 27595050, i32 8737275], [10 x i32] [i32 -20318852, i32 -15150239, i32 10933843, i32 -16178022, i32 8335352, i32 -7546022, i32 -31008351, i32 -12610604, i32 26498114, i32 66511], [10 x i32] [i32 22644454, i32 -8761729, i32 -16671776, i32 4884562, i32 -3105614, i32 -13559366, i32 30540766, i32 -4286747, i32 -13327787, i32 -7515095] }, %struct.ge_precomp { [10 x i32] [i32 -28017847, i32 9834845, i32 18617207, i32 -2681312, i32 -3401956, i32 -13307506, i32 8205540, i32 13585437, i32 -17127465, i32 15115439], [10 x i32] [i32 23711543, i32 -672915, i32 31206561, i32 -8362711, i32 6164647, i32 -9709987, i32 -33535882, i32 -1426096, i32 8236921, i32 16492939], [10 x i32] [i32 -23910559, i32 -13515526, i32 -26299483, i32 -4503841, i32 25005590, i32 -7687270, i32 19574902, i32 10071562, i32 6708380, i32 -6222424] }, %struct.ge_precomp { [10 x i32] [i32 2101391, i32 -4930054, i32 19702731, i32 2367575, i32 -15427167, i32 1047675, i32 5301017, i32 9328700, i32 29955601, i32 -11678310], [10 x i32] [i32 3096359, i32 9271816, i32 -21620864, i32 -15521844, i32 -14847996, i32 -7592937, i32 -25892142, i32 -12635595, i32 -9917575, i32 6216608], [10 x i32] [i32 -32615849, i32 338663, i32 -25195611, i32 2510422, i32 -29213566, i32 -13820213, i32 24822830, i32 -6146567, i32 -26767480, i32 7525079] }, %struct.ge_precomp { [10 x i32] [i32 -23066649, i32 -13985623, i32 16133487, i32 -7896178, i32 -3389565, i32 778788, i32 -910336, i32 -2782495, i32 -19386633, i32 11994101], [10 x i32] [i32 21691500, i32 -13624626, i32 -641331, i32 -14367021, i32 3285881, i32 -3483596, i32 -25064666, i32 9718258, i32 -7477437, i32 13381418], [10 x i32] [i32 18445390, i32 -4202236, i32 14979846, i32 11622458, i32 -1727110, i32 -3582980, i32 23111648, i32 -6375247, i32 28535282, i32 15779576] }, %struct.ge_precomp { [10 x i32] [i32 30098053, i32 3089662, i32 -9234387, i32 16662135, i32 -21306940, i32 11308411, i32 -14068454, i32 12021730, i32 9955285, i32 -16303356], [10 x i32] [i32 9734894, i32 -14576830, i32 -7473633, i32 -9138735, i32 2060392, i32 11313496, i32 -18426029, i32 9924399, i32 20194861, i32 13380996], [10 x i32] [i32 -26378102, i32 -7965207, i32 -22167821, i32 15789297, i32 -18055342, i32 -6168792, i32 -1984914, i32 15707771, i32 26342023, i32 10146099] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 -26016874, i32 -219943, i32 21339191, i32 -41388, i32 19745256, i32 -2878700, i32 -29637280, i32 2227040, i32 21612326, i32 -545728], [10 x i32] [i32 -13077387, i32 1184228, i32 23562814, i32 -5970442, i32 -20351244, i32 -6348714, i32 25764461, i32 12243797, i32 -20856566, i32 11649658], [10 x i32] [i32 -10031494, i32 11262626, i32 27384172, i32 2271902, i32 26947504, i32 -15997771, i32 39944, i32 6114064, i32 33514190, i32 2333242] }, %struct.ge_precomp { [10 x i32] [i32 -21433588, i32 -12421821, i32 8119782, i32 7219913, i32 -21830522, i32 -9016134, i32 -6679750, i32 -12670638, i32 24350578, i32 -13450001], [10 x i32] [i32 -4116307, i32 -11271533, i32 -23886186, i32 4843615, i32 -30088339, i32 690623, i32 -31536088, i32 -10406836, i32 8317860, i32 12352766], [10 x i32] [i32 18200138, i32 -14475911, i32 -33087759, i32 -2696619, i32 -23702521, i32 -9102511, i32 -23552096, i32 -2287550, i32 20712163, i32 6719373] }, %struct.ge_precomp { [10 x i32] [i32 26656208, i32 6075253, i32 -7858556, i32 1886072, i32 -28344043, i32 4262326, i32 11117530, i32 -3763210, i32 26224235, i32 -3297458], [10 x i32] [i32 -17168938, i32 -14854097, i32 -3395676, i32 -16369877, i32 -19954045, i32 14050420, i32 21728352, i32 9493610, i32 18620611, i32 -16428628], [10 x i32] [i32 -13323321, i32 13325349, i32 11432106, i32 5964811, i32 18609221, i32 6062965, i32 -5269471, i32 -9725556, i32 -30701573, i32 -16479657] }, %struct.ge_precomp { [10 x i32] [i32 -23860538, i32 -11233159, i32 26961357, i32 1640861, i32 -32413112, i32 -16737940, i32 12248509, i32 -5240639, i32 13735342, i32 1934062], [10 x i32] [i32 25089769, i32 6742589, i32 17081145, i32 -13406266, i32 21909293, i32 -16067981, i32 -15136294, i32 -3765346, i32 -21277997, i32 5473616], [10 x i32] [i32 31883677, i32 -7961101, i32 1083432, i32 -11572403, i32 22828471, i32 13290673, i32 -7125085, i32 12469656, i32 29111212, i32 -5451014] }, %struct.ge_precomp { [10 x i32] [i32 24244947, i32 -15050407, i32 -26262976, i32 2791540, i32 -14997599, i32 16666678, i32 24367466, i32 6388839, i32 -10295587, i32 452383], [10 x i32] [i32 -25640782, i32 -3417841, i32 5217916, i32 16224624, i32 19987036, i32 -4082269, i32 -24236251, i32 -5915248, i32 15766062, i32 8407814], [10 x i32] [i32 -20406999, i32 13990231, i32 15495425, i32 16395525, i32 5377168, i32 15166495, i32 -8917023, i32 -4388953, i32 -8067909, i32 2276718] }, %struct.ge_precomp { [10 x i32] [i32 30157918, i32 12924066, i32 -17712050, i32 9245753, i32 19895028, i32 3368142, i32 -23827587, i32 5096219, i32 22740376, i32 -7303417], [10 x i32] [i32 2041139, i32 -14256350, i32 7783687, i32 13876377, i32 -25946985, i32 -13352459, i32 24051124, i32 13742383, i32 -15637599, i32 13295222], [10 x i32] [i32 33338237, i32 -8505733, i32 12532113, i32 7977527, i32 9106186, i32 -1715251, i32 -17720195, i32 -4612972, i32 -4451357, i32 -14669444] }, %struct.ge_precomp { [10 x i32] [i32 -20045281, i32 5454097, i32 -14346548, i32 6447146, i32 28862071, i32 1883651, i32 -2469266, i32 -4141880, i32 7770569, i32 9620597], [10 x i32] [i32 23208068, i32 7979712, i32 33071466, i32 8149229, i32 1758231, i32 -10834995, i32 30945528, i32 -1694323, i32 -33502340, i32 -14767970], [10 x i32] [i32 1439958, i32 -16270480, i32 -1079989, i32 -793782, i32 4625402, i32 10647766, i32 -5043801, i32 1220118, i32 30494170, i32 -11440799] }, %struct.ge_precomp { [10 x i32] [i32 -5037580, i32 -13028295, i32 -2970559, i32 -3061767, i32 15640974, i32 -6701666, i32 -26739026, i32 926050, i32 -1684339, i32 -13333647], [10 x i32] [i32 13908495, i32 -3549272, i32 30919928, i32 -6273825, i32 -21521863, i32 7989039, i32 9021034, i32 9078865, i32 3353509, i32 4033511], [10 x i32] [i32 -29663431, i32 -15113610, i32 32259991, i32 -344482, i32 24295849, i32 -12912123, i32 23161163, i32 8839127, i32 27485041, i32 7356032] }], [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 9661027, i32 705443, i32 11980065, i32 -5370154, i32 -1628543, i32 14661173, i32 -6346142, i32 2625015, i32 28431036, i32 -16771834], [10 x i32] [i32 -23839233, i32 -8311415, i32 -25945511, i32 7480958, i32 -17681669, i32 -8354183, i32 -22545972, i32 14150565, i32 15970762, i32 4099461], [10 x i32] [i32 29262576, i32 16756590, i32 26350592, i32 -8793563, i32 8529671, i32 -11208050, i32 13617293, i32 -9937143, i32 11465739, i32 8317062] }, %struct.ge_precomp { [10 x i32] [i32 -25493081, i32 -6962928, i32 32500200, i32 -9419051, i32 -23038724, i32 -2302222, i32 14898637, i32 3848455, i32 20969334, i32 -5157516], [10 x i32] [i32 -20384450, i32 -14347713, i32 -18336405, i32 13884722, i32 -33039454, i32 2842114, i32 -21610826, i32 -3649888, i32 11177095, i32 14989547], [10 x i32] [i32 -24496721, i32 -11716016, i32 16959896, i32 2278463, i32 12066309, i32 10137771, i32 13515641, i32 2581286, i32 -28487508, i32 9930240] }, %struct.ge_precomp { [10 x i32] [i32 -17751622, i32 -2097826, i32 16544300, i32 -13009300, i32 -15914807, i32 -14949081, i32 18345767, i32 -13403753, i32 16291481, i32 -5314038], [10 x i32] [i32 -33229194, i32 2553288, i32 32678213, i32 9875984, i32 8534129, i32 6889387, i32 -9676774, i32 6957617, i32 4368891, i32 9788741], [10 x i32] [i32 16660756, i32 7281060, i32 -10830758, i32 12911820, i32 20108584, i32 -8101676, i32 -21722536, i32 -8613148, i32 16250552, i32 -11111103] }, %struct.ge_precomp { [10 x i32] [i32 -19765507, i32 2390526, i32 -16551031, i32 14161980, i32 1905286, i32 6414907, i32 4689584, i32 10604807, i32 -30190403, i32 4782747], [10 x i32] [i32 -1354539, i32 14736941, i32 -7367442, i32 -13292886, i32 7710542, i32 -14155590, i32 -9981571, i32 4383045, i32 22546403, i32 437323], [10 x i32] [i32 31665577, i32 -12180464, i32 -16186830, i32 1491339, i32 -18368625, i32 3294682, i32 27343084, i32 2786261, i32 -30633590, i32 -14097016] }, %struct.ge_precomp { [10 x i32] [i32 -14467279, i32 -683715, i32 -33374107, i32 7448552, i32 19294360, i32 14334329, i32 -19690631, i32 2355319, i32 -19284671, i32 -6114373], [10 x i32] [i32 15121312, i32 -15796162, i32 6377020, i32 -6031361, i32 -10798111, i32 -12957845, i32 18952177, i32 15496498, i32 -29380133, i32 11754228], [10 x i32] [i32 -2637277, i32 -13483075, i32 8488727, i32 -14303896, i32 12728761, i32 -1622493, i32 7141596, i32 11724556, i32 22761615, i32 -10134141] }, %struct.ge_precomp { [10 x i32] [i32 16918416, i32 11729663, i32 -18083579, i32 3022987, i32 -31015732, i32 -13339659, i32 -28741185, i32 -12227393, i32 32851222, i32 11717399], [10 x i32] [i32 11166634, i32 7338049, i32 -6722523, i32 4531520, i32 -29468672, i32 -7302055, i32 31474879, i32 3483633, i32 -1193175, i32 -4030831], [10 x i32] [i32 -185635, i32 9921305, i32 31456609, i32 -13536438, i32 -12013818, i32 13348923, i32 33142652, i32 6546660, i32 -19985279, i32 -3948376] }, %struct.ge_precomp { [10 x i32] [i32 -32460596, i32 11266712, i32 -11197107, i32 -7899103, i32 31703694, i32 3855903, i32 -8537131, i32 -12833048, i32 -30772034, i32 -15486313], [10 x i32] [i32 -18006477, i32 12709068, i32 3991746, i32 -6479188, i32 -21491523, i32 -10550425, i32 -31135347, i32 -16049879, i32 10928917, i32 3011958], [10 x i32] [i32 -6957757, i32 -15594337, i32 31696059, i32 334240, i32 29576716, i32 14796075, i32 -30831056, i32 -12805180, i32 18008031, i32 10258577] }, %struct.ge_precomp { [10 x i32] [i32 -22448644, i32 15655569, i32 7018479, i32 -4410003, i32 -30314266, i32 -1201591, i32 -1853465, i32 1367120, i32 25127874, i32 6671743], [10 x i32] [i32 29701166, i32 -14373934, i32 -10878120, i32 9279288, i32 -17568, i32 13127210, i32 21382910, i32 11042292, i32 25838796, i32 4642684], [10 x i32] [i32 -20430234, i32 14955537, i32 -24126347, i32 8124619, i32 -5369288, i32 -5990470, i32 30468147, i32 -13900640, i32 18423289, i32 4177476] }]], align 16
@d = internal constant [10 x i32] [i32 -10913610, i32 13857413, i32 -15372611, i32 6949391, i32 114729, i32 -8787816, i32 -6275908, i32 -3247719, i32 -18696448, i32 -12055116], align 16
@sqrtm1 = internal constant [10 x i32] [i32 -32595792, i32 -7943725, i32 9377950, i32 3500415, i32 12389472, i32 -272473, i32 -25146209, i32 -2005654, i32 326686, i32 11406482], align 16
@fe_isnonzero.zero = internal constant [32 x i8] zeroinitializer, align 16
@Bi = internal constant [8 x %struct.ge_precomp] [%struct.ge_precomp { [10 x i32] [i32 25967493, i32 -14356035, i32 29566456, i32 3660896, i32 -12694345, i32 4014787, i32 27544626, i32 -11754271, i32 -6079156, i32 2047605], [10 x i32] [i32 -12545711, i32 934262, i32 -2722910, i32 3049990, i32 -727428, i32 9406986, i32 12720692, i32 5043384, i32 19500929, i32 -15469378], [10 x i32] [i32 -8738181, i32 4489570, i32 9688441, i32 -14785194, i32 10184609, i32 -12363380, i32 29287919, i32 11864899, i32 -24514362, i32 -4438546] }, %struct.ge_precomp { [10 x i32] [i32 15636291, i32 -9688557, i32 24204773, i32 -7912398, i32 616977, i32 -16685262, i32 27787600, i32 -14772189, i32 28944400, i32 -1550024], [10 x i32] [i32 16568933, i32 4717097, i32 -11556148, i32 -1102322, i32 15682896, i32 -11807043, i32 16354577, i32 -11775962, i32 7689662, i32 11199574], [10 x i32] [i32 30464156, i32 -5976125, i32 -11779434, i32 -15670865, i32 23220365, i32 15915852, i32 7512774, i32 10017326, i32 -17749093, i32 -9920357] }, %struct.ge_precomp { [10 x i32] [i32 10861363, i32 11473154, i32 27284546, i32 1981175, i32 -30064349, i32 12577861, i32 32867885, i32 14515107, i32 -15438304, i32 10819380], [10 x i32] [i32 4708026, i32 6336745, i32 20377586, i32 9066809, i32 -11272109, i32 6594696, i32 -25653668, i32 12483688, i32 -12668491, i32 5581306], [10 x i32] [i32 19563160, i32 16186464, i32 -29386857, i32 4097519, i32 10237984, i32 -4348115, i32 28542350, i32 13850243, i32 -23678021, i32 -15815942] }, %struct.ge_precomp { [10 x i32] [i32 5153746, i32 9909285, i32 1723747, i32 -2777874, i32 30523605, i32 5516873, i32 19480852, i32 5230134, i32 -23952439, i32 -15175766], [10 x i32] [i32 -30269007, i32 -3463509, i32 7665486, i32 10083793, i32 28475525, i32 1649722, i32 20654025, i32 16520125, i32 30598449, i32 7715701], [10 x i32] [i32 28881845, i32 14381568, i32 9657904, i32 3680757, i32 -20181635, i32 7843316, i32 -31400660, i32 1370708, i32 29794553, i32 -1409300] }, %struct.ge_precomp { [10 x i32] [i32 -22518993, i32 -6692182, i32 14201702, i32 -8745502, i32 -23510406, i32 8844726, i32 18474211, i32 -1361450, i32 -13062696, i32 13821877], [10 x i32] [i32 -6455177, i32 -7839871, i32 3374702, i32 -4740862, i32 -27098617, i32 -10571707, i32 31655028, i32 -7212327, i32 18853322, i32 -14220951], [10 x i32] [i32 4566830, i32 -12963868, i32 -28974889, i32 -12240689, i32 -7602672, i32 -2830569, i32 -8514358, i32 -10431137, i32 2207753, i32 -3209784] }, %struct.ge_precomp { [10 x i32] [i32 -25154831, i32 -4185821, i32 29681144, i32 7868801, i32 -6854661, i32 -9423865, i32 -12437364, i32 -663000, i32 -31111463, i32 -16132436], [10 x i32] [i32 25576264, i32 -2703214, i32 7349804, i32 -11814844, i32 16472782, i32 9300885, i32 3844789, i32 15725684, i32 171356, i32 6466918], [10 x i32] [i32 23103977, i32 13316479, i32 9739013, i32 -16149481, i32 817875, i32 -15038942, i32 8965339, i32 -14088058, i32 -30714912, i32 16193877] }, %struct.ge_precomp { [10 x i32] [i32 -33521811, i32 3180713, i32 -2394130, i32 14003687, i32 -16903474, i32 -16270840, i32 17238398, i32 4729455, i32 -18074513, i32 9256800], [10 x i32] [i32 -25182317, i32 -4174131, i32 32336398, i32 5036987, i32 -21236817, i32 11360617, i32 22616405, i32 9761698, i32 -19827198, i32 630305], [10 x i32] [i32 -13720693, i32 2639453, i32 -24237460, i32 -7406481, i32 9494427, i32 -5774029, i32 -6554551, i32 -15960994, i32 -2449256, i32 -14291300] }, %struct.ge_precomp { [10 x i32] [i32 -3151181, i32 -5046075, i32 9282714, i32 6866145, i32 -31907062, i32 -863023, i32 -18940575, i32 15033784, i32 25105118, i32 -7894876], [10 x i32] [i32 -24326370, i32 15950226, i32 -31801215, i32 -14592823, i32 -11662737, i32 -5090925, i32 1573892, i32 -2625887, i32 2198790, i32 -15804619], [10 x i32] [i32 -3099351, i32 10324967, i32 -2241613, i32 7453183, i32 -5446979, i32 -2735503, i32 -13812022, i32 -16236442, i32 -32461234, i32 -12290683] }], align 16
@d2 = internal constant [10 x i32] [i32 -21827239, i32 -5839606, i32 -30745221, i32 13898782, i32 229458, i32 15978800, i32 -12551817, i32 -6495438, i32 29715968, i32 9444199], align 16

; Function Attrs: nounwind uwtable
define void @x25519_scalar_mult(i8* %out, i8* nocapture readonly %scalar, i8* %point) #0 {
entry:
  %t0.i = alloca [5 x i64], align 16
  %t1.i = alloca [5 x i64], align 16
  %t2.i = alloca [5 x i64], align 16
  %t3.i = alloca [5 x i64], align 16
  %x1 = alloca [5 x i64], align 16
  %x2 = alloca [5 x i64], align 16
  %z2 = alloca [5 x i64], align 16
  %z3 = alloca [5 x i64], align 16
  %tmp0 = alloca [5 x i64], align 16
  %tmp1 = alloca [5 x i64], align 16
  %e = alloca [32 x i8], align 16
  %0 = bitcast [5 x i64]* %x1 to i8*
  call void @llvm.lifetime.start(i64 40, i8* %0) #1
  %1 = bitcast [5 x i64]* %x2 to i8*
  call void @llvm.lifetime.start(i64 40, i8* %1) #1
  %2 = bitcast [5 x i64]* %z2 to i8*
  call void @llvm.lifetime.start(i64 40, i8* %2) #1
  %3 = bitcast [5 x i64]* %z3 to i8*
  call void @llvm.lifetime.start(i64 40, i8* %3) #1
  %4 = bitcast [5 x i64]* %tmp0 to i8*
  call void @llvm.lifetime.start(i64 40, i8* %4) #1
  %5 = bitcast [5 x i64]* %tmp1 to i8*
  call void @llvm.lifetime.start(i64 40, i8* %5) #1
  %6 = getelementptr inbounds [32 x i8], [32 x i8]* %e, i64 0, i64 0
  call void @llvm.lifetime.start(i64 32, i8* %6) #1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %scalar, i64 32, i32 1, i1 false)
  %7 = load i8, i8* %6, align 16, !tbaa !2
  %and = and i8 %7, -8
  store i8 %and, i8* %6, align 16, !tbaa !2
  %arrayidx2 = getelementptr inbounds [32 x i8], [32 x i8]* %e, i64 0, i64 31
  %8 = load i8, i8* %arrayidx2, align 1, !tbaa !2
  %and4 = and i8 %8, 63
  %or = or i8 %and4, 64
  store i8 %or, i8* %arrayidx2, align 1, !tbaa !2
  %arraydecay = getelementptr inbounds [5 x i64], [5 x i64]* %x1, i64 0, i64 0
  %9 = load i8, i8* %point, align 1, !tbaa !2
  %conv.i.i = zext i8 %9 to i64
  %arrayidx1.i.i = getelementptr inbounds i8, i8* %point, i64 1
  %10 = load i8, i8* %arrayidx1.i.i, align 1, !tbaa !2
  %conv2.i.i = zext i8 %10 to i64
  %shl.i.i = shl nuw nsw i64 %conv2.i.i, 8
  %or.i.i = or i64 %shl.i.i, %conv.i.i
  %arrayidx3.i.i = getelementptr inbounds i8, i8* %point, i64 2
  %11 = load i8, i8* %arrayidx3.i.i, align 1, !tbaa !2
  %conv4.i.i = zext i8 %11 to i64
  %shl5.i.i = shl nuw nsw i64 %conv4.i.i, 16
  %or6.i.i = or i64 %or.i.i, %shl5.i.i
  %arrayidx7.i.i = getelementptr inbounds i8, i8* %point, i64 3
  %12 = load i8, i8* %arrayidx7.i.i, align 1, !tbaa !2
  %conv8.i.i = zext i8 %12 to i64
  %shl9.i.i = shl nuw nsw i64 %conv8.i.i, 24
  %or10.i.i = or i64 %or6.i.i, %shl9.i.i
  %arrayidx11.i.i = getelementptr inbounds i8, i8* %point, i64 4
  %13 = load i8, i8* %arrayidx11.i.i, align 1, !tbaa !2
  %conv12.i.i = zext i8 %13 to i64
  %shl13.i.i = shl nuw nsw i64 %conv12.i.i, 32
  %or14.i.i = or i64 %or10.i.i, %shl13.i.i
  %arrayidx15.i.i = getelementptr inbounds i8, i8* %point, i64 5
  %14 = load i8, i8* %arrayidx15.i.i, align 1, !tbaa !2
  %conv16.i.i = zext i8 %14 to i64
  %shl17.i.i = shl nuw nsw i64 %conv16.i.i, 40
  %or18.i.i = or i64 %or14.i.i, %shl17.i.i
  %arrayidx19.i.i = getelementptr inbounds i8, i8* %point, i64 6
  %15 = load i8, i8* %arrayidx19.i.i, align 1, !tbaa !2
  %conv20.i.i = zext i8 %15 to i64
  %shl21.i.i = shl nuw nsw i64 %conv20.i.i, 48
  %or22.i.i = or i64 %or18.i.i, %shl21.i.i
  %add.ptr.i = getelementptr inbounds i8, i8* %point, i64 7
  %16 = load i8, i8* %add.ptr.i, align 1, !tbaa !2
  %conv.i.117.i = zext i8 %16 to i64
  %arrayidx1.i.118.i = getelementptr inbounds i8, i8* %point, i64 8
  %17 = load i8, i8* %arrayidx1.i.118.i, align 1, !tbaa !2
  %conv2.i.119.i = zext i8 %17 to i64
  %shl.i.120.i = shl nuw nsw i64 %conv2.i.119.i, 8
  %or.i.121.i = or i64 %shl.i.120.i, %conv.i.117.i
  %arrayidx3.i.122.i = getelementptr inbounds i8, i8* %point, i64 9
  %18 = load i8, i8* %arrayidx3.i.122.i, align 1, !tbaa !2
  %conv4.i.123.i = zext i8 %18 to i64
  %shl5.i.124.i = shl nuw nsw i64 %conv4.i.123.i, 16
  %or6.i.125.i = or i64 %or.i.121.i, %shl5.i.124.i
  %arrayidx7.i.126.i = getelementptr inbounds i8, i8* %point, i64 10
  %19 = load i8, i8* %arrayidx7.i.126.i, align 1, !tbaa !2
  %conv8.i.127.i = zext i8 %19 to i64
  %shl9.i.128.i = shl nuw nsw i64 %conv8.i.127.i, 24
  %or10.i.129.i = or i64 %or6.i.125.i, %shl9.i.128.i
  %arrayidx11.i.130.i = getelementptr inbounds i8, i8* %point, i64 11
  %20 = load i8, i8* %arrayidx11.i.130.i, align 1, !tbaa !2
  %conv12.i.131.i = zext i8 %20 to i64
  %shl13.i.132.i = shl nuw nsw i64 %conv12.i.131.i, 32
  %or14.i.133.i = or i64 %or10.i.129.i, %shl13.i.132.i
  %arrayidx15.i.134.i = getelementptr inbounds i8, i8* %point, i64 12
  %21 = load i8, i8* %arrayidx15.i.134.i, align 1, !tbaa !2
  %conv16.i.135.i = zext i8 %21 to i64
  %shl17.i.136.i = shl nuw nsw i64 %conv16.i.135.i, 40
  %or18.i.137.i = or i64 %or14.i.133.i, %shl17.i.136.i
  %shl.i = shl i64 %or18.i.137.i, 5
  %add.ptr2.i = getelementptr inbounds i8, i8* %point, i64 13
  %22 = load i8, i8* %add.ptr2.i, align 1, !tbaa !2
  %conv.i.92.i = zext i8 %22 to i64
  %arrayidx1.i.93.i = getelementptr inbounds i8, i8* %point, i64 14
  %23 = load i8, i8* %arrayidx1.i.93.i, align 1, !tbaa !2
  %conv2.i.94.i = zext i8 %23 to i64
  %shl.i.95.i = shl nuw nsw i64 %conv2.i.94.i, 8
  %or.i.96.i = or i64 %shl.i.95.i, %conv.i.92.i
  %arrayidx3.i.97.i = getelementptr inbounds i8, i8* %point, i64 15
  %24 = load i8, i8* %arrayidx3.i.97.i, align 1, !tbaa !2
  %conv4.i.98.i = zext i8 %24 to i64
  %shl5.i.99.i = shl nuw nsw i64 %conv4.i.98.i, 16
  %or6.i.100.i = or i64 %or.i.96.i, %shl5.i.99.i
  %arrayidx7.i.101.i = getelementptr inbounds i8, i8* %point, i64 16
  %25 = load i8, i8* %arrayidx7.i.101.i, align 1, !tbaa !2
  %conv8.i.102.i = zext i8 %25 to i64
  %shl9.i.103.i = shl nuw nsw i64 %conv8.i.102.i, 24
  %or10.i.104.i = or i64 %or6.i.100.i, %shl9.i.103.i
  %arrayidx11.i.105.i = getelementptr inbounds i8, i8* %point, i64 17
  %26 = load i8, i8* %arrayidx11.i.105.i, align 1, !tbaa !2
  %conv12.i.106.i = zext i8 %26 to i64
  %shl13.i.107.i = shl nuw nsw i64 %conv12.i.106.i, 32
  %or14.i.108.i = or i64 %or10.i.104.i, %shl13.i.107.i
  %arrayidx15.i.109.i = getelementptr inbounds i8, i8* %point, i64 18
  %27 = load i8, i8* %arrayidx15.i.109.i, align 1, !tbaa !2
  %conv16.i.110.i = zext i8 %27 to i64
  %shl17.i.111.i = shl nuw nsw i64 %conv16.i.110.i, 40
  %or18.i.112.i = or i64 %or14.i.108.i, %shl17.i.111.i
  %arrayidx19.i.113.i = getelementptr inbounds i8, i8* %point, i64 19
  %28 = load i8, i8* %arrayidx19.i.113.i, align 1, !tbaa !2
  %conv20.i.114.i = zext i8 %28 to i64
  %shl21.i.115.i = shl nuw nsw i64 %conv20.i.114.i, 48
  %or22.i.116.i = or i64 %or18.i.112.i, %shl21.i.115.i
  %shl4.i = shl i64 %or22.i.116.i, 2
  %add.ptr5.i = getelementptr inbounds i8, i8* %point, i64 20
  %29 = load i8, i8* %add.ptr5.i, align 1, !tbaa !2
  %conv.i.71.i = zext i8 %29 to i64
  %arrayidx1.i.72.i = getelementptr inbounds i8, i8* %point, i64 21
  %30 = load i8, i8* %arrayidx1.i.72.i, align 1, !tbaa !2
  %conv2.i.73.i = zext i8 %30 to i64
  %shl.i.74.i = shl nuw nsw i64 %conv2.i.73.i, 8
  %or.i.75.i = or i64 %shl.i.74.i, %conv.i.71.i
  %arrayidx3.i.76.i = getelementptr inbounds i8, i8* %point, i64 22
  %31 = load i8, i8* %arrayidx3.i.76.i, align 1, !tbaa !2
  %conv4.i.77.i = zext i8 %31 to i64
  %shl5.i.78.i = shl nuw nsw i64 %conv4.i.77.i, 16
  %or6.i.79.i = or i64 %or.i.75.i, %shl5.i.78.i
  %arrayidx7.i.80.i = getelementptr inbounds i8, i8* %point, i64 23
  %32 = load i8, i8* %arrayidx7.i.80.i, align 1, !tbaa !2
  %conv8.i.81.i = zext i8 %32 to i64
  %shl9.i.82.i = shl nuw nsw i64 %conv8.i.81.i, 24
  %or10.i.83.i = or i64 %or6.i.79.i, %shl9.i.82.i
  %arrayidx11.i.84.i = getelementptr inbounds i8, i8* %point, i64 24
  %33 = load i8, i8* %arrayidx11.i.84.i, align 1, !tbaa !2
  %conv12.i.85.i = zext i8 %33 to i64
  %shl13.i.86.i = shl nuw nsw i64 %conv12.i.85.i, 32
  %or14.i.87.i = or i64 %or10.i.83.i, %shl13.i.86.i
  %arrayidx15.i.88.i = getelementptr inbounds i8, i8* %point, i64 25
  %34 = load i8, i8* %arrayidx15.i.88.i, align 1, !tbaa !2
  %conv16.i.89.i = zext i8 %34 to i64
  %shl17.i.90.i = shl nuw nsw i64 %conv16.i.89.i, 40
  %or18.i.91.i = or i64 %or14.i.87.i, %shl17.i.90.i
  %shl7.i = shl i64 %or18.i.91.i, 7
  %add.ptr8.i = getelementptr inbounds i8, i8* %point, i64 26
  %35 = load i8, i8* %add.ptr8.i, align 1, !tbaa !2
  %conv.i.50.i = zext i8 %35 to i64
  %arrayidx1.i.51.i = getelementptr inbounds i8, i8* %point, i64 27
  %36 = load i8, i8* %arrayidx1.i.51.i, align 1, !tbaa !2
  %conv2.i.52.i = zext i8 %36 to i64
  %shl.i.53.i = shl nuw nsw i64 %conv2.i.52.i, 8
  %or.i.54.i = or i64 %shl.i.53.i, %conv.i.50.i
  %arrayidx3.i.55.i = getelementptr inbounds i8, i8* %point, i64 28
  %37 = load i8, i8* %arrayidx3.i.55.i, align 1, !tbaa !2
  %conv4.i.56.i = zext i8 %37 to i64
  %shl5.i.57.i = shl nuw nsw i64 %conv4.i.56.i, 16
  %or6.i.58.i = or i64 %or.i.54.i, %shl5.i.57.i
  %arrayidx7.i.59.i = getelementptr inbounds i8, i8* %point, i64 29
  %38 = load i8, i8* %arrayidx7.i.59.i, align 1, !tbaa !2
  %conv8.i.60.i = zext i8 %38 to i64
  %shl9.i.61.i = shl nuw nsw i64 %conv8.i.60.i, 24
  %or10.i.62.i = or i64 %or6.i.58.i, %shl9.i.61.i
  %arrayidx11.i.63.i = getelementptr inbounds i8, i8* %point, i64 30
  %39 = load i8, i8* %arrayidx11.i.63.i, align 1, !tbaa !2
  %conv12.i.64.i = zext i8 %39 to i64
  %shl13.i.65.i = shl nuw nsw i64 %conv12.i.64.i, 32
  %or14.i.66.i = or i64 %or10.i.62.i, %shl13.i.65.i
  %arrayidx15.i.67.i = getelementptr inbounds i8, i8* %point, i64 31
  %40 = load i8, i8* %arrayidx15.i.67.i, align 1, !tbaa !2
  %conv16.i.68.i = zext i8 %40 to i64
  %shl17.i.69.i = shl nuw nsw i64 %conv16.i.68.i, 40
  %or18.i.70.i = or i64 %or14.i.66.i, %shl17.i.69.i
  %and.i = shl i64 %or18.i.70.i, 4
  %shl10.i = and i64 %and.i, 2251799813685232
  %shr.i = lshr i64 %or22.i.i, 51
  %and11.i = and i64 %or22.i.i, 2251799813685247
  %41 = lshr i64 %or18.i.137.i, 46
  %shr12.i = and i64 %41, 8191
  %shl.masked.i = and i64 %shl.i, 2251799813685216
  %and14.i = or i64 %shl.masked.i, %shr.i
  %42 = lshr i64 %or22.i.116.i, 49
  %shr15.i = and i64 %42, 8191
  %shl4.masked.i = and i64 %shl4.i, 2251799813685244
  %and17.i = or i64 %shl4.masked.i, %shr12.i
  %43 = lshr i64 %or18.i.91.i, 44
  %shr18.i = and i64 %43, 8191
  %or19.i = or i64 %shl10.i, %shr18.i
  %shl7.masked.i = and i64 %shl7.i, 2251799813685120
  %and20.i = or i64 %shl7.masked.i, %shr15.i
  store i64 %and11.i, i64* %arraydecay, align 16, !tbaa !5
  %arrayidx21.i = getelementptr inbounds [5 x i64], [5 x i64]* %x1, i64 0, i64 1
  store i64 %and14.i, i64* %arrayidx21.i, align 8, !tbaa !5
  %arrayidx22.i = getelementptr inbounds [5 x i64], [5 x i64]* %x1, i64 0, i64 2
  store i64 %and17.i, i64* %arrayidx22.i, align 16, !tbaa !5
  %arrayidx23.i = getelementptr inbounds [5 x i64], [5 x i64]* %x1, i64 0, i64 3
  store i64 %and20.i, i64* %arrayidx23.i, align 8, !tbaa !5
  %arrayidx24.i = getelementptr inbounds [5 x i64], [5 x i64]* %x1, i64 0, i64 4
  store i64 %or19.i, i64* %arrayidx24.i, align 16, !tbaa !5
  %arraydecay9 = getelementptr inbounds [5 x i64], [5 x i64]* %x2, i64 0, i64 0
  store i64 1, i64* %arraydecay9, align 16, !tbaa !5
  %arrayidx1.i.92 = getelementptr inbounds [5 x i64], [5 x i64]* %x2, i64 0, i64 1
  %44 = bitcast i64* %arrayidx1.i.92 to i8*
  call void @llvm.memset.p0i8.i64(i8* %44, i8 0, i64 32, i32 8, i1 false) #1
  %arraydecay10 = getelementptr inbounds [5 x i64], [5 x i64]* %z2, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 40, i32 16, i1 false) #1
  %arraydecay13 = getelementptr inbounds [5 x i64], [5 x i64]* %z3, i64 0, i64 0
  store i64 1, i64* %arraydecay13, align 16, !tbaa !5
  %arrayidx1.i.100 = getelementptr inbounds [5 x i64], [5 x i64]* %z3, i64 0, i64 1
  %45 = bitcast i64* %arrayidx1.i.100 to i8*
  call void @llvm.memset.p0i8.i64(i8* %45, i8 0, i64 32, i32 8, i1 false) #1
  %arrayidx.2.i = getelementptr inbounds [5 x i64], [5 x i64]* %x2, i64 0, i64 2
  %arrayidx.3.i = getelementptr inbounds [5 x i64], [5 x i64]* %x2, i64 0, i64 3
  %arrayidx.4.i = getelementptr inbounds [5 x i64], [5 x i64]* %x2, i64 0, i64 4
  %arrayidx.1.i.109 = getelementptr inbounds [5 x i64], [5 x i64]* %z2, i64 0, i64 1
  %arrayidx.2.i.115 = getelementptr inbounds [5 x i64], [5 x i64]* %z2, i64 0, i64 2
  %arrayidx3.2.i.116 = getelementptr inbounds [5 x i64], [5 x i64]* %z3, i64 0, i64 2
  %arrayidx.3.i.121 = getelementptr inbounds [5 x i64], [5 x i64]* %z2, i64 0, i64 3
  %arrayidx3.3.i.122 = getelementptr inbounds [5 x i64], [5 x i64]* %z3, i64 0, i64 3
  %arrayidx.4.i.127 = getelementptr inbounds [5 x i64], [5 x i64]* %z2, i64 0, i64 4
  %arrayidx3.4.i.128 = getelementptr inbounds [5 x i64], [5 x i64]* %z3, i64 0, i64 4
  %arraydecay23 = getelementptr inbounds [5 x i64], [5 x i64]* %tmp0, i64 0, i64 0
  %arrayidx7.i.137 = getelementptr inbounds [5 x i64], [5 x i64]* %tmp0, i64 0, i64 1
  %arrayidx12.i = getelementptr inbounds [5 x i64], [5 x i64]* %tmp0, i64 0, i64 2
  %arrayidx17.i = getelementptr inbounds [5 x i64], [5 x i64]* %tmp0, i64 0, i64 3
  %arrayidx22.i.140 = getelementptr inbounds [5 x i64], [5 x i64]* %tmp0, i64 0, i64 4
  %arraydecay26 = getelementptr inbounds [5 x i64], [5 x i64]* %tmp1, i64 0, i64 0
  %arrayidx7.i.147 = getelementptr inbounds [5 x i64], [5 x i64]* %tmp1, i64 0, i64 1
  %arrayidx12.i.152 = getelementptr inbounds [5 x i64], [5 x i64]* %tmp1, i64 0, i64 2
  %arrayidx17.i.157 = getelementptr inbounds [5 x i64], [5 x i64]* %tmp1, i64 0, i64 3
  %arrayidx22.i.162 = getelementptr inbounds [5 x i64], [5 x i64]* %tmp1, i64 0, i64 4
  %46 = bitcast i64* %arrayidx7.i.137 to <2 x i64>*
  %47 = bitcast i64* %arrayidx7.i.137 to <2 x i64>*
  %48 = bitcast i64* %arrayidx17.i to <2 x i64>*
  %49 = bitcast i64* %arrayidx17.i to <2 x i64>*
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry
  %50 = phi i64 [ 0, %entry ], [ %.pre630, %for.body.for.body_crit_edge ]
  %51 = phi i64 [ 0, %entry ], [ %.pre629, %for.body.for.body_crit_edge ]
  %52 = phi i64 [ 0, %entry ], [ %.pre628, %for.body.for.body_crit_edge ]
  %53 = phi i64 [ 0, %entry ], [ %.pre627, %for.body.for.body_crit_edge ]
  %54 = phi i64 [ 0, %entry ], [ %.pre626, %for.body.for.body_crit_edge ]
  %55 = phi i64 [ 0, %entry ], [ %.pre625, %for.body.for.body_crit_edge ]
  %56 = phi i64 [ 0, %entry ], [ %.pre624, %for.body.for.body_crit_edge ]
  %57 = phi i64 [ 0, %entry ], [ %.pre623, %for.body.for.body_crit_edge ]
  %58 = phi i64 [ 1, %entry ], [ %.pre622, %for.body.for.body_crit_edge ]
  %59 = phi i64 [ 0, %entry ], [ %.pre621, %for.body.for.body_crit_edge ]
  %60 = phi i64 [ 0, %entry ], [ %.pre620, %for.body.for.body_crit_edge ]
  %61 = phi i64 [ 0, %entry ], [ %.pre619, %for.body.for.body_crit_edge ]
  %62 = phi i64 [ 0, %entry ], [ %.pre618, %for.body.for.body_crit_edge ]
  %63 = phi i64 [ 0, %entry ], [ %.pre617, %for.body.for.body_crit_edge ]
  %64 = phi i64 [ 1, %entry ], [ %.pre, %for.body.for.body_crit_edge ]
  %swap.0616 = phi i32 [ 0, %entry ], [ %and18, %for.body.for.body_crit_edge ]
  %pos.0615 = phi i32 [ 254, %entry ], [ %dec, %for.body.for.body_crit_edge ]
  %65 = phi i64 [ %and11.i, %entry ], [ %and95.i.431, %for.body.for.body_crit_edge ]
  %add94.i.429588614 = phi i64 [ %and14.i, %entry ], [ %add94.i.429, %for.body.for.body_crit_edge ]
  %x3.sroa.20.16.589613 = phi i64 [ %and17.i, %entry ], [ %and92.i.427, %for.body.for.body_crit_edge ]
  %x3.sroa.29.24.590612 = phi i64 [ %and20.i, %entry ], [ %add91.i.425, %for.body.for.body_crit_edge ]
  %x3.sroa.38.32.load591611 = phi i64 [ %or19.i, %entry ], [ %and89.i.423, %for.body.for.body_crit_edge ]
  %div = sdiv i32 %pos.0615, 8
  %idxprom = sext i32 %div to i64
  %arrayidx15 = getelementptr inbounds [32 x i8], [32 x i8]* %e, i64 0, i64 %idxprom
  %66 = load i8, i8* %arrayidx15, align 1, !tbaa !2
  %conv16 = zext i8 %66 to i32
  %and17 = and i32 %pos.0615, 7
  %shr = lshr i32 %conv16, %and17
  %and18 = and i32 %shr, 1
  %xor = xor i32 %and18, %swap.0616
  %conv.i.101 = zext i32 %xor to i64
  %sub.i = sub nsw i64 0, %conv.i.101
  %xor.i = xor i64 %64, %65
  %and.i.102 = and i64 %xor.i, %sub.i
  %xor6.i = xor i64 %and.i.102, %64
  %xor9.i = xor i64 %and.i.102, %65
  %xor.1.i = xor i64 %63, %add94.i.429588614
  %and.1.i = and i64 %xor.1.i, %sub.i
  %xor6.1.i = xor i64 %and.1.i, %63
  %xor9.1.i = xor i64 %and.1.i, %add94.i.429588614
  %xor.2.i = xor i64 %62, %x3.sroa.20.16.589613
  %and.2.i = and i64 %xor.2.i, %sub.i
  %xor6.2.i = xor i64 %and.2.i, %62
  %xor9.2.i = xor i64 %and.2.i, %x3.sroa.20.16.589613
  %xor.3.i = xor i64 %61, %x3.sroa.29.24.590612
  %and.3.i = and i64 %xor.3.i, %sub.i
  %xor6.3.i = xor i64 %and.3.i, %61
  %xor9.3.i = xor i64 %and.3.i, %x3.sroa.29.24.590612
  %xor.4.i = xor i64 %60, %x3.sroa.38.32.load591611
  %and.4.i = and i64 %xor.4.i, %sub.i
  %xor6.4.i = xor i64 %and.4.i, %60
  %xor9.4.i = xor i64 %and.4.i, %x3.sroa.38.32.load591611
  %xor.i.105 = xor i64 %58, %59
  %and.i.106 = and i64 %xor.i.105, %sub.i
  %xor6.i.107 = xor i64 %and.i.106, %59
  %xor9.i.108 = xor i64 %and.i.106, %58
  store i64 %xor9.i.108, i64* %arraydecay13, align 16, !tbaa !5
  %xor.1.i.111 = xor i64 %56, %57
  %and.1.i.112 = and i64 %xor.1.i.111, %sub.i
  %xor6.1.i.113 = xor i64 %and.1.i.112, %57
  %xor9.1.i.114 = xor i64 %and.1.i.112, %56
  store i64 %xor9.1.i.114, i64* %arrayidx1.i.100, align 8, !tbaa !5
  %xor.2.i.117 = xor i64 %54, %55
  %and.2.i.118 = and i64 %xor.2.i.117, %sub.i
  %xor6.2.i.119 = xor i64 %and.2.i.118, %55
  %xor9.2.i.120 = xor i64 %and.2.i.118, %54
  store i64 %xor9.2.i.120, i64* %arrayidx3.2.i.116, align 16, !tbaa !5
  %xor.3.i.123 = xor i64 %52, %53
  %and.3.i.124 = and i64 %xor.3.i.123, %sub.i
  %xor6.3.i.125 = xor i64 %and.3.i.124, %53
  %xor9.3.i.126 = xor i64 %and.3.i.124, %52
  store i64 %xor9.3.i.126, i64* %arrayidx3.3.i.122, align 8, !tbaa !5
  %xor.4.i.129 = xor i64 %50, %51
  %and.4.i.130 = and i64 %xor.4.i.129, %sub.i
  %xor6.4.i.131 = xor i64 %and.4.i.130, %51
  %xor9.4.i.132 = xor i64 %and.4.i.130, %50
  store i64 %xor9.4.i.132, i64* %arrayidx3.4.i.128, align 16, !tbaa !5
  %add.i.133 = add i64 %xor9.i, 4503599627370458
  %sub.i.134 = sub i64 %add.i.133, %xor9.i.108
  store i64 %sub.i.134, i64* %arraydecay23, align 16, !tbaa !5
  %add4.i = add i64 %xor9.1.i, 4503599627370494
  %sub6.i = sub i64 %add4.i, %xor9.1.i.114
  store i64 %sub6.i, i64* %arrayidx7.i.137, align 8, !tbaa !5
  %add9.i.139 = add i64 %xor9.2.i, 4503599627370494
  %sub11.i = sub i64 %add9.i.139, %xor9.2.i.120
  store i64 %sub11.i, i64* %arrayidx12.i, align 16, !tbaa !5
  %add14.i = add i64 %xor9.3.i, 4503599627370494
  %sub16.i = sub i64 %add14.i, %xor9.3.i.126
  store i64 %sub16.i, i64* %arrayidx17.i, align 8, !tbaa !5
  %add19.i = add i64 %xor9.4.i, 4503599627370494
  %sub21.i = sub i64 %add19.i, %xor9.4.i.132
  store i64 %sub21.i, i64* %arrayidx22.i.140, align 16, !tbaa !5
  %add.i.141 = add i64 %xor6.i, 4503599627370458
  %sub.i.142 = sub i64 %add.i.141, %xor6.i.107
  store i64 %sub.i.142, i64* %arraydecay26, align 16, !tbaa !5
  %add4.i.144 = add i64 %xor6.1.i, 4503599627370494
  %sub6.i.146 = sub i64 %add4.i.144, %xor6.1.i.113
  store i64 %sub6.i.146, i64* %arrayidx7.i.147, align 8, !tbaa !5
  %add9.i.149 = add i64 %xor6.2.i, 4503599627370494
  %sub11.i.151 = sub i64 %add9.i.149, %xor6.2.i.119
  store i64 %sub11.i.151, i64* %arrayidx12.i.152, align 16, !tbaa !5
  %add14.i.154 = add i64 %xor6.3.i, 4503599627370494
  %sub16.i.156 = sub i64 %add14.i.154, %xor6.3.i.125
  store i64 %sub16.i.156, i64* %arrayidx17.i.157, align 8, !tbaa !5
  %add19.i.159 = add i64 %xor6.4.i, 4503599627370494
  %sub21.i.161 = sub i64 %add19.i.159, %xor6.4.i.131
  store i64 %sub21.i.161, i64* %arrayidx22.i.162, align 16, !tbaa !5
  %add.i.163 = add i64 %xor6.i.107, %xor6.i
  store i64 %add.i.163, i64* %arraydecay9, align 16, !tbaa !5
  %add5.i.166 = add i64 %xor6.1.i.113, %xor6.1.i
  store i64 %add5.i.166, i64* %arrayidx1.i.92, align 8, !tbaa !5
  %add9.i.170 = add i64 %xor6.2.i.119, %xor6.2.i
  store i64 %add9.i.170, i64* %arrayidx.2.i, align 16, !tbaa !5
  %add13.i.173 = add i64 %xor6.3.i.125, %xor6.3.i
  store i64 %add13.i.173, i64* %arrayidx.3.i, align 8, !tbaa !5
  %add17.i.175 = add i64 %xor6.4.i.131, %xor6.4.i
  store i64 %add17.i.175, i64* %arrayidx.4.i, align 16, !tbaa !5
  %add.i.177 = add i64 %xor9.i.108, %xor9.i
  store i64 %add.i.177, i64* %arraydecay10, align 16, !tbaa !5
  %add5.i.180 = add i64 %xor9.1.i.114, %xor9.1.i
  store i64 %add5.i.180, i64* %arrayidx.1.i.109, align 8, !tbaa !5
  %add9.i.184 = add i64 %xor9.2.i.120, %xor9.2.i
  store i64 %add9.i.184, i64* %arrayidx.2.i.115, align 16, !tbaa !5
  %add13.i.188 = add i64 %xor9.3.i.126, %xor9.3.i
  store i64 %add13.i.188, i64* %arrayidx.3.i.121, align 8, !tbaa !5
  %add17.i.192 = add i64 %xor9.4.i.132, %xor9.4.i
  store i64 %add17.i.192, i64* %arrayidx.4.i.127, align 16, !tbaa !5
  call fastcc void @fe51_mul(i64* %arraydecay13, i64* %arraydecay23, i64* %arraydecay9)
  call fastcc void @fe51_mul(i64* %arraydecay10, i64* %arraydecay10, i64* %arraydecay26)
  %conv.i.198 = zext i64 %sub.i.142 to i128
  %mul.i.199 = mul nuw i128 %conv.i.198, %conv.i.198
  %mul6.i = shl i64 %sub.i.142, 1
  %conv7.i = zext i64 %mul6.i to i128
  %conv8.i = zext i64 %sub6.i.146 to i128
  %mul9.i = mul nuw i128 %conv7.i, %conv8.i
  %conv11.i = zext i64 %sub11.i.151 to i128
  %mul12.i = mul nuw i128 %conv11.i, %conv7.i
  %conv14.i = zext i64 %sub16.i.156 to i128
  %mul15.i = mul nuw i128 %conv14.i, %conv7.i
  %conv17.i = zext i64 %sub21.i.161 to i128
  %mul18.i = mul nuw i128 %conv17.i, %conv7.i
  %mul20.i = mul i64 %sub21.i.161, 19
  %conv21.i = zext i64 %mul20.i to i128
  %mul22.i = mul nuw i128 %conv21.i, %conv17.i
  %mul25.i = mul nuw i128 %conv8.i, %conv8.i
  %add26.i = add i128 %mul12.i, %mul25.i
  %mul27.i = shl i64 %sub6.i.146, 1
  %conv28.i = zext i64 %mul27.i to i128
  %mul30.i = mul nuw i128 %conv28.i, %conv11.i
  %mul34.i = mul nuw i128 %conv14.i, %conv28.i
  %mul38.i = mul nuw i128 %conv21.i, %conv28.i
  %mul41.i = mul i64 %sub16.i.156, 19
  %conv42.i = zext i64 %mul41.i to i128
  %mul43.i = mul nuw i128 %conv42.i, %conv14.i
  %add44.i = add i128 %mul43.i, %mul9.i
  %mul45.i = shl i64 %sub16.i.156, 1
  %conv46.i.200 = zext i64 %mul45.i to i128
  %mul48.i = mul nuw i128 %conv21.i, %conv46.i.200
  %add49.i = add i128 %add26.i, %mul48.i
  %mul52.i = mul nuw i128 %conv11.i, %conv11.i
  %mul54.i = shl i64 %sub11.i.151, 1
  %conv55.i.201 = zext i64 %mul54.i to i128
  %mul57.i = mul nuw i128 %conv42.i, %conv55.i.201
  %add39.i = add i128 %mul57.i, %mul.i.199
  %add58.i = add i128 %add39.i, %mul38.i
  %mul61.i = mul nuw i128 %conv21.i, %conv55.i.201
  %add62.i = add i128 %add44.i, %mul61.i
  %shr.i.202 = lshr i128 %add49.i, 51
  %conv64.i = and i128 %shr.i.202, 18446744073709551615
  %add.i.203 = add i128 %mul15.i, %mul30.i
  %add31.i = add i128 %add.i.203, %mul22.i
  %add65.i = add i128 %add31.i, %conv64.i
  %conv66.i = trunc i128 %add49.i to i64
  %and.i.204 = and i64 %conv66.i, 2251799813685247
  %shr67.i = lshr i128 %add58.i, 51
  %conv69.i = and i128 %shr67.i, 18446744073709551615
  %add70.i = add i128 %add62.i, %conv69.i
  %conv71.i.205 = trunc i128 %add58.i to i64
  %and72.i = and i64 %conv71.i.205, 2251799813685247
  %shr73.i.206 = lshr i128 %add65.i, 51
  %conv75.i = and i128 %shr73.i.206, 18446744073709551615
  %add35.i = add i128 %mul34.i, %mul52.i
  %add53.i = add i128 %add35.i, %mul18.i
  %add76.i = add i128 %add53.i, %conv75.i
  %conv77.i.207 = trunc i128 %add65.i to i64
  %and78.i = and i64 %conv77.i.207, 2251799813685247
  %shr79.i.208 = lshr i128 %add70.i, 51
  %conv80.i.209 = trunc i128 %shr79.i.208 to i64
  %add81.i = add i64 %conv80.i.209, %and.i.204
  %conv82.i = trunc i128 %add70.i to i64
  %and83.i = and i64 %conv82.i, 2251799813685247
  %shr84.i = lshr i128 %add76.i, 51
  %conv85.i = trunc i128 %shr84.i to i64
  %mul86.i = mul i64 %conv85.i, 19
  %add87.i = add i64 %mul86.i, %and72.i
  %conv88.i = trunc i128 %add76.i to i64
  %and89.i = and i64 %conv88.i, 2251799813685247
  %shr90.i = lshr i64 %add81.i, 51
  %add91.i = add nuw nsw i64 %shr90.i, %and78.i
  %fold.i = add i64 %conv80.i.209, %conv66.i
  %and92.i = and i64 %fold.i, 2251799813685247
  %shr93.i = lshr i64 %add87.i, 51
  %add94.i = add nuw nsw i64 %shr93.i, %and83.i
  %fold180.i = add i64 %mul86.i, %conv71.i.205
  %and95.i = and i64 %fold180.i, 2251799813685247
  store i64 %and95.i, i64* %arraydecay23, align 16, !tbaa !5
  store i64 %add94.i, i64* %arrayidx7.i.137, align 8, !tbaa !5
  store i64 %and92.i, i64* %arrayidx12.i, align 16, !tbaa !5
  store i64 %add91.i, i64* %arrayidx17.i, align 8, !tbaa !5
  store i64 %and89.i, i64* %arrayidx22.i.140, align 16, !tbaa !5
  %67 = load i64, i64* %arraydecay9, align 16, !tbaa !5
  %68 = load i64, i64* %arrayidx1.i.92, align 8, !tbaa !5
  %69 = load i64, i64* %arrayidx.2.i, align 16, !tbaa !5
  %conv.i.216 = zext i64 %67 to i128
  %mul.i.217 = mul nuw i128 %conv.i.216, %conv.i.216
  %mul6.i.218 = shl i64 %67, 1
  %conv7.i.219 = zext i64 %mul6.i.218 to i128
  %conv8.i.220 = zext i64 %68 to i128
  %mul9.i.221 = mul nuw i128 %conv7.i.219, %conv8.i.220
  %conv11.i.222 = zext i64 %69 to i128
  %mul12.i.223 = mul nuw i128 %conv11.i.222, %conv7.i.219
  %conv14.i.224 = zext i64 %add13.i.173 to i128
  %mul15.i.225 = mul nuw i128 %conv14.i.224, %conv7.i.219
  %conv17.i.226 = zext i64 %add17.i.175 to i128
  %mul18.i.227 = mul nuw i128 %conv17.i.226, %conv7.i.219
  %mul20.i.228 = mul i64 %add17.i.175, 19
  %conv21.i.229 = zext i64 %mul20.i.228 to i128
  %mul22.i.230 = mul nuw i128 %conv21.i.229, %conv17.i.226
  %mul25.i.231 = mul nuw i128 %conv8.i.220, %conv8.i.220
  %add26.i.232 = add i128 %mul12.i.223, %mul25.i.231
  %mul27.i.233 = shl i64 %68, 1
  %conv28.i.234 = zext i64 %mul27.i.233 to i128
  %mul30.i.235 = mul nuw i128 %conv28.i.234, %conv11.i.222
  %mul34.i.236 = mul nuw i128 %conv14.i.224, %conv28.i.234
  %mul38.i.237 = mul nuw i128 %conv21.i.229, %conv28.i.234
  %mul41.i.238 = mul i64 %add13.i.173, 19
  %conv42.i.239 = zext i64 %mul41.i.238 to i128
  %mul43.i.240 = mul nuw i128 %conv42.i.239, %conv14.i.224
  %add44.i.241 = add i128 %mul43.i.240, %mul9.i.221
  %mul45.i.242 = shl i64 %add13.i.173, 1
  %conv46.i.243 = zext i64 %mul45.i.242 to i128
  %mul48.i.244 = mul nuw i128 %conv21.i.229, %conv46.i.243
  %add49.i.245 = add i128 %add26.i.232, %mul48.i.244
  %mul52.i.246 = mul nuw i128 %conv11.i.222, %conv11.i.222
  %mul54.i.247 = shl i64 %69, 1
  %conv55.i.248 = zext i64 %mul54.i.247 to i128
  %mul57.i.249 = mul nuw i128 %conv42.i.239, %conv55.i.248
  %add39.i.250 = add i128 %mul57.i.249, %mul.i.217
  %add58.i.251 = add i128 %add39.i.250, %mul38.i.237
  %mul61.i.252 = mul nuw i128 %conv21.i.229, %conv55.i.248
  %add62.i.253 = add i128 %add44.i.241, %mul61.i.252
  %shr.i.254 = lshr i128 %add49.i.245, 51
  %conv64.i.255 = and i128 %shr.i.254, 18446744073709551615
  %add.i.256 = add i128 %mul15.i.225, %mul30.i.235
  %add31.i.257 = add i128 %add.i.256, %mul22.i.230
  %add65.i.258 = add i128 %add31.i.257, %conv64.i.255
  %conv66.i.259 = trunc i128 %add49.i.245 to i64
  %and.i.260 = and i64 %conv66.i.259, 2251799813685247
  %shr67.i.261 = lshr i128 %add58.i.251, 51
  %conv69.i.262 = and i128 %shr67.i.261, 18446744073709551615
  %add70.i.263 = add i128 %add62.i.253, %conv69.i.262
  %conv71.i.264 = trunc i128 %add58.i.251 to i64
  %and72.i.265 = and i64 %conv71.i.264, 2251799813685247
  %shr73.i.266 = lshr i128 %add65.i.258, 51
  %conv75.i.267 = and i128 %shr73.i.266, 18446744073709551615
  %add35.i.268 = add i128 %mul34.i.236, %mul52.i.246
  %add53.i.269 = add i128 %add35.i.268, %mul18.i.227
  %add76.i.270 = add i128 %add53.i.269, %conv75.i.267
  %conv77.i.271 = trunc i128 %add65.i.258 to i64
  %and78.i.272 = and i64 %conv77.i.271, 2251799813685247
  %shr79.i.273 = lshr i128 %add70.i.263, 51
  %conv80.i.274 = trunc i128 %shr79.i.273 to i64
  %add81.i.275 = add i64 %conv80.i.274, %and.i.260
  %conv82.i.276 = trunc i128 %add70.i.263 to i64
  %and83.i.277 = and i64 %conv82.i.276, 2251799813685247
  %shr84.i.278 = lshr i128 %add76.i.270, 51
  %conv85.i.279 = trunc i128 %shr84.i.278 to i64
  %mul86.i.280 = mul i64 %conv85.i.279, 19
  %add87.i.281 = add i64 %mul86.i.280, %and72.i.265
  %conv88.i.282 = trunc i128 %add76.i.270 to i64
  %and89.i.283 = and i64 %conv88.i.282, 2251799813685247
  %shr90.i.284 = lshr i64 %add81.i.275, 51
  %add91.i.285 = add nuw nsw i64 %shr90.i.284, %and78.i.272
  %fold.i.286 = add i64 %conv80.i.274, %conv66.i.259
  %and92.i.287 = and i64 %fold.i.286, 2251799813685247
  %shr93.i.288 = lshr i64 %add87.i.281, 51
  %add94.i.289 = add nuw nsw i64 %shr93.i.288, %and83.i.277
  %fold180.i.290 = add i64 %mul86.i.280, %conv71.i.264
  %and95.i.291 = and i64 %fold180.i.290, 2251799813685247
  store i64 %and95.i.291, i64* %arraydecay26, align 16, !tbaa !5
  store i64 %add94.i.289, i64* %arrayidx7.i.147, align 8, !tbaa !5
  store i64 %and92.i.287, i64* %arrayidx12.i.152, align 16, !tbaa !5
  store i64 %add91.i.285, i64* %arrayidx17.i.157, align 8, !tbaa !5
  store i64 %and89.i.283, i64* %arrayidx22.i.162, align 16, !tbaa !5
  %70 = load i64, i64* %arraydecay13, align 16, !tbaa !5
  %71 = load i64, i64* %arraydecay10, align 16, !tbaa !5
  %add.i.296 = add i64 %71, %70
  %72 = load i64, i64* %arrayidx1.i.100, align 8, !tbaa !5
  %73 = load i64, i64* %arrayidx.1.i.109, align 8, !tbaa !5
  %add5.i.299 = add i64 %73, %72
  %74 = load i64, i64* %arrayidx3.2.i.116, align 16, !tbaa !5
  %75 = load i64, i64* %arrayidx.2.i.115, align 16, !tbaa !5
  %add9.i.303 = add i64 %75, %74
  %76 = load i64, i64* %arrayidx3.3.i.122, align 8, !tbaa !5
  %77 = load i64, i64* %arrayidx.3.i.121, align 8, !tbaa !5
  %add13.i.307 = add i64 %77, %76
  %78 = load i64, i64* %arrayidx3.4.i.128, align 16, !tbaa !5
  %79 = load i64, i64* %arrayidx.4.i.127, align 16, !tbaa !5
  %add17.i.311 = add i64 %79, %78
  %add.i.313 = add i64 %70, 4503599627370458
  %sub.i.314 = sub i64 %add.i.313, %71
  store i64 %sub.i.314, i64* %arraydecay10, align 16, !tbaa !5
  %add4.i.316 = add i64 %72, 4503599627370494
  %sub6.i.318 = sub i64 %add4.i.316, %73
  store i64 %sub6.i.318, i64* %arrayidx.1.i.109, align 8, !tbaa !5
  %add9.i.321 = add i64 %74, 4503599627370494
  %sub11.i.323 = sub i64 %add9.i.321, %75
  store i64 %sub11.i.323, i64* %arrayidx.2.i.115, align 16, !tbaa !5
  %add14.i.326 = add i64 %76, 4503599627370494
  %sub16.i.328 = sub i64 %add14.i.326, %77
  store i64 %sub16.i.328, i64* %arrayidx.3.i.121, align 8, !tbaa !5
  %add19.i.331 = add i64 %78, 4503599627370494
  %sub21.i.333 = sub i64 %add19.i.331, %79
  store i64 %sub21.i.333, i64* %arrayidx.4.i.127, align 16, !tbaa !5
  call fastcc void @fe51_mul(i64* %arraydecay9, i64* %arraydecay26, i64* %arraydecay23)
  %add.i.541 = add nuw nsw i64 %and95.i.291, 4503599627370458
  %80 = load i64, i64* %arraydecay23, align 16, !tbaa !5
  %sub.i.542 = sub i64 %add.i.541, %80
  store i64 %sub.i.542, i64* %arraydecay26, align 16, !tbaa !5
  %add4.i.544 = add nuw nsw i64 %add94.i.289, 4503599627370494
  %81 = load i64, i64* %arrayidx7.i.137, align 8, !tbaa !5
  %sub6.i.546 = sub i64 %add4.i.544, %81
  store i64 %sub6.i.546, i64* %arrayidx7.i.147, align 8, !tbaa !5
  %add9.i.549 = add nuw nsw i64 %and92.i.287, 4503599627370494
  %82 = load i64, i64* %arrayidx12.i, align 16, !tbaa !5
  %sub11.i.551 = sub i64 %add9.i.549, %82
  store i64 %sub11.i.551, i64* %arrayidx12.i.152, align 16, !tbaa !5
  %add14.i.554 = add nuw nsw i64 %add91.i.285, 4503599627370494
  %83 = load i64, i64* %arrayidx17.i, align 8, !tbaa !5
  %sub16.i.556 = sub i64 %add14.i.554, %83
  store i64 %sub16.i.556, i64* %arrayidx17.i.157, align 8, !tbaa !5
  %add19.i.559 = add nuw nsw i64 %and89.i.283, 4503599627370494
  %84 = load i64, i64* %arrayidx22.i.140, align 16, !tbaa !5
  %sub21.i.561 = sub i64 %add19.i.559, %84
  store i64 %sub21.i.561, i64* %arrayidx22.i.162, align 16, !tbaa !5
  %conv.i.461 = zext i64 %sub.i.314 to i128
  %mul.i.462 = mul nuw i128 %conv.i.461, %conv.i.461
  %mul6.i.463 = shl i64 %sub.i.314, 1
  %conv7.i.464 = zext i64 %mul6.i.463 to i128
  %conv8.i.465 = zext i64 %sub6.i.318 to i128
  %mul9.i.466 = mul nuw i128 %conv7.i.464, %conv8.i.465
  %conv11.i.467 = zext i64 %sub11.i.323 to i128
  %mul12.i.468 = mul nuw i128 %conv11.i.467, %conv7.i.464
  %conv14.i.469 = zext i64 %sub16.i.328 to i128
  %mul15.i.470 = mul nuw i128 %conv14.i.469, %conv7.i.464
  %conv17.i.471 = zext i64 %sub21.i.333 to i128
  %mul18.i.472 = mul nuw i128 %conv17.i.471, %conv7.i.464
  %mul20.i.473 = mul i64 %sub21.i.333, 19
  %conv21.i.474 = zext i64 %mul20.i.473 to i128
  %mul22.i.475 = mul nuw i128 %conv21.i.474, %conv17.i.471
  %mul25.i.476 = mul nuw i128 %conv8.i.465, %conv8.i.465
  %add26.i.477 = add i128 %mul12.i.468, %mul25.i.476
  %mul27.i.478 = shl i64 %sub6.i.318, 1
  %conv28.i.479 = zext i64 %mul27.i.478 to i128
  %mul30.i.480 = mul nuw i128 %conv28.i.479, %conv11.i.467
  %mul34.i.481 = mul nuw i128 %conv14.i.469, %conv28.i.479
  %mul38.i.482 = mul nuw i128 %conv21.i.474, %conv28.i.479
  %mul41.i.483 = mul i64 %sub16.i.328, 19
  %conv42.i.484 = zext i64 %mul41.i.483 to i128
  %mul43.i.485 = mul nuw i128 %conv42.i.484, %conv14.i.469
  %add44.i.486 = add i128 %mul43.i.485, %mul9.i.466
  %mul45.i.487 = shl i64 %sub16.i.328, 1
  %conv46.i.488 = zext i64 %mul45.i.487 to i128
  %mul48.i.489 = mul nuw i128 %conv21.i.474, %conv46.i.488
  %add49.i.490 = add i128 %add26.i.477, %mul48.i.489
  %mul52.i.491 = mul nuw i128 %conv11.i.467, %conv11.i.467
  %mul54.i.492 = shl i64 %sub11.i.323, 1
  %conv55.i.493 = zext i64 %mul54.i.492 to i128
  %mul57.i.494 = mul nuw i128 %conv42.i.484, %conv55.i.493
  %add39.i.495 = add i128 %mul57.i.494, %mul.i.462
  %add58.i.496 = add i128 %add39.i.495, %mul38.i.482
  %mul61.i.497 = mul nuw i128 %conv21.i.474, %conv55.i.493
  %add62.i.498 = add i128 %add44.i.486, %mul61.i.497
  %shr.i.499 = lshr i128 %add49.i.490, 51
  %conv64.i.500 = and i128 %shr.i.499, 18446744073709551615
  %add.i.501 = add i128 %mul15.i.470, %mul30.i.480
  %add31.i.502 = add i128 %add.i.501, %mul22.i.475
  %add65.i.503 = add i128 %add31.i.502, %conv64.i.500
  %conv66.i.504 = trunc i128 %add49.i.490 to i64
  %and.i.505 = and i64 %conv66.i.504, 2251799813685247
  %shr67.i.506 = lshr i128 %add58.i.496, 51
  %conv69.i.507 = and i128 %shr67.i.506, 18446744073709551615
  %add70.i.508 = add i128 %add62.i.498, %conv69.i.507
  %conv71.i.509 = trunc i128 %add58.i.496 to i64
  %and72.i.510 = and i64 %conv71.i.509, 2251799813685247
  %shr73.i.511 = lshr i128 %add65.i.503, 51
  %conv75.i.512 = and i128 %shr73.i.511, 18446744073709551615
  %add35.i.513 = add i128 %mul34.i.481, %mul52.i.491
  %add53.i.514 = add i128 %add35.i.513, %mul18.i.472
  %add76.i.515 = add i128 %add53.i.514, %conv75.i.512
  %conv77.i.516 = trunc i128 %add65.i.503 to i64
  %and78.i.517 = and i64 %conv77.i.516, 2251799813685247
  %shr79.i.518 = lshr i128 %add70.i.508, 51
  %conv80.i.519 = trunc i128 %shr79.i.518 to i64
  %add81.i.520 = add i64 %conv80.i.519, %and.i.505
  %conv82.i.521 = trunc i128 %add70.i.508 to i64
  %and83.i.522 = and i64 %conv82.i.521, 2251799813685247
  %shr84.i.523 = lshr i128 %add76.i.515, 51
  %conv85.i.524 = trunc i128 %shr84.i.523 to i64
  %mul86.i.525 = mul i64 %conv85.i.524, 19
  %add87.i.526 = add i64 %mul86.i.525, %and72.i.510
  %conv88.i.527 = trunc i128 %add76.i.515 to i64
  %and89.i.528 = and i64 %conv88.i.527, 2251799813685247
  %shr90.i.529 = lshr i64 %add81.i.520, 51
  %add91.i.530 = add nuw nsw i64 %shr90.i.529, %and78.i.517
  %fold.i.531 = add i64 %conv80.i.519, %conv66.i.504
  %and92.i.532 = and i64 %fold.i.531, 2251799813685247
  %shr93.i.533 = lshr i64 %add87.i.526, 51
  %add94.i.534 = add nuw nsw i64 %shr93.i.533, %and83.i.522
  %fold180.i.535 = add i64 %mul86.i.525, %conv71.i.509
  %and95.i.536 = and i64 %fold180.i.535, 2251799813685247
  store i64 %and95.i.536, i64* %arraydecay10, align 16, !tbaa !5
  store i64 %add94.i.534, i64* %arrayidx.1.i.109, align 8, !tbaa !5
  store i64 %and92.i.532, i64* %arrayidx.2.i.115, align 16, !tbaa !5
  store i64 %add91.i.530, i64* %arrayidx.3.i.121, align 8, !tbaa !5
  store i64 %and89.i.528, i64* %arrayidx.4.i.127, align 16, !tbaa !5
  %conv.i.436 = zext i64 %sub.i.542 to i128
  %mul.i.437 = mul nuw nsw i128 %conv.i.436, 121666
  %conv2.i = zext i64 %sub6.i.546 to i128
  %mul3.i = mul nuw nsw i128 %conv2.i, 121666
  %conv5.i = zext i64 %sub11.i.551 to i128
  %mul6.i.440 = mul nuw nsw i128 %conv5.i, 121666
  %conv8.i.442 = zext i64 %sub16.i.556 to i128
  %mul9.i.443 = mul nuw nsw i128 %conv8.i.442, 121666
  %conv11.i.445 = zext i64 %sub21.i.561 to i128
  %mul12.i.446 = mul nuw nsw i128 %conv11.i.445, 121666
  %shr.i.447 = lshr i128 %mul6.i.440, 51
  %add.i.448 = add nuw nsw i128 %mul9.i.443, %shr.i.447
  %conv15.i = trunc i128 %mul6.i.440 to i64
  %and.i.449 = and i64 %conv15.i, 2251799813685246
  %shr16.i.450 = lshr i128 %mul.i.437, 51
  %add19.i.451 = add nuw nsw i128 %mul3.i, %shr16.i.450
  %conv20.i = trunc i128 %mul.i.437 to i64
  %and21.i.452 = and i64 %conv20.i, 2251799813685246
  %shr22.i.453 = lshr i128 %add.i.448, 51
  %add25.i = add nuw nsw i128 %shr22.i.453, %mul12.i.446
  %conv26.i = trunc i128 %add.i.448 to i64
  %and27.i = and i64 %conv26.i, 2251799813685247
  %shr28.i.454 = lshr i128 %add19.i.451, 51
  %conv29.i.455 = trunc i128 %shr28.i.454 to i64
  %add30.i = add nuw nsw i64 %and.i.449, %conv29.i.455
  %conv31.i = trunc i128 %add19.i.451 to i64
  %and32.i = and i64 %conv31.i, 2251799813685247
  %shr33.i = lshr i128 %add25.i, 51
  %conv34.i = trunc i128 %shr33.i to i64
  %mul35.i = mul nuw nsw i64 %conv34.i, 19
  %add36.i = add nuw nsw i64 %mul35.i, %and21.i.452
  %conv37.i = trunc i128 %add25.i to i64
  %and38.i = and i64 %conv37.i, 2251799813685247
  %shr39.i = lshr i64 %add30.i, 51
  %add40.i = add nuw nsw i64 %and27.i, %shr39.i
  %and41.i = and i64 %add30.i, 2251799813685247
  %shr42.i = lshr i64 %add36.i, 51
  %add43.i = add nuw nsw i64 %shr42.i, %and32.i
  %and44.i = and i64 %add36.i, 2251799813685247
  store i64 %and44.i, i64* %arraydecay13, align 16, !tbaa !5
  store i64 %add43.i, i64* %arrayidx1.i.100, align 8, !tbaa !5
  store i64 %and41.i, i64* %arrayidx3.2.i.116, align 16, !tbaa !5
  store i64 %add40.i, i64* %arrayidx3.3.i.122, align 8, !tbaa !5
  store i64 %and38.i, i64* %arrayidx3.4.i.128, align 16, !tbaa !5
  %conv.i.356 = zext i64 %add.i.296 to i128
  %mul.i.357 = mul nuw i128 %conv.i.356, %conv.i.356
  %mul6.i.358 = shl i64 %add.i.296, 1
  %conv7.i.359 = zext i64 %mul6.i.358 to i128
  %conv8.i.360 = zext i64 %add5.i.299 to i128
  %mul9.i.361 = mul nuw i128 %conv8.i.360, %conv7.i.359
  %conv11.i.362 = zext i64 %add9.i.303 to i128
  %mul12.i.363 = mul nuw i128 %conv11.i.362, %conv7.i.359
  %conv14.i.364 = zext i64 %add13.i.307 to i128
  %mul15.i.365 = mul nuw i128 %conv14.i.364, %conv7.i.359
  %conv17.i.366 = zext i64 %add17.i.311 to i128
  %mul18.i.367 = mul nuw i128 %conv17.i.366, %conv7.i.359
  %mul20.i.368 = mul i64 %add17.i.311, 19
  %conv21.i.369 = zext i64 %mul20.i.368 to i128
  %mul22.i.370 = mul nuw i128 %conv21.i.369, %conv17.i.366
  %mul25.i.371 = mul nuw i128 %conv8.i.360, %conv8.i.360
  %add26.i.372 = add i128 %mul12.i.363, %mul25.i.371
  %mul27.i.373 = shl i64 %add5.i.299, 1
  %conv28.i.374 = zext i64 %mul27.i.373 to i128
  %mul30.i.375 = mul nuw i128 %conv11.i.362, %conv28.i.374
  %mul34.i.376 = mul nuw i128 %conv14.i.364, %conv28.i.374
  %mul38.i.377 = mul nuw i128 %conv21.i.369, %conv28.i.374
  %mul41.i.378 = mul i64 %add13.i.307, 19
  %conv42.i.379 = zext i64 %mul41.i.378 to i128
  %mul43.i.380 = mul nuw i128 %conv42.i.379, %conv14.i.364
  %add44.i.381 = add i128 %mul43.i.380, %mul9.i.361
  %mul45.i.382 = shl i64 %add13.i.307, 1
  %conv46.i.383 = zext i64 %mul45.i.382 to i128
  %mul48.i.384 = mul nuw i128 %conv21.i.369, %conv46.i.383
  %add49.i.385 = add i128 %add26.i.372, %mul48.i.384
  %mul52.i.386 = mul nuw i128 %conv11.i.362, %conv11.i.362
  %mul54.i.387 = shl i64 %add9.i.303, 1
  %conv55.i.388 = zext i64 %mul54.i.387 to i128
  %mul57.i.389 = mul nuw i128 %conv42.i.379, %conv55.i.388
  %add39.i.390 = add i128 %mul57.i.389, %mul.i.357
  %add58.i.391 = add i128 %add39.i.390, %mul38.i.377
  %mul61.i.392 = mul nuw i128 %conv21.i.369, %conv55.i.388
  %add62.i.393 = add i128 %add44.i.381, %mul61.i.392
  %shr.i.394 = lshr i128 %add49.i.385, 51
  %conv64.i.395 = and i128 %shr.i.394, 18446744073709551615
  %add.i.396 = add i128 %mul15.i.365, %mul30.i.375
  %add31.i.397 = add i128 %add.i.396, %mul22.i.370
  %add65.i.398 = add i128 %add31.i.397, %conv64.i.395
  %conv66.i.399 = trunc i128 %add49.i.385 to i64
  %shr67.i.401 = lshr i128 %add58.i.391, 51
  %conv69.i.402 = and i128 %shr67.i.401, 18446744073709551615
  %add70.i.403 = add i128 %add62.i.393, %conv69.i.402
  %conv71.i.404 = trunc i128 %add58.i.391 to i64
  %shr73.i.406 = lshr i128 %add65.i.398, 51
  %conv75.i.407 = and i128 %shr73.i.406, 18446744073709551615
  %add35.i.408 = add i128 %mul34.i.376, %mul52.i.386
  %add53.i.409 = add i128 %add35.i.408, %mul18.i.367
  %add76.i.410 = add i128 %add53.i.409, %conv75.i.407
  %shr79.i.413 = lshr i128 %add70.i.403, 51
  %conv80.i.414 = trunc i128 %shr79.i.413 to i64
  %shr84.i.418 = lshr i128 %add76.i.410, 51
  %conv85.i.419 = trunc i128 %shr84.i.418 to i64
  %mul86.i.420 = mul i64 %conv85.i.419, 19
  %85 = load i64, i64* %arraydecay23, align 16, !tbaa !5
  %add.i.335 = add i64 %and44.i, %85
  store i64 %add.i.335, i64* %arraydecay23, align 16, !tbaa !5
  %86 = load <2 x i64>, <2 x i64>* %46, align 8, !tbaa !5
  %87 = insertelement <2 x i64> undef, i64 %add43.i, i32 0
  %88 = insertelement <2 x i64> %87, i64 %and41.i, i32 1
  %89 = add <2 x i64> %88, %86
  store <2 x i64> %89, <2 x i64>* %47, align 8, !tbaa !5
  %90 = load <2 x i64>, <2 x i64>* %48, align 8, !tbaa !5
  %91 = insertelement <2 x i64> undef, i64 %add40.i, i32 0
  %92 = insertelement <2 x i64> %91, i64 %and38.i, i32 1
  %93 = add <2 x i64> %92, %90
  store <2 x i64> %93, <2 x i64>* %49, align 8, !tbaa !5
  call fastcc void @fe51_mul(i64* %arraydecay13, i64* %arraydecay, i64* %arraydecay10)
  call fastcc void @fe51_mul(i64* %arraydecay10, i64* %arraydecay26, i64* %arraydecay23)
  %cmp = icmp sgt i32 %pos.0615, 0
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  %dec = add nsw i32 %pos.0615, -1
  %fold180.i.430 = add i64 %mul86.i.420, %conv71.i.404
  %and95.i.431 = and i64 %fold180.i.430, 2251799813685247
  %and72.i.405 = and i64 %conv71.i.404, 2251799813685247
  %add87.i.421 = add i64 %mul86.i.420, %and72.i.405
  %shr93.i.428 = lshr i64 %add87.i.421, 51
  %conv82.i.416 = trunc i128 %add70.i.403 to i64
  %and83.i.417 = and i64 %conv82.i.416, 2251799813685247
  %add94.i.429 = add nuw nsw i64 %shr93.i.428, %and83.i.417
  %fold.i.426 = add i64 %conv80.i.414, %conv66.i.399
  %and92.i.427 = and i64 %fold.i.426, 2251799813685247
  %and.i.400 = and i64 %conv66.i.399, 2251799813685247
  %add81.i.415 = add i64 %conv80.i.414, %and.i.400
  %shr90.i.424 = lshr i64 %add81.i.415, 51
  %conv77.i.411 = trunc i128 %add65.i.398 to i64
  %and78.i.412 = and i64 %conv77.i.411, 2251799813685247
  %add91.i.425 = add nuw nsw i64 %shr90.i.424, %and78.i.412
  %conv88.i.422 = trunc i128 %add76.i.410 to i64
  %and89.i.423 = and i64 %conv88.i.422, 2251799813685247
  %.pre = load i64, i64* %arraydecay9, align 16, !tbaa !5
  %.pre617 = load i64, i64* %arrayidx1.i.92, align 8, !tbaa !5
  %.pre618 = load i64, i64* %arrayidx.2.i, align 16, !tbaa !5
  %.pre619 = load i64, i64* %arrayidx.3.i, align 8, !tbaa !5
  %.pre620 = load i64, i64* %arrayidx.4.i, align 16, !tbaa !5
  %.pre621 = load i64, i64* %arraydecay10, align 16, !tbaa !5
  %.pre622 = load i64, i64* %arraydecay13, align 16, !tbaa !5
  %.pre623 = load i64, i64* %arrayidx.1.i.109, align 8, !tbaa !5
  %.pre624 = load i64, i64* %arrayidx1.i.100, align 8, !tbaa !5
  %.pre625 = load i64, i64* %arrayidx.2.i.115, align 16, !tbaa !5
  %.pre626 = load i64, i64* %arrayidx3.2.i.116, align 16, !tbaa !5
  %.pre627 = load i64, i64* %arrayidx.3.i.121, align 8, !tbaa !5
  %.pre628 = load i64, i64* %arrayidx3.3.i.122, align 8, !tbaa !5
  %.pre629 = load i64, i64* %arrayidx.4.i.127, align 16, !tbaa !5
  %.pre630 = load i64, i64* %arrayidx3.4.i.128, align 16, !tbaa !5
  br label %for.body

for.end:                                          ; preds = %for.body
  %94 = bitcast [5 x i64]* %t0.i to i8*
  call void @llvm.lifetime.start(i64 40, i8* %94) #1
  %95 = bitcast [5 x i64]* %t1.i to i8*
  call void @llvm.lifetime.start(i64 40, i8* %95) #1
  %96 = bitcast [5 x i64]* %t2.i to i8*
  call void @llvm.lifetime.start(i64 40, i8* %96) #1
  %97 = bitcast [5 x i64]* %t3.i to i8*
  call void @llvm.lifetime.start(i64 40, i8* %97) #1
  %arraydecay.i = getelementptr inbounds [5 x i64], [5 x i64]* %t0.i, i64 0, i64 0
  %98 = load i64, i64* %arraydecay10, align 16, !tbaa !5
  %99 = load i64, i64* %arrayidx.1.i.109, align 8, !tbaa !5
  %100 = load i64, i64* %arrayidx.2.i.115, align 16, !tbaa !5
  %101 = load i64, i64* %arrayidx.3.i.121, align 8, !tbaa !5
  %102 = load i64, i64* %arrayidx.4.i.127, align 16, !tbaa !5
  %conv.i.i.95 = zext i64 %98 to i128
  %mul.i.i = mul nuw i128 %conv.i.i.95, %conv.i.i.95
  %mul6.i.i = shl i64 %98, 1
  %conv7.i.i = zext i64 %mul6.i.i to i128
  %conv8.i.i.96 = zext i64 %99 to i128
  %mul9.i.i = mul nuw i128 %conv7.i.i, %conv8.i.i.96
  %conv11.i.i = zext i64 %100 to i128
  %mul12.i.i = mul nuw i128 %conv11.i.i, %conv7.i.i
  %conv14.i.i = zext i64 %101 to i128
  %mul15.i.i = mul nuw i128 %conv14.i.i, %conv7.i.i
  %conv17.i.i = zext i64 %102 to i128
  %mul18.i.i = mul nuw i128 %conv17.i.i, %conv7.i.i
  %mul20.i.i = mul i64 %102, 19
  %conv21.i.i = zext i64 %mul20.i.i to i128
  %mul22.i.i = mul nuw i128 %conv21.i.i, %conv17.i.i
  %mul25.i.i = mul nuw i128 %conv8.i.i.96, %conv8.i.i.96
  %add26.i.i = add i128 %mul12.i.i, %mul25.i.i
  %mul27.i.i = shl i64 %99, 1
  %conv28.i.i = zext i64 %mul27.i.i to i128
  %mul30.i.i = mul nuw i128 %conv28.i.i, %conv11.i.i
  %mul34.i.i = mul nuw i128 %conv14.i.i, %conv28.i.i
  %mul38.i.i = mul nuw i128 %conv21.i.i, %conv28.i.i
  %mul41.i.i = mul i64 %101, 19
  %conv42.i.i = zext i64 %mul41.i.i to i128
  %mul43.i.i = mul nuw i128 %conv42.i.i, %conv14.i.i
  %add44.i.i = add i128 %mul43.i.i, %mul9.i.i
  %mul45.i.i = shl i64 %101, 1
  %conv46.i.i = zext i64 %mul45.i.i to i128
  %mul48.i.i = mul nuw i128 %conv21.i.i, %conv46.i.i
  %add49.i.i = add i128 %add26.i.i, %mul48.i.i
  %mul52.i.i = mul nuw i128 %conv11.i.i, %conv11.i.i
  %mul54.i.i = shl i64 %100, 1
  %conv55.i.i = zext i64 %mul54.i.i to i128
  %mul57.i.i = mul nuw i128 %conv42.i.i, %conv55.i.i
  %add39.i.i = add i128 %mul57.i.i, %mul.i.i
  %add58.i.i = add i128 %add39.i.i, %mul38.i.i
  %mul61.i.i = mul nuw i128 %conv21.i.i, %conv55.i.i
  %add62.i.i = add i128 %add44.i.i, %mul61.i.i
  %shr.i.i = lshr i128 %add49.i.i, 51
  %conv64.i.i = and i128 %shr.i.i, 18446744073709551615
  %add.i.i = add i128 %mul15.i.i, %mul30.i.i
  %add31.i.i = add i128 %add.i.i, %mul22.i.i
  %add65.i.i = add i128 %add31.i.i, %conv64.i.i
  %conv66.i.i = trunc i128 %add49.i.i to i64
  %and.i.i = and i64 %conv66.i.i, 2251799813685247
  %shr67.i.i = lshr i128 %add58.i.i, 51
  %conv69.i.i = and i128 %shr67.i.i, 18446744073709551615
  %add70.i.i = add i128 %add62.i.i, %conv69.i.i
  %conv71.i.i = trunc i128 %add58.i.i to i64
  %and72.i.i = and i64 %conv71.i.i, 2251799813685247
  %shr73.i.i = lshr i128 %add65.i.i, 51
  %conv75.i.i = and i128 %shr73.i.i, 18446744073709551615
  %add35.i.i = add i128 %mul34.i.i, %mul52.i.i
  %add53.i.i = add i128 %add35.i.i, %mul18.i.i
  %add76.i.i = add i128 %add53.i.i, %conv75.i.i
  %conv77.i.i = trunc i128 %add65.i.i to i64
  %and78.i.i = and i64 %conv77.i.i, 2251799813685247
  %shr79.i.i = lshr i128 %add70.i.i, 51
  %conv80.i.i = trunc i128 %shr79.i.i to i64
  %add81.i.i = add i64 %conv80.i.i, %and.i.i
  %conv82.i.i = trunc i128 %add70.i.i to i64
  %and83.i.i = and i64 %conv82.i.i, 2251799813685247
  %shr84.i.i = lshr i128 %add76.i.i, 51
  %conv85.i.i = trunc i128 %shr84.i.i to i64
  %mul86.i.i = mul i64 %conv85.i.i, 19
  %add87.i.i = add i64 %mul86.i.i, %and72.i.i
  %conv88.i.i = trunc i128 %add76.i.i to i64
  %and89.i.i = and i64 %conv88.i.i, 2251799813685247
  %shr90.i.i = lshr i64 %add81.i.i, 51
  %add91.i.i = add nuw nsw i64 %shr90.i.i, %and78.i.i
  %fold.i.i = add i64 %conv80.i.i, %conv66.i.i
  %and92.i.i = and i64 %fold.i.i, 2251799813685247
  %shr93.i.i = lshr i64 %add87.i.i, 51
  %add94.i.i = add nuw nsw i64 %shr93.i.i, %and83.i.i
  %fold180.i.i = add i64 %mul86.i.i, %conv71.i.i
  %and95.i.i = and i64 %fold180.i.i, 2251799813685247
  store i64 %and95.i.i, i64* %arraydecay.i, align 16, !tbaa !5
  %arrayidx97.i.i = getelementptr inbounds [5 x i64], [5 x i64]* %t0.i, i64 0, i64 1
  store i64 %add94.i.i, i64* %arrayidx97.i.i, align 8, !tbaa !5
  %arrayidx98.i.i = getelementptr inbounds [5 x i64], [5 x i64]* %t0.i, i64 0, i64 2
  store i64 %and92.i.i, i64* %arrayidx98.i.i, align 16, !tbaa !5
  %arrayidx99.i.i = getelementptr inbounds [5 x i64], [5 x i64]* %t0.i, i64 0, i64 3
  store i64 %add91.i.i, i64* %arrayidx99.i.i, align 8, !tbaa !5
  %arrayidx100.i.i = getelementptr inbounds [5 x i64], [5 x i64]* %t0.i, i64 0, i64 4
  store i64 %and89.i.i, i64* %arrayidx100.i.i, align 16, !tbaa !5
  %arraydecay1.i = getelementptr inbounds [5 x i64], [5 x i64]* %t1.i, i64 0, i64 0
  %conv.i.127.i = zext i64 %and95.i.i to i128
  %mul.i.128.i = mul nuw nsw i128 %conv.i.127.i, %conv.i.127.i
  %mul6.i.129.i = shl nuw nsw i64 %and95.i.i, 1
  %conv7.i.130.i = zext i64 %mul6.i.129.i to i128
  %conv8.i.131.i = zext i64 %add94.i.i to i128
  %mul9.i.132.i = mul nuw nsw i128 %conv7.i.130.i, %conv8.i.131.i
  %conv11.i.133.i = zext i64 %and92.i.i to i128
  %mul12.i.134.i = mul nuw nsw i128 %conv7.i.130.i, %conv11.i.133.i
  %conv14.i.135.i = zext i64 %add91.i.i to i128
  %mul15.i.136.i = mul nuw nsw i128 %conv7.i.130.i, %conv14.i.135.i
  %conv17.i.137.i = zext i64 %and89.i.i to i128
  %mul18.i.138.i = mul nuw nsw i128 %conv7.i.130.i, %conv17.i.137.i
  %mul20.i.139.i = mul nuw nsw i64 %and89.i.i, 19
  %conv21.i.140.i = zext i64 %mul20.i.139.i to i128
  %mul22.i.141.i = mul nuw nsw i128 %conv21.i.140.i, %conv17.i.137.i
  %mul25.i.142.i = mul nuw nsw i128 %conv8.i.131.i, %conv8.i.131.i
  %mul27.i.144.i = shl nuw nsw i64 %add94.i.i, 1
  %conv28.i.145.i = zext i64 %mul27.i.144.i to i128
  %mul30.i.146.i = mul nuw nsw i128 %conv28.i.145.i, %conv11.i.133.i
  %mul34.i.147.i = mul nuw nsw i128 %conv28.i.145.i, %conv14.i.135.i
  %mul38.i.148.i = mul nuw nsw i128 %conv28.i.145.i, %conv21.i.140.i
  %mul41.i.149.i = mul nuw nsw i64 %add91.i.i, 19
  %conv42.i.150.i = zext i64 %mul41.i.149.i to i128
  %mul43.i.151.i = mul nuw nsw i128 %conv42.i.150.i, %conv14.i.135.i
  %mul45.i.153.i = shl nuw nsw i64 %add91.i.i, 1
  %conv46.i.154.i = zext i64 %mul45.i.153.i to i128
  %mul48.i.155.i = mul nuw nsw i128 %conv21.i.140.i, %conv46.i.154.i
  %add26.i.143.i = add nuw nsw i128 %mul25.i.142.i, %mul48.i.155.i
  %add49.i.156.i = add nuw nsw i128 %add26.i.143.i, %mul12.i.134.i
  %mul52.i.157.i = mul nuw nsw i128 %conv11.i.133.i, %conv11.i.133.i
  %mul54.i.158.i = shl nuw nsw i64 %and92.i.i, 1
  %conv55.i.159.i = zext i64 %mul54.i.158.i to i128
  %mul57.i.160.i = mul nuw nsw i128 %conv42.i.150.i, %conv55.i.159.i
  %add39.i.161.i = add nuw nsw i128 %mul.i.128.i, %mul57.i.160.i
  %add58.i.162.i = add nuw nsw i128 %add39.i.161.i, %mul38.i.148.i
  %mul61.i.163.i = mul nuw nsw i128 %conv21.i.140.i, %conv55.i.159.i
  %shr.i.165.i = lshr i128 %add49.i.156.i, 51
  %conv64.i.166.i = and i128 %shr.i.165.i, 18446744073709551615
  %add.i.167.i = add nuw nsw i128 %mul15.i.136.i, %mul22.i.141.i
  %add31.i.168.i = add nuw nsw i128 %add.i.167.i, %mul30.i.146.i
  %add65.i.169.i = add nuw nsw i128 %add31.i.168.i, %conv64.i.166.i
  %conv66.i.170.i = trunc i128 %add49.i.156.i to i64
  %and.i.171.i = and i64 %conv66.i.170.i, 2251799813685247
  %shr67.i.172.i = lshr i128 %add58.i.162.i, 51
  %conv69.i.173.i = and i128 %shr67.i.172.i, 18446744073709551615
  %add44.i.152.i = add nuw nsw i128 %mul61.i.163.i, %mul43.i.151.i
  %add62.i.164.i = add nuw nsw i128 %add44.i.152.i, %mul9.i.132.i
  %add70.i.174.i = add nuw nsw i128 %add62.i.164.i, %conv69.i.173.i
  %conv71.i.175.i = trunc i128 %add58.i.162.i to i64
  %and72.i.176.i = and i64 %conv71.i.175.i, 2251799813685247
  %shr73.i.177.i = lshr i128 %add65.i.169.i, 51
  %conv75.i.178.i = and i128 %shr73.i.177.i, 18446744073709551615
  %add35.i.179.i = add nuw nsw i128 %mul18.i.138.i, %mul52.i.157.i
  %add53.i.180.i = add nuw nsw i128 %add35.i.179.i, %mul34.i.147.i
  %add76.i.181.i = add nuw nsw i128 %add53.i.180.i, %conv75.i.178.i
  %conv77.i.182.i = trunc i128 %add65.i.169.i to i64
  %and78.i.183.i = and i64 %conv77.i.182.i, 2251799813685247
  %shr79.i.184.i = lshr i128 %add70.i.174.i, 51
  %conv80.i.185.i = trunc i128 %shr79.i.184.i to i64
  %add81.i.186.i = add i64 %conv80.i.185.i, %and.i.171.i
  %conv82.i.187.i = trunc i128 %add70.i.174.i to i64
  %and83.i.188.i = and i64 %conv82.i.187.i, 2251799813685247
  %shr84.i.189.i = lshr i128 %add76.i.181.i, 51
  %conv85.i.190.i = trunc i128 %shr84.i.189.i to i64
  %mul86.i.191.i = mul i64 %conv85.i.190.i, 19
  %add87.i.192.i = add i64 %mul86.i.191.i, %and72.i.176.i
  %conv88.i.193.i = trunc i128 %add76.i.181.i to i64
  %and89.i.194.i = and i64 %conv88.i.193.i, 2251799813685247
  %shr90.i.195.i = lshr i64 %add81.i.186.i, 51
  %add91.i.196.i = add nuw nsw i64 %shr90.i.195.i, %and78.i.183.i
  %fold.i.197.i = add i64 %conv80.i.185.i, %conv66.i.170.i
  %and92.i.198.i = and i64 %fold.i.197.i, 2251799813685247
  %shr93.i.199.i = lshr i64 %add87.i.192.i, 51
  %add94.i.200.i = add nuw nsw i64 %shr93.i.199.i, %and83.i.188.i
  %fold180.i.201.i = add i64 %mul86.i.191.i, %conv71.i.175.i
  %and95.i.202.i = and i64 %fold180.i.201.i, 2251799813685247
  %arrayidx97.i.203.i = getelementptr inbounds [5 x i64], [5 x i64]* %t1.i, i64 0, i64 1
  %arrayidx98.i.204.i = getelementptr inbounds [5 x i64], [5 x i64]* %t1.i, i64 0, i64 2
  %arrayidx99.i.205.i = getelementptr inbounds [5 x i64], [5 x i64]* %t1.i, i64 0, i64 3
  %arrayidx100.i.206.i = getelementptr inbounds [5 x i64], [5 x i64]* %t1.i, i64 0, i64 4
  %conv.i.295.i = zext i64 %and95.i.202.i to i128
  %mul.i.296.i = mul nuw nsw i128 %conv.i.295.i, %conv.i.295.i
  %mul6.i.297.i = shl nuw nsw i64 %and95.i.202.i, 1
  %conv7.i.298.i = zext i64 %mul6.i.297.i to i128
  %conv8.i.299.i = zext i64 %add94.i.200.i to i128
  %mul9.i.300.i = mul nuw nsw i128 %conv7.i.298.i, %conv8.i.299.i
  %conv11.i.301.i = zext i64 %and92.i.198.i to i128
  %mul12.i.302.i = mul nuw nsw i128 %conv7.i.298.i, %conv11.i.301.i
  %conv14.i.303.i = zext i64 %add91.i.196.i to i128
  %mul15.i.304.i = mul nuw nsw i128 %conv7.i.298.i, %conv14.i.303.i
  %conv17.i.305.i = zext i64 %and89.i.194.i to i128
  %mul18.i.306.i = mul nuw nsw i128 %conv7.i.298.i, %conv17.i.305.i
  %mul20.i.307.i = mul nuw nsw i64 %and89.i.194.i, 19
  %conv21.i.308.i = zext i64 %mul20.i.307.i to i128
  %mul22.i.309.i = mul nuw nsw i128 %conv21.i.308.i, %conv17.i.305.i
  %mul25.i.310.i = mul nuw nsw i128 %conv8.i.299.i, %conv8.i.299.i
  %mul27.i.312.i = shl nuw nsw i64 %add94.i.200.i, 1
  %conv28.i.313.i = zext i64 %mul27.i.312.i to i128
  %mul30.i.314.i = mul nuw nsw i128 %conv28.i.313.i, %conv11.i.301.i
  %mul34.i.315.i = mul nuw nsw i128 %conv28.i.313.i, %conv14.i.303.i
  %mul38.i.316.i = mul nuw nsw i128 %conv28.i.313.i, %conv21.i.308.i
  %mul41.i.317.i = mul nuw nsw i64 %add91.i.196.i, 19
  %conv42.i.318.i = zext i64 %mul41.i.317.i to i128
  %mul43.i.319.i = mul nuw nsw i128 %conv42.i.318.i, %conv14.i.303.i
  %mul45.i.321.i = shl nuw nsw i64 %add91.i.196.i, 1
  %conv46.i.322.i = zext i64 %mul45.i.321.i to i128
  %mul48.i.323.i = mul nuw nsw i128 %conv21.i.308.i, %conv46.i.322.i
  %add26.i.311.i = add nuw nsw i128 %mul25.i.310.i, %mul48.i.323.i
  %add49.i.324.i = add nuw nsw i128 %add26.i.311.i, %mul12.i.302.i
  %mul52.i.325.i = mul nuw nsw i128 %conv11.i.301.i, %conv11.i.301.i
  %mul54.i.326.i = shl nuw nsw i64 %and92.i.198.i, 1
  %conv55.i.327.i = zext i64 %mul54.i.326.i to i128
  %mul57.i.328.i = mul nuw nsw i128 %conv42.i.318.i, %conv55.i.327.i
  %add39.i.329.i = add nuw nsw i128 %mul.i.296.i, %mul57.i.328.i
  %add58.i.330.i = add nuw nsw i128 %add39.i.329.i, %mul38.i.316.i
  %mul61.i.331.i = mul nuw nsw i128 %conv21.i.308.i, %conv55.i.327.i
  %shr.i.333.i = lshr i128 %add49.i.324.i, 51
  %conv64.i.334.i = and i128 %shr.i.333.i, 18446744073709551615
  %add.i.335.i = add nuw nsw i128 %mul15.i.304.i, %mul22.i.309.i
  %add31.i.336.i = add nuw nsw i128 %add.i.335.i, %mul30.i.314.i
  %add65.i.337.i = add nuw nsw i128 %add31.i.336.i, %conv64.i.334.i
  %conv66.i.338.i = trunc i128 %add49.i.324.i to i64
  %and.i.339.i = and i64 %conv66.i.338.i, 2251799813685247
  %shr67.i.340.i = lshr i128 %add58.i.330.i, 51
  %conv69.i.341.i = and i128 %shr67.i.340.i, 18446744073709551615
  %add44.i.320.i = add nuw nsw i128 %mul61.i.331.i, %mul43.i.319.i
  %add62.i.332.i = add nuw nsw i128 %add44.i.320.i, %mul9.i.300.i
  %add70.i.342.i = add nuw nsw i128 %add62.i.332.i, %conv69.i.341.i
  %conv71.i.343.i = trunc i128 %add58.i.330.i to i64
  %and72.i.344.i = and i64 %conv71.i.343.i, 2251799813685247
  %shr73.i.345.i = lshr i128 %add65.i.337.i, 51
  %conv75.i.346.i = and i128 %shr73.i.345.i, 18446744073709551615
  %add35.i.347.i = add nuw nsw i128 %mul18.i.306.i, %mul52.i.325.i
  %add53.i.348.i = add nuw nsw i128 %add35.i.347.i, %mul34.i.315.i
  %add76.i.349.i = add nuw nsw i128 %add53.i.348.i, %conv75.i.346.i
  %conv77.i.350.i = trunc i128 %add65.i.337.i to i64
  %and78.i.351.i = and i64 %conv77.i.350.i, 2251799813685247
  %shr79.i.352.i = lshr i128 %add70.i.342.i, 51
  %conv80.i.353.i = trunc i128 %shr79.i.352.i to i64
  %add81.i.354.i = add i64 %conv80.i.353.i, %and.i.339.i
  %conv82.i.355.i = trunc i128 %add70.i.342.i to i64
  %and83.i.356.i = and i64 %conv82.i.355.i, 2251799813685247
  %shr84.i.357.i = lshr i128 %add76.i.349.i, 51
  %conv85.i.358.i = trunc i128 %shr84.i.357.i to i64
  %mul86.i.359.i = mul i64 %conv85.i.358.i, 19
  %add87.i.360.i = add i64 %mul86.i.359.i, %and72.i.344.i
  %conv88.i.361.i = trunc i128 %add76.i.349.i to i64
  %and89.i.362.i = and i64 %conv88.i.361.i, 2251799813685247
  %shr90.i.363.i = lshr i64 %add81.i.354.i, 51
  %add91.i.364.i = add nuw nsw i64 %shr90.i.363.i, %and78.i.351.i
  %fold.i.365.i = add i64 %conv80.i.353.i, %conv66.i.338.i
  %and92.i.366.i = and i64 %fold.i.365.i, 2251799813685247
  %shr93.i.367.i = lshr i64 %add87.i.360.i, 51
  %add94.i.368.i = add nuw nsw i64 %shr93.i.367.i, %and83.i.356.i
  %fold180.i.369.i = add i64 %mul86.i.359.i, %conv71.i.343.i
  %and95.i.370.i = and i64 %fold180.i.369.i, 2251799813685247
  store i64 %and95.i.370.i, i64* %arraydecay1.i, align 16, !tbaa !5
  store i64 %add94.i.368.i, i64* %arrayidx97.i.203.i, align 8, !tbaa !5
  store i64 %and92.i.366.i, i64* %arrayidx98.i.204.i, align 16, !tbaa !5
  store i64 %add91.i.364.i, i64* %arrayidx99.i.205.i, align 8, !tbaa !5
  store i64 %and89.i.362.i, i64* %arrayidx100.i.206.i, align 16, !tbaa !5
  call fastcc void @fe51_mul(i64* %arraydecay1.i, i64* %arraydecay10, i64* %arraydecay1.i) #1
  call fastcc void @fe51_mul(i64* %arraydecay.i, i64* %arraydecay.i, i64* %arraydecay1.i) #1
  %arraydecay10.i = getelementptr inbounds [5 x i64], [5 x i64]* %t2.i, i64 0, i64 0
  %103 = load i64, i64* %arraydecay.i, align 16, !tbaa !5
  %104 = load i64, i64* %arrayidx97.i.i, align 8, !tbaa !5
  %105 = load i64, i64* %arrayidx98.i.i, align 16, !tbaa !5
  %106 = load i64, i64* %arrayidx99.i.i, align 8, !tbaa !5
  %107 = load i64, i64* %arrayidx100.i.i, align 16, !tbaa !5
  %conv.i.463.i = zext i64 %103 to i128
  %mul.i.464.i = mul nuw i128 %conv.i.463.i, %conv.i.463.i
  %mul6.i.465.i = shl i64 %103, 1
  %conv7.i.466.i = zext i64 %mul6.i.465.i to i128
  %conv8.i.467.i = zext i64 %104 to i128
  %mul9.i.468.i = mul nuw i128 %conv7.i.466.i, %conv8.i.467.i
  %conv11.i.469.i = zext i64 %105 to i128
  %mul12.i.470.i = mul nuw i128 %conv11.i.469.i, %conv7.i.466.i
  %conv14.i.471.i = zext i64 %106 to i128
  %mul15.i.472.i = mul nuw i128 %conv14.i.471.i, %conv7.i.466.i
  %conv17.i.473.i = zext i64 %107 to i128
  %mul18.i.474.i = mul nuw i128 %conv17.i.473.i, %conv7.i.466.i
  %mul20.i.475.i = mul i64 %107, 19
  %conv21.i.476.i = zext i64 %mul20.i.475.i to i128
  %mul22.i.477.i = mul nuw i128 %conv21.i.476.i, %conv17.i.473.i
  %mul25.i.478.i = mul nuw i128 %conv8.i.467.i, %conv8.i.467.i
  %add26.i.479.i = add i128 %mul12.i.470.i, %mul25.i.478.i
  %mul27.i.480.i = shl i64 %104, 1
  %conv28.i.481.i = zext i64 %mul27.i.480.i to i128
  %mul30.i.482.i = mul nuw i128 %conv28.i.481.i, %conv11.i.469.i
  %mul34.i.483.i = mul nuw i128 %conv14.i.471.i, %conv28.i.481.i
  %mul38.i.484.i = mul nuw i128 %conv21.i.476.i, %conv28.i.481.i
  %mul41.i.485.i = mul i64 %106, 19
  %conv42.i.486.i = zext i64 %mul41.i.485.i to i128
  %mul43.i.487.i = mul nuw i128 %conv42.i.486.i, %conv14.i.471.i
  %add44.i.488.i = add i128 %mul43.i.487.i, %mul9.i.468.i
  %mul45.i.489.i = shl i64 %106, 1
  %conv46.i.490.i = zext i64 %mul45.i.489.i to i128
  %mul48.i.491.i = mul nuw i128 %conv21.i.476.i, %conv46.i.490.i
  %add49.i.492.i = add i128 %add26.i.479.i, %mul48.i.491.i
  %mul52.i.493.i = mul nuw i128 %conv11.i.469.i, %conv11.i.469.i
  %mul54.i.494.i = shl i64 %105, 1
  %conv55.i.495.i = zext i64 %mul54.i.494.i to i128
  %mul57.i.496.i = mul nuw i128 %conv42.i.486.i, %conv55.i.495.i
  %add39.i.497.i = add i128 %mul57.i.496.i, %mul.i.464.i
  %add58.i.498.i = add i128 %add39.i.497.i, %mul38.i.484.i
  %mul61.i.499.i = mul nuw i128 %conv21.i.476.i, %conv55.i.495.i
  %add62.i.500.i = add i128 %add44.i.488.i, %mul61.i.499.i
  %shr.i.501.i = lshr i128 %add49.i.492.i, 51
  %conv64.i.502.i = and i128 %shr.i.501.i, 18446744073709551615
  %add.i.503.i = add i128 %mul15.i.472.i, %mul30.i.482.i
  %add31.i.504.i = add i128 %add.i.503.i, %mul22.i.477.i
  %add65.i.505.i = add i128 %add31.i.504.i, %conv64.i.502.i
  %conv66.i.506.i = trunc i128 %add49.i.492.i to i64
  %and.i.507.i = and i64 %conv66.i.506.i, 2251799813685247
  %shr67.i.508.i = lshr i128 %add58.i.498.i, 51
  %conv69.i.509.i = and i128 %shr67.i.508.i, 18446744073709551615
  %add70.i.510.i = add i128 %add62.i.500.i, %conv69.i.509.i
  %conv71.i.511.i = trunc i128 %add58.i.498.i to i64
  %and72.i.512.i = and i64 %conv71.i.511.i, 2251799813685247
  %shr73.i.513.i = lshr i128 %add65.i.505.i, 51
  %conv75.i.514.i = and i128 %shr73.i.513.i, 18446744073709551615
  %add35.i.515.i = add i128 %mul34.i.483.i, %mul52.i.493.i
  %add53.i.516.i = add i128 %add35.i.515.i, %mul18.i.474.i
  %add76.i.517.i = add i128 %add53.i.516.i, %conv75.i.514.i
  %conv77.i.518.i = trunc i128 %add65.i.505.i to i64
  %and78.i.519.i = and i64 %conv77.i.518.i, 2251799813685247
  %shr79.i.520.i = lshr i128 %add70.i.510.i, 51
  %conv80.i.521.i = trunc i128 %shr79.i.520.i to i64
  %add81.i.522.i = add i64 %conv80.i.521.i, %and.i.507.i
  %conv82.i.523.i = trunc i128 %add70.i.510.i to i64
  %and83.i.524.i = and i64 %conv82.i.523.i, 2251799813685247
  %shr84.i.525.i = lshr i128 %add76.i.517.i, 51
  %conv85.i.526.i = trunc i128 %shr84.i.525.i to i64
  %mul86.i.527.i = mul i64 %conv85.i.526.i, 19
  %add87.i.528.i = add i64 %mul86.i.527.i, %and72.i.512.i
  %conv88.i.529.i = trunc i128 %add76.i.517.i to i64
  %and89.i.530.i = and i64 %conv88.i.529.i, 2251799813685247
  %shr90.i.531.i = lshr i64 %add81.i.522.i, 51
  %add91.i.532.i = add nuw nsw i64 %shr90.i.531.i, %and78.i.519.i
  %fold.i.533.i = add i64 %conv80.i.521.i, %conv66.i.506.i
  %and92.i.534.i = and i64 %fold.i.533.i, 2251799813685247
  %shr93.i.535.i = lshr i64 %add87.i.528.i, 51
  %add94.i.536.i = add nuw nsw i64 %shr93.i.535.i, %and83.i.524.i
  %fold180.i.537.i = add i64 %mul86.i.527.i, %conv71.i.511.i
  %and95.i.538.i = and i64 %fold180.i.537.i, 2251799813685247
  store i64 %and95.i.538.i, i64* %arraydecay10.i, align 16, !tbaa !5
  %arrayidx97.i.539.i = getelementptr inbounds [5 x i64], [5 x i64]* %t2.i, i64 0, i64 1
  store i64 %add94.i.536.i, i64* %arrayidx97.i.539.i, align 8, !tbaa !5
  %arrayidx98.i.540.i = getelementptr inbounds [5 x i64], [5 x i64]* %t2.i, i64 0, i64 2
  store i64 %and92.i.534.i, i64* %arrayidx98.i.540.i, align 16, !tbaa !5
  %arrayidx99.i.541.i = getelementptr inbounds [5 x i64], [5 x i64]* %t2.i, i64 0, i64 3
  store i64 %add91.i.532.i, i64* %arrayidx99.i.541.i, align 8, !tbaa !5
  %arrayidx100.i.542.i = getelementptr inbounds [5 x i64], [5 x i64]* %t2.i, i64 0, i64 4
  store i64 %and89.i.530.i, i64* %arrayidx100.i.542.i, align 16, !tbaa !5
  call fastcc void @fe51_mul(i64* %arraydecay1.i, i64* %arraydecay1.i, i64* %arraydecay10.i) #1
  %108 = load i64, i64* %arraydecay1.i, align 16, !tbaa !5
  %109 = load i64, i64* %arrayidx97.i.203.i, align 8, !tbaa !5
  %110 = load i64, i64* %arrayidx98.i.204.i, align 16, !tbaa !5
  %111 = load i64, i64* %arrayidx99.i.205.i, align 8, !tbaa !5
  %112 = load i64, i64* %arrayidx100.i.206.i, align 16, !tbaa !5
  %conv.i.715.i = zext i64 %108 to i128
  %mul.i.716.i = mul nuw i128 %conv.i.715.i, %conv.i.715.i
  %mul6.i.717.i = shl i64 %108, 1
  %conv7.i.718.i = zext i64 %mul6.i.717.i to i128
  %conv8.i.719.i = zext i64 %109 to i128
  %mul9.i.720.i = mul nuw i128 %conv7.i.718.i, %conv8.i.719.i
  %conv11.i.721.i = zext i64 %110 to i128
  %mul12.i.722.i = mul nuw i128 %conv11.i.721.i, %conv7.i.718.i
  %conv14.i.723.i = zext i64 %111 to i128
  %mul15.i.724.i = mul nuw i128 %conv14.i.723.i, %conv7.i.718.i
  %conv17.i.725.i = zext i64 %112 to i128
  %mul18.i.726.i = mul nuw i128 %conv17.i.725.i, %conv7.i.718.i
  %mul20.i.727.i = mul i64 %112, 19
  %conv21.i.728.i = zext i64 %mul20.i.727.i to i128
  %mul22.i.729.i = mul nuw i128 %conv21.i.728.i, %conv17.i.725.i
  %mul25.i.730.i = mul nuw i128 %conv8.i.719.i, %conv8.i.719.i
  %add26.i.731.i = add i128 %mul12.i.722.i, %mul25.i.730.i
  %mul27.i.732.i = shl i64 %109, 1
  %conv28.i.733.i = zext i64 %mul27.i.732.i to i128
  %mul30.i.734.i = mul nuw i128 %conv28.i.733.i, %conv11.i.721.i
  %mul34.i.735.i = mul nuw i128 %conv14.i.723.i, %conv28.i.733.i
  %mul38.i.736.i = mul nuw i128 %conv21.i.728.i, %conv28.i.733.i
  %mul41.i.737.i = mul i64 %111, 19
  %conv42.i.738.i = zext i64 %mul41.i.737.i to i128
  %mul43.i.739.i = mul nuw i128 %conv42.i.738.i, %conv14.i.723.i
  %add44.i.740.i = add i128 %mul43.i.739.i, %mul9.i.720.i
  %mul45.i.741.i = shl i64 %111, 1
  %conv46.i.742.i = zext i64 %mul45.i.741.i to i128
  %mul48.i.743.i = mul nuw i128 %conv21.i.728.i, %conv46.i.742.i
  %add49.i.744.i = add i128 %add26.i.731.i, %mul48.i.743.i
  %mul52.i.745.i = mul nuw i128 %conv11.i.721.i, %conv11.i.721.i
  %mul54.i.746.i = shl i64 %110, 1
  %conv55.i.747.i = zext i64 %mul54.i.746.i to i128
  %mul57.i.748.i = mul nuw i128 %conv42.i.738.i, %conv55.i.747.i
  %add39.i.749.i = add i128 %mul57.i.748.i, %mul.i.716.i
  %add58.i.750.i = add i128 %add39.i.749.i, %mul38.i.736.i
  %mul61.i.751.i = mul nuw i128 %conv21.i.728.i, %conv55.i.747.i
  %add62.i.752.i = add i128 %add44.i.740.i, %mul61.i.751.i
  %shr.i.753.i = lshr i128 %add49.i.744.i, 51
  %conv64.i.754.i = and i128 %shr.i.753.i, 18446744073709551615
  %add.i.755.i = add i128 %mul15.i.724.i, %mul30.i.734.i
  %add31.i.756.i = add i128 %add.i.755.i, %mul22.i.729.i
  %add65.i.757.i = add i128 %add31.i.756.i, %conv64.i.754.i
  %conv66.i.758.i = trunc i128 %add49.i.744.i to i64
  %and.i.759.i = and i64 %conv66.i.758.i, 2251799813685247
  %shr67.i.760.i = lshr i128 %add58.i.750.i, 51
  %conv69.i.761.i = and i128 %shr67.i.760.i, 18446744073709551615
  %add70.i.762.i = add i128 %add62.i.752.i, %conv69.i.761.i
  %conv71.i.763.i = trunc i128 %add58.i.750.i to i64
  %and72.i.764.i = and i64 %conv71.i.763.i, 2251799813685247
  %shr73.i.765.i = lshr i128 %add65.i.757.i, 51
  %conv75.i.766.i = and i128 %shr73.i.765.i, 18446744073709551615
  %add35.i.767.i = add i128 %mul34.i.735.i, %mul52.i.745.i
  %add53.i.768.i = add i128 %add35.i.767.i, %mul18.i.726.i
  %add76.i.769.i = add i128 %add53.i.768.i, %conv75.i.766.i
  %conv77.i.770.i = trunc i128 %add65.i.757.i to i64
  %and78.i.771.i = and i64 %conv77.i.770.i, 2251799813685247
  %shr79.i.772.i = lshr i128 %add70.i.762.i, 51
  %conv80.i.773.i = trunc i128 %shr79.i.772.i to i64
  %add81.i.774.i = add i64 %conv80.i.773.i, %and.i.759.i
  %conv82.i.775.i = trunc i128 %add70.i.762.i to i64
  %and83.i.776.i = and i64 %conv82.i.775.i, 2251799813685247
  %shr84.i.777.i = lshr i128 %add76.i.769.i, 51
  %conv85.i.778.i = trunc i128 %shr84.i.777.i to i64
  %mul86.i.779.i = mul i64 %conv85.i.778.i, 19
  %add87.i.780.i = add i64 %mul86.i.779.i, %and72.i.764.i
  %conv88.i.781.i = trunc i128 %add76.i.769.i to i64
  %and89.i.782.i = and i64 %conv88.i.781.i, 2251799813685247
  %shr90.i.783.i = lshr i64 %add81.i.774.i, 51
  %add91.i.784.i = add nuw nsw i64 %shr90.i.783.i, %and78.i.771.i
  %fold.i.785.i = add i64 %conv80.i.773.i, %conv66.i.758.i
  %and92.i.786.i = and i64 %fold.i.785.i, 2251799813685247
  %shr93.i.787.i = lshr i64 %add87.i.780.i, 51
  %add94.i.788.i = add nuw nsw i64 %shr93.i.787.i, %and83.i.776.i
  %fold180.i.789.i = add i64 %mul86.i.779.i, %conv71.i.763.i
  %and95.i.790.i = and i64 %fold180.i.789.i, 2251799813685247
  store i64 %and95.i.790.i, i64* %arraydecay10.i, align 16, !tbaa !5
  store i64 %add94.i.788.i, i64* %arrayidx97.i.539.i, align 8, !tbaa !5
  store i64 %and92.i.786.i, i64* %arrayidx98.i.540.i, align 16, !tbaa !5
  store i64 %add91.i.784.i, i64* %arrayidx99.i.541.i, align 8, !tbaa !5
  store i64 %and89.i.782.i, i64* %arrayidx100.i.542.i, align 16, !tbaa !5
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.end
  %113 = phi i64 [ %and89.i.782.i, %for.end ], [ %and89.i.1034.i, %for.body.i ]
  %114 = phi i64 [ %add91.i.784.i, %for.end ], [ %add91.i.1036.i, %for.body.i ]
  %115 = phi i64 [ %and92.i.786.i, %for.end ], [ %and92.i.1038.i, %for.body.i ]
  %116 = phi i64 [ %add94.i.788.i, %for.end ], [ %add94.i.1040.i, %for.body.i ]
  %and95.i.10421503.i = phi i64 [ %and95.i.790.i, %for.end ], [ %and95.i.1042.i, %for.body.i ]
  %i.01501.i = phi i32 [ 1, %for.end ], [ %inc.i, %for.body.i ]
  %conv.i.967.i = zext i64 %and95.i.10421503.i to i128
  %mul.i.968.i = mul nuw nsw i128 %conv.i.967.i, %conv.i.967.i
  %mul6.i.969.i = shl nuw nsw i64 %and95.i.10421503.i, 1
  %conv7.i.970.i = zext i64 %mul6.i.969.i to i128
  %conv8.i.971.i = zext i64 %116 to i128
  %mul9.i.972.i = mul nuw nsw i128 %conv7.i.970.i, %conv8.i.971.i
  %conv11.i.973.i = zext i64 %115 to i128
  %mul12.i.974.i = mul nuw nsw i128 %conv7.i.970.i, %conv11.i.973.i
  %conv14.i.975.i = zext i64 %114 to i128
  %mul15.i.976.i = mul nuw nsw i128 %conv7.i.970.i, %conv14.i.975.i
  %conv17.i.977.i = zext i64 %113 to i128
  %mul18.i.978.i = mul nuw nsw i128 %conv7.i.970.i, %conv17.i.977.i
  %mul20.i.979.i = mul nuw nsw i64 %113, 19
  %conv21.i.980.i = zext i64 %mul20.i.979.i to i128
  %mul22.i.981.i = mul nuw nsw i128 %conv21.i.980.i, %conv17.i.977.i
  %mul25.i.982.i = mul nuw i128 %conv8.i.971.i, %conv8.i.971.i
  %mul27.i.984.i = shl nsw i64 %116, 1
  %conv28.i.985.i = zext i64 %mul27.i.984.i to i128
  %mul30.i.986.i = mul nuw nsw i128 %conv28.i.985.i, %conv11.i.973.i
  %mul34.i.987.i = mul nuw i128 %conv28.i.985.i, %conv14.i.975.i
  %mul38.i.988.i = mul nuw nsw i128 %conv28.i.985.i, %conv21.i.980.i
  %mul41.i.989.i = mul nsw i64 %114, 19
  %conv42.i.990.i = zext i64 %mul41.i.989.i to i128
  %mul43.i.991.i = mul nuw i128 %conv42.i.990.i, %conv14.i.975.i
  %mul45.i.993.i = shl nsw i64 %114, 1
  %conv46.i.994.i = zext i64 %mul45.i.993.i to i128
  %mul48.i.995.i = mul nuw nsw i128 %conv46.i.994.i, %conv21.i.980.i
  %add26.i.983.i = add i128 %mul25.i.982.i, %mul48.i.995.i
  %add49.i.996.i = add i128 %add26.i.983.i, %mul12.i.974.i
  %mul52.i.997.i = mul nuw nsw i128 %conv11.i.973.i, %conv11.i.973.i
  %mul54.i.998.i = shl nuw nsw i64 %115, 1
  %conv55.i.999.i = zext i64 %mul54.i.998.i to i128
  %mul57.i.1000.i = mul nuw nsw i128 %conv55.i.999.i, %conv42.i.990.i
  %add39.i.1001.i = add nuw nsw i128 %mul.i.968.i, %mul57.i.1000.i
  %add58.i.1002.i = add nuw nsw i128 %add39.i.1001.i, %mul38.i.988.i
  %mul61.i.1003.i = mul nuw nsw i128 %conv55.i.999.i, %conv21.i.980.i
  %shr.i.1005.i = lshr i128 %add49.i.996.i, 51
  %conv64.i.1006.i = and i128 %shr.i.1005.i, 18446744073709551615
  %add.i.1007.i = add nuw nsw i128 %mul30.i.986.i, %mul22.i.981.i
  %add31.i.1008.i = add nuw nsw i128 %add.i.1007.i, %mul15.i.976.i
  %add65.i.1009.i = add nuw nsw i128 %add31.i.1008.i, %conv64.i.1006.i
  %conv66.i.1010.i = trunc i128 %add49.i.996.i to i64
  %and.i.1011.i = and i64 %conv66.i.1010.i, 2251799813685247
  %shr67.i.1012.i = lshr i128 %add58.i.1002.i, 51
  %conv69.i.1013.i = and i128 %shr67.i.1012.i, 18446744073709551615
  %add44.i.992.i = add i128 %mul61.i.1003.i, %mul43.i.991.i
  %add62.i.1004.i = add i128 %add44.i.992.i, %mul9.i.972.i
  %add70.i.1014.i = add i128 %add62.i.1004.i, %conv69.i.1013.i
  %conv71.i.1015.i = trunc i128 %add58.i.1002.i to i64
  %and72.i.1016.i = and i64 %conv71.i.1015.i, 2251799813685247
  %shr73.i.1017.i = lshr i128 %add65.i.1009.i, 51
  %conv75.i.1018.i = and i128 %shr73.i.1017.i, 18446744073709551615
  %add35.i.1019.i = add i128 %mul34.i.987.i, %mul52.i.997.i
  %add53.i.1020.i = add i128 %add35.i.1019.i, %mul18.i.978.i
  %add76.i.1021.i = add i128 %add53.i.1020.i, %conv75.i.1018.i
  %conv77.i.1022.i = trunc i128 %add65.i.1009.i to i64
  %and78.i.1023.i = and i64 %conv77.i.1022.i, 2251799813685247
  %shr79.i.1024.i = lshr i128 %add70.i.1014.i, 51
  %conv80.i.1025.i = trunc i128 %shr79.i.1024.i to i64
  %add81.i.1026.i = add i64 %conv80.i.1025.i, %and.i.1011.i
  %conv82.i.1027.i = trunc i128 %add70.i.1014.i to i64
  %and83.i.1028.i = and i64 %conv82.i.1027.i, 2251799813685247
  %shr84.i.1029.i = lshr i128 %add76.i.1021.i, 51
  %conv85.i.1030.i = trunc i128 %shr84.i.1029.i to i64
  %mul86.i.1031.i = mul i64 %conv85.i.1030.i, 19
  %add87.i.1032.i = add i64 %mul86.i.1031.i, %and72.i.1016.i
  %conv88.i.1033.i = trunc i128 %add76.i.1021.i to i64
  %and89.i.1034.i = and i64 %conv88.i.1033.i, 2251799813685247
  %shr90.i.1035.i = lshr i64 %add81.i.1026.i, 51
  %add91.i.1036.i = add nuw nsw i64 %shr90.i.1035.i, %and78.i.1023.i
  %fold.i.1037.i = add i64 %conv80.i.1025.i, %conv66.i.1010.i
  %and92.i.1038.i = and i64 %fold.i.1037.i, 2251799813685247
  %shr93.i.1039.i = lshr i64 %add87.i.1032.i, 51
  %add94.i.1040.i = add nuw nsw i64 %shr93.i.1039.i, %and83.i.1028.i
  %fold180.i.1041.i = add i64 %mul86.i.1031.i, %conv71.i.1015.i
  %and95.i.1042.i = and i64 %fold180.i.1041.i, 2251799813685247
  %inc.i = add nuw nsw i32 %i.01501.i, 1
  %exitcond1514.i = icmp eq i32 %inc.i, 5
  br i1 %exitcond1514.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.body.i
  %and95.i.1042.i.lcssa = phi i64 [ %and95.i.1042.i, %for.body.i ]
  %add94.i.1040.i.lcssa = phi i64 [ %add94.i.1040.i, %for.body.i ]
  %and92.i.1038.i.lcssa = phi i64 [ %and92.i.1038.i, %for.body.i ]
  %add91.i.1036.i.lcssa = phi i64 [ %add91.i.1036.i, %for.body.i ]
  %and89.i.1034.i.lcssa = phi i64 [ %and89.i.1034.i, %for.body.i ]
  store i64 %and95.i.1042.i.lcssa, i64* %arraydecay10.i, align 16, !tbaa !5
  store i64 %add94.i.1040.i.lcssa, i64* %arrayidx97.i.539.i, align 8, !tbaa !5
  store i64 %and92.i.1038.i.lcssa, i64* %arrayidx98.i.540.i, align 16, !tbaa !5
  store i64 %add91.i.1036.i.lcssa, i64* %arrayidx99.i.541.i, align 8, !tbaa !5
  store i64 %and89.i.1034.i.lcssa, i64* %arrayidx100.i.542.i, align 16, !tbaa !5
  call fastcc void @fe51_mul(i64* %arraydecay1.i, i64* %arraydecay10.i, i64* %arraydecay1.i) #1
  %117 = load i64, i64* %arraydecay1.i, align 16, !tbaa !5
  %118 = load i64, i64* %arrayidx97.i.203.i, align 8, !tbaa !5
  %119 = load i64, i64* %arrayidx98.i.204.i, align 16, !tbaa !5
  %120 = load i64, i64* %arrayidx99.i.205.i, align 8, !tbaa !5
  %121 = load i64, i64* %arrayidx100.i.206.i, align 16, !tbaa !5
  %conv.i.1135.i = zext i64 %117 to i128
  %mul.i.1136.i = mul nuw i128 %conv.i.1135.i, %conv.i.1135.i
  %mul6.i.1137.i = shl i64 %117, 1
  %conv7.i.1138.i = zext i64 %mul6.i.1137.i to i128
  %conv8.i.1139.i = zext i64 %118 to i128
  %mul9.i.1140.i = mul nuw i128 %conv7.i.1138.i, %conv8.i.1139.i
  %conv11.i.1141.i = zext i64 %119 to i128
  %mul12.i.1142.i = mul nuw i128 %conv11.i.1141.i, %conv7.i.1138.i
  %conv14.i.1143.i = zext i64 %120 to i128
  %mul15.i.1144.i = mul nuw i128 %conv14.i.1143.i, %conv7.i.1138.i
  %conv17.i.1145.i = zext i64 %121 to i128
  %mul18.i.1146.i = mul nuw i128 %conv17.i.1145.i, %conv7.i.1138.i
  %mul20.i.1147.i = mul i64 %121, 19
  %conv21.i.1148.i = zext i64 %mul20.i.1147.i to i128
  %mul22.i.1149.i = mul nuw i128 %conv21.i.1148.i, %conv17.i.1145.i
  %mul25.i.1150.i = mul nuw i128 %conv8.i.1139.i, %conv8.i.1139.i
  %add26.i.1151.i = add i128 %mul12.i.1142.i, %mul25.i.1150.i
  %mul27.i.1152.i = shl i64 %118, 1
  %conv28.i.1153.i = zext i64 %mul27.i.1152.i to i128
  %mul30.i.1154.i = mul nuw i128 %conv28.i.1153.i, %conv11.i.1141.i
  %mul34.i.1155.i = mul nuw i128 %conv14.i.1143.i, %conv28.i.1153.i
  %mul38.i.1156.i = mul nuw i128 %conv21.i.1148.i, %conv28.i.1153.i
  %mul41.i.1157.i = mul i64 %120, 19
  %conv42.i.1158.i = zext i64 %mul41.i.1157.i to i128
  %mul43.i.1159.i = mul nuw i128 %conv42.i.1158.i, %conv14.i.1143.i
  %add44.i.1160.i = add i128 %mul43.i.1159.i, %mul9.i.1140.i
  %mul45.i.1161.i = shl i64 %120, 1
  %conv46.i.1162.i = zext i64 %mul45.i.1161.i to i128
  %mul48.i.1163.i = mul nuw i128 %conv21.i.1148.i, %conv46.i.1162.i
  %add49.i.1164.i = add i128 %add26.i.1151.i, %mul48.i.1163.i
  %mul52.i.1165.i = mul nuw i128 %conv11.i.1141.i, %conv11.i.1141.i
  %mul54.i.1166.i = shl i64 %119, 1
  %conv55.i.1167.i = zext i64 %mul54.i.1166.i to i128
  %mul57.i.1168.i = mul nuw i128 %conv42.i.1158.i, %conv55.i.1167.i
  %add39.i.1169.i = add i128 %mul57.i.1168.i, %mul.i.1136.i
  %add58.i.1170.i = add i128 %add39.i.1169.i, %mul38.i.1156.i
  %mul61.i.1171.i = mul nuw i128 %conv21.i.1148.i, %conv55.i.1167.i
  %add62.i.1172.i = add i128 %add44.i.1160.i, %mul61.i.1171.i
  %shr.i.1173.i = lshr i128 %add49.i.1164.i, 51
  %conv64.i.1174.i = and i128 %shr.i.1173.i, 18446744073709551615
  %add.i.1175.i = add i128 %mul15.i.1144.i, %mul30.i.1154.i
  %add31.i.1176.i = add i128 %add.i.1175.i, %mul22.i.1149.i
  %add65.i.1177.i = add i128 %add31.i.1176.i, %conv64.i.1174.i
  %conv66.i.1178.i = trunc i128 %add49.i.1164.i to i64
  %and.i.1179.i = and i64 %conv66.i.1178.i, 2251799813685247
  %shr67.i.1180.i = lshr i128 %add58.i.1170.i, 51
  %conv69.i.1181.i = and i128 %shr67.i.1180.i, 18446744073709551615
  %add70.i.1182.i = add i128 %add62.i.1172.i, %conv69.i.1181.i
  %conv71.i.1183.i = trunc i128 %add58.i.1170.i to i64
  %and72.i.1184.i = and i64 %conv71.i.1183.i, 2251799813685247
  %shr73.i.1185.i = lshr i128 %add65.i.1177.i, 51
  %conv75.i.1186.i = and i128 %shr73.i.1185.i, 18446744073709551615
  %add35.i.1187.i = add i128 %mul34.i.1155.i, %mul52.i.1165.i
  %add53.i.1188.i = add i128 %add35.i.1187.i, %mul18.i.1146.i
  %add76.i.1189.i = add i128 %add53.i.1188.i, %conv75.i.1186.i
  %conv77.i.1190.i = trunc i128 %add65.i.1177.i to i64
  %and78.i.1191.i = and i64 %conv77.i.1190.i, 2251799813685247
  %shr79.i.1192.i = lshr i128 %add70.i.1182.i, 51
  %conv80.i.1193.i = trunc i128 %shr79.i.1192.i to i64
  %add81.i.1194.i = add i64 %conv80.i.1193.i, %and.i.1179.i
  %conv82.i.1195.i = trunc i128 %add70.i.1182.i to i64
  %and83.i.1196.i = and i64 %conv82.i.1195.i, 2251799813685247
  %shr84.i.1197.i = lshr i128 %add76.i.1189.i, 51
  %conv85.i.1198.i = trunc i128 %shr84.i.1197.i to i64
  %mul86.i.1199.i = mul i64 %conv85.i.1198.i, 19
  %add87.i.1200.i = add i64 %mul86.i.1199.i, %and72.i.1184.i
  %conv88.i.1201.i = trunc i128 %add76.i.1189.i to i64
  %and89.i.1202.i = and i64 %conv88.i.1201.i, 2251799813685247
  %shr90.i.1203.i = lshr i64 %add81.i.1194.i, 51
  %add91.i.1204.i = add nuw nsw i64 %shr90.i.1203.i, %and78.i.1191.i
  %fold.i.1205.i = add i64 %conv80.i.1193.i, %conv66.i.1178.i
  %and92.i.1206.i = and i64 %fold.i.1205.i, 2251799813685247
  %shr93.i.1207.i = lshr i64 %add87.i.1200.i, 51
  %add94.i.1208.i = add nuw nsw i64 %shr93.i.1207.i, %and83.i.1196.i
  %fold180.i.1209.i = add i64 %mul86.i.1199.i, %conv71.i.1183.i
  %and95.i.1210.i = and i64 %fold180.i.1209.i, 2251799813685247
  store i64 %and95.i.1210.i, i64* %arraydecay10.i, align 16, !tbaa !5
  store i64 %add94.i.1208.i, i64* %arrayidx97.i.539.i, align 8, !tbaa !5
  store i64 %and92.i.1206.i, i64* %arrayidx98.i.540.i, align 16, !tbaa !5
  store i64 %add91.i.1204.i, i64* %arrayidx99.i.541.i, align 8, !tbaa !5
  store i64 %and89.i.1202.i, i64* %arrayidx100.i.542.i, align 16, !tbaa !5
  br label %for.body.26.i

for.body.26.i:                                    ; preds = %for.body.26.i, %for.end.i
  %122 = phi i64 [ %and89.i.1202.i, %for.end.i ], [ %and89.i.1454.i, %for.body.26.i ]
  %123 = phi i64 [ %add91.i.1204.i, %for.end.i ], [ %add91.i.1456.i, %for.body.26.i ]
  %124 = phi i64 [ %and92.i.1206.i, %for.end.i ], [ %and92.i.1458.i, %for.body.26.i ]
  %125 = phi i64 [ %add94.i.1208.i, %for.end.i ], [ %add94.i.1460.i, %for.body.26.i ]
  %and95.i.14621496.i = phi i64 [ %and95.i.1210.i, %for.end.i ], [ %and95.i.1462.i, %for.body.26.i ]
  %i.11494.i = phi i32 [ 1, %for.end.i ], [ %inc30.i, %for.body.26.i ]
  %conv.i.1387.i = zext i64 %and95.i.14621496.i to i128
  %mul.i.1388.i = mul nuw nsw i128 %conv.i.1387.i, %conv.i.1387.i
  %mul6.i.1389.i = shl nuw nsw i64 %and95.i.14621496.i, 1
  %conv7.i.1390.i = zext i64 %mul6.i.1389.i to i128
  %conv8.i.1391.i = zext i64 %125 to i128
  %mul9.i.1392.i = mul nuw nsw i128 %conv7.i.1390.i, %conv8.i.1391.i
  %conv11.i.1393.i = zext i64 %124 to i128
  %mul12.i.1394.i = mul nuw nsw i128 %conv7.i.1390.i, %conv11.i.1393.i
  %conv14.i.1395.i = zext i64 %123 to i128
  %mul15.i.1396.i = mul nuw nsw i128 %conv7.i.1390.i, %conv14.i.1395.i
  %conv17.i.1397.i = zext i64 %122 to i128
  %mul18.i.1398.i = mul nuw nsw i128 %conv7.i.1390.i, %conv17.i.1397.i
  %mul20.i.1399.i = mul nuw nsw i64 %122, 19
  %conv21.i.1400.i = zext i64 %mul20.i.1399.i to i128
  %mul22.i.1401.i = mul nuw nsw i128 %conv21.i.1400.i, %conv17.i.1397.i
  %mul25.i.1402.i = mul nuw i128 %conv8.i.1391.i, %conv8.i.1391.i
  %mul27.i.1404.i = shl nsw i64 %125, 1
  %conv28.i.1405.i = zext i64 %mul27.i.1404.i to i128
  %mul30.i.1406.i = mul nuw nsw i128 %conv28.i.1405.i, %conv11.i.1393.i
  %mul34.i.1407.i = mul nuw i128 %conv28.i.1405.i, %conv14.i.1395.i
  %mul38.i.1408.i = mul nuw nsw i128 %conv28.i.1405.i, %conv21.i.1400.i
  %mul41.i.1409.i = mul nsw i64 %123, 19
  %conv42.i.1410.i = zext i64 %mul41.i.1409.i to i128
  %mul43.i.1411.i = mul nuw i128 %conv42.i.1410.i, %conv14.i.1395.i
  %mul45.i.1413.i = shl nsw i64 %123, 1
  %conv46.i.1414.i = zext i64 %mul45.i.1413.i to i128
  %mul48.i.1415.i = mul nuw nsw i128 %conv46.i.1414.i, %conv21.i.1400.i
  %add26.i.1403.i = add i128 %mul25.i.1402.i, %mul48.i.1415.i
  %add49.i.1416.i = add i128 %add26.i.1403.i, %mul12.i.1394.i
  %mul52.i.1417.i = mul nuw nsw i128 %conv11.i.1393.i, %conv11.i.1393.i
  %mul54.i.1418.i = shl nuw nsw i64 %124, 1
  %conv55.i.1419.i = zext i64 %mul54.i.1418.i to i128
  %mul57.i.1420.i = mul nuw nsw i128 %conv55.i.1419.i, %conv42.i.1410.i
  %add39.i.1421.i = add nuw nsw i128 %mul.i.1388.i, %mul57.i.1420.i
  %add58.i.1422.i = add nuw nsw i128 %add39.i.1421.i, %mul38.i.1408.i
  %mul61.i.1423.i = mul nuw nsw i128 %conv55.i.1419.i, %conv21.i.1400.i
  %shr.i.1425.i = lshr i128 %add49.i.1416.i, 51
  %conv64.i.1426.i = and i128 %shr.i.1425.i, 18446744073709551615
  %add.i.1427.i = add nuw nsw i128 %mul30.i.1406.i, %mul22.i.1401.i
  %add31.i.1428.i = add nuw nsw i128 %add.i.1427.i, %mul15.i.1396.i
  %add65.i.1429.i = add nuw nsw i128 %add31.i.1428.i, %conv64.i.1426.i
  %conv66.i.1430.i = trunc i128 %add49.i.1416.i to i64
  %and.i.1431.i = and i64 %conv66.i.1430.i, 2251799813685247
  %shr67.i.1432.i = lshr i128 %add58.i.1422.i, 51
  %conv69.i.1433.i = and i128 %shr67.i.1432.i, 18446744073709551615
  %add44.i.1412.i = add i128 %mul61.i.1423.i, %mul43.i.1411.i
  %add62.i.1424.i = add i128 %add44.i.1412.i, %mul9.i.1392.i
  %add70.i.1434.i = add i128 %add62.i.1424.i, %conv69.i.1433.i
  %conv71.i.1435.i = trunc i128 %add58.i.1422.i to i64
  %and72.i.1436.i = and i64 %conv71.i.1435.i, 2251799813685247
  %shr73.i.1437.i = lshr i128 %add65.i.1429.i, 51
  %conv75.i.1438.i = and i128 %shr73.i.1437.i, 18446744073709551615
  %add35.i.1439.i = add i128 %mul34.i.1407.i, %mul52.i.1417.i
  %add53.i.1440.i = add i128 %add35.i.1439.i, %mul18.i.1398.i
  %add76.i.1441.i = add i128 %add53.i.1440.i, %conv75.i.1438.i
  %conv77.i.1442.i = trunc i128 %add65.i.1429.i to i64
  %and78.i.1443.i = and i64 %conv77.i.1442.i, 2251799813685247
  %shr79.i.1444.i = lshr i128 %add70.i.1434.i, 51
  %conv80.i.1445.i = trunc i128 %shr79.i.1444.i to i64
  %add81.i.1446.i = add i64 %conv80.i.1445.i, %and.i.1431.i
  %conv82.i.1447.i = trunc i128 %add70.i.1434.i to i64
  %and83.i.1448.i = and i64 %conv82.i.1447.i, 2251799813685247
  %shr84.i.1449.i = lshr i128 %add76.i.1441.i, 51
  %conv85.i.1450.i = trunc i128 %shr84.i.1449.i to i64
  %mul86.i.1451.i = mul i64 %conv85.i.1450.i, 19
  %add87.i.1452.i = add i64 %mul86.i.1451.i, %and72.i.1436.i
  %conv88.i.1453.i = trunc i128 %add76.i.1441.i to i64
  %and89.i.1454.i = and i64 %conv88.i.1453.i, 2251799813685247
  %shr90.i.1455.i = lshr i64 %add81.i.1446.i, 51
  %add91.i.1456.i = add nuw nsw i64 %shr90.i.1455.i, %and78.i.1443.i
  %fold.i.1457.i = add i64 %conv80.i.1445.i, %conv66.i.1430.i
  %and92.i.1458.i = and i64 %fold.i.1457.i, 2251799813685247
  %shr93.i.1459.i = lshr i64 %add87.i.1452.i, 51
  %add94.i.1460.i = add nuw nsw i64 %shr93.i.1459.i, %and83.i.1448.i
  %fold180.i.1461.i = add i64 %mul86.i.1451.i, %conv71.i.1435.i
  %and95.i.1462.i = and i64 %fold180.i.1461.i, 2251799813685247
  %inc30.i = add nuw nsw i32 %i.11494.i, 1
  %exitcond1513.i = icmp eq i32 %inc30.i, 10
  br i1 %exitcond1513.i, label %for.end.31.i, label %for.body.26.i

for.end.31.i:                                     ; preds = %for.body.26.i
  %and95.i.1462.i.lcssa = phi i64 [ %and95.i.1462.i, %for.body.26.i ]
  %add94.i.1460.i.lcssa = phi i64 [ %add94.i.1460.i, %for.body.26.i ]
  %and92.i.1458.i.lcssa = phi i64 [ %and92.i.1458.i, %for.body.26.i ]
  %add91.i.1456.i.lcssa = phi i64 [ %add91.i.1456.i, %for.body.26.i ]
  %and89.i.1454.i.lcssa = phi i64 [ %and89.i.1454.i, %for.body.26.i ]
  store i64 %and95.i.1462.i.lcssa, i64* %arraydecay10.i, align 16, !tbaa !5
  store i64 %add94.i.1460.i.lcssa, i64* %arrayidx97.i.539.i, align 8, !tbaa !5
  store i64 %and92.i.1458.i.lcssa, i64* %arrayidx98.i.540.i, align 16, !tbaa !5
  store i64 %add91.i.1456.i.lcssa, i64* %arrayidx99.i.541.i, align 8, !tbaa !5
  store i64 %and89.i.1454.i.lcssa, i64* %arrayidx100.i.542.i, align 16, !tbaa !5
  call fastcc void @fe51_mul(i64* %arraydecay10.i, i64* %arraydecay10.i, i64* %arraydecay1.i) #1
  %arraydecay35.i = getelementptr inbounds [5 x i64], [5 x i64]* %t3.i, i64 0, i64 0
  %126 = load i64, i64* %arraydecay10.i, align 16, !tbaa !5
  %127 = load i64, i64* %arrayidx97.i.539.i, align 8, !tbaa !5
  %128 = load i64, i64* %arrayidx98.i.540.i, align 16, !tbaa !5
  %129 = load i64, i64* %arrayidx99.i.541.i, align 8, !tbaa !5
  %130 = load i64, i64* %arrayidx100.i.542.i, align 16, !tbaa !5
  %conv.i.1303.i = zext i64 %126 to i128
  %mul.i.1304.i = mul nuw i128 %conv.i.1303.i, %conv.i.1303.i
  %mul6.i.1305.i = shl i64 %126, 1
  %conv7.i.1306.i = zext i64 %mul6.i.1305.i to i128
  %conv8.i.1307.i = zext i64 %127 to i128
  %mul9.i.1308.i = mul nuw i128 %conv7.i.1306.i, %conv8.i.1307.i
  %conv11.i.1309.i = zext i64 %128 to i128
  %mul12.i.1310.i = mul nuw i128 %conv11.i.1309.i, %conv7.i.1306.i
  %conv14.i.1311.i = zext i64 %129 to i128
  %mul15.i.1312.i = mul nuw i128 %conv14.i.1311.i, %conv7.i.1306.i
  %conv17.i.1313.i = zext i64 %130 to i128
  %mul18.i.1314.i = mul nuw i128 %conv17.i.1313.i, %conv7.i.1306.i
  %mul20.i.1315.i = mul i64 %130, 19
  %conv21.i.1316.i = zext i64 %mul20.i.1315.i to i128
  %mul22.i.1317.i = mul nuw i128 %conv21.i.1316.i, %conv17.i.1313.i
  %mul25.i.1318.i = mul nuw i128 %conv8.i.1307.i, %conv8.i.1307.i
  %add26.i.1319.i = add i128 %mul12.i.1310.i, %mul25.i.1318.i
  %mul27.i.1320.i = shl i64 %127, 1
  %conv28.i.1321.i = zext i64 %mul27.i.1320.i to i128
  %mul30.i.1322.i = mul nuw i128 %conv28.i.1321.i, %conv11.i.1309.i
  %mul34.i.1323.i = mul nuw i128 %conv14.i.1311.i, %conv28.i.1321.i
  %mul38.i.1324.i = mul nuw i128 %conv21.i.1316.i, %conv28.i.1321.i
  %mul41.i.1325.i = mul i64 %129, 19
  %conv42.i.1326.i = zext i64 %mul41.i.1325.i to i128
  %mul43.i.1327.i = mul nuw i128 %conv42.i.1326.i, %conv14.i.1311.i
  %add44.i.1328.i = add i128 %mul43.i.1327.i, %mul9.i.1308.i
  %mul45.i.1329.i = shl i64 %129, 1
  %conv46.i.1330.i = zext i64 %mul45.i.1329.i to i128
  %mul48.i.1331.i = mul nuw i128 %conv21.i.1316.i, %conv46.i.1330.i
  %add49.i.1332.i = add i128 %add26.i.1319.i, %mul48.i.1331.i
  %mul52.i.1333.i = mul nuw i128 %conv11.i.1309.i, %conv11.i.1309.i
  %mul54.i.1334.i = shl i64 %128, 1
  %conv55.i.1335.i = zext i64 %mul54.i.1334.i to i128
  %mul57.i.1336.i = mul nuw i128 %conv42.i.1326.i, %conv55.i.1335.i
  %add39.i.1337.i = add i128 %mul57.i.1336.i, %mul.i.1304.i
  %add58.i.1338.i = add i128 %add39.i.1337.i, %mul38.i.1324.i
  %mul61.i.1339.i = mul nuw i128 %conv21.i.1316.i, %conv55.i.1335.i
  %add62.i.1340.i = add i128 %add44.i.1328.i, %mul61.i.1339.i
  %shr.i.1341.i = lshr i128 %add49.i.1332.i, 51
  %conv64.i.1342.i = and i128 %shr.i.1341.i, 18446744073709551615
  %add.i.1343.i = add i128 %mul15.i.1312.i, %mul30.i.1322.i
  %add31.i.1344.i = add i128 %add.i.1343.i, %mul22.i.1317.i
  %add65.i.1345.i = add i128 %add31.i.1344.i, %conv64.i.1342.i
  %conv66.i.1346.i = trunc i128 %add49.i.1332.i to i64
  %and.i.1347.i = and i64 %conv66.i.1346.i, 2251799813685247
  %shr67.i.1348.i = lshr i128 %add58.i.1338.i, 51
  %conv69.i.1349.i = and i128 %shr67.i.1348.i, 18446744073709551615
  %add70.i.1350.i = add i128 %add62.i.1340.i, %conv69.i.1349.i
  %conv71.i.1351.i = trunc i128 %add58.i.1338.i to i64
  %and72.i.1352.i = and i64 %conv71.i.1351.i, 2251799813685247
  %shr73.i.1353.i = lshr i128 %add65.i.1345.i, 51
  %conv75.i.1354.i = and i128 %shr73.i.1353.i, 18446744073709551615
  %add35.i.1355.i = add i128 %mul34.i.1323.i, %mul52.i.1333.i
  %add53.i.1356.i = add i128 %add35.i.1355.i, %mul18.i.1314.i
  %add76.i.1357.i = add i128 %add53.i.1356.i, %conv75.i.1354.i
  %conv77.i.1358.i = trunc i128 %add65.i.1345.i to i64
  %and78.i.1359.i = and i64 %conv77.i.1358.i, 2251799813685247
  %shr79.i.1360.i = lshr i128 %add70.i.1350.i, 51
  %conv80.i.1361.i = trunc i128 %shr79.i.1360.i to i64
  %add81.i.1362.i = add i64 %conv80.i.1361.i, %and.i.1347.i
  %conv82.i.1363.i = trunc i128 %add70.i.1350.i to i64
  %and83.i.1364.i = and i64 %conv82.i.1363.i, 2251799813685247
  %shr84.i.1365.i = lshr i128 %add76.i.1357.i, 51
  %conv85.i.1366.i = trunc i128 %shr84.i.1365.i to i64
  %mul86.i.1367.i = mul i64 %conv85.i.1366.i, 19
  %add87.i.1368.i = add i64 %mul86.i.1367.i, %and72.i.1352.i
  %conv88.i.1369.i = trunc i128 %add76.i.1357.i to i64
  %and89.i.1370.i = and i64 %conv88.i.1369.i, 2251799813685247
  %shr90.i.1371.i = lshr i64 %add81.i.1362.i, 51
  %add91.i.1372.i = add nuw nsw i64 %shr90.i.1371.i, %and78.i.1359.i
  %fold.i.1373.i = add i64 %conv80.i.1361.i, %conv66.i.1346.i
  %and92.i.1374.i = and i64 %fold.i.1373.i, 2251799813685247
  %shr93.i.1375.i = lshr i64 %add87.i.1368.i, 51
  %add94.i.1376.i = add nuw nsw i64 %shr93.i.1375.i, %and83.i.1364.i
  %fold180.i.1377.i = add i64 %mul86.i.1367.i, %conv71.i.1351.i
  %and95.i.1378.i = and i64 %fold180.i.1377.i, 2251799813685247
  store i64 %and95.i.1378.i, i64* %arraydecay35.i, align 16, !tbaa !5
  %arrayidx97.i.1379.i = getelementptr inbounds [5 x i64], [5 x i64]* %t3.i, i64 0, i64 1
  store i64 %add94.i.1376.i, i64* %arrayidx97.i.1379.i, align 8, !tbaa !5
  %arrayidx98.i.1380.i = getelementptr inbounds [5 x i64], [5 x i64]* %t3.i, i64 0, i64 2
  store i64 %and92.i.1374.i, i64* %arrayidx98.i.1380.i, align 16, !tbaa !5
  %arrayidx99.i.1381.i = getelementptr inbounds [5 x i64], [5 x i64]* %t3.i, i64 0, i64 3
  store i64 %add91.i.1372.i, i64* %arrayidx99.i.1381.i, align 8, !tbaa !5
  %arrayidx100.i.1382.i = getelementptr inbounds [5 x i64], [5 x i64]* %t3.i, i64 0, i64 4
  store i64 %and89.i.1370.i, i64* %arrayidx100.i.1382.i, align 16, !tbaa !5
  br label %for.body.39.i

for.body.39.i:                                    ; preds = %for.body.39.i, %for.end.31.i
  %131 = phi i64 [ %and89.i.1370.i, %for.end.31.i ], [ %and89.i.1286.i, %for.body.39.i ]
  %132 = phi i64 [ %add91.i.1372.i, %for.end.31.i ], [ %add91.i.1288.i, %for.body.39.i ]
  %133 = phi i64 [ %and92.i.1374.i, %for.end.31.i ], [ %and92.i.1290.i, %for.body.39.i ]
  %134 = phi i64 [ %add94.i.1376.i, %for.end.31.i ], [ %add94.i.1292.i, %for.body.39.i ]
  %and95.i.12941489.i = phi i64 [ %and95.i.1378.i, %for.end.31.i ], [ %and95.i.1294.i, %for.body.39.i ]
  %i.21487.i = phi i32 [ 1, %for.end.31.i ], [ %inc43.i, %for.body.39.i ]
  %conv.i.1219.i = zext i64 %and95.i.12941489.i to i128
  %mul.i.1220.i = mul nuw nsw i128 %conv.i.1219.i, %conv.i.1219.i
  %mul6.i.1221.i = shl nuw nsw i64 %and95.i.12941489.i, 1
  %conv7.i.1222.i = zext i64 %mul6.i.1221.i to i128
  %conv8.i.1223.i = zext i64 %134 to i128
  %mul9.i.1224.i = mul nuw nsw i128 %conv7.i.1222.i, %conv8.i.1223.i
  %conv11.i.1225.i = zext i64 %133 to i128
  %mul12.i.1226.i = mul nuw nsw i128 %conv7.i.1222.i, %conv11.i.1225.i
  %conv14.i.1227.i = zext i64 %132 to i128
  %mul15.i.1228.i = mul nuw nsw i128 %conv7.i.1222.i, %conv14.i.1227.i
  %conv17.i.1229.i = zext i64 %131 to i128
  %mul18.i.1230.i = mul nuw nsw i128 %conv7.i.1222.i, %conv17.i.1229.i
  %mul20.i.1231.i = mul nuw nsw i64 %131, 19
  %conv21.i.1232.i = zext i64 %mul20.i.1231.i to i128
  %mul22.i.1233.i = mul nuw nsw i128 %conv21.i.1232.i, %conv17.i.1229.i
  %mul25.i.1234.i = mul nuw i128 %conv8.i.1223.i, %conv8.i.1223.i
  %mul27.i.1236.i = shl nsw i64 %134, 1
  %conv28.i.1237.i = zext i64 %mul27.i.1236.i to i128
  %mul30.i.1238.i = mul nuw nsw i128 %conv28.i.1237.i, %conv11.i.1225.i
  %mul34.i.1239.i = mul nuw i128 %conv28.i.1237.i, %conv14.i.1227.i
  %mul38.i.1240.i = mul nuw nsw i128 %conv28.i.1237.i, %conv21.i.1232.i
  %mul41.i.1241.i = mul nsw i64 %132, 19
  %conv42.i.1242.i = zext i64 %mul41.i.1241.i to i128
  %mul43.i.1243.i = mul nuw i128 %conv42.i.1242.i, %conv14.i.1227.i
  %mul45.i.1245.i = shl nsw i64 %132, 1
  %conv46.i.1246.i = zext i64 %mul45.i.1245.i to i128
  %mul48.i.1247.i = mul nuw nsw i128 %conv46.i.1246.i, %conv21.i.1232.i
  %add26.i.1235.i = add i128 %mul25.i.1234.i, %mul48.i.1247.i
  %add49.i.1248.i = add i128 %add26.i.1235.i, %mul12.i.1226.i
  %mul52.i.1249.i = mul nuw nsw i128 %conv11.i.1225.i, %conv11.i.1225.i
  %mul54.i.1250.i = shl nuw nsw i64 %133, 1
  %conv55.i.1251.i = zext i64 %mul54.i.1250.i to i128
  %mul57.i.1252.i = mul nuw nsw i128 %conv55.i.1251.i, %conv42.i.1242.i
  %add39.i.1253.i = add nuw nsw i128 %mul.i.1220.i, %mul57.i.1252.i
  %add58.i.1254.i = add nuw nsw i128 %add39.i.1253.i, %mul38.i.1240.i
  %mul61.i.1255.i = mul nuw nsw i128 %conv55.i.1251.i, %conv21.i.1232.i
  %shr.i.1257.i = lshr i128 %add49.i.1248.i, 51
  %conv64.i.1258.i = and i128 %shr.i.1257.i, 18446744073709551615
  %add.i.1259.i = add nuw nsw i128 %mul30.i.1238.i, %mul22.i.1233.i
  %add31.i.1260.i = add nuw nsw i128 %add.i.1259.i, %mul15.i.1228.i
  %add65.i.1261.i = add nuw nsw i128 %add31.i.1260.i, %conv64.i.1258.i
  %conv66.i.1262.i = trunc i128 %add49.i.1248.i to i64
  %and.i.1263.i = and i64 %conv66.i.1262.i, 2251799813685247
  %shr67.i.1264.i = lshr i128 %add58.i.1254.i, 51
  %conv69.i.1265.i = and i128 %shr67.i.1264.i, 18446744073709551615
  %add44.i.1244.i = add i128 %mul61.i.1255.i, %mul43.i.1243.i
  %add62.i.1256.i = add i128 %add44.i.1244.i, %mul9.i.1224.i
  %add70.i.1266.i = add i128 %add62.i.1256.i, %conv69.i.1265.i
  %conv71.i.1267.i = trunc i128 %add58.i.1254.i to i64
  %and72.i.1268.i = and i64 %conv71.i.1267.i, 2251799813685247
  %shr73.i.1269.i = lshr i128 %add65.i.1261.i, 51
  %conv75.i.1270.i = and i128 %shr73.i.1269.i, 18446744073709551615
  %add35.i.1271.i = add i128 %mul34.i.1239.i, %mul52.i.1249.i
  %add53.i.1272.i = add i128 %add35.i.1271.i, %mul18.i.1230.i
  %add76.i.1273.i = add i128 %add53.i.1272.i, %conv75.i.1270.i
  %conv77.i.1274.i = trunc i128 %add65.i.1261.i to i64
  %and78.i.1275.i = and i64 %conv77.i.1274.i, 2251799813685247
  %shr79.i.1276.i = lshr i128 %add70.i.1266.i, 51
  %conv80.i.1277.i = trunc i128 %shr79.i.1276.i to i64
  %add81.i.1278.i = add i64 %conv80.i.1277.i, %and.i.1263.i
  %conv82.i.1279.i = trunc i128 %add70.i.1266.i to i64
  %and83.i.1280.i = and i64 %conv82.i.1279.i, 2251799813685247
  %shr84.i.1281.i = lshr i128 %add76.i.1273.i, 51
  %conv85.i.1282.i = trunc i128 %shr84.i.1281.i to i64
  %mul86.i.1283.i = mul i64 %conv85.i.1282.i, 19
  %add87.i.1284.i = add i64 %mul86.i.1283.i, %and72.i.1268.i
  %conv88.i.1285.i = trunc i128 %add76.i.1273.i to i64
  %and89.i.1286.i = and i64 %conv88.i.1285.i, 2251799813685247
  %shr90.i.1287.i = lshr i64 %add81.i.1278.i, 51
  %add91.i.1288.i = add nuw nsw i64 %shr90.i.1287.i, %and78.i.1275.i
  %fold.i.1289.i = add i64 %conv80.i.1277.i, %conv66.i.1262.i
  %and92.i.1290.i = and i64 %fold.i.1289.i, 2251799813685247
  %shr93.i.1291.i = lshr i64 %add87.i.1284.i, 51
  %add94.i.1292.i = add nuw nsw i64 %shr93.i.1291.i, %and83.i.1280.i
  %fold180.i.1293.i = add i64 %mul86.i.1283.i, %conv71.i.1267.i
  %and95.i.1294.i = and i64 %fold180.i.1293.i, 2251799813685247
  %inc43.i = add nuw nsw i32 %i.21487.i, 1
  %exitcond1512.i = icmp eq i32 %inc43.i, 20
  br i1 %exitcond1512.i, label %for.end.44.i, label %for.body.39.i

for.end.44.i:                                     ; preds = %for.body.39.i
  %and95.i.1294.i.lcssa = phi i64 [ %and95.i.1294.i, %for.body.39.i ]
  %add94.i.1292.i.lcssa = phi i64 [ %add94.i.1292.i, %for.body.39.i ]
  %and92.i.1290.i.lcssa = phi i64 [ %and92.i.1290.i, %for.body.39.i ]
  %add91.i.1288.i.lcssa = phi i64 [ %add91.i.1288.i, %for.body.39.i ]
  %and89.i.1286.i.lcssa = phi i64 [ %and89.i.1286.i, %for.body.39.i ]
  store i64 %and95.i.1294.i.lcssa, i64* %arraydecay35.i, align 16, !tbaa !5
  store i64 %add94.i.1292.i.lcssa, i64* %arrayidx97.i.1379.i, align 8, !tbaa !5
  store i64 %and92.i.1290.i.lcssa, i64* %arrayidx98.i.1380.i, align 16, !tbaa !5
  store i64 %add91.i.1288.i.lcssa, i64* %arrayidx99.i.1381.i, align 8, !tbaa !5
  store i64 %and89.i.1286.i.lcssa, i64* %arrayidx100.i.1382.i, align 16, !tbaa !5
  call fastcc void @fe51_mul(i64* %arraydecay10.i, i64* %arraydecay35.i, i64* %arraydecay10.i) #1
  %arraydecay10.promoted1481.i = load i64, i64* %arraydecay10.i, align 16, !tbaa !5
  %arrayidx97.i.539.promoted1483.i = load i64, i64* %arrayidx97.i.539.i, align 8, !tbaa !5
  %arrayidx98.i.540.promoted1484.i = load i64, i64* %arrayidx98.i.540.i, align 16, !tbaa !5
  %arrayidx99.i.541.promoted1485.i = load i64, i64* %arrayidx99.i.541.i, align 8, !tbaa !5
  %arrayidx100.i.542.promoted1486.i = load i64, i64* %arrayidx100.i.542.i, align 16, !tbaa !5
  br label %for.body.50.i

for.body.50.i:                                    ; preds = %for.body.50.i, %for.end.44.i
  %135 = phi i64 [ %arrayidx100.i.542.promoted1486.i, %for.end.44.i ], [ %and89.i.1118.i, %for.body.50.i ]
  %136 = phi i64 [ %arrayidx99.i.541.promoted1485.i, %for.end.44.i ], [ %add91.i.1120.i, %for.body.50.i ]
  %137 = phi i64 [ %arrayidx98.i.540.promoted1484.i, %for.end.44.i ], [ %and92.i.1122.i, %for.body.50.i ]
  %138 = phi i64 [ %arrayidx97.i.539.promoted1483.i, %for.end.44.i ], [ %add94.i.1124.i, %for.body.50.i ]
  %and95.i.11261482.i = phi i64 [ %arraydecay10.promoted1481.i, %for.end.44.i ], [ %and95.i.1126.i, %for.body.50.i ]
  %i.31480.i = phi i32 [ 0, %for.end.44.i ], [ %inc54.i, %for.body.50.i ]
  %conv.i.1051.i = zext i64 %and95.i.11261482.i to i128
  %mul.i.1052.i = mul nuw i128 %conv.i.1051.i, %conv.i.1051.i
  %mul6.i.1053.i = shl i64 %and95.i.11261482.i, 1
  %conv7.i.1054.i = zext i64 %mul6.i.1053.i to i128
  %conv8.i.1055.i = zext i64 %138 to i128
  %mul9.i.1056.i = mul nuw i128 %conv7.i.1054.i, %conv8.i.1055.i
  %conv11.i.1057.i = zext i64 %137 to i128
  %mul12.i.1058.i = mul nuw i128 %conv7.i.1054.i, %conv11.i.1057.i
  %conv14.i.1059.i = zext i64 %136 to i128
  %mul15.i.1060.i = mul nuw i128 %conv7.i.1054.i, %conv14.i.1059.i
  %conv17.i.1061.i = zext i64 %135 to i128
  %mul18.i.1062.i = mul nuw i128 %conv7.i.1054.i, %conv17.i.1061.i
  %mul20.i.1063.i = mul i64 %135, 19
  %conv21.i.1064.i = zext i64 %mul20.i.1063.i to i128
  %mul22.i.1065.i = mul nuw i128 %conv21.i.1064.i, %conv17.i.1061.i
  %mul25.i.1066.i = mul nuw i128 %conv8.i.1055.i, %conv8.i.1055.i
  %mul27.i.1068.i = shl i64 %138, 1
  %conv28.i.1069.i = zext i64 %mul27.i.1068.i to i128
  %mul30.i.1070.i = mul nuw i128 %conv28.i.1069.i, %conv11.i.1057.i
  %mul34.i.1071.i = mul nuw i128 %conv28.i.1069.i, %conv14.i.1059.i
  %mul38.i.1072.i = mul nuw i128 %conv28.i.1069.i, %conv21.i.1064.i
  %mul41.i.1073.i = mul i64 %136, 19
  %conv42.i.1074.i = zext i64 %mul41.i.1073.i to i128
  %mul43.i.1075.i = mul nuw i128 %conv42.i.1074.i, %conv14.i.1059.i
  %mul45.i.1077.i = shl i64 %136, 1
  %conv46.i.1078.i = zext i64 %mul45.i.1077.i to i128
  %mul48.i.1079.i = mul nuw i128 %conv46.i.1078.i, %conv21.i.1064.i
  %add26.i.1067.i = add i128 %mul25.i.1066.i, %mul48.i.1079.i
  %add49.i.1080.i = add i128 %add26.i.1067.i, %mul12.i.1058.i
  %mul52.i.1081.i = mul nuw i128 %conv11.i.1057.i, %conv11.i.1057.i
  %mul54.i.1082.i = shl i64 %137, 1
  %conv55.i.1083.i = zext i64 %mul54.i.1082.i to i128
  %mul57.i.1084.i = mul nuw i128 %conv55.i.1083.i, %conv42.i.1074.i
  %add39.i.1085.i = add i128 %mul.i.1052.i, %mul57.i.1084.i
  %add58.i.1086.i = add i128 %add39.i.1085.i, %mul38.i.1072.i
  %mul61.i.1087.i = mul nuw i128 %conv55.i.1083.i, %conv21.i.1064.i
  %shr.i.1089.i = lshr i128 %add49.i.1080.i, 51
  %conv64.i.1090.i = and i128 %shr.i.1089.i, 18446744073709551615
  %add.i.1091.i = add i128 %mul30.i.1070.i, %mul22.i.1065.i
  %add31.i.1092.i = add i128 %add.i.1091.i, %mul15.i.1060.i
  %add65.i.1093.i = add i128 %add31.i.1092.i, %conv64.i.1090.i
  %conv66.i.1094.i = trunc i128 %add49.i.1080.i to i64
  %and.i.1095.i = and i64 %conv66.i.1094.i, 2251799813685247
  %shr67.i.1096.i = lshr i128 %add58.i.1086.i, 51
  %conv69.i.1097.i = and i128 %shr67.i.1096.i, 18446744073709551615
  %add44.i.1076.i = add i128 %mul61.i.1087.i, %mul43.i.1075.i
  %add62.i.1088.i = add i128 %add44.i.1076.i, %mul9.i.1056.i
  %add70.i.1098.i = add i128 %add62.i.1088.i, %conv69.i.1097.i
  %conv71.i.1099.i = trunc i128 %add58.i.1086.i to i64
  %and72.i.1100.i = and i64 %conv71.i.1099.i, 2251799813685247
  %shr73.i.1101.i = lshr i128 %add65.i.1093.i, 51
  %conv75.i.1102.i = and i128 %shr73.i.1101.i, 18446744073709551615
  %add35.i.1103.i = add i128 %mul34.i.1071.i, %mul52.i.1081.i
  %add53.i.1104.i = add i128 %add35.i.1103.i, %mul18.i.1062.i
  %add76.i.1105.i = add i128 %add53.i.1104.i, %conv75.i.1102.i
  %conv77.i.1106.i = trunc i128 %add65.i.1093.i to i64
  %and78.i.1107.i = and i64 %conv77.i.1106.i, 2251799813685247
  %shr79.i.1108.i = lshr i128 %add70.i.1098.i, 51
  %conv80.i.1109.i = trunc i128 %shr79.i.1108.i to i64
  %add81.i.1110.i = add i64 %conv80.i.1109.i, %and.i.1095.i
  %conv82.i.1111.i = trunc i128 %add70.i.1098.i to i64
  %and83.i.1112.i = and i64 %conv82.i.1111.i, 2251799813685247
  %shr84.i.1113.i = lshr i128 %add76.i.1105.i, 51
  %conv85.i.1114.i = trunc i128 %shr84.i.1113.i to i64
  %mul86.i.1115.i = mul i64 %conv85.i.1114.i, 19
  %add87.i.1116.i = add i64 %mul86.i.1115.i, %and72.i.1100.i
  %conv88.i.1117.i = trunc i128 %add76.i.1105.i to i64
  %and89.i.1118.i = and i64 %conv88.i.1117.i, 2251799813685247
  %shr90.i.1119.i = lshr i64 %add81.i.1110.i, 51
  %add91.i.1120.i = add nuw nsw i64 %shr90.i.1119.i, %and78.i.1107.i
  %fold.i.1121.i = add i64 %conv80.i.1109.i, %conv66.i.1094.i
  %and92.i.1122.i = and i64 %fold.i.1121.i, 2251799813685247
  %shr93.i.1123.i = lshr i64 %add87.i.1116.i, 51
  %add94.i.1124.i = add nuw nsw i64 %shr93.i.1123.i, %and83.i.1112.i
  %fold180.i.1125.i = add i64 %mul86.i.1115.i, %conv71.i.1099.i
  %and95.i.1126.i = and i64 %fold180.i.1125.i, 2251799813685247
  %inc54.i = add nuw nsw i32 %i.31480.i, 1
  %exitcond1511.i = icmp eq i32 %inc54.i, 10
  br i1 %exitcond1511.i, label %for.end.55.i, label %for.body.50.i

for.end.55.i:                                     ; preds = %for.body.50.i
  %and95.i.1126.i.lcssa = phi i64 [ %and95.i.1126.i, %for.body.50.i ]
  %add94.i.1124.i.lcssa = phi i64 [ %add94.i.1124.i, %for.body.50.i ]
  %and92.i.1122.i.lcssa = phi i64 [ %and92.i.1122.i, %for.body.50.i ]
  %add91.i.1120.i.lcssa = phi i64 [ %add91.i.1120.i, %for.body.50.i ]
  %and89.i.1118.i.lcssa = phi i64 [ %and89.i.1118.i, %for.body.50.i ]
  store i64 %and95.i.1126.i.lcssa, i64* %arraydecay10.i, align 16, !tbaa !5
  store i64 %add94.i.1124.i.lcssa, i64* %arrayidx97.i.539.i, align 8, !tbaa !5
  store i64 %and92.i.1122.i.lcssa, i64* %arrayidx98.i.540.i, align 16, !tbaa !5
  store i64 %add91.i.1120.i.lcssa, i64* %arrayidx99.i.541.i, align 8, !tbaa !5
  store i64 %and89.i.1118.i.lcssa, i64* %arrayidx100.i.542.i, align 16, !tbaa !5
  call fastcc void @fe51_mul(i64* %arraydecay1.i, i64* %arraydecay10.i, i64* %arraydecay1.i) #1
  %139 = load i64, i64* %arraydecay1.i, align 16, !tbaa !5
  %140 = load i64, i64* %arrayidx97.i.203.i, align 8, !tbaa !5
  %141 = load i64, i64* %arrayidx98.i.204.i, align 16, !tbaa !5
  %142 = load i64, i64* %arrayidx99.i.205.i, align 8, !tbaa !5
  %143 = load i64, i64* %arrayidx100.i.206.i, align 16, !tbaa !5
  %conv.i.883.i = zext i64 %139 to i128
  %mul.i.884.i = mul nuw i128 %conv.i.883.i, %conv.i.883.i
  %mul6.i.885.i = shl i64 %139, 1
  %conv7.i.886.i = zext i64 %mul6.i.885.i to i128
  %conv8.i.887.i = zext i64 %140 to i128
  %mul9.i.888.i = mul nuw i128 %conv7.i.886.i, %conv8.i.887.i
  %conv11.i.889.i = zext i64 %141 to i128
  %mul12.i.890.i = mul nuw i128 %conv11.i.889.i, %conv7.i.886.i
  %conv14.i.891.i = zext i64 %142 to i128
  %mul15.i.892.i = mul nuw i128 %conv14.i.891.i, %conv7.i.886.i
  %conv17.i.893.i = zext i64 %143 to i128
  %mul18.i.894.i = mul nuw i128 %conv17.i.893.i, %conv7.i.886.i
  %mul20.i.895.i = mul i64 %143, 19
  %conv21.i.896.i = zext i64 %mul20.i.895.i to i128
  %mul22.i.897.i = mul nuw i128 %conv21.i.896.i, %conv17.i.893.i
  %mul25.i.898.i = mul nuw i128 %conv8.i.887.i, %conv8.i.887.i
  %add26.i.899.i = add i128 %mul12.i.890.i, %mul25.i.898.i
  %mul27.i.900.i = shl i64 %140, 1
  %conv28.i.901.i = zext i64 %mul27.i.900.i to i128
  %mul30.i.902.i = mul nuw i128 %conv28.i.901.i, %conv11.i.889.i
  %mul34.i.903.i = mul nuw i128 %conv14.i.891.i, %conv28.i.901.i
  %mul38.i.904.i = mul nuw i128 %conv21.i.896.i, %conv28.i.901.i
  %mul41.i.905.i = mul i64 %142, 19
  %conv42.i.906.i = zext i64 %mul41.i.905.i to i128
  %mul43.i.907.i = mul nuw i128 %conv42.i.906.i, %conv14.i.891.i
  %add44.i.908.i = add i128 %mul43.i.907.i, %mul9.i.888.i
  %mul45.i.909.i = shl i64 %142, 1
  %conv46.i.910.i = zext i64 %mul45.i.909.i to i128
  %mul48.i.911.i = mul nuw i128 %conv21.i.896.i, %conv46.i.910.i
  %add49.i.912.i = add i128 %add26.i.899.i, %mul48.i.911.i
  %mul52.i.913.i = mul nuw i128 %conv11.i.889.i, %conv11.i.889.i
  %mul54.i.914.i = shl i64 %141, 1
  %conv55.i.915.i = zext i64 %mul54.i.914.i to i128
  %mul57.i.916.i = mul nuw i128 %conv42.i.906.i, %conv55.i.915.i
  %add39.i.917.i = add i128 %mul57.i.916.i, %mul.i.884.i
  %add58.i.918.i = add i128 %add39.i.917.i, %mul38.i.904.i
  %mul61.i.919.i = mul nuw i128 %conv21.i.896.i, %conv55.i.915.i
  %add62.i.920.i = add i128 %add44.i.908.i, %mul61.i.919.i
  %shr.i.921.i = lshr i128 %add49.i.912.i, 51
  %conv64.i.922.i = and i128 %shr.i.921.i, 18446744073709551615
  %add.i.923.i = add i128 %mul15.i.892.i, %mul30.i.902.i
  %add31.i.924.i = add i128 %add.i.923.i, %mul22.i.897.i
  %add65.i.925.i = add i128 %add31.i.924.i, %conv64.i.922.i
  %conv66.i.926.i = trunc i128 %add49.i.912.i to i64
  %and.i.927.i = and i64 %conv66.i.926.i, 2251799813685247
  %shr67.i.928.i = lshr i128 %add58.i.918.i, 51
  %conv69.i.929.i = and i128 %shr67.i.928.i, 18446744073709551615
  %add70.i.930.i = add i128 %add62.i.920.i, %conv69.i.929.i
  %conv71.i.931.i = trunc i128 %add58.i.918.i to i64
  %and72.i.932.i = and i64 %conv71.i.931.i, 2251799813685247
  %shr73.i.933.i = lshr i128 %add65.i.925.i, 51
  %conv75.i.934.i = and i128 %shr73.i.933.i, 18446744073709551615
  %add35.i.935.i = add i128 %mul34.i.903.i, %mul52.i.913.i
  %add53.i.936.i = add i128 %add35.i.935.i, %mul18.i.894.i
  %add76.i.937.i = add i128 %add53.i.936.i, %conv75.i.934.i
  %conv77.i.938.i = trunc i128 %add65.i.925.i to i64
  %and78.i.939.i = and i64 %conv77.i.938.i, 2251799813685247
  %shr79.i.940.i = lshr i128 %add70.i.930.i, 51
  %conv80.i.941.i = trunc i128 %shr79.i.940.i to i64
  %add81.i.942.i = add i64 %conv80.i.941.i, %and.i.927.i
  %conv82.i.943.i = trunc i128 %add70.i.930.i to i64
  %and83.i.944.i = and i64 %conv82.i.943.i, 2251799813685247
  %shr84.i.945.i = lshr i128 %add76.i.937.i, 51
  %conv85.i.946.i = trunc i128 %shr84.i.945.i to i64
  %mul86.i.947.i = mul i64 %conv85.i.946.i, 19
  %add87.i.948.i = add i64 %mul86.i.947.i, %and72.i.932.i
  %conv88.i.949.i = trunc i128 %add76.i.937.i to i64
  %and89.i.950.i = and i64 %conv88.i.949.i, 2251799813685247
  %shr90.i.951.i = lshr i64 %add81.i.942.i, 51
  %add91.i.952.i = add nuw nsw i64 %shr90.i.951.i, %and78.i.939.i
  %fold.i.953.i = add i64 %conv80.i.941.i, %conv66.i.926.i
  %and92.i.954.i = and i64 %fold.i.953.i, 2251799813685247
  %shr93.i.955.i = lshr i64 %add87.i.948.i, 51
  %add94.i.956.i = add nuw nsw i64 %shr93.i.955.i, %and83.i.944.i
  %fold180.i.957.i = add i64 %mul86.i.947.i, %conv71.i.931.i
  %and95.i.958.i = and i64 %fold180.i.957.i, 2251799813685247
  store i64 %and95.i.958.i, i64* %arraydecay10.i, align 16, !tbaa !5
  store i64 %add94.i.956.i, i64* %arrayidx97.i.539.i, align 8, !tbaa !5
  store i64 %and92.i.954.i, i64* %arrayidx98.i.540.i, align 16, !tbaa !5
  store i64 %add91.i.952.i, i64* %arrayidx99.i.541.i, align 8, !tbaa !5
  store i64 %and89.i.950.i, i64* %arrayidx100.i.542.i, align 16, !tbaa !5
  br label %for.body.63.i

for.body.63.i:                                    ; preds = %for.body.63.i, %for.end.55.i
  %144 = phi i64 [ %and89.i.950.i, %for.end.55.i ], [ %and89.i.866.i, %for.body.63.i ]
  %145 = phi i64 [ %add91.i.952.i, %for.end.55.i ], [ %add91.i.868.i, %for.body.63.i ]
  %146 = phi i64 [ %and92.i.954.i, %for.end.55.i ], [ %and92.i.870.i, %for.body.63.i ]
  %147 = phi i64 [ %add94.i.956.i, %for.end.55.i ], [ %add94.i.872.i, %for.body.63.i ]
  %and95.i.8741475.i = phi i64 [ %and95.i.958.i, %for.end.55.i ], [ %and95.i.874.i, %for.body.63.i ]
  %i.41473.i = phi i32 [ 1, %for.end.55.i ], [ %inc67.i, %for.body.63.i ]
  %conv.i.799.i = zext i64 %and95.i.8741475.i to i128
  %mul.i.800.i = mul nuw nsw i128 %conv.i.799.i, %conv.i.799.i
  %mul6.i.801.i = shl nuw nsw i64 %and95.i.8741475.i, 1
  %conv7.i.802.i = zext i64 %mul6.i.801.i to i128
  %conv8.i.803.i = zext i64 %147 to i128
  %mul9.i.804.i = mul nuw nsw i128 %conv7.i.802.i, %conv8.i.803.i
  %conv11.i.805.i = zext i64 %146 to i128
  %mul12.i.806.i = mul nuw nsw i128 %conv7.i.802.i, %conv11.i.805.i
  %conv14.i.807.i = zext i64 %145 to i128
  %mul15.i.808.i = mul nuw nsw i128 %conv7.i.802.i, %conv14.i.807.i
  %conv17.i.809.i = zext i64 %144 to i128
  %mul18.i.810.i = mul nuw nsw i128 %conv7.i.802.i, %conv17.i.809.i
  %mul20.i.811.i = mul nuw nsw i64 %144, 19
  %conv21.i.812.i = zext i64 %mul20.i.811.i to i128
  %mul22.i.813.i = mul nuw nsw i128 %conv21.i.812.i, %conv17.i.809.i
  %mul25.i.814.i = mul nuw i128 %conv8.i.803.i, %conv8.i.803.i
  %mul27.i.816.i = shl nsw i64 %147, 1
  %conv28.i.817.i = zext i64 %mul27.i.816.i to i128
  %mul30.i.818.i = mul nuw nsw i128 %conv28.i.817.i, %conv11.i.805.i
  %mul34.i.819.i = mul nuw i128 %conv28.i.817.i, %conv14.i.807.i
  %mul38.i.820.i = mul nuw nsw i128 %conv28.i.817.i, %conv21.i.812.i
  %mul41.i.821.i = mul nsw i64 %145, 19
  %conv42.i.822.i = zext i64 %mul41.i.821.i to i128
  %mul43.i.823.i = mul nuw i128 %conv42.i.822.i, %conv14.i.807.i
  %mul45.i.825.i = shl nsw i64 %145, 1
  %conv46.i.826.i = zext i64 %mul45.i.825.i to i128
  %mul48.i.827.i = mul nuw nsw i128 %conv46.i.826.i, %conv21.i.812.i
  %add26.i.815.i = add i128 %mul25.i.814.i, %mul48.i.827.i
  %add49.i.828.i = add i128 %add26.i.815.i, %mul12.i.806.i
  %mul52.i.829.i = mul nuw nsw i128 %conv11.i.805.i, %conv11.i.805.i
  %mul54.i.830.i = shl nuw nsw i64 %146, 1
  %conv55.i.831.i = zext i64 %mul54.i.830.i to i128
  %mul57.i.832.i = mul nuw nsw i128 %conv55.i.831.i, %conv42.i.822.i
  %add39.i.833.i = add nuw nsw i128 %mul.i.800.i, %mul57.i.832.i
  %add58.i.834.i = add nuw nsw i128 %add39.i.833.i, %mul38.i.820.i
  %mul61.i.835.i = mul nuw nsw i128 %conv55.i.831.i, %conv21.i.812.i
  %shr.i.837.i = lshr i128 %add49.i.828.i, 51
  %conv64.i.838.i = and i128 %shr.i.837.i, 18446744073709551615
  %add.i.839.i = add nuw nsw i128 %mul30.i.818.i, %mul22.i.813.i
  %add31.i.840.i = add nuw nsw i128 %add.i.839.i, %mul15.i.808.i
  %add65.i.841.i = add nuw nsw i128 %add31.i.840.i, %conv64.i.838.i
  %conv66.i.842.i = trunc i128 %add49.i.828.i to i64
  %and.i.843.i = and i64 %conv66.i.842.i, 2251799813685247
  %shr67.i.844.i = lshr i128 %add58.i.834.i, 51
  %conv69.i.845.i = and i128 %shr67.i.844.i, 18446744073709551615
  %add44.i.824.i = add i128 %mul61.i.835.i, %mul43.i.823.i
  %add62.i.836.i = add i128 %add44.i.824.i, %mul9.i.804.i
  %add70.i.846.i = add i128 %add62.i.836.i, %conv69.i.845.i
  %conv71.i.847.i = trunc i128 %add58.i.834.i to i64
  %and72.i.848.i = and i64 %conv71.i.847.i, 2251799813685247
  %shr73.i.849.i = lshr i128 %add65.i.841.i, 51
  %conv75.i.850.i = and i128 %shr73.i.849.i, 18446744073709551615
  %add35.i.851.i = add i128 %mul34.i.819.i, %mul52.i.829.i
  %add53.i.852.i = add i128 %add35.i.851.i, %mul18.i.810.i
  %add76.i.853.i = add i128 %add53.i.852.i, %conv75.i.850.i
  %conv77.i.854.i = trunc i128 %add65.i.841.i to i64
  %and78.i.855.i = and i64 %conv77.i.854.i, 2251799813685247
  %shr79.i.856.i = lshr i128 %add70.i.846.i, 51
  %conv80.i.857.i = trunc i128 %shr79.i.856.i to i64
  %add81.i.858.i = add i64 %conv80.i.857.i, %and.i.843.i
  %conv82.i.859.i = trunc i128 %add70.i.846.i to i64
  %and83.i.860.i = and i64 %conv82.i.859.i, 2251799813685247
  %shr84.i.861.i = lshr i128 %add76.i.853.i, 51
  %conv85.i.862.i = trunc i128 %shr84.i.861.i to i64
  %mul86.i.863.i = mul i64 %conv85.i.862.i, 19
  %add87.i.864.i = add i64 %mul86.i.863.i, %and72.i.848.i
  %conv88.i.865.i = trunc i128 %add76.i.853.i to i64
  %and89.i.866.i = and i64 %conv88.i.865.i, 2251799813685247
  %shr90.i.867.i = lshr i64 %add81.i.858.i, 51
  %add91.i.868.i = add nuw nsw i64 %shr90.i.867.i, %and78.i.855.i
  %fold.i.869.i = add i64 %conv80.i.857.i, %conv66.i.842.i
  %and92.i.870.i = and i64 %fold.i.869.i, 2251799813685247
  %shr93.i.871.i = lshr i64 %add87.i.864.i, 51
  %add94.i.872.i = add nuw nsw i64 %shr93.i.871.i, %and83.i.860.i
  %fold180.i.873.i = add i64 %mul86.i.863.i, %conv71.i.847.i
  %and95.i.874.i = and i64 %fold180.i.873.i, 2251799813685247
  %inc67.i = add nuw nsw i32 %i.41473.i, 1
  %exitcond1510.i = icmp eq i32 %inc67.i, 50
  br i1 %exitcond1510.i, label %for.end.68.i, label %for.body.63.i

for.end.68.i:                                     ; preds = %for.body.63.i
  %and95.i.874.i.lcssa = phi i64 [ %and95.i.874.i, %for.body.63.i ]
  %add94.i.872.i.lcssa = phi i64 [ %add94.i.872.i, %for.body.63.i ]
  %and92.i.870.i.lcssa = phi i64 [ %and92.i.870.i, %for.body.63.i ]
  %add91.i.868.i.lcssa = phi i64 [ %add91.i.868.i, %for.body.63.i ]
  %and89.i.866.i.lcssa = phi i64 [ %and89.i.866.i, %for.body.63.i ]
  store i64 %and95.i.874.i.lcssa, i64* %arraydecay10.i, align 16, !tbaa !5
  store i64 %add94.i.872.i.lcssa, i64* %arrayidx97.i.539.i, align 8, !tbaa !5
  store i64 %and92.i.870.i.lcssa, i64* %arrayidx98.i.540.i, align 16, !tbaa !5
  store i64 %add91.i.868.i.lcssa, i64* %arrayidx99.i.541.i, align 8, !tbaa !5
  store i64 %and89.i.866.i.lcssa, i64* %arrayidx100.i.542.i, align 16, !tbaa !5
  call fastcc void @fe51_mul(i64* %arraydecay10.i, i64* %arraydecay10.i, i64* %arraydecay1.i) #1
  %148 = load i64, i64* %arraydecay10.i, align 16, !tbaa !5
  %149 = load i64, i64* %arrayidx97.i.539.i, align 8, !tbaa !5
  %150 = load i64, i64* %arrayidx98.i.540.i, align 16, !tbaa !5
  %151 = load i64, i64* %arrayidx99.i.541.i, align 8, !tbaa !5
  %152 = load i64, i64* %arrayidx100.i.542.i, align 16, !tbaa !5
  %conv.i.631.i = zext i64 %148 to i128
  %mul.i.632.i = mul nuw i128 %conv.i.631.i, %conv.i.631.i
  %mul6.i.633.i = shl i64 %148, 1
  %conv7.i.634.i = zext i64 %mul6.i.633.i to i128
  %conv8.i.635.i = zext i64 %149 to i128
  %mul9.i.636.i = mul nuw i128 %conv7.i.634.i, %conv8.i.635.i
  %conv11.i.637.i = zext i64 %150 to i128
  %mul12.i.638.i = mul nuw i128 %conv11.i.637.i, %conv7.i.634.i
  %conv14.i.639.i = zext i64 %151 to i128
  %mul15.i.640.i = mul nuw i128 %conv14.i.639.i, %conv7.i.634.i
  %conv17.i.641.i = zext i64 %152 to i128
  %mul18.i.642.i = mul nuw i128 %conv17.i.641.i, %conv7.i.634.i
  %mul20.i.643.i = mul i64 %152, 19
  %conv21.i.644.i = zext i64 %mul20.i.643.i to i128
  %mul22.i.645.i = mul nuw i128 %conv21.i.644.i, %conv17.i.641.i
  %mul25.i.646.i = mul nuw i128 %conv8.i.635.i, %conv8.i.635.i
  %add26.i.647.i = add i128 %mul12.i.638.i, %mul25.i.646.i
  %mul27.i.648.i = shl i64 %149, 1
  %conv28.i.649.i = zext i64 %mul27.i.648.i to i128
  %mul30.i.650.i = mul nuw i128 %conv28.i.649.i, %conv11.i.637.i
  %mul34.i.651.i = mul nuw i128 %conv14.i.639.i, %conv28.i.649.i
  %mul38.i.652.i = mul nuw i128 %conv21.i.644.i, %conv28.i.649.i
  %mul41.i.653.i = mul i64 %151, 19
  %conv42.i.654.i = zext i64 %mul41.i.653.i to i128
  %mul43.i.655.i = mul nuw i128 %conv42.i.654.i, %conv14.i.639.i
  %add44.i.656.i = add i128 %mul43.i.655.i, %mul9.i.636.i
  %mul45.i.657.i = shl i64 %151, 1
  %conv46.i.658.i = zext i64 %mul45.i.657.i to i128
  %mul48.i.659.i = mul nuw i128 %conv21.i.644.i, %conv46.i.658.i
  %add49.i.660.i = add i128 %add26.i.647.i, %mul48.i.659.i
  %mul52.i.661.i = mul nuw i128 %conv11.i.637.i, %conv11.i.637.i
  %mul54.i.662.i = shl i64 %150, 1
  %conv55.i.663.i = zext i64 %mul54.i.662.i to i128
  %mul57.i.664.i = mul nuw i128 %conv42.i.654.i, %conv55.i.663.i
  %add39.i.665.i = add i128 %mul57.i.664.i, %mul.i.632.i
  %add58.i.666.i = add i128 %add39.i.665.i, %mul38.i.652.i
  %mul61.i.667.i = mul nuw i128 %conv21.i.644.i, %conv55.i.663.i
  %add62.i.668.i = add i128 %add44.i.656.i, %mul61.i.667.i
  %shr.i.669.i = lshr i128 %add49.i.660.i, 51
  %conv64.i.670.i = and i128 %shr.i.669.i, 18446744073709551615
  %add.i.671.i = add i128 %mul15.i.640.i, %mul30.i.650.i
  %add31.i.672.i = add i128 %add.i.671.i, %mul22.i.645.i
  %add65.i.673.i = add i128 %add31.i.672.i, %conv64.i.670.i
  %conv66.i.674.i = trunc i128 %add49.i.660.i to i64
  %and.i.675.i = and i64 %conv66.i.674.i, 2251799813685247
  %shr67.i.676.i = lshr i128 %add58.i.666.i, 51
  %conv69.i.677.i = and i128 %shr67.i.676.i, 18446744073709551615
  %add70.i.678.i = add i128 %add62.i.668.i, %conv69.i.677.i
  %conv71.i.679.i = trunc i128 %add58.i.666.i to i64
  %and72.i.680.i = and i64 %conv71.i.679.i, 2251799813685247
  %shr73.i.681.i = lshr i128 %add65.i.673.i, 51
  %conv75.i.682.i = and i128 %shr73.i.681.i, 18446744073709551615
  %add35.i.683.i = add i128 %mul34.i.651.i, %mul52.i.661.i
  %add53.i.684.i = add i128 %add35.i.683.i, %mul18.i.642.i
  %add76.i.685.i = add i128 %add53.i.684.i, %conv75.i.682.i
  %conv77.i.686.i = trunc i128 %add65.i.673.i to i64
  %and78.i.687.i = and i64 %conv77.i.686.i, 2251799813685247
  %shr79.i.688.i = lshr i128 %add70.i.678.i, 51
  %conv80.i.689.i = trunc i128 %shr79.i.688.i to i64
  %add81.i.690.i = add i64 %conv80.i.689.i, %and.i.675.i
  %conv82.i.691.i = trunc i128 %add70.i.678.i to i64
  %and83.i.692.i = and i64 %conv82.i.691.i, 2251799813685247
  %shr84.i.693.i = lshr i128 %add76.i.685.i, 51
  %conv85.i.694.i = trunc i128 %shr84.i.693.i to i64
  %mul86.i.695.i = mul i64 %conv85.i.694.i, 19
  %add87.i.696.i = add i64 %mul86.i.695.i, %and72.i.680.i
  %conv88.i.697.i = trunc i128 %add76.i.685.i to i64
  %and89.i.698.i = and i64 %conv88.i.697.i, 2251799813685247
  %shr90.i.699.i = lshr i64 %add81.i.690.i, 51
  %add91.i.700.i = add nuw nsw i64 %shr90.i.699.i, %and78.i.687.i
  %fold.i.701.i = add i64 %conv80.i.689.i, %conv66.i.674.i
  %and92.i.702.i = and i64 %fold.i.701.i, 2251799813685247
  %shr93.i.703.i = lshr i64 %add87.i.696.i, 51
  %add94.i.704.i = add nuw nsw i64 %shr93.i.703.i, %and83.i.692.i
  %fold180.i.705.i = add i64 %mul86.i.695.i, %conv71.i.679.i
  %and95.i.706.i = and i64 %fold180.i.705.i, 2251799813685247
  store i64 %and95.i.706.i, i64* %arraydecay35.i, align 16, !tbaa !5
  store i64 %add94.i.704.i, i64* %arrayidx97.i.1379.i, align 8, !tbaa !5
  store i64 %and92.i.702.i, i64* %arrayidx98.i.1380.i, align 16, !tbaa !5
  store i64 %add91.i.700.i, i64* %arrayidx99.i.1381.i, align 8, !tbaa !5
  store i64 %and89.i.698.i, i64* %arrayidx100.i.1382.i, align 16, !tbaa !5
  br label %for.body.76.i

for.body.76.i:                                    ; preds = %for.body.76.i, %for.end.68.i
  %153 = phi i64 [ %and89.i.698.i, %for.end.68.i ], [ %and89.i.614.i, %for.body.76.i ]
  %154 = phi i64 [ %add91.i.700.i, %for.end.68.i ], [ %add91.i.616.i, %for.body.76.i ]
  %155 = phi i64 [ %and92.i.702.i, %for.end.68.i ], [ %and92.i.618.i, %for.body.76.i ]
  %156 = phi i64 [ %add94.i.704.i, %for.end.68.i ], [ %add94.i.620.i, %for.body.76.i ]
  %and95.i.6221472.i = phi i64 [ %and95.i.706.i, %for.end.68.i ], [ %and95.i.622.i, %for.body.76.i ]
  %i.51471.i = phi i32 [ 1, %for.end.68.i ], [ %inc80.i, %for.body.76.i ]
  %conv.i.547.i = zext i64 %and95.i.6221472.i to i128
  %mul.i.548.i = mul nuw nsw i128 %conv.i.547.i, %conv.i.547.i
  %mul6.i.549.i = shl nuw nsw i64 %and95.i.6221472.i, 1
  %conv7.i.550.i = zext i64 %mul6.i.549.i to i128
  %conv8.i.551.i = zext i64 %156 to i128
  %mul9.i.552.i = mul nuw nsw i128 %conv7.i.550.i, %conv8.i.551.i
  %conv11.i.553.i = zext i64 %155 to i128
  %mul12.i.554.i = mul nuw nsw i128 %conv7.i.550.i, %conv11.i.553.i
  %conv14.i.555.i = zext i64 %154 to i128
  %mul15.i.556.i = mul nuw nsw i128 %conv7.i.550.i, %conv14.i.555.i
  %conv17.i.557.i = zext i64 %153 to i128
  %mul18.i.558.i = mul nuw nsw i128 %conv7.i.550.i, %conv17.i.557.i
  %mul20.i.559.i = mul nuw nsw i64 %153, 19
  %conv21.i.560.i = zext i64 %mul20.i.559.i to i128
  %mul22.i.561.i = mul nuw nsw i128 %conv21.i.560.i, %conv17.i.557.i
  %mul25.i.562.i = mul nuw i128 %conv8.i.551.i, %conv8.i.551.i
  %mul27.i.564.i = shl nsw i64 %156, 1
  %conv28.i.565.i = zext i64 %mul27.i.564.i to i128
  %mul30.i.566.i = mul nuw nsw i128 %conv28.i.565.i, %conv11.i.553.i
  %mul34.i.567.i = mul nuw i128 %conv28.i.565.i, %conv14.i.555.i
  %mul38.i.568.i = mul nuw nsw i128 %conv28.i.565.i, %conv21.i.560.i
  %mul41.i.569.i = mul nsw i64 %154, 19
  %conv42.i.570.i = zext i64 %mul41.i.569.i to i128
  %mul43.i.571.i = mul nuw i128 %conv42.i.570.i, %conv14.i.555.i
  %mul45.i.573.i = shl nsw i64 %154, 1
  %conv46.i.574.i = zext i64 %mul45.i.573.i to i128
  %mul48.i.575.i = mul nuw nsw i128 %conv46.i.574.i, %conv21.i.560.i
  %add26.i.563.i = add i128 %mul25.i.562.i, %mul48.i.575.i
  %add49.i.576.i = add i128 %add26.i.563.i, %mul12.i.554.i
  %mul52.i.577.i = mul nuw nsw i128 %conv11.i.553.i, %conv11.i.553.i
  %mul54.i.578.i = shl nuw nsw i64 %155, 1
  %conv55.i.579.i = zext i64 %mul54.i.578.i to i128
  %mul57.i.580.i = mul nuw nsw i128 %conv55.i.579.i, %conv42.i.570.i
  %add39.i.581.i = add nuw nsw i128 %mul.i.548.i, %mul57.i.580.i
  %add58.i.582.i = add nuw nsw i128 %add39.i.581.i, %mul38.i.568.i
  %mul61.i.583.i = mul nuw nsw i128 %conv55.i.579.i, %conv21.i.560.i
  %shr.i.585.i = lshr i128 %add49.i.576.i, 51
  %conv64.i.586.i = and i128 %shr.i.585.i, 18446744073709551615
  %add.i.587.i = add nuw nsw i128 %mul30.i.566.i, %mul22.i.561.i
  %add31.i.588.i = add nuw nsw i128 %add.i.587.i, %mul15.i.556.i
  %add65.i.589.i = add nuw nsw i128 %add31.i.588.i, %conv64.i.586.i
  %conv66.i.590.i = trunc i128 %add49.i.576.i to i64
  %and.i.591.i = and i64 %conv66.i.590.i, 2251799813685247
  %shr67.i.592.i = lshr i128 %add58.i.582.i, 51
  %conv69.i.593.i = and i128 %shr67.i.592.i, 18446744073709551615
  %add44.i.572.i = add i128 %mul61.i.583.i, %mul43.i.571.i
  %add62.i.584.i = add i128 %add44.i.572.i, %mul9.i.552.i
  %add70.i.594.i = add i128 %add62.i.584.i, %conv69.i.593.i
  %conv71.i.595.i = trunc i128 %add58.i.582.i to i64
  %and72.i.596.i = and i64 %conv71.i.595.i, 2251799813685247
  %shr73.i.597.i = lshr i128 %add65.i.589.i, 51
  %conv75.i.598.i = and i128 %shr73.i.597.i, 18446744073709551615
  %add35.i.599.i = add i128 %mul34.i.567.i, %mul52.i.577.i
  %add53.i.600.i = add i128 %add35.i.599.i, %mul18.i.558.i
  %add76.i.601.i = add i128 %add53.i.600.i, %conv75.i.598.i
  %conv77.i.602.i = trunc i128 %add65.i.589.i to i64
  %and78.i.603.i = and i64 %conv77.i.602.i, 2251799813685247
  %shr79.i.604.i = lshr i128 %add70.i.594.i, 51
  %conv80.i.605.i = trunc i128 %shr79.i.604.i to i64
  %add81.i.606.i = add i64 %conv80.i.605.i, %and.i.591.i
  %conv82.i.607.i = trunc i128 %add70.i.594.i to i64
  %and83.i.608.i = and i64 %conv82.i.607.i, 2251799813685247
  %shr84.i.609.i = lshr i128 %add76.i.601.i, 51
  %conv85.i.610.i = trunc i128 %shr84.i.609.i to i64
  %mul86.i.611.i = mul i64 %conv85.i.610.i, 19
  %add87.i.612.i = add i64 %mul86.i.611.i, %and72.i.596.i
  %conv88.i.613.i = trunc i128 %add76.i.601.i to i64
  %and89.i.614.i = and i64 %conv88.i.613.i, 2251799813685247
  %shr90.i.615.i = lshr i64 %add81.i.606.i, 51
  %add91.i.616.i = add nuw nsw i64 %shr90.i.615.i, %and78.i.603.i
  %fold.i.617.i = add i64 %conv80.i.605.i, %conv66.i.590.i
  %and92.i.618.i = and i64 %fold.i.617.i, 2251799813685247
  %shr93.i.619.i = lshr i64 %add87.i.612.i, 51
  %add94.i.620.i = add nuw nsw i64 %shr93.i.619.i, %and83.i.608.i
  %fold180.i.621.i = add i64 %mul86.i.611.i, %conv71.i.595.i
  %and95.i.622.i = and i64 %fold180.i.621.i, 2251799813685247
  %inc80.i = add nuw nsw i32 %i.51471.i, 1
  %exitcond1509.i = icmp eq i32 %inc80.i, 100
  br i1 %exitcond1509.i, label %for.end.81.i, label %for.body.76.i

for.end.81.i:                                     ; preds = %for.body.76.i
  %and95.i.622.i.lcssa = phi i64 [ %and95.i.622.i, %for.body.76.i ]
  %add94.i.620.i.lcssa = phi i64 [ %add94.i.620.i, %for.body.76.i ]
  %and92.i.618.i.lcssa = phi i64 [ %and92.i.618.i, %for.body.76.i ]
  %add91.i.616.i.lcssa = phi i64 [ %add91.i.616.i, %for.body.76.i ]
  %and89.i.614.i.lcssa = phi i64 [ %and89.i.614.i, %for.body.76.i ]
  store i64 %and95.i.622.i.lcssa, i64* %arraydecay35.i, align 16, !tbaa !5
  store i64 %add94.i.620.i.lcssa, i64* %arrayidx97.i.1379.i, align 8, !tbaa !5
  store i64 %and92.i.618.i.lcssa, i64* %arrayidx98.i.1380.i, align 16, !tbaa !5
  store i64 %add91.i.616.i.lcssa, i64* %arrayidx99.i.1381.i, align 8, !tbaa !5
  store i64 %and89.i.614.i.lcssa, i64* %arrayidx100.i.1382.i, align 16, !tbaa !5
  call fastcc void @fe51_mul(i64* %arraydecay10.i, i64* %arraydecay35.i, i64* %arraydecay10.i) #1
  %arraydecay10.promoted.i = load i64, i64* %arraydecay10.i, align 16, !tbaa !5
  %arrayidx97.i.539.promoted.i = load i64, i64* %arrayidx97.i.539.i, align 8, !tbaa !5
  %arrayidx98.i.540.promoted.i = load i64, i64* %arrayidx98.i.540.i, align 16, !tbaa !5
  %arrayidx99.i.541.promoted.i = load i64, i64* %arrayidx99.i.541.i, align 8, !tbaa !5
  %arrayidx100.i.542.promoted.i = load i64, i64* %arrayidx100.i.542.i, align 16, !tbaa !5
  br label %for.body.87.i

for.body.87.i:                                    ; preds = %for.body.87.i, %for.end.81.i
  %157 = phi i64 [ %arrayidx100.i.542.promoted.i, %for.end.81.i ], [ %and89.i.446.i, %for.body.87.i ]
  %158 = phi i64 [ %arrayidx99.i.541.promoted.i, %for.end.81.i ], [ %add91.i.448.i, %for.body.87.i ]
  %159 = phi i64 [ %arrayidx98.i.540.promoted.i, %for.end.81.i ], [ %and92.i.450.i, %for.body.87.i ]
  %160 = phi i64 [ %arrayidx97.i.539.promoted.i, %for.end.81.i ], [ %add94.i.452.i, %for.body.87.i ]
  %and95.i.4541470.i = phi i64 [ %arraydecay10.promoted.i, %for.end.81.i ], [ %and95.i.454.i, %for.body.87.i ]
  %i.61469.i = phi i32 [ 0, %for.end.81.i ], [ %inc91.i, %for.body.87.i ]
  %conv.i.379.i = zext i64 %and95.i.4541470.i to i128
  %mul.i.380.i = mul nuw i128 %conv.i.379.i, %conv.i.379.i
  %mul6.i.381.i = shl i64 %and95.i.4541470.i, 1
  %conv7.i.382.i = zext i64 %mul6.i.381.i to i128
  %conv8.i.383.i = zext i64 %160 to i128
  %mul9.i.384.i = mul nuw i128 %conv7.i.382.i, %conv8.i.383.i
  %conv11.i.385.i = zext i64 %159 to i128
  %mul12.i.386.i = mul nuw i128 %conv7.i.382.i, %conv11.i.385.i
  %conv14.i.387.i = zext i64 %158 to i128
  %mul15.i.388.i = mul nuw i128 %conv7.i.382.i, %conv14.i.387.i
  %conv17.i.389.i = zext i64 %157 to i128
  %mul18.i.390.i = mul nuw i128 %conv7.i.382.i, %conv17.i.389.i
  %mul20.i.391.i = mul i64 %157, 19
  %conv21.i.392.i = zext i64 %mul20.i.391.i to i128
  %mul22.i.393.i = mul nuw i128 %conv21.i.392.i, %conv17.i.389.i
  %mul25.i.394.i = mul nuw i128 %conv8.i.383.i, %conv8.i.383.i
  %mul27.i.396.i = shl i64 %160, 1
  %conv28.i.397.i = zext i64 %mul27.i.396.i to i128
  %mul30.i.398.i = mul nuw i128 %conv28.i.397.i, %conv11.i.385.i
  %mul34.i.399.i = mul nuw i128 %conv28.i.397.i, %conv14.i.387.i
  %mul38.i.400.i = mul nuw i128 %conv28.i.397.i, %conv21.i.392.i
  %mul41.i.401.i = mul i64 %158, 19
  %conv42.i.402.i = zext i64 %mul41.i.401.i to i128
  %mul43.i.403.i = mul nuw i128 %conv42.i.402.i, %conv14.i.387.i
  %mul45.i.405.i = shl i64 %158, 1
  %conv46.i.406.i = zext i64 %mul45.i.405.i to i128
  %mul48.i.407.i = mul nuw i128 %conv46.i.406.i, %conv21.i.392.i
  %add26.i.395.i = add i128 %mul25.i.394.i, %mul48.i.407.i
  %add49.i.408.i = add i128 %add26.i.395.i, %mul12.i.386.i
  %mul52.i.409.i = mul nuw i128 %conv11.i.385.i, %conv11.i.385.i
  %mul54.i.410.i = shl i64 %159, 1
  %conv55.i.411.i = zext i64 %mul54.i.410.i to i128
  %mul57.i.412.i = mul nuw i128 %conv55.i.411.i, %conv42.i.402.i
  %add39.i.413.i = add i128 %mul.i.380.i, %mul57.i.412.i
  %add58.i.414.i = add i128 %add39.i.413.i, %mul38.i.400.i
  %mul61.i.415.i = mul nuw i128 %conv55.i.411.i, %conv21.i.392.i
  %shr.i.417.i = lshr i128 %add49.i.408.i, 51
  %conv64.i.418.i = and i128 %shr.i.417.i, 18446744073709551615
  %add.i.419.i = add i128 %mul30.i.398.i, %mul22.i.393.i
  %add31.i.420.i = add i128 %add.i.419.i, %mul15.i.388.i
  %add65.i.421.i = add i128 %add31.i.420.i, %conv64.i.418.i
  %conv66.i.422.i = trunc i128 %add49.i.408.i to i64
  %and.i.423.i = and i64 %conv66.i.422.i, 2251799813685247
  %shr67.i.424.i = lshr i128 %add58.i.414.i, 51
  %conv69.i.425.i = and i128 %shr67.i.424.i, 18446744073709551615
  %add44.i.404.i = add i128 %mul61.i.415.i, %mul43.i.403.i
  %add62.i.416.i = add i128 %add44.i.404.i, %mul9.i.384.i
  %add70.i.426.i = add i128 %add62.i.416.i, %conv69.i.425.i
  %conv71.i.427.i = trunc i128 %add58.i.414.i to i64
  %and72.i.428.i = and i64 %conv71.i.427.i, 2251799813685247
  %shr73.i.429.i = lshr i128 %add65.i.421.i, 51
  %conv75.i.430.i = and i128 %shr73.i.429.i, 18446744073709551615
  %add35.i.431.i = add i128 %mul34.i.399.i, %mul52.i.409.i
  %add53.i.432.i = add i128 %add35.i.431.i, %mul18.i.390.i
  %add76.i.433.i = add i128 %add53.i.432.i, %conv75.i.430.i
  %conv77.i.434.i = trunc i128 %add65.i.421.i to i64
  %and78.i.435.i = and i64 %conv77.i.434.i, 2251799813685247
  %shr79.i.436.i = lshr i128 %add70.i.426.i, 51
  %conv80.i.437.i = trunc i128 %shr79.i.436.i to i64
  %add81.i.438.i = add i64 %conv80.i.437.i, %and.i.423.i
  %conv82.i.439.i = trunc i128 %add70.i.426.i to i64
  %and83.i.440.i = and i64 %conv82.i.439.i, 2251799813685247
  %shr84.i.441.i = lshr i128 %add76.i.433.i, 51
  %conv85.i.442.i = trunc i128 %shr84.i.441.i to i64
  %mul86.i.443.i = mul i64 %conv85.i.442.i, 19
  %add87.i.444.i = add i64 %mul86.i.443.i, %and72.i.428.i
  %conv88.i.445.i = trunc i128 %add76.i.433.i to i64
  %and89.i.446.i = and i64 %conv88.i.445.i, 2251799813685247
  %shr90.i.447.i = lshr i64 %add81.i.438.i, 51
  %add91.i.448.i = add nuw nsw i64 %shr90.i.447.i, %and78.i.435.i
  %fold.i.449.i = add i64 %conv80.i.437.i, %conv66.i.422.i
  %and92.i.450.i = and i64 %fold.i.449.i, 2251799813685247
  %shr93.i.451.i = lshr i64 %add87.i.444.i, 51
  %add94.i.452.i = add nuw nsw i64 %shr93.i.451.i, %and83.i.440.i
  %fold180.i.453.i = add i64 %mul86.i.443.i, %conv71.i.427.i
  %and95.i.454.i = and i64 %fold180.i.453.i, 2251799813685247
  %inc91.i = add nuw nsw i32 %i.61469.i, 1
  %exitcond1508.i = icmp eq i32 %inc91.i, 50
  br i1 %exitcond1508.i, label %for.end.92.i, label %for.body.87.i

for.end.92.i:                                     ; preds = %for.body.87.i
  %and95.i.454.i.lcssa = phi i64 [ %and95.i.454.i, %for.body.87.i ]
  %add94.i.452.i.lcssa = phi i64 [ %add94.i.452.i, %for.body.87.i ]
  %and92.i.450.i.lcssa = phi i64 [ %and92.i.450.i, %for.body.87.i ]
  %add91.i.448.i.lcssa = phi i64 [ %add91.i.448.i, %for.body.87.i ]
  %and89.i.446.i.lcssa = phi i64 [ %and89.i.446.i, %for.body.87.i ]
  store i64 %and95.i.454.i.lcssa, i64* %arraydecay10.i, align 16, !tbaa !5
  store i64 %add94.i.452.i.lcssa, i64* %arrayidx97.i.539.i, align 8, !tbaa !5
  store i64 %and92.i.450.i.lcssa, i64* %arrayidx98.i.540.i, align 16, !tbaa !5
  store i64 %add91.i.448.i.lcssa, i64* %arrayidx99.i.541.i, align 8, !tbaa !5
  store i64 %and89.i.446.i.lcssa, i64* %arrayidx100.i.542.i, align 16, !tbaa !5
  call fastcc void @fe51_mul(i64* %arraydecay1.i, i64* %arraydecay10.i, i64* %arraydecay1.i) #1
  %arraydecay1.promoted.i = load i64, i64* %arraydecay1.i, align 16, !tbaa !5
  %arrayidx97.i.203.promoted.i = load i64, i64* %arrayidx97.i.203.i, align 8, !tbaa !5
  %arrayidx98.i.204.promoted.i = load i64, i64* %arrayidx98.i.204.i, align 16, !tbaa !5
  %arrayidx99.i.205.promoted.i = load i64, i64* %arrayidx99.i.205.i, align 8, !tbaa !5
  %arrayidx100.i.206.promoted.i = load i64, i64* %arrayidx100.i.206.i, align 16, !tbaa !5
  br label %for.body.98.i

for.body.98.i:                                    ; preds = %for.body.98.i, %for.end.92.i
  %161 = phi i64 [ %arrayidx100.i.206.promoted.i, %for.end.92.i ], [ %and89.i.278.i, %for.body.98.i ]
  %162 = phi i64 [ %arrayidx99.i.205.promoted.i, %for.end.92.i ], [ %add91.i.280.i, %for.body.98.i ]
  %163 = phi i64 [ %arrayidx98.i.204.promoted.i, %for.end.92.i ], [ %and92.i.282.i, %for.body.98.i ]
  %164 = phi i64 [ %arrayidx97.i.203.promoted.i, %for.end.92.i ], [ %add94.i.284.i, %for.body.98.i ]
  %and95.i.2861468.i = phi i64 [ %arraydecay1.promoted.i, %for.end.92.i ], [ %and95.i.286.i, %for.body.98.i ]
  %i.71467.i = phi i32 [ 0, %for.end.92.i ], [ %inc102.i, %for.body.98.i ]
  %conv.i.211.i = zext i64 %and95.i.2861468.i to i128
  %mul.i.212.i = mul nuw i128 %conv.i.211.i, %conv.i.211.i
  %mul6.i.213.i = shl i64 %and95.i.2861468.i, 1
  %conv7.i.214.i = zext i64 %mul6.i.213.i to i128
  %conv8.i.215.i = zext i64 %164 to i128
  %mul9.i.216.i = mul nuw i128 %conv7.i.214.i, %conv8.i.215.i
  %conv11.i.217.i = zext i64 %163 to i128
  %mul12.i.218.i = mul nuw i128 %conv7.i.214.i, %conv11.i.217.i
  %conv14.i.219.i = zext i64 %162 to i128
  %mul15.i.220.i = mul nuw i128 %conv7.i.214.i, %conv14.i.219.i
  %conv17.i.221.i = zext i64 %161 to i128
  %mul18.i.222.i = mul nuw i128 %conv7.i.214.i, %conv17.i.221.i
  %mul20.i.223.i = mul i64 %161, 19
  %conv21.i.224.i = zext i64 %mul20.i.223.i to i128
  %mul22.i.225.i = mul nuw i128 %conv21.i.224.i, %conv17.i.221.i
  %mul25.i.226.i = mul nuw i128 %conv8.i.215.i, %conv8.i.215.i
  %mul27.i.228.i = shl i64 %164, 1
  %conv28.i.229.i = zext i64 %mul27.i.228.i to i128
  %mul30.i.230.i = mul nuw i128 %conv28.i.229.i, %conv11.i.217.i
  %mul34.i.231.i = mul nuw i128 %conv28.i.229.i, %conv14.i.219.i
  %mul38.i.232.i = mul nuw i128 %conv28.i.229.i, %conv21.i.224.i
  %mul41.i.233.i = mul i64 %162, 19
  %conv42.i.234.i = zext i64 %mul41.i.233.i to i128
  %mul43.i.235.i = mul nuw i128 %conv42.i.234.i, %conv14.i.219.i
  %mul45.i.237.i = shl i64 %162, 1
  %conv46.i.238.i = zext i64 %mul45.i.237.i to i128
  %mul48.i.239.i = mul nuw i128 %conv46.i.238.i, %conv21.i.224.i
  %add26.i.227.i = add i128 %mul25.i.226.i, %mul48.i.239.i
  %add49.i.240.i = add i128 %add26.i.227.i, %mul12.i.218.i
  %mul52.i.241.i = mul nuw i128 %conv11.i.217.i, %conv11.i.217.i
  %mul54.i.242.i = shl i64 %163, 1
  %conv55.i.243.i = zext i64 %mul54.i.242.i to i128
  %mul57.i.244.i = mul nuw i128 %conv55.i.243.i, %conv42.i.234.i
  %add39.i.245.i = add i128 %mul.i.212.i, %mul57.i.244.i
  %add58.i.246.i = add i128 %add39.i.245.i, %mul38.i.232.i
  %mul61.i.247.i = mul nuw i128 %conv55.i.243.i, %conv21.i.224.i
  %shr.i.249.i = lshr i128 %add49.i.240.i, 51
  %conv64.i.250.i = and i128 %shr.i.249.i, 18446744073709551615
  %add.i.251.i = add i128 %mul30.i.230.i, %mul22.i.225.i
  %add31.i.252.i = add i128 %add.i.251.i, %mul15.i.220.i
  %add65.i.253.i = add i128 %add31.i.252.i, %conv64.i.250.i
  %conv66.i.254.i = trunc i128 %add49.i.240.i to i64
  %and.i.255.i = and i64 %conv66.i.254.i, 2251799813685247
  %shr67.i.256.i = lshr i128 %add58.i.246.i, 51
  %conv69.i.257.i = and i128 %shr67.i.256.i, 18446744073709551615
  %add44.i.236.i = add i128 %mul61.i.247.i, %mul43.i.235.i
  %add62.i.248.i = add i128 %add44.i.236.i, %mul9.i.216.i
  %add70.i.258.i = add i128 %add62.i.248.i, %conv69.i.257.i
  %conv71.i.259.i = trunc i128 %add58.i.246.i to i64
  %and72.i.260.i = and i64 %conv71.i.259.i, 2251799813685247
  %shr73.i.261.i = lshr i128 %add65.i.253.i, 51
  %conv75.i.262.i = and i128 %shr73.i.261.i, 18446744073709551615
  %add35.i.263.i = add i128 %mul34.i.231.i, %mul52.i.241.i
  %add53.i.264.i = add i128 %add35.i.263.i, %mul18.i.222.i
  %add76.i.265.i = add i128 %add53.i.264.i, %conv75.i.262.i
  %conv77.i.266.i = trunc i128 %add65.i.253.i to i64
  %and78.i.267.i = and i64 %conv77.i.266.i, 2251799813685247
  %shr79.i.268.i = lshr i128 %add70.i.258.i, 51
  %conv80.i.269.i = trunc i128 %shr79.i.268.i to i64
  %add81.i.270.i = add i64 %conv80.i.269.i, %and.i.255.i
  %conv82.i.271.i = trunc i128 %add70.i.258.i to i64
  %and83.i.272.i = and i64 %conv82.i.271.i, 2251799813685247
  %shr84.i.273.i = lshr i128 %add76.i.265.i, 51
  %conv85.i.274.i = trunc i128 %shr84.i.273.i to i64
  %mul86.i.275.i = mul i64 %conv85.i.274.i, 19
  %add87.i.276.i = add i64 %mul86.i.275.i, %and72.i.260.i
  %conv88.i.277.i = trunc i128 %add76.i.265.i to i64
  %and89.i.278.i = and i64 %conv88.i.277.i, 2251799813685247
  %shr90.i.279.i = lshr i64 %add81.i.270.i, 51
  %add91.i.280.i = add nuw nsw i64 %shr90.i.279.i, %and78.i.267.i
  %fold.i.281.i = add i64 %conv80.i.269.i, %conv66.i.254.i
  %and92.i.282.i = and i64 %fold.i.281.i, 2251799813685247
  %shr93.i.283.i = lshr i64 %add87.i.276.i, 51
  %add94.i.284.i = add nuw nsw i64 %shr93.i.283.i, %and83.i.272.i
  %fold180.i.285.i = add i64 %mul86.i.275.i, %conv71.i.259.i
  %and95.i.286.i = and i64 %fold180.i.285.i, 2251799813685247
  %inc102.i = add nuw nsw i32 %i.71467.i, 1
  %exitcond.i = icmp eq i32 %inc102.i, 5
  br i1 %exitcond.i, label %fe51_invert.exit, label %for.body.98.i

fe51_invert.exit:                                 ; preds = %for.body.98.i
  %and95.i.286.i.lcssa = phi i64 [ %and95.i.286.i, %for.body.98.i ]
  %add94.i.284.i.lcssa = phi i64 [ %add94.i.284.i, %for.body.98.i ]
  %and92.i.282.i.lcssa = phi i64 [ %and92.i.282.i, %for.body.98.i ]
  %add91.i.280.i.lcssa = phi i64 [ %add91.i.280.i, %for.body.98.i ]
  %and89.i.278.i.lcssa = phi i64 [ %and89.i.278.i, %for.body.98.i ]
  store i64 %and95.i.286.i.lcssa, i64* %arraydecay1.i, align 16, !tbaa !5
  store i64 %add94.i.284.i.lcssa, i64* %arrayidx97.i.203.i, align 8, !tbaa !5
  store i64 %and92.i.282.i.lcssa, i64* %arrayidx98.i.204.i, align 16, !tbaa !5
  store i64 %add91.i.280.i.lcssa, i64* %arrayidx99.i.205.i, align 8, !tbaa !5
  store i64 %and89.i.278.i.lcssa, i64* %arrayidx100.i.206.i, align 16, !tbaa !5
  call fastcc void @fe51_mul(i64* %arraydecay10, i64* %arraydecay1.i, i64* %arraydecay.i) #1
  call void @llvm.lifetime.end(i64 40, i8* %97) #1
  call void @llvm.lifetime.end(i64 40, i8* %96) #1
  call void @llvm.lifetime.end(i64 40, i8* %95) #1
  call void @llvm.lifetime.end(i64 40, i8* %94) #1
  call fastcc void @fe51_mul(i64* %arraydecay9, i64* %arraydecay9, i64* %arraydecay10)
  %165 = load i64, i64* %arraydecay9, align 16, !tbaa !5
  %166 = load i64, i64* %arrayidx1.i.92, align 8, !tbaa !5
  %167 = load i64, i64* %arrayidx.2.i, align 16, !tbaa !5
  %168 = load i64, i64* %arrayidx.3.i, align 8, !tbaa !5
  %169 = load i64, i64* %arrayidx.4.i, align 16, !tbaa !5
  %add.i = add i64 %165, 19
  %shr.i.88 = lshr i64 %add.i, 51
  %add5.i = add i64 %shr.i.88, %166
  %shr6.i = lshr i64 %add5.i, 51
  %add7.i = add i64 %shr6.i, %167
  %shr8.i = lshr i64 %add7.i, 51
  %add9.i = add i64 %shr8.i, %168
  %shr10.i = lshr i64 %add9.i, 51
  %add11.i = add i64 %shr10.i, %169
  %shr12.i.89 = lshr i64 %add11.i, 51
  %mul.i = mul nuw nsw i64 %shr12.i.89, 19
  %add13.i = add i64 %mul.i, %165
  %shr14.i = lshr i64 %add13.i, 51
  %add15.i = add i64 %shr14.i, %166
  %shr16.i = lshr i64 %add15.i, 51
  %add17.i = add i64 %shr16.i, %167
  %shr19.i = lshr i64 %add17.i, 51
  %add20.i = add i64 %shr19.i, %168
  %shr22.i = lshr i64 %add20.i, 51
  %add23.i = add i64 %shr22.i, %169
  %conv.i = trunc i64 %add13.i to i8
  store i8 %conv.i, i8* %out, align 1, !tbaa !2
  %shr28.i = lshr i64 %add13.i, 8
  %conv29.i = trunc i64 %shr28.i to i8
  %arrayidx30.i = getelementptr inbounds i8, i8* %out, i64 1
  store i8 %conv29.i, i8* %arrayidx30.i, align 1, !tbaa !2
  %shr31.i = lshr i64 %add13.i, 16
  %conv32.i = trunc i64 %shr31.i to i8
  %arrayidx33.i = getelementptr inbounds i8, i8* %out, i64 2
  store i8 %conv32.i, i8* %arrayidx33.i, align 1, !tbaa !2
  %shr34.i = lshr i64 %add13.i, 24
  %conv35.i = trunc i64 %shr34.i to i8
  %arrayidx36.i = getelementptr inbounds i8, i8* %out, i64 3
  store i8 %conv35.i, i8* %arrayidx36.i, align 1, !tbaa !2
  %shr37.i = lshr i64 %add13.i, 32
  %conv38.i = trunc i64 %shr37.i to i8
  %arrayidx39.i = getelementptr inbounds i8, i8* %out, i64 4
  store i8 %conv38.i, i8* %arrayidx39.i, align 1, !tbaa !2
  %shr40.i = lshr i64 %add13.i, 40
  %conv41.i = trunc i64 %shr40.i to i8
  %arrayidx42.i = getelementptr inbounds i8, i8* %out, i64 5
  store i8 %conv41.i, i8* %arrayidx42.i, align 1, !tbaa !2
  %and.i.90 = lshr i64 %add13.i, 48
  %shr43.i = and i64 %and.i.90, 7
  %shl.i.91 = shl i64 %add15.i, 3
  %or.i = or i64 %shl.i.91, %shr43.i
  %conv46.i = trunc i64 %or.i to i8
  %arrayidx47.i = getelementptr inbounds i8, i8* %out, i64 6
  store i8 %conv46.i, i8* %arrayidx47.i, align 1, !tbaa !2
  %shr48.i = lshr i64 %add15.i, 5
  %conv49.i = trunc i64 %shr48.i to i8
  %arrayidx50.i = getelementptr inbounds i8, i8* %out, i64 7
  store i8 %conv49.i, i8* %arrayidx50.i, align 1, !tbaa !2
  %shr51.i = lshr i64 %add15.i, 13
  %conv52.i = trunc i64 %shr51.i to i8
  %arrayidx53.i = getelementptr inbounds i8, i8* %out, i64 8
  store i8 %conv52.i, i8* %arrayidx53.i, align 1, !tbaa !2
  %shr54.i = lshr i64 %add15.i, 21
  %conv55.i = trunc i64 %shr54.i to i8
  %arrayidx56.i = getelementptr inbounds i8, i8* %out, i64 9
  store i8 %conv55.i, i8* %arrayidx56.i, align 1, !tbaa !2
  %shr57.i = lshr i64 %add15.i, 29
  %conv58.i = trunc i64 %shr57.i to i8
  %arrayidx59.i = getelementptr inbounds i8, i8* %out, i64 10
  store i8 %conv58.i, i8* %arrayidx59.i, align 1, !tbaa !2
  %shr60.i = lshr i64 %add15.i, 37
  %conv61.i = trunc i64 %shr60.i to i8
  %arrayidx62.i = getelementptr inbounds i8, i8* %out, i64 11
  store i8 %conv61.i, i8* %arrayidx62.i, align 1, !tbaa !2
  %and18.i = lshr i64 %add15.i, 45
  %shr63.i = and i64 %and18.i, 63
  %shl65.i = shl i64 %add17.i, 6
  %or67.i = or i64 %shl65.i, %shr63.i
  %conv68.i = trunc i64 %or67.i to i8
  %arrayidx69.i = getelementptr inbounds i8, i8* %out, i64 12
  store i8 %conv68.i, i8* %arrayidx69.i, align 1, !tbaa !2
  %shr70.i = lshr i64 %add17.i, 2
  %conv71.i = trunc i64 %shr70.i to i8
  %arrayidx72.i = getelementptr inbounds i8, i8* %out, i64 13
  store i8 %conv71.i, i8* %arrayidx72.i, align 1, !tbaa !2
  %shr73.i = lshr i64 %add17.i, 10
  %conv74.i = trunc i64 %shr73.i to i8
  %arrayidx75.i = getelementptr inbounds i8, i8* %out, i64 14
  store i8 %conv74.i, i8* %arrayidx75.i, align 1, !tbaa !2
  %shr76.i = lshr i64 %add17.i, 18
  %conv77.i = trunc i64 %shr76.i to i8
  %arrayidx78.i = getelementptr inbounds i8, i8* %out, i64 15
  store i8 %conv77.i, i8* %arrayidx78.i, align 1, !tbaa !2
  %shr79.i = lshr i64 %add17.i, 26
  %conv80.i = trunc i64 %shr79.i to i8
  %arrayidx81.i = getelementptr inbounds i8, i8* %out, i64 16
  store i8 %conv80.i, i8* %arrayidx81.i, align 1, !tbaa !2
  %shr82.i = lshr i64 %add17.i, 34
  %conv83.i = trunc i64 %shr82.i to i8
  %arrayidx84.i = getelementptr inbounds i8, i8* %out, i64 17
  store i8 %conv83.i, i8* %arrayidx84.i, align 1, !tbaa !2
  %shr85.i = lshr i64 %add17.i, 42
  %conv86.i = trunc i64 %shr85.i to i8
  %arrayidx87.i = getelementptr inbounds i8, i8* %out, i64 18
  store i8 %conv86.i, i8* %arrayidx87.i, align 1, !tbaa !2
  %and21.i = lshr i64 %add17.i, 50
  %shr88.i = and i64 %and21.i, 1
  %shl90.i = shl i64 %add20.i, 1
  %or92.i = or i64 %shl90.i, %shr88.i
  %conv93.i = trunc i64 %or92.i to i8
  %arrayidx94.i = getelementptr inbounds i8, i8* %out, i64 19
  store i8 %conv93.i, i8* %arrayidx94.i, align 1, !tbaa !2
  %shr95.i = lshr i64 %add20.i, 7
  %conv96.i = trunc i64 %shr95.i to i8
  %arrayidx97.i = getelementptr inbounds i8, i8* %out, i64 20
  store i8 %conv96.i, i8* %arrayidx97.i, align 1, !tbaa !2
  %shr98.i = lshr i64 %add20.i, 15
  %conv99.i = trunc i64 %shr98.i to i8
  %arrayidx100.i = getelementptr inbounds i8, i8* %out, i64 21
  store i8 %conv99.i, i8* %arrayidx100.i, align 1, !tbaa !2
  %shr101.i = lshr i64 %add20.i, 23
  %conv102.i = trunc i64 %shr101.i to i8
  %arrayidx103.i = getelementptr inbounds i8, i8* %out, i64 22
  store i8 %conv102.i, i8* %arrayidx103.i, align 1, !tbaa !2
  %shr104.i = lshr i64 %add20.i, 31
  %conv105.i = trunc i64 %shr104.i to i8
  %arrayidx106.i = getelementptr inbounds i8, i8* %out, i64 23
  store i8 %conv105.i, i8* %arrayidx106.i, align 1, !tbaa !2
  %shr107.i = lshr i64 %add20.i, 39
  %conv108.i = trunc i64 %shr107.i to i8
  %arrayidx109.i = getelementptr inbounds i8, i8* %out, i64 24
  store i8 %conv108.i, i8* %arrayidx109.i, align 1, !tbaa !2
  %and24.i = lshr i64 %add20.i, 47
  %shr110.i = and i64 %and24.i, 15
  %shl112.i = shl i64 %add23.i, 4
  %or114.i = or i64 %shl112.i, %shr110.i
  %conv115.i = trunc i64 %or114.i to i8
  %arrayidx116.i = getelementptr inbounds i8, i8* %out, i64 25
  store i8 %conv115.i, i8* %arrayidx116.i, align 1, !tbaa !2
  %shr117.i = lshr i64 %add23.i, 4
  %conv118.i = trunc i64 %shr117.i to i8
  %arrayidx119.i = getelementptr inbounds i8, i8* %out, i64 26
  store i8 %conv118.i, i8* %arrayidx119.i, align 1, !tbaa !2
  %shr120.i = lshr i64 %add23.i, 12
  %conv121.i = trunc i64 %shr120.i to i8
  %arrayidx122.i = getelementptr inbounds i8, i8* %out, i64 27
  store i8 %conv121.i, i8* %arrayidx122.i, align 1, !tbaa !2
  %shr123.i = lshr i64 %add23.i, 20
  %conv124.i = trunc i64 %shr123.i to i8
  %arrayidx125.i = getelementptr inbounds i8, i8* %out, i64 28
  store i8 %conv124.i, i8* %arrayidx125.i, align 1, !tbaa !2
  %shr126.i = lshr i64 %add23.i, 28
  %conv127.i = trunc i64 %shr126.i to i8
  %arrayidx128.i = getelementptr inbounds i8, i8* %out, i64 29
  store i8 %conv127.i, i8* %arrayidx128.i, align 1, !tbaa !2
  %shr129.i = lshr i64 %add23.i, 36
  %conv130.i = trunc i64 %shr129.i to i8
  %arrayidx131.i = getelementptr inbounds i8, i8* %out, i64 30
  store i8 %conv130.i, i8* %arrayidx131.i, align 1, !tbaa !2
  %and25.i = lshr i64 %add23.i, 44
  %and25.tr.i = trunc i64 %and25.i to i8
  %conv133.i = and i8 %and25.tr.i, 127
  %arrayidx134.i = getelementptr inbounds i8, i8* %out, i64 31
  store i8 %conv133.i, i8* %arrayidx134.i, align 1, !tbaa !2
  call void @OPENSSL_cleanse(i8* %6, i64 32) #1
  call void @llvm.lifetime.end(i64 32, i8* %6) #1
  call void @llvm.lifetime.end(i64 40, i8* %5) #1
  call void @llvm.lifetime.end(i64 40, i8* %4) #1
  call void @llvm.lifetime.end(i64 40, i8* %3) #1
  call void @llvm.lifetime.end(i64 40, i8* %2) #1
  call void @llvm.lifetime.end(i64 40, i8* %1) #1
  call void @llvm.lifetime.end(i64 40, i8* %0) #1
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #1

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @fe51_mul(i64* nocapture %h, i64* nocapture readonly %f, i64* nocapture readonly %g) #0 {
entry:
  %0 = load i64, i64* %f, align 8, !tbaa !5
  %conv = zext i64 %0 to i128
  %1 = load i64, i64* %g, align 8, !tbaa !5
  %conv2 = zext i64 %1 to i128
  %mul = mul nuw i128 %conv2, %conv
  %arrayidx4 = getelementptr inbounds i64, i64* %g, i64 1
  %2 = load i64, i64* %arrayidx4, align 8, !tbaa !5
  %conv5 = zext i64 %2 to i128
  %mul6 = mul nuw i128 %conv5, %conv
  %arrayidx8 = getelementptr inbounds i64, i64* %g, i64 2
  %3 = load i64, i64* %arrayidx8, align 8, !tbaa !5
  %conv9 = zext i64 %3 to i128
  %mul10 = mul nuw i128 %conv9, %conv
  %arrayidx12 = getelementptr inbounds i64, i64* %g, i64 3
  %4 = load i64, i64* %arrayidx12, align 8, !tbaa !5
  %conv13 = zext i64 %4 to i128
  %mul14 = mul nuw i128 %conv13, %conv
  %arrayidx16 = getelementptr inbounds i64, i64* %g, i64 4
  %5 = load i64, i64* %arrayidx16, align 8, !tbaa !5
  %conv17 = zext i64 %5 to i128
  %mul18 = mul nuw i128 %conv17, %conv
  %arrayidx19 = getelementptr inbounds i64, i64* %f, i64 1
  %6 = load i64, i64* %arrayidx19, align 8, !tbaa !5
  %conv20 = zext i64 %6 to i128
  %mul21 = mul i64 %5, 19
  %conv22 = zext i64 %mul21 to i128
  %mul23 = mul nuw i128 %conv20, %conv22
  %add = add i128 %mul23, %mul
  %mul26 = mul nuw i128 %conv20, %conv2
  %add27 = add i128 %mul26, %mul6
  %mul30 = mul nuw i128 %conv20, %conv5
  %add31 = add i128 %mul30, %mul10
  %mul34 = mul nuw i128 %conv20, %conv9
  %add35 = add i128 %mul34, %mul14
  %mul38 = mul nuw i128 %conv20, %conv13
  %add39 = add i128 %mul38, %mul18
  %arrayidx40 = getelementptr inbounds i64, i64* %f, i64 2
  %7 = load i64, i64* %arrayidx40, align 8, !tbaa !5
  %conv41 = zext i64 %7 to i128
  %mul42 = mul i64 %4, 19
  %conv43 = zext i64 %mul42 to i128
  %mul44 = mul nuw i128 %conv41, %conv43
  %add45 = add i128 %add, %mul44
  %mul48 = mul nuw i128 %conv41, %conv22
  %add49 = add i128 %add27, %mul48
  %mul52 = mul nuw i128 %conv41, %conv2
  %add53 = add i128 %add31, %mul52
  %mul56 = mul nuw i128 %conv41, %conv5
  %add57 = add i128 %add35, %mul56
  %mul60 = mul nuw i128 %conv41, %conv9
  %add61 = add i128 %add39, %mul60
  %arrayidx62 = getelementptr inbounds i64, i64* %f, i64 3
  %8 = load i64, i64* %arrayidx62, align 8, !tbaa !5
  %conv63 = zext i64 %8 to i128
  %mul64 = mul i64 %3, 19
  %conv65 = zext i64 %mul64 to i128
  %mul66 = mul nuw i128 %conv63, %conv65
  %add67 = add i128 %add45, %mul66
  %mul70 = mul nuw i128 %conv63, %conv43
  %add71 = add i128 %add49, %mul70
  %mul74 = mul nuw i128 %conv63, %conv22
  %add75 = add i128 %add53, %mul74
  %mul78 = mul nuw i128 %conv63, %conv2
  %add79 = add i128 %add57, %mul78
  %mul82 = mul nuw i128 %conv63, %conv5
  %add83 = add i128 %add61, %mul82
  %arrayidx84 = getelementptr inbounds i64, i64* %f, i64 4
  %9 = load i64, i64* %arrayidx84, align 8, !tbaa !5
  %conv85 = zext i64 %9 to i128
  %mul86 = mul i64 %2, 19
  %conv87 = zext i64 %mul86 to i128
  %mul88 = mul nuw i128 %conv85, %conv87
  %add89 = add i128 %add67, %mul88
  %mul92 = mul nuw i128 %conv85, %conv65
  %add93 = add i128 %add71, %mul92
  %mul96 = mul nuw i128 %conv85, %conv43
  %add97 = add i128 %add75, %mul96
  %mul100 = mul nuw i128 %conv85, %conv22
  %add101 = add i128 %add79, %mul100
  %mul104 = mul nuw i128 %conv85, %conv2
  %add105 = add i128 %add83, %mul104
  %shr = lshr i128 %add97, 51
  %conv107 = and i128 %shr, 18446744073709551615
  %add108 = add i128 %add101, %conv107
  %conv109 = trunc i128 %add97 to i64
  %and = and i64 %conv109, 2251799813685247
  %shr110 = lshr i128 %add89, 51
  %conv112 = and i128 %shr110, 18446744073709551615
  %add113 = add i128 %add93, %conv112
  %conv114 = trunc i128 %add89 to i64
  %and115 = and i64 %conv114, 2251799813685247
  %shr116 = lshr i128 %add108, 51
  %conv118 = and i128 %shr116, 18446744073709551615
  %add119 = add i128 %add105, %conv118
  %conv120 = trunc i128 %add108 to i64
  %and121 = and i64 %conv120, 2251799813685247
  %shr122 = lshr i128 %add113, 51
  %conv123 = trunc i128 %shr122 to i64
  %add124 = add i64 %conv123, %and
  %conv125 = trunc i128 %add113 to i64
  %and126 = and i64 %conv125, 2251799813685247
  %shr127 = lshr i128 %add119, 51
  %conv128 = trunc i128 %shr127 to i64
  %mul129 = mul i64 %conv128, 19
  %add130 = add i64 %mul129, %and115
  %conv131 = trunc i128 %add119 to i64
  %and132 = and i64 %conv131, 2251799813685247
  %shr133 = lshr i64 %add124, 51
  %add134 = add nuw nsw i64 %shr133, %and121
  %fold = add i64 %conv123, %conv109
  %and135 = and i64 %fold, 2251799813685247
  %shr136 = lshr i64 %add130, 51
  %add137 = add nuw nsw i64 %shr136, %and126
  %fold247 = add i64 %mul129, %conv114
  %and138 = and i64 %fold247, 2251799813685247
  store i64 %and138, i64* %h, align 8, !tbaa !5
  %arrayidx140 = getelementptr inbounds i64, i64* %h, i64 1
  store i64 %add137, i64* %arrayidx140, align 8, !tbaa !5
  %arrayidx141 = getelementptr inbounds i64, i64* %h, i64 2
  store i64 %and135, i64* %arrayidx141, align 8, !tbaa !5
  %arrayidx142 = getelementptr inbounds i64, i64* %h, i64 3
  store i64 %add134, i64* %arrayidx142, align 8, !tbaa !5
  %arrayidx143 = getelementptr inbounds i64, i64* %h, i64 4
  store i64 %and132, i64* %arrayidx143, align 8, !tbaa !5
  ret void
}

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #1

declare void @OPENSSL_cleanse(i8*, i64) #2

; Function Attrs: nounwind uwtable
define i32 @ED25519_sign(i8* %out_sig, i8* %message, i64 %message_len, i8* %public_key, i8* %private_key) #0 {
entry:
  %s.i.i = alloca [32 x i8], align 16
  %recip.i = alloca [10 x i32], align 16
  %x.i = alloca [10 x i32], align 16
  %y.i = alloca [10 x i32], align 16
  %az = alloca [64 x i8], align 16
  %nonce = alloca [64 x i8], align 16
  %R = alloca %struct.ge_p3, align 4
  %hram = alloca [64 x i8], align 16
  %hash_ctx = alloca %struct.SHA512state_st, align 8
  %0 = getelementptr inbounds [64 x i8], [64 x i8]* %az, i64 0, i64 0
  call void @llvm.lifetime.start(i64 64, i8* %0) #1
  %1 = getelementptr inbounds [64 x i8], [64 x i8]* %nonce, i64 0, i64 0
  call void @llvm.lifetime.start(i64 64, i8* %1) #1
  %2 = bitcast %struct.ge_p3* %R to i8*
  call void @llvm.lifetime.start(i64 160, i8* %2) #1
  %3 = getelementptr inbounds [64 x i8], [64 x i8]* %hram, i64 0, i64 0
  call void @llvm.lifetime.start(i64 64, i8* %3) #1
  %4 = bitcast %struct.SHA512state_st* %hash_ctx to i8*
  call void @llvm.lifetime.start(i64 216, i8* %4) #1
  %call = call i32 @SHA512_Init(%struct.SHA512state_st* nonnull %hash_ctx) #1
  %call1 = call i32 @SHA512_Update(%struct.SHA512state_st* nonnull %hash_ctx, i8* %private_key, i64 32) #1
  %call2 = call i32 @SHA512_Final(i8* %0, %struct.SHA512state_st* nonnull %hash_ctx) #1
  %5 = load i8, i8* %0, align 16, !tbaa !2
  %and = and i8 %5, -8
  store i8 %and, i8* %0, align 16, !tbaa !2
  %arrayidx4 = getelementptr inbounds [64 x i8], [64 x i8]* %az, i64 0, i64 31
  %6 = load i8, i8* %arrayidx4, align 1, !tbaa !2
  %and6 = and i8 %6, 63
  %or = or i8 %and6, 64
  store i8 %or, i8* %arrayidx4, align 1, !tbaa !2
  %call11 = call i32 @SHA512_Init(%struct.SHA512state_st* nonnull %hash_ctx) #1
  %add.ptr = getelementptr inbounds [64 x i8], [64 x i8]* %az, i64 0, i64 32
  %call13 = call i32 @SHA512_Update(%struct.SHA512state_st* nonnull %hash_ctx, i8* %add.ptr, i64 32) #1
  %call14 = call i32 @SHA512_Update(%struct.SHA512state_st* nonnull %hash_ctx, i8* %message, i64 %message_len) #1
  %call16 = call i32 @SHA512_Final(i8* %1, %struct.SHA512state_st* nonnull %hash_ctx) #1
  call fastcc void @x25519_sc_reduce(i8* %1)
  call fastcc void @ge_scalarmult_base(%struct.ge_p3* nonnull %R, i8* %1)
  %7 = bitcast [10 x i32]* %recip.i to i8*
  call void @llvm.lifetime.start(i64 40, i8* %7) #1
  %8 = bitcast [10 x i32]* %x.i to i8*
  call void @llvm.lifetime.start(i64 40, i8* %8) #1
  %9 = bitcast [10 x i32]* %y.i to i8*
  call void @llvm.lifetime.start(i64 40, i8* %9) #1
  %arraydecay.i = getelementptr inbounds [10 x i32], [10 x i32]* %recip.i, i64 0, i64 0
  %arraydecay1.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %R, i64 0, i32 2, i64 0
  call fastcc void @fe_invert(i32* %arraydecay.i, i32* %arraydecay1.i) #1
  %arraydecay2.i = getelementptr inbounds [10 x i32], [10 x i32]* %x.i, i64 0, i64 0
  %arraydecay3.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %R, i64 0, i32 0, i64 0
  call fastcc void @fe_mul(i32* %arraydecay2.i, i32* %arraydecay3.i, i32* %arraydecay.i) #1
  %arraydecay5.i = getelementptr inbounds [10 x i32], [10 x i32]* %y.i, i64 0, i64 0
  %arraydecay6.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %R, i64 0, i32 1, i64 0
  call fastcc void @fe_mul(i32* %arraydecay5.i, i32* %arraydecay6.i, i32* %arraydecay.i) #1
  call fastcc void @fe_tobytes(i8* %out_sig, i32* %arraydecay5.i) #1
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %s.i.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 32, i8* %10) #1
  call fastcc void @fe_tobytes(i8* %10, i32* %arraydecay2.i) #1
  %11 = load i8, i8* %10, align 16, !tbaa !2
  call void @llvm.lifetime.end(i64 32, i8* %10) #1
  %and.i.i = shl i8 %11, 7
  %arrayidx.i = getelementptr inbounds i8, i8* %out_sig, i64 31
  %12 = load i8, i8* %arrayidx.i, align 1, !tbaa !2
  %xor.i = xor i8 %12, %and.i.i
  store i8 %xor.i, i8* %arrayidx.i, align 1, !tbaa !2
  call void @llvm.lifetime.end(i64 40, i8* %9) #1
  call void @llvm.lifetime.end(i64 40, i8* %8) #1
  call void @llvm.lifetime.end(i64 40, i8* %7) #1
  %call19 = call i32 @SHA512_Init(%struct.SHA512state_st* nonnull %hash_ctx) #1
  %call20 = call i32 @SHA512_Update(%struct.SHA512state_st* nonnull %hash_ctx, i8* %out_sig, i64 32) #1
  %call21 = call i32 @SHA512_Update(%struct.SHA512state_st* nonnull %hash_ctx, i8* %public_key, i64 32) #1
  %call22 = call i32 @SHA512_Update(%struct.SHA512state_st* nonnull %hash_ctx, i8* %message, i64 %message_len) #1
  %call24 = call i32 @SHA512_Final(i8* %3, %struct.SHA512state_st* nonnull %hash_ctx) #1
  call fastcc void @x25519_sc_reduce(i8* %3)
  %add.ptr26 = getelementptr inbounds i8, i8* %out_sig, i64 32
  %13 = bitcast [64 x i8]* %hram to i32*
  %14 = load i32, i32* %13, align 16
  %15 = bitcast [64 x i8]* %hram to i64*
  %16 = load i64, i64* %15, align 16
  %17 = lshr i64 %16, 16
  %or.i.i = and i64 %16, 65535
  %conv4.i.i = and i64 %17, 255
  %shl5.i.i = shl nuw nsw i64 %conv4.i.i, 16
  %shl5.i.masked.i = and i64 %shl5.i.i, 2031616
  %and.i = or i64 %or.i.i, %shl5.i.masked.i
  %18 = lshr i32 %14, 24
  %19 = zext i32 %18 to i64
  %shl.i.2313.i = shl nuw nsw i64 %19, 8
  %or.i.2314.i = or i64 %shl.i.2313.i, %conv4.i.i
  %20 = lshr i64 %16, 16
  %shl5.i.2317.i = and i64 %20, 16711680
  %or6.i.2318.i = or i64 %or.i.2314.i, %shl5.i.2317.i
  %21 = lshr i64 %16, 40
  %conv8.i.2320.i = and i64 %21, 252
  %shl9.i.2321.i = shl nuw nsw i64 %21, 24
  %or10.i.2322.i = or i64 %or6.i.2318.i, %shl9.i.2321.i
  %shr.i = lshr i64 %or10.i.2322.i, 5
  %and2.i = and i64 %shr.i, 2097151
  %22 = lshr i64 %16, 56
  %23 = lshr i64 %16, 40
  %shl.i.2305.i = and i64 %23, 65280
  %or.i.2306.i = or i64 %shl.i.2305.i, %conv8.i.2320.i
  %shl5.i.2308.i = shl nuw nsw i64 %22, 16
  %or6.i.2309.i = or i64 %or.i.2306.i, %shl5.i.2308.i
  %shr5.i = lshr exact i64 %or6.i.2309.i, 2
  %and6.i = and i64 %shr5.i, 2097151
  %arrayidx1.i.2291.i = getelementptr inbounds [64 x i8], [64 x i8]* %hram, i64 0, i64 8
  %24 = bitcast i8* %arrayidx1.i.2291.i to i32*
  %25 = load i32, i32* %24, align 8
  %26 = bitcast i8* %arrayidx1.i.2291.i to i64*
  %27 = load i64, i64* %26, align 8
  %conv2.i.2292.i = shl i64 %27, 8
  %shl.i.2293.i = and i64 %conv2.i.2292.i, 65280
  %or.i.2294.i = or i64 %shl.i.2293.i, %22
  %28 = shl i64 %27, 8
  %shl5.i.2297.i = and i64 %28, 16711680
  %or6.i.2298.i = or i64 %or.i.2294.i, %shl5.i.2297.i
  %29 = lshr i64 %27, 16
  %conv8.i.2300.i = and i64 %29, 255
  %shl9.i.2301.i = shl nuw nsw i64 %conv8.i.2300.i, 24
  %or10.i.2302.i = or i64 %or6.i.2298.i, %shl9.i.2301.i
  %shr9.i = lshr i64 %or10.i.2302.i, 7
  %and10.i = and i64 %shr9.i, 2097151
  %30 = lshr i32 %25, 24
  %31 = zext i32 %30 to i64
  %shl.i.2280.i = shl nuw nsw i64 %31, 8
  %or.i.2281.i = or i64 %shl.i.2280.i, %conv8.i.2300.i
  %32 = lshr i64 %27, 16
  %shl5.i.2284.i = and i64 %32, 16711680
  %or6.i.2285.i = or i64 %or.i.2281.i, %shl5.i.2284.i
  %33 = lshr i64 %27, 40
  %conv8.i.2287.i = and i64 %33, 254
  %shl9.i.2288.i = shl nuw nsw i64 %33, 24
  %or10.i.2289.i = or i64 %or6.i.2285.i, %shl9.i.2288.i
  %shr13.i = lshr i64 %or10.i.2289.i, 4
  %and14.i = and i64 %shr13.i, 2097151
  %34 = lshr i64 %27, 56
  %35 = lshr i64 %27, 40
  %shl.i.2272.i = and i64 %35, 65280
  %or.i.2273.i = or i64 %shl.i.2272.i, %conv8.i.2287.i
  %shl5.i.2275.i = shl nuw nsw i64 %34, 16
  %or6.i.2276.i = or i64 %or.i.2273.i, %shl5.i.2275.i
  %shr17.i = lshr exact i64 %or6.i.2276.i, 1
  %and18.i = and i64 %shr17.i, 2097151
  %arrayidx1.i.2258.i = getelementptr inbounds [64 x i8], [64 x i8]* %hram, i64 0, i64 16
  %36 = bitcast i8* %arrayidx1.i.2258.i to i32*
  %37 = load i32, i32* %36, align 16
  %38 = bitcast i8* %arrayidx1.i.2258.i to i64*
  %39 = load i64, i64* %38, align 16
  %conv2.i.2259.i = shl i64 %39, 8
  %shl.i.2260.i = and i64 %conv2.i.2259.i, 65280
  %or.i.2261.i = or i64 %shl.i.2260.i, %34
  %40 = shl i64 %39, 8
  %shl5.i.2264.i = and i64 %40, 16711680
  %or6.i.2265.i = or i64 %or.i.2261.i, %shl5.i.2264.i
  %41 = lshr i64 %39, 16
  %conv8.i.2267.i = and i64 %41, 255
  %shl9.i.2268.i = shl nuw nsw i64 %conv8.i.2267.i, 24
  %or10.i.2269.i = or i64 %or6.i.2265.i, %shl9.i.2268.i
  %shr21.i = lshr i64 %or10.i.2269.i, 6
  %and22.i = and i64 %shr21.i, 2097151
  %42 = lshr i32 %37, 24
  %43 = zext i32 %42 to i64
  %shl.i.2252.i = shl nuw nsw i64 %43, 8
  %or.i.2253.i = or i64 %shl.i.2252.i, %conv8.i.2267.i
  %44 = lshr i64 %39, 16
  %shl5.i.2255.i = and i64 %44, 16711680
  %or6.i.2256.i = or i64 %or.i.2253.i, %shl5.i.2255.i
  %shr25.i = lshr i64 %or6.i.2256.i, 3
  %45 = lshr i64 %39, 40
  %46 = lshr i64 %39, 56
  %conv.i.2243.i = and i64 %45, 255
  %47 = lshr i64 %39, 40
  %shl.i.2245.i = and i64 %47, 65280
  %or.i.2246.i = or i64 %shl.i.2245.i, %conv.i.2243.i
  %shl5.i.2248.i = shl nuw nsw i64 %46, 16
  %shl5.i.2248.masked.i = and i64 %shl5.i.2248.i, 2031616
  %and29.i = or i64 %or.i.2246.i, %shl5.i.2248.masked.i
  %arrayidx1.i.2231.i = getelementptr inbounds [64 x i8], [64 x i8]* %hram, i64 0, i64 24
  %48 = bitcast i8* %arrayidx1.i.2231.i to i32*
  %49 = load i32, i32* %48, align 8
  %50 = bitcast i8* %arrayidx1.i.2231.i to i64*
  %51 = load i64, i64* %50, align 8
  %conv2.i.2232.i = shl i64 %51, 8
  %shl.i.2233.i = and i64 %conv2.i.2232.i, 65280
  %or.i.2234.i = or i64 %shl.i.2233.i, %46
  %52 = shl i64 %51, 8
  %shl5.i.2237.i = and i64 %52, 16711680
  %or6.i.2238.i = or i64 %or.i.2234.i, %shl5.i.2237.i
  %53 = lshr i64 %51, 16
  %conv8.i.2240.i = and i64 %53, 255
  %shl9.i.2241.i = shl nuw nsw i64 %conv8.i.2240.i, 24
  %or10.i.2242.i = or i64 %or6.i.2238.i, %shl9.i.2241.i
  %shr32.i = lshr i64 %or10.i.2242.i, 5
  %and33.i = and i64 %shr32.i, 2097151
  %54 = lshr i32 %49, 24
  %55 = zext i32 %54 to i64
  %56 = lshr i64 %51, 32
  %shl.i.2225.i = shl nuw nsw i64 %55, 8
  %or.i.2226.i = or i64 %shl.i.2225.i, %conv8.i.2240.i
  %conv4.i.2227.i = and i64 %56, 128
  %shl5.i.2228.i = shl nuw nsw i64 %56, 16
  %or6.i.2229.i = or i64 %or.i.2226.i, %shl5.i.2228.i
  %shr36.i = lshr i64 %or6.i.2229.i, 2
  %and37.i = and i64 %shr36.i, 2097151
  %57 = lshr i64 %51, 32
  %shl.i.2213.i = and i64 %57, 65280
  %or.i.2214.i = or i64 %shl.i.2213.i, %conv4.i.2227.i
  %58 = lshr i64 %51, 32
  %shl5.i.2217.i = and i64 %58, 16711680
  %or6.i.2218.i = or i64 %or.i.2214.i, %shl5.i.2217.i
  %59 = lshr i64 %51, 56
  %shl9.i.2221.i = shl nuw nsw i64 %59, 24
  %or10.i.2222.i = or i64 %or6.i.2218.i, %shl9.i.2221.i
  %shr40.i = lshr exact i64 %or10.i.2222.i, 7
  %60 = bitcast [64 x i8]* %az to i32*
  %61 = load i32, i32* %60, align 16
  %62 = bitcast [64 x i8]* %az to i64*
  %63 = load i64, i64* %62, align 16
  %64 = lshr i64 %63, 16
  %or.i.2206.i = and i64 %63, 65535
  %conv4.i.2207.i = and i64 %64, 255
  %shl5.i.2208.i = shl nuw nsw i64 %conv4.i.2207.i, 16
  %shl5.i.2208.masked.i = and i64 %shl5.i.2208.i, 2031616
  %and42.i = or i64 %or.i.2206.i, %shl5.i.2208.masked.i
  %65 = lshr i32 %61, 24
  %66 = zext i32 %65 to i64
  %shl.i.2193.i = shl nuw nsw i64 %66, 8
  %or.i.2194.i = or i64 %shl.i.2193.i, %conv4.i.2207.i
  %67 = lshr i64 %63, 16
  %shl5.i.2197.i = and i64 %67, 16711680
  %or6.i.2198.i = or i64 %or.i.2194.i, %shl5.i.2197.i
  %68 = lshr i64 %63, 40
  %conv8.i.2200.i = and i64 %68, 252
  %shl9.i.2201.i = shl nuw nsw i64 %68, 24
  %or10.i.2202.i = or i64 %or6.i.2198.i, %shl9.i.2201.i
  %shr45.i = lshr i64 %or10.i.2202.i, 5
  %and46.i = and i64 %shr45.i, 2097151
  %69 = lshr i64 %63, 56
  %70 = lshr i64 %63, 40
  %shl.i.2185.i = and i64 %70, 65280
  %or.i.2186.i = or i64 %shl.i.2185.i, %conv8.i.2200.i
  %shl5.i.2188.i = shl nuw nsw i64 %69, 16
  %or6.i.2189.i = or i64 %or.i.2186.i, %shl5.i.2188.i
  %shr49.i = lshr exact i64 %or6.i.2189.i, 2
  %and50.i = and i64 %shr49.i, 2097151
  %arrayidx1.i.2171.i = getelementptr inbounds [64 x i8], [64 x i8]* %az, i64 0, i64 8
  %71 = bitcast i8* %arrayidx1.i.2171.i to i32*
  %72 = load i32, i32* %71, align 8
  %73 = bitcast i8* %arrayidx1.i.2171.i to i64*
  %74 = load i64, i64* %73, align 8
  %conv2.i.2172.i = shl i64 %74, 8
  %shl.i.2173.i = and i64 %conv2.i.2172.i, 65280
  %or.i.2174.i = or i64 %shl.i.2173.i, %69
  %75 = shl i64 %74, 8
  %shl5.i.2177.i = and i64 %75, 16711680
  %or6.i.2178.i = or i64 %or.i.2174.i, %shl5.i.2177.i
  %76 = lshr i64 %74, 16
  %conv8.i.2180.i = and i64 %76, 255
  %shl9.i.2181.i = shl nuw nsw i64 %conv8.i.2180.i, 24
  %or10.i.2182.i = or i64 %or6.i.2178.i, %shl9.i.2181.i
  %shr53.i = lshr i64 %or10.i.2182.i, 7
  %and54.i = and i64 %shr53.i, 2097151
  %77 = lshr i32 %72, 24
  %78 = zext i32 %77 to i64
  %shl.i.2160.i = shl nuw nsw i64 %78, 8
  %or.i.2161.i = or i64 %shl.i.2160.i, %conv8.i.2180.i
  %79 = lshr i64 %74, 16
  %shl5.i.2164.i = and i64 %79, 16711680
  %or6.i.2165.i = or i64 %or.i.2161.i, %shl5.i.2164.i
  %80 = lshr i64 %74, 40
  %conv8.i.2167.i = and i64 %80, 254
  %shl9.i.2168.i = shl nuw nsw i64 %80, 24
  %or10.i.2169.i = or i64 %or6.i.2165.i, %shl9.i.2168.i
  %shr57.i = lshr i64 %or10.i.2169.i, 4
  %and58.i = and i64 %shr57.i, 2097151
  %81 = lshr i64 %74, 56
  %82 = lshr i64 %74, 40
  %shl.i.2152.i = and i64 %82, 65280
  %or.i.2153.i = or i64 %shl.i.2152.i, %conv8.i.2167.i
  %shl5.i.2155.i = shl nuw nsw i64 %81, 16
  %or6.i.2156.i = or i64 %or.i.2153.i, %shl5.i.2155.i
  %shr61.i = lshr exact i64 %or6.i.2156.i, 1
  %and62.i = and i64 %shr61.i, 2097151
  %arrayidx1.i.2138.i = getelementptr inbounds [64 x i8], [64 x i8]* %az, i64 0, i64 16
  %83 = bitcast i8* %arrayidx1.i.2138.i to i32*
  %84 = load i32, i32* %83, align 16
  %85 = bitcast i8* %arrayidx1.i.2138.i to i64*
  %86 = load i64, i64* %85, align 16
  %conv2.i.2139.i = shl i64 %86, 8
  %shl.i.2140.i = and i64 %conv2.i.2139.i, 65280
  %or.i.2141.i = or i64 %shl.i.2140.i, %81
  %87 = shl i64 %86, 8
  %shl5.i.2144.i = and i64 %87, 16711680
  %or6.i.2145.i = or i64 %or.i.2141.i, %shl5.i.2144.i
  %88 = lshr i64 %86, 16
  %conv8.i.2147.i = and i64 %88, 255
  %shl9.i.2148.i = shl nuw nsw i64 %conv8.i.2147.i, 24
  %or10.i.2149.i = or i64 %or6.i.2145.i, %shl9.i.2148.i
  %shr65.i = lshr i64 %or10.i.2149.i, 6
  %and66.i = and i64 %shr65.i, 2097151
  %89 = lshr i32 %84, 24
  %90 = zext i32 %89 to i64
  %shl.i.2132.i = shl nuw nsw i64 %90, 8
  %or.i.2133.i = or i64 %shl.i.2132.i, %conv8.i.2147.i
  %91 = lshr i64 %86, 16
  %shl5.i.2135.i = and i64 %91, 16711680
  %or6.i.2136.i = or i64 %or.i.2133.i, %shl5.i.2135.i
  %shr69.i = lshr i64 %or6.i.2136.i, 3
  %92 = lshr i64 %86, 40
  %93 = lshr i64 %86, 56
  %conv.i.2123.i = and i64 %92, 255
  %94 = lshr i64 %86, 40
  %shl.i.2125.i = and i64 %94, 65280
  %or.i.2126.i = or i64 %shl.i.2125.i, %conv.i.2123.i
  %shl5.i.2128.i = shl nuw nsw i64 %93, 16
  %shl5.i.2128.masked.i = and i64 %shl5.i.2128.i, 2031616
  %and73.i = or i64 %or.i.2126.i, %shl5.i.2128.masked.i
  %arrayidx1.i.2111.i = getelementptr inbounds [64 x i8], [64 x i8]* %az, i64 0, i64 24
  %95 = bitcast i8* %arrayidx1.i.2111.i to i32*
  %96 = load i32, i32* %95, align 8
  %97 = bitcast i8* %arrayidx1.i.2111.i to i64*
  %98 = load i64, i64* %97, align 8
  %conv2.i.2112.i = shl i64 %98, 8
  %shl.i.2113.i = and i64 %conv2.i.2112.i, 65280
  %or.i.2114.i = or i64 %shl.i.2113.i, %93
  %99 = shl i64 %98, 8
  %shl5.i.2117.i = and i64 %99, 16711680
  %or6.i.2118.i = or i64 %or.i.2114.i, %shl5.i.2117.i
  %100 = lshr i64 %98, 16
  %conv8.i.2120.i = and i64 %100, 255
  %shl9.i.2121.i = shl nuw nsw i64 %conv8.i.2120.i, 24
  %or10.i.2122.i = or i64 %or6.i.2118.i, %shl9.i.2121.i
  %shr76.i = lshr i64 %or10.i.2122.i, 5
  %and77.i = and i64 %shr76.i, 2097151
  %101 = lshr i32 %96, 24
  %102 = zext i32 %101 to i64
  %103 = lshr i64 %98, 32
  %shl.i.2105.i = shl nuw nsw i64 %102, 8
  %or.i.2106.i = or i64 %shl.i.2105.i, %conv8.i.2120.i
  %conv4.i.2107.i = and i64 %103, 128
  %shl5.i.2108.i = shl nuw nsw i64 %103, 16
  %or6.i.2109.i = or i64 %or.i.2106.i, %shl5.i.2108.i
  %shr80.i = lshr i64 %or6.i.2109.i, 2
  %and81.i = and i64 %shr80.i, 2097151
  %104 = lshr i64 %98, 32
  %shl.i.2093.i = and i64 %104, 65280
  %or.i.2094.i = or i64 %shl.i.2093.i, %conv4.i.2107.i
  %105 = lshr i64 %98, 32
  %shl5.i.2097.i = and i64 %105, 16711680
  %or6.i.2098.i = or i64 %or.i.2094.i, %shl5.i.2097.i
  %106 = lshr i64 %98, 56
  %shl9.i.2101.i = shl nuw nsw i64 %106, 24
  %or10.i.2102.i = or i64 %or6.i.2098.i, %shl9.i.2101.i
  %shr84.i = lshr exact i64 %or10.i.2102.i, 7
  %107 = bitcast [64 x i8]* %nonce to i32*
  %108 = load i32, i32* %107, align 16
  %109 = bitcast [64 x i8]* %nonce to i64*
  %110 = load i64, i64* %109, align 16
  %111 = lshr i64 %110, 16
  %or.i.2086.i = and i64 %110, 65535
  %conv4.i.2087.i = and i64 %111, 255
  %shl5.i.2088.i = shl nuw nsw i64 %conv4.i.2087.i, 16
  %shl5.i.2088.masked.i = and i64 %shl5.i.2088.i, 2031616
  %and86.i = or i64 %or.i.2086.i, %shl5.i.2088.masked.i
  %112 = lshr i32 %108, 24
  %113 = zext i32 %112 to i64
  %shl.i.2073.i = shl nuw nsw i64 %113, 8
  %or.i.2074.i = or i64 %shl.i.2073.i, %conv4.i.2087.i
  %114 = lshr i64 %110, 16
  %shl5.i.2077.i = and i64 %114, 16711680
  %or6.i.2078.i = or i64 %or.i.2074.i, %shl5.i.2077.i
  %115 = lshr i64 %110, 40
  %conv8.i.2080.i = and i64 %115, 252
  %shl9.i.2081.i = shl nuw nsw i64 %115, 24
  %or10.i.2082.i = or i64 %or6.i.2078.i, %shl9.i.2081.i
  %shr89.i = lshr i64 %or10.i.2082.i, 5
  %and90.i = and i64 %shr89.i, 2097151
  %116 = lshr i64 %110, 56
  %117 = lshr i64 %110, 40
  %shl.i.2065.i = and i64 %117, 65280
  %or.i.2066.i = or i64 %shl.i.2065.i, %conv8.i.2080.i
  %shl5.i.2068.i = shl nuw nsw i64 %116, 16
  %or6.i.2069.i = or i64 %or.i.2066.i, %shl5.i.2068.i
  %shr93.i = lshr exact i64 %or6.i.2069.i, 2
  %and94.i = and i64 %shr93.i, 2097151
  %arrayidx1.i.2051.i = getelementptr inbounds [64 x i8], [64 x i8]* %nonce, i64 0, i64 8
  %118 = bitcast i8* %arrayidx1.i.2051.i to i32*
  %119 = load i32, i32* %118, align 8
  %120 = bitcast i8* %arrayidx1.i.2051.i to i64*
  %121 = load i64, i64* %120, align 8
  %conv2.i.2052.i = shl i64 %121, 8
  %shl.i.2053.i = and i64 %conv2.i.2052.i, 65280
  %or.i.2054.i = or i64 %shl.i.2053.i, %116
  %122 = shl i64 %121, 8
  %shl5.i.2057.i = and i64 %122, 16711680
  %or6.i.2058.i = or i64 %or.i.2054.i, %shl5.i.2057.i
  %123 = lshr i64 %121, 16
  %conv8.i.2060.i = and i64 %123, 255
  %shl9.i.2061.i = shl nuw nsw i64 %conv8.i.2060.i, 24
  %or10.i.2062.i = or i64 %or6.i.2058.i, %shl9.i.2061.i
  %shr97.i = lshr i64 %or10.i.2062.i, 7
  %and98.i = and i64 %shr97.i, 2097151
  %124 = lshr i32 %119, 24
  %125 = zext i32 %124 to i64
  %shl.i.2040.i = shl nuw nsw i64 %125, 8
  %or.i.2041.i = or i64 %shl.i.2040.i, %conv8.i.2060.i
  %126 = lshr i64 %121, 16
  %shl5.i.2044.i = and i64 %126, 16711680
  %or6.i.2045.i = or i64 %or.i.2041.i, %shl5.i.2044.i
  %127 = lshr i64 %121, 40
  %conv8.i.2047.i = and i64 %127, 254
  %shl9.i.2048.i = shl nuw nsw i64 %127, 24
  %or10.i.2049.i = or i64 %or6.i.2045.i, %shl9.i.2048.i
  %shr101.i = lshr i64 %or10.i.2049.i, 4
  %and102.i = and i64 %shr101.i, 2097151
  %128 = lshr i64 %121, 56
  %129 = lshr i64 %121, 40
  %shl.i.2032.i = and i64 %129, 65280
  %or.i.2033.i = or i64 %shl.i.2032.i, %conv8.i.2047.i
  %shl5.i.2035.i = shl nuw nsw i64 %128, 16
  %or6.i.2036.i = or i64 %or.i.2033.i, %shl5.i.2035.i
  %shr105.i = lshr exact i64 %or6.i.2036.i, 1
  %and106.i = and i64 %shr105.i, 2097151
  %arrayidx1.i.2018.i = getelementptr inbounds [64 x i8], [64 x i8]* %nonce, i64 0, i64 16
  %130 = bitcast i8* %arrayidx1.i.2018.i to i32*
  %131 = load i32, i32* %130, align 16
  %132 = bitcast i8* %arrayidx1.i.2018.i to i64*
  %133 = load i64, i64* %132, align 16
  %conv2.i.2019.i = shl i64 %133, 8
  %shl.i.2020.i = and i64 %conv2.i.2019.i, 65280
  %or.i.2021.i = or i64 %shl.i.2020.i, %128
  %134 = shl i64 %133, 8
  %shl5.i.2024.i = and i64 %134, 16711680
  %or6.i.2025.i = or i64 %or.i.2021.i, %shl5.i.2024.i
  %135 = lshr i64 %133, 16
  %conv8.i.2027.i = and i64 %135, 255
  %shl9.i.2028.i = shl nuw nsw i64 %conv8.i.2027.i, 24
  %or10.i.2029.i = or i64 %or6.i.2025.i, %shl9.i.2028.i
  %shr109.i = lshr i64 %or10.i.2029.i, 6
  %and110.i = and i64 %shr109.i, 2097151
  %136 = lshr i32 %131, 24
  %137 = zext i32 %136 to i64
  %shl.i.2012.i = shl nuw nsw i64 %137, 8
  %or.i.2013.i = or i64 %shl.i.2012.i, %conv8.i.2027.i
  %138 = lshr i64 %133, 16
  %shl5.i.2015.i = and i64 %138, 16711680
  %or6.i.2016.i = or i64 %or.i.2013.i, %shl5.i.2015.i
  %shr113.i = lshr i64 %or6.i.2016.i, 3
  %139 = lshr i64 %133, 40
  %140 = lshr i64 %133, 56
  %conv.i.2003.i = and i64 %139, 255
  %141 = lshr i64 %133, 40
  %shl.i.2005.i = and i64 %141, 65280
  %or.i.2006.i = or i64 %shl.i.2005.i, %conv.i.2003.i
  %shl5.i.2008.i = shl nuw nsw i64 %140, 16
  %shl5.i.2008.masked.i = and i64 %shl5.i.2008.i, 2031616
  %and117.i = or i64 %or.i.2006.i, %shl5.i.2008.masked.i
  %arrayidx1.i.1991.i = getelementptr inbounds [64 x i8], [64 x i8]* %nonce, i64 0, i64 24
  %142 = bitcast i8* %arrayidx1.i.1991.i to i32*
  %143 = load i32, i32* %142, align 8
  %144 = bitcast i8* %arrayidx1.i.1991.i to i64*
  %145 = load i64, i64* %144, align 8
  %conv2.i.1992.i = shl i64 %145, 8
  %shl.i.1993.i = and i64 %conv2.i.1992.i, 65280
  %or.i.1994.i = or i64 %shl.i.1993.i, %140
  %146 = shl i64 %145, 8
  %shl5.i.1997.i = and i64 %146, 16711680
  %or6.i.1998.i = or i64 %or.i.1994.i, %shl5.i.1997.i
  %147 = lshr i64 %145, 16
  %conv8.i.2000.i = and i64 %147, 255
  %shl9.i.2001.i = shl nuw nsw i64 %conv8.i.2000.i, 24
  %or10.i.2002.i = or i64 %or6.i.1998.i, %shl9.i.2001.i
  %shr120.i = lshr i64 %or10.i.2002.i, 5
  %and121.i = and i64 %shr120.i, 2097151
  %148 = lshr i32 %143, 24
  %149 = zext i32 %148 to i64
  %150 = lshr i64 %145, 32
  %shl.i.1985.i = shl nuw nsw i64 %149, 8
  %or.i.1986.i = or i64 %shl.i.1985.i, %conv8.i.2000.i
  %conv4.i.1987.i = and i64 %150, 128
  %shl5.i.1988.i = shl nuw nsw i64 %150, 16
  %or6.i.1989.i = or i64 %or.i.1986.i, %shl5.i.1988.i
  %shr124.i = lshr i64 %or6.i.1989.i, 2
  %and125.i = and i64 %shr124.i, 2097151
  %151 = lshr i64 %145, 32
  %shl.i.1978.i = and i64 %151, 65280
  %or.i.1979.i = or i64 %shl.i.1978.i, %conv4.i.1987.i
  %152 = lshr i64 %145, 32
  %shl5.i.1981.i = and i64 %152, 16711680
  %or6.i.1982.i = or i64 %or.i.1979.i, %shl5.i.1981.i
  %153 = lshr i64 %145, 56
  %shl9.i.i = shl nuw nsw i64 %153, 24
  %or10.i.i = or i64 %or6.i.1982.i, %shl9.i.i
  %shr128.i = lshr exact i64 %or10.i.i, 7
  %mul.i = mul nuw nsw i64 %and42.i, %and.i
  %add.i = add nuw nsw i64 %and86.i, %mul.i
  %mul129.i = mul nuw nsw i64 %and46.i, %and.i
  %mul131.i = mul nuw nsw i64 %and42.i, %and2.i
  %mul133.i = mul nuw nsw i64 %and50.i, %and.i
  %mul135.i = mul nuw nsw i64 %and46.i, %and2.i
  %mul137.i = mul nuw nsw i64 %and42.i, %and6.i
  %add134.i = add nuw nsw i64 %mul135.i, %mul137.i
  %add136.i = add nuw nsw i64 %add134.i, %mul133.i
  %add138.i = add nuw nsw i64 %add136.i, %and94.i
  %mul139.i = mul nuw nsw i64 %and54.i, %and.i
  %mul141.i = mul nuw nsw i64 %and50.i, %and2.i
  %mul143.i = mul nuw nsw i64 %and46.i, %and6.i
  %mul145.i = mul nuw nsw i64 %and42.i, %and10.i
  %mul147.i = mul nuw nsw i64 %and58.i, %and.i
  %mul149.i = mul nuw nsw i64 %and54.i, %and2.i
  %mul151.i = mul nuw nsw i64 %and50.i, %and6.i
  %mul153.i = mul nuw nsw i64 %and46.i, %and10.i
  %mul155.i = mul nuw nsw i64 %and42.i, %and14.i
  %add148.i = add nuw nsw i64 %mul153.i, %mul155.i
  %add150.i = add nuw nsw i64 %add148.i, %mul151.i
  %add152.i = add nuw nsw i64 %add150.i, %mul149.i
  %add154.i = add nuw nsw i64 %add152.i, %mul147.i
  %add156.i = add i64 %add154.i, %and102.i
  %mul157.i = mul nuw nsw i64 %and62.i, %and.i
  %mul159.i = mul nuw nsw i64 %and58.i, %and2.i
  %mul161.i = mul nuw nsw i64 %and54.i, %and6.i
  %mul163.i = mul nuw nsw i64 %and50.i, %and10.i
  %mul165.i = mul nuw nsw i64 %and46.i, %and14.i
  %mul167.i = mul nuw nsw i64 %and42.i, %and18.i
  %mul169.i = mul nuw nsw i64 %and66.i, %and.i
  %mul171.i = mul nuw nsw i64 %and62.i, %and2.i
  %mul173.i = mul nuw nsw i64 %and58.i, %and6.i
  %mul175.i = mul nuw nsw i64 %and54.i, %and10.i
  %mul177.i = mul nuw nsw i64 %and50.i, %and14.i
  %mul179.i = mul nuw nsw i64 %and46.i, %and18.i
  %mul181.i = mul nuw nsw i64 %and42.i, %and22.i
  %add170.i = add nuw nsw i64 %mul179.i, %mul181.i
  %add172.i = add nuw nsw i64 %add170.i, %mul177.i
  %add174.i = add nuw nsw i64 %add172.i, %mul175.i
  %add176.i = add nuw nsw i64 %add174.i, %mul173.i
  %add178.i = add i64 %add176.i, %mul171.i
  %add180.i = add i64 %add178.i, %mul169.i
  %add182.i = add i64 %add180.i, %and110.i
  %mul183.i = mul nuw nsw i64 %shr69.i, %and.i
  %mul185.i = mul nuw nsw i64 %and66.i, %and2.i
  %mul187.i = mul nuw nsw i64 %and62.i, %and6.i
  %mul189.i = mul nuw nsw i64 %and58.i, %and10.i
  %mul191.i = mul nuw nsw i64 %and54.i, %and14.i
  %mul193.i = mul nuw nsw i64 %and50.i, %and18.i
  %mul195.i = mul nuw nsw i64 %and46.i, %and22.i
  %mul197.i = mul nuw nsw i64 %and42.i, %shr25.i
  %mul199.i = mul nuw nsw i64 %and73.i, %and.i
  %mul201.i = mul nuw nsw i64 %shr69.i, %and2.i
  %mul203.i = mul nuw nsw i64 %and66.i, %and6.i
  %mul205.i = mul nuw nsw i64 %and62.i, %and10.i
  %mul207.i = mul nuw nsw i64 %and58.i, %and14.i
  %mul209.i = mul nuw nsw i64 %and54.i, %and18.i
  %mul211.i = mul nuw nsw i64 %and50.i, %and22.i
  %mul213.i = mul nuw nsw i64 %and46.i, %shr25.i
  %mul215.i = mul nuw nsw i64 %and42.i, %and29.i
  %add200.i = add nuw nsw i64 %mul213.i, %mul215.i
  %add202.i = add nuw i64 %add200.i, %mul211.i
  %add204.i = add i64 %add202.i, %mul209.i
  %add206.i = add i64 %add204.i, %mul207.i
  %add208.i = add i64 %add206.i, %mul205.i
  %add210.i = add i64 %add208.i, %mul203.i
  %add212.i = add i64 %add210.i, %mul201.i
  %add214.i = add i64 %add212.i, %mul199.i
  %add216.i = add i64 %add214.i, %and117.i
  %mul217.i = mul nuw nsw i64 %and77.i, %and.i
  %mul219.i = mul nuw nsw i64 %and73.i, %and2.i
  %mul221.i = mul nuw nsw i64 %shr69.i, %and6.i
  %mul223.i = mul nuw nsw i64 %and66.i, %and10.i
  %mul225.i = mul nuw nsw i64 %and62.i, %and14.i
  %mul227.i = mul nuw nsw i64 %and58.i, %and18.i
  %mul229.i = mul nuw nsw i64 %and54.i, %and22.i
  %mul231.i = mul nuw nsw i64 %and50.i, %shr25.i
  %mul233.i = mul nuw nsw i64 %and46.i, %and29.i
  %mul235.i = mul nuw nsw i64 %and42.i, %and33.i
  %mul237.i = mul nuw nsw i64 %and81.i, %and.i
  %mul239.i = mul nuw nsw i64 %and77.i, %and2.i
  %mul241.i = mul nuw nsw i64 %and73.i, %and6.i
  %mul243.i = mul nuw nsw i64 %shr69.i, %and10.i
  %mul245.i = mul nuw nsw i64 %and66.i, %and14.i
  %mul247.i = mul nuw nsw i64 %and62.i, %and18.i
  %mul249.i = mul nuw nsw i64 %and58.i, %and22.i
  %mul251.i = mul nuw nsw i64 %and54.i, %shr25.i
  %mul253.i = mul nuw nsw i64 %and50.i, %and29.i
  %mul255.i = mul nuw nsw i64 %and46.i, %and33.i
  %mul257.i = mul nuw nsw i64 %and42.i, %and37.i
  %add238.i = add nuw nsw i64 %mul255.i, %mul257.i
  %add240.i = add nuw nsw i64 %add238.i, %mul253.i
  %add242.i = add nuw nsw i64 %add240.i, %mul251.i
  %add244.i = add nuw i64 %add242.i, %mul249.i
  %add246.i = add i64 %add244.i, %mul247.i
  %add248.i = add i64 %add246.i, %mul245.i
  %add250.i = add i64 %add248.i, %mul243.i
  %add252.i = add i64 %add250.i, %mul241.i
  %add254.i = add i64 %add252.i, %mul239.i
  %add256.i = add i64 %add254.i, %mul237.i
  %add258.i = add i64 %add256.i, %and125.i
  %mul259.i = mul nuw nsw i64 %shr84.i, %and.i
  %mul261.i = mul nuw nsw i64 %and81.i, %and2.i
  %mul263.i = mul nuw nsw i64 %and77.i, %and6.i
  %mul265.i = mul nuw nsw i64 %and73.i, %and10.i
  %mul267.i = mul nuw nsw i64 %shr69.i, %and14.i
  %mul269.i = mul nuw nsw i64 %and66.i, %and18.i
  %mul271.i = mul nuw nsw i64 %and62.i, %and22.i
  %mul273.i = mul nuw nsw i64 %and58.i, %shr25.i
  %mul275.i = mul nuw nsw i64 %and54.i, %and29.i
  %mul277.i = mul nuw nsw i64 %and50.i, %and33.i
  %mul279.i = mul nuw nsw i64 %and46.i, %and37.i
  %mul281.i = mul nuw nsw i64 %and42.i, %shr40.i
  %mul283.i = mul nuw nsw i64 %shr84.i, %and2.i
  %mul284.i = mul nuw nsw i64 %and81.i, %and6.i
  %mul286.i = mul nuw nsw i64 %and77.i, %and10.i
  %mul288.i = mul nuw nsw i64 %and73.i, %and14.i
  %mul290.i = mul nuw nsw i64 %shr69.i, %and18.i
  %mul292.i = mul nuw nsw i64 %and66.i, %and22.i
  %mul294.i = mul nuw nsw i64 %and62.i, %shr25.i
  %mul296.i = mul nuw nsw i64 %and58.i, %and29.i
  %mul298.i = mul nuw nsw i64 %and54.i, %and33.i
  %mul300.i = mul nuw nsw i64 %and50.i, %and37.i
  %mul302.i = mul nuw nsw i64 %and46.i, %shr40.i
  %add285.i = add nuw nsw i64 %mul300.i, %mul302.i
  %add287.i = add nuw i64 %add285.i, %mul298.i
  %add289.i = add i64 %add287.i, %mul296.i
  %add291.i = add i64 %add289.i, %mul294.i
  %add293.i = add i64 %add291.i, %mul292.i
  %add295.i = add i64 %add293.i, %mul290.i
  %add297.i = add i64 %add295.i, %mul288.i
  %add299.i = add i64 %add297.i, %mul286.i
  %add301.i = add i64 %add299.i, %mul284.i
  %add303.i = add i64 %add301.i, %mul283.i
  %mul304.i = mul nuw nsw i64 %shr84.i, %and6.i
  %mul305.i = mul nuw nsw i64 %and81.i, %and10.i
  %mul307.i = mul nuw nsw i64 %and77.i, %and14.i
  %mul309.i = mul nuw nsw i64 %and73.i, %and18.i
  %mul311.i = mul nuw nsw i64 %shr69.i, %and22.i
  %mul313.i = mul nuw nsw i64 %and66.i, %shr25.i
  %mul315.i = mul nuw nsw i64 %and62.i, %and29.i
  %mul317.i = mul nuw nsw i64 %and58.i, %and33.i
  %mul319.i = mul nuw nsw i64 %and54.i, %and37.i
  %mul321.i = mul nuw nsw i64 %and50.i, %shr40.i
  %mul323.i = mul nuw nsw i64 %shr84.i, %and10.i
  %mul324.i = mul nuw nsw i64 %and81.i, %and14.i
  %mul326.i = mul nuw nsw i64 %and77.i, %and18.i
  %mul328.i = mul nuw nsw i64 %and73.i, %and22.i
  %mul330.i = mul nuw nsw i64 %shr69.i, %shr25.i
  %mul332.i = mul nuw nsw i64 %and66.i, %and29.i
  %mul334.i = mul nuw nsw i64 %and62.i, %and33.i
  %mul336.i = mul nuw nsw i64 %and58.i, %and37.i
  %mul338.i = mul nuw nsw i64 %and54.i, %shr40.i
  %add325.i = add nuw nsw i64 %mul336.i, %mul338.i
  %add327.i = add nuw i64 %add325.i, %mul334.i
  %add329.i = add i64 %add327.i, %mul332.i
  %add331.i = add i64 %add329.i, %mul330.i
  %add333.i = add i64 %add331.i, %mul328.i
  %add335.i = add i64 %add333.i, %mul326.i
  %add337.i = add i64 %add335.i, %mul324.i
  %add339.i = add i64 %add337.i, %mul323.i
  %mul340.i = mul nuw nsw i64 %shr84.i, %and14.i
  %mul341.i = mul nuw nsw i64 %and81.i, %and18.i
  %mul343.i = mul nuw nsw i64 %and77.i, %and22.i
  %mul345.i = mul nuw nsw i64 %and73.i, %shr25.i
  %mul347.i = mul nuw nsw i64 %shr69.i, %and29.i
  %mul349.i = mul nuw nsw i64 %and66.i, %and33.i
  %mul351.i = mul nuw nsw i64 %and62.i, %and37.i
  %mul353.i = mul nuw nsw i64 %and58.i, %shr40.i
  %mul355.i = mul nuw nsw i64 %shr84.i, %and18.i
  %mul356.i = mul nuw nsw i64 %and81.i, %and22.i
  %mul358.i = mul nuw nsw i64 %and77.i, %shr25.i
  %mul360.i = mul nuw nsw i64 %and73.i, %and29.i
  %mul362.i = mul nuw nsw i64 %shr69.i, %and33.i
  %mul364.i = mul nuw nsw i64 %and66.i, %and37.i
  %mul366.i = mul nuw nsw i64 %and62.i, %shr40.i
  %add357.i = add nuw nsw i64 %mul364.i, %mul366.i
  %add359.i = add nuw i64 %add357.i, %mul362.i
  %add361.i = add i64 %add359.i, %mul360.i
  %add363.i = add i64 %add361.i, %mul358.i
  %add365.i = add i64 %add363.i, %mul356.i
  %add367.i = add i64 %add365.i, %mul355.i
  %mul368.i = mul nuw nsw i64 %shr84.i, %and22.i
  %mul369.i = mul nuw nsw i64 %and81.i, %shr25.i
  %mul371.i = mul nuw nsw i64 %and77.i, %and29.i
  %mul373.i = mul nuw nsw i64 %and73.i, %and33.i
  %mul375.i = mul nuw nsw i64 %shr69.i, %and37.i
  %mul377.i = mul nuw nsw i64 %and66.i, %shr40.i
  %mul379.i = mul nuw nsw i64 %shr84.i, %shr25.i
  %mul380.i = mul nuw nsw i64 %and81.i, %and29.i
  %mul382.i = mul nuw nsw i64 %and77.i, %and33.i
  %mul384.i = mul nuw nsw i64 %and73.i, %and37.i
  %mul386.i = mul nuw nsw i64 %shr69.i, %shr40.i
  %add381.i = add nuw nsw i64 %mul384.i, %mul386.i
  %add383.i = add nuw i64 %add381.i, %mul382.i
  %add385.i = add i64 %add383.i, %mul380.i
  %add387.i = add i64 %add385.i, %mul379.i
  %mul388.i = mul nuw nsw i64 %shr84.i, %and29.i
  %mul389.i = mul nuw nsw i64 %and81.i, %and33.i
  %mul391.i = mul nuw nsw i64 %and77.i, %and37.i
  %mul393.i = mul nuw nsw i64 %and73.i, %shr40.i
  %mul395.i = mul nuw nsw i64 %shr84.i, %and33.i
  %mul396.i = mul nuw nsw i64 %and81.i, %and37.i
  %mul398.i = mul nuw nsw i64 %and77.i, %shr40.i
  %add397.i = add nuw nsw i64 %mul396.i, %mul398.i
  %add399.i = add nuw i64 %add397.i, %mul395.i
  %mul400.i = mul nuw nsw i64 %shr84.i, %and37.i
  %mul401.i = mul nuw nsw i64 %and81.i, %shr40.i
  %add402.i = add nuw nsw i64 %mul400.i, %mul401.i
  %mul403.i = mul nuw nsw i64 %shr84.i, %shr40.i
  %add404.i = add nuw nsw i64 %add.i, 1048576
  %shr405.1924.i = lshr i64 %add404.i, 21
  %add130.i = add nuw nsw i64 %mul129.i, %mul131.i
  %add132.i = add nuw nsw i64 %add130.i, %shr405.1924.i
  %add406.i = add nuw nsw i64 %add132.i, %and90.i
  %mul407.i = shl nuw nsw i64 %shr405.1924.i, 21
  %sub.i = sub nsw i64 %add.i, %mul407.i
  %add408.i = add nuw nsw i64 %add138.i, 1048576
  %shr409.i = lshr i64 %add408.i, 21
  %add140.i = add nuw nsw i64 %mul143.i, %mul145.i
  %add142.i = add nuw nsw i64 %add140.i, %mul141.i
  %add144.i = add nuw nsw i64 %add142.i, %mul139.i
  %add146.i = add nuw nsw i64 %add144.i, %and98.i
  %add410.i = add i64 %add146.i, %shr409.i
  %mul411.i = shl nuw nsw i64 %shr409.i, 21
  %add413.i = add nsw i64 %add156.i, 1048576
  %shr414.i = ashr i64 %add413.i, 21
  %add158.i = add nuw nsw i64 %mul165.i, %mul167.i
  %add160.i = add nuw nsw i64 %add158.i, %mul163.i
  %add162.i = add nuw nsw i64 %add160.i, %mul161.i
  %add164.i = add nuw nsw i64 %add162.i, %mul159.i
  %add166.i = add i64 %add164.i, %mul157.i
  %add168.i = add i64 %add166.i, %and106.i
  %add415.i = add i64 %add168.i, %shr414.i
  %mul416.i = shl nsw i64 %shr414.i, 21
  %add418.i = add nsw i64 %add182.i, 1048576
  %shr419.i = ashr i64 %add418.i, 21
  %add184.i = add nuw nsw i64 %mul195.i, %mul197.i
  %add186.i = add nuw i64 %add184.i, %mul193.i
  %add188.i = add i64 %add186.i, %mul191.i
  %add190.i = add i64 %add188.i, %mul189.i
  %add192.i = add i64 %add190.i, %mul187.i
  %add194.i = add i64 %add192.i, %mul185.i
  %add196.i = add i64 %add194.i, %mul183.i
  %add198.i = add i64 %add196.i, %shr113.i
  %add420.i = add i64 %add198.i, %shr419.i
  %mul421.i = shl nsw i64 %shr419.i, 21
  %add423.i = add nsw i64 %add216.i, 1048576
  %shr424.i = ashr i64 %add423.i, 21
  %add218.i = add nuw nsw i64 %mul233.i, %mul235.i
  %add220.i = add nuw nsw i64 %add218.i, %mul231.i
  %add222.i = add nuw i64 %add220.i, %mul229.i
  %add224.i = add i64 %add222.i, %mul227.i
  %add226.i = add i64 %add224.i, %mul225.i
  %add228.i = add i64 %add226.i, %mul223.i
  %add230.i = add i64 %add228.i, %mul221.i
  %add232.i = add i64 %add230.i, %mul219.i
  %add234.i = add i64 %add232.i, %mul217.i
  %add236.i = add i64 %add234.i, %shr424.i
  %add425.i = add i64 %add236.i, %and121.i
  %mul426.i = shl nsw i64 %shr424.i, 21
  %add428.i = add nsw i64 %add258.i, 1048576
  %shr429.i = ashr i64 %add428.i, 21
  %add260.i = add nuw nsw i64 %mul279.i, %mul281.i
  %add262.i = add nuw i64 %add260.i, %mul277.i
  %add264.i = add i64 %add262.i, %mul275.i
  %add266.i = add i64 %add264.i, %mul273.i
  %add268.i = add i64 %add266.i, %mul271.i
  %add270.i = add i64 %add268.i, %mul269.i
  %add272.i = add i64 %add270.i, %mul267.i
  %add274.i = add i64 %add272.i, %mul265.i
  %add276.i = add i64 %add274.i, %mul263.i
  %add278.i = add i64 %add276.i, %mul261.i
  %add280.i = add i64 %add278.i, %mul259.i
  %add282.i = add i64 %add280.i, %shr128.i
  %add430.i = add i64 %add282.i, %shr429.i
  %mul431.i = shl nsw i64 %shr429.i, 21
  %add433.i = add nsw i64 %add303.i, 1048576
  %shr434.i = ashr i64 %add433.i, 21
  %add306.i = add nuw nsw i64 %mul319.i, %mul321.i
  %add308.i = add nuw i64 %add306.i, %mul317.i
  %add310.i = add i64 %add308.i, %mul315.i
  %add312.i = add i64 %add310.i, %mul313.i
  %add314.i = add i64 %add312.i, %mul311.i
  %add316.i = add i64 %add314.i, %mul309.i
  %add318.i = add i64 %add316.i, %mul307.i
  %add320.i = add i64 %add318.i, %mul305.i
  %add322.i = add i64 %add320.i, %mul304.i
  %add435.i = add i64 %add322.i, %shr434.i
  %mul436.i = shl nsw i64 %shr434.i, 21
  %add438.i = add nsw i64 %add339.i, 1048576
  %shr439.i = ashr i64 %add438.i, 21
  %add342.i = add nuw nsw i64 %mul351.i, %mul353.i
  %add344.i = add nuw i64 %add342.i, %mul349.i
  %add346.i = add i64 %add344.i, %mul347.i
  %add348.i = add i64 %add346.i, %mul345.i
  %add350.i = add i64 %add348.i, %mul343.i
  %add352.i = add i64 %add350.i, %mul341.i
  %add354.i = add i64 %add352.i, %mul340.i
  %add440.i = add i64 %add354.i, %shr439.i
  %mul441.i = shl nsw i64 %shr439.i, 21
  %add443.i = add nsw i64 %add367.i, 1048576
  %shr444.i = ashr i64 %add443.i, 21
  %add370.i = add nuw nsw i64 %mul375.i, %mul377.i
  %add372.i = add nuw i64 %add370.i, %mul373.i
  %add374.i = add i64 %add372.i, %mul371.i
  %add376.i = add i64 %add374.i, %mul369.i
  %add378.i = add i64 %add376.i, %mul368.i
  %add445.i = add i64 %add378.i, %shr444.i
  %mul446.i = shl nsw i64 %shr444.i, 21
  %add448.i = add nuw nsw i64 %add387.i, 1048576
  %shr449.i = ashr i64 %add448.i, 21
  %add390.i = add nuw nsw i64 %mul391.i, %mul393.i
  %add392.i = add nuw i64 %add390.i, %mul389.i
  %add394.i = add i64 %add392.i, %mul388.i
  %add450.i = add i64 %add394.i, %shr449.i
  %mul451.i = shl nsw i64 %shr449.i, 21
  %sub452.i = sub nsw i64 %add387.i, %mul451.i
  %add453.i = add nuw nsw i64 %add399.i, 1048576
  %shr454.1925.i = lshr i64 %add453.i, 21
  %add455.i = add nuw nsw i64 %add402.i, %shr454.1925.i
  %mul456.i = shl nuw nsw i64 %shr454.1925.i, 21
  %sub457.i = sub nsw i64 %add399.i, %mul456.i
  %add458.i = add nuw nsw i64 %mul403.i, 1048576
  %shr459.1926.i = lshr i64 %add458.i, 21
  %mul461.i = shl nuw nsw i64 %shr459.1926.i, 21
  %sub462.i = sub nsw i64 %mul403.i, %mul461.i
  %add463.i = add nuw nsw i64 %add406.i, 1048576
  %shr464.i = lshr i64 %add463.i, 21
  %mul466.i = shl nuw nsw i64 %shr464.i, 21
  %sub467.i = sub i64 %add406.i, %mul466.i
  %add468.i = add nsw i64 %add410.i, 1048576
  %shr469.i = ashr i64 %add468.i, 21
  %mul471.i = shl nsw i64 %shr469.i, 21
  %sub472.i = sub i64 %add410.i, %mul471.i
  %add473.i = add nsw i64 %add415.i, 1048576
  %shr474.i = ashr i64 %add473.i, 21
  %mul476.i = shl nsw i64 %shr474.i, 21
  %add478.i = add nsw i64 %add420.i, 1048576
  %shr479.i = ashr i64 %add478.i, 21
  %mul481.i = shl nsw i64 %shr479.i, 21
  %add483.i = add nsw i64 %add425.i, 1048576
  %shr484.i = ashr i64 %add483.i, 21
  %mul486.i = shl nsw i64 %shr484.i, 21
  %add488.i = add nsw i64 %add430.i, 1048576
  %shr489.i = ashr i64 %add488.i, 21
  %mul491.i = shl nsw i64 %shr489.i, 21
  %add493.i = add nsw i64 %add435.i, 1048576
  %shr494.i = ashr i64 %add493.i, 21
  %mul496.i = shl nsw i64 %shr494.i, 21
  %add498.i = add nsw i64 %add440.i, 1048576
  %shr499.i = ashr i64 %add498.i, 21
  %mul501.i = shl nsw i64 %shr499.i, 21
  %add503.i = add nsw i64 %add445.i, 1048576
  %shr504.i = ashr i64 %add503.i, 21
  %add505.i = add nsw i64 %shr504.i, %sub452.i
  %mul506.i = shl nsw i64 %shr504.i, 21
  %sub507.i = sub nsw i64 %add445.i, %mul506.i
  %add508.i = add nsw i64 %add450.i, 1048576
  %shr509.i = ashr i64 %add508.i, 21
  %add510.i = add nsw i64 %shr509.i, %sub457.i
  %mul511.i = shl nsw i64 %shr509.i, 21
  %sub512.i = sub nsw i64 %add450.i, %mul511.i
  %add513.i = add nuw nsw i64 %add455.i, 1048576
  %shr514.1927.i = lshr i64 %add513.i, 21
  %add515.i = add nsw i64 %shr514.1927.i, %sub462.i
  %mul516.i = shl nuw nsw i64 %shr514.1927.i, 21
  %sub517.i = sub nsw i64 %add455.i, %mul516.i
  %mul518.i = mul nuw nsw i64 %shr459.1926.i, 666643
  %mul520.i = mul nuw nsw i64 %shr459.1926.i, 470296
  %mul522.i = mul nuw nsw i64 %shr459.1926.i, 654183
  %154 = mul nsw i64 %shr459.1926.i, -997805
  %mul526.i = mul nuw nsw i64 %shr459.1926.i, 136657
  %155 = mul nsw i64 %shr459.1926.i, -683901
  %sub447.i = add i64 %155, %add367.i
  %add500.i = sub i64 %sub447.i, %mul446.i
  %sub529.i = add i64 %add500.i, %shr499.i
  %mul530.i = mul nsw i64 %add515.i, 666643
  %mul532.i = mul nsw i64 %add515.i, 470296
  %mul534.i = mul nsw i64 %add515.i, 654183
  %156 = mul i64 %add515.i, -997805
  %mul538.i = mul nsw i64 %add515.i, 136657
  %157 = mul i64 %add515.i, -683901
  %mul542.i = mul nsw i64 %sub517.i, 666643
  %mul544.i = mul nsw i64 %sub517.i, 470296
  %mul546.i = mul nsw i64 %sub517.i, 654183
  %158 = mul i64 %sub517.i, -997805
  %mul550.i = mul nsw i64 %sub517.i, 136657
  %159 = mul i64 %sub517.i, -683901
  %sub442.i = add i64 %154, %add339.i
  %add495.i = sub i64 %sub442.i, %mul441.i
  %sub525.i = add i64 %add495.i, %shr494.i
  %add539.i = add i64 %sub525.i, %mul538.i
  %sub553.i = add i64 %add539.i, %159
  %mul554.i = mul nsw i64 %add510.i, 666643
  %mul556.i = mul nsw i64 %add510.i, 470296
  %mul558.i = mul nsw i64 %add510.i, 654183
  %160 = mul i64 %add510.i, -997805
  %mul562.i = mul nsw i64 %add510.i, 136657
  %161 = mul i64 %add510.i, -683901
  %mul566.i = mul nsw i64 %sub512.i, 666643
  %mul568.i = mul nsw i64 %sub512.i, 470296
  %mul570.i = mul nsw i64 %sub512.i, 654183
  %162 = mul i64 %sub512.i, -997805
  %mul574.i = mul nsw i64 %sub512.i, 136657
  %163 = mul i64 %sub512.i, -683901
  %sub437.i = add i64 %mul520.i, %add303.i
  %add490.i = sub i64 %sub437.i, %mul436.i
  %add521.i = add i64 %add490.i, %mul534.i
  %add535.i = add i64 %add521.i, %mul562.i
  %sub549.i = add i64 %add535.i, %158
  %add563.i = add i64 %sub549.i, %163
  %sub577.i = add i64 %add563.i, %shr489.i
  %mul578.i = mul nsw i64 %add505.i, 666643
  %sub422.i = add i64 %shr474.i, %mul578.i
  %add475.i = add i64 %sub422.i, %add182.i
  %add579.i = sub i64 %add475.i, %mul421.i
  %mul580.i = mul nsw i64 %add505.i, 470296
  %mul582.i = mul nsw i64 %add505.i, 654183
  %sub427.i = add i64 %mul582.i, %mul554.i
  %add480.i = add i64 %sub427.i, %mul568.i
  %add555.i = add i64 %add480.i, %add216.i
  %add569.i = add i64 %add555.i, %shr479.i
  %add583.i = sub i64 %add569.i, %mul426.i
  %164 = mul i64 %add505.i, -997805
  %mul586.i = mul nsw i64 %add505.i, 136657
  %sub432.i = add i64 %mul558.i, %mul530.i
  %add485.i = add i64 %sub432.i, %mul586.i
  %add531.i = add i64 %add485.i, %mul544.i
  %add545.i = add i64 %add531.i, %162
  %add559.i = add i64 %add545.i, %add258.i
  %sub573.i = add i64 %add559.i, %shr484.i
  %add587.i = sub i64 %sub573.i, %mul431.i
  %165 = mul i64 %add505.i, -683901
  %add590.i = add nsw i64 %add579.i, 1048576
  %shr591.i = ashr i64 %add590.i, 21
  %sub482.i = add i64 %mul566.i, %mul580.i
  %add567.i = add i64 %sub482.i, %add420.i
  %add581.i = sub i64 %add567.i, %mul481.i
  %add592.i = add i64 %add581.i, %shr591.i
  %mul593.i = shl nsw i64 %shr591.i, 21
  %add595.i = add nsw i64 %add583.i, 1048576
  %shr596.i = ashr i64 %add595.i, 21
  %sub487.i = add i64 %164, %mul556.i
  %add543.i = add i64 %sub487.i, %mul542.i
  %add557.i = add i64 %add543.i, %mul570.i
  %add571.i = add i64 %add557.i, %add425.i
  %sub585.i = add i64 %add571.i, %shr596.i
  %add597.i = sub i64 %sub585.i, %mul486.i
  %mul598.i = shl nsw i64 %shr596.i, 21
  %add600.i = add nsw i64 %add587.i, 1048576
  %shr601.i = ashr i64 %add600.i, 21
  %sub492.i = add i64 %mul532.i, %mul518.i
  %add519.i = add i64 %sub492.i, %160
  %add533.i = add i64 %add519.i, %165
  %add547.i = add i64 %add533.i, %mul546.i
  %sub561.i = add i64 %add547.i, %mul574.i
  %add575.i = add i64 %sub561.i, %add430.i
  %sub589.i = sub i64 %add575.i, %mul491.i
  %add602.i = add i64 %sub589.i, %shr601.i
  %mul603.i = shl nsw i64 %shr601.i, 21
  %add605.i = add nsw i64 %sub577.i, 1048576
  %shr606.i = ashr i64 %add605.i, 21
  %sub497.i = add i64 %add435.i, %mul522.i
  %add523.i = sub i64 %sub497.i, %mul496.i
  %sub537.i = add i64 %add523.i, %156
  %add551.i = add i64 %sub537.i, %161
  %sub565.i = add i64 %add551.i, %mul550.i
  %add607.i = add i64 %sub565.i, %shr606.i
  %mul608.i = shl nsw i64 %shr606.i, 21
  %sub609.i = sub nsw i64 %sub577.i, %mul608.i
  %add610.i = add nsw i64 %sub553.i, 1048576
  %shr611.i = ashr i64 %add610.i, 21
  %sub502.i = add i64 %add440.i, %mul526.i
  %add527.i = sub i64 %sub502.i, %mul501.i
  %sub541.i = add i64 %add527.i, %157
  %add612.i = add i64 %sub541.i, %shr611.i
  %mul613.i = shl nsw i64 %shr611.i, 21
  %sub614.i = sub nsw i64 %sub553.i, %mul613.i
  %add615.i = add nsw i64 %sub529.i, 1048576
  %shr616.i = ashr i64 %add615.i, 21
  %add617.i = add nsw i64 %shr616.i, %sub507.i
  %mul618.i = shl nsw i64 %shr616.i, 21
  %sub619.i = sub nsw i64 %sub529.i, %mul618.i
  %add620.i = add nsw i64 %add592.i, 1048576
  %shr621.i = ashr i64 %add620.i, 21
  %mul623.i = shl nsw i64 %shr621.i, 21
  %add625.i = add nsw i64 %add597.i, 1048576
  %shr626.i = ashr i64 %add625.i, 21
  %mul628.i = shl nsw i64 %shr626.i, 21
  %add630.i = add nsw i64 %add602.i, 1048576
  %shr631.i = ashr i64 %add630.i, 21
  %add632.i = add nsw i64 %shr631.i, %sub609.i
  %mul633.i = shl nsw i64 %shr631.i, 21
  %sub634.i = sub nsw i64 %add602.i, %mul633.i
  %add635.i = add nsw i64 %add607.i, 1048576
  %shr636.i = ashr i64 %add635.i, 21
  %add637.i = add nsw i64 %shr636.i, %sub614.i
  %mul638.i = shl nsw i64 %shr636.i, 21
  %sub639.i = sub nsw i64 %add607.i, %mul638.i
  %add640.i = add nsw i64 %add612.i, 1048576
  %shr641.i = ashr i64 %add640.i, 21
  %add642.i = add nsw i64 %shr641.i, %sub619.i
  %mul643.i = shl nsw i64 %shr641.i, 21
  %sub644.i = sub nsw i64 %add612.i, %mul643.i
  %mul645.i = mul nsw i64 %add617.i, 666643
  %mul647.i = mul nsw i64 %add617.i, 470296
  %mul649.i = mul nsw i64 %add617.i, 654183
  %166 = mul i64 %add617.i, -997805
  %mul653.i = mul nsw i64 %add617.i, 136657
  %167 = mul i64 %add617.i, -683901
  %sub604.i = add i64 %add587.i, %167
  %add627.i = add i64 %sub604.i, %shr626.i
  %sub656.i = sub i64 %add627.i, %mul603.i
  %mul657.i = mul nsw i64 %add642.i, 666643
  %mul659.i = mul nsw i64 %add642.i, 470296
  %mul661.i = mul nsw i64 %add642.i, 654183
  %168 = mul i64 %add642.i, -997805
  %mul665.i = mul nsw i64 %add642.i, 136657
  %169 = mul i64 %add642.i, -683901
  %mul669.i = mul nsw i64 %sub644.i, 666643
  %add670.i = add nsw i64 %sub472.i, %mul669.i
  %mul671.i = mul nsw i64 %sub644.i, 470296
  %mul673.i = mul nsw i64 %sub644.i, 654183
  %170 = mul i64 %sub644.i, -997805
  %mul677.i = mul nsw i64 %sub644.i, 136657
  %171 = mul i64 %sub644.i, -683901
  %sub599.i = add i64 %mul665.i, %166
  %add622.i = add i64 %sub599.i, %171
  %sub652.i = add i64 %add622.i, %add583.i
  %add666.i = add i64 %sub652.i, %shr621.i
  %sub680.i = sub i64 %add666.i, %mul598.i
  %mul681.i = mul nsw i64 %add637.i, 666643
  %mul683.i = mul nsw i64 %add637.i, 470296
  %mul685.i = mul nsw i64 %add637.i, 654183
  %172 = mul i64 %add637.i, -997805
  %mul689.i = mul nsw i64 %add637.i, 136657
  %173 = mul i64 %add637.i, -683901
  %mul693.i = mul nsw i64 %sub639.i, 666643
  %mul695.i = mul nsw i64 %sub639.i, 470296
  %mul697.i = mul nsw i64 %sub639.i, 654183
  %174 = mul i64 %sub639.i, -997805
  %mul701.i = mul nsw i64 %sub639.i, 136657
  %175 = mul i64 %sub639.i, -683901
  %sub594.i = add i64 %mul661.i, %mul647.i
  %add648.i = add i64 %sub594.i, %170
  %add662.i = add i64 %add648.i, %add579.i
  %sub676.i = sub i64 %add662.i, %mul593.i
  %add690.i = add i64 %sub676.i, %mul689.i
  %sub704.i = add i64 %add690.i, %175
  %mul705.i = mul nsw i64 %add632.i, 666643
  %add706.i = add nsw i64 %mul705.i, %sub.i
  %mul707.i = mul nsw i64 %add632.i, 470296
  %mul709.i = mul nsw i64 %add632.i, 654183
  %sub412.i = add nuw nsw i64 %add138.i, %shr464.i
  %add465.i = sub i64 %sub412.i, %mul411.i
  %add682.i = add i64 %add465.i, %mul709.i
  %add696.i = add i64 %add682.i, %mul681.i
  %add710.i = add i64 %add696.i, %mul695.i
  %176 = mul i64 %add632.i, -997805
  %mul713.i = mul nsw i64 %add632.i, 136657
  %sub417.i = add i64 %add156.i, %shr469.i
  %add470.i = sub i64 %sub417.i, %mul416.i
  %add658.i = add i64 %add470.i, %mul657.i
  %add672.i = add i64 %add658.i, %mul671.i
  %add686.i = add i64 %add672.i, %mul713.i
  %sub700.i = add i64 %add686.i, %mul685.i
  %add714.i = add i64 %sub700.i, %174
  %177 = mul i64 %add632.i, -683901
  %add717.i = add nsw i64 %add706.i, 1048576
  %shr718.i = ashr i64 %add717.i, 21
  %add694.i = add i64 %sub467.i, %mul707.i
  %add708.i = add i64 %add694.i, %mul693.i
  %add719.i = add i64 %add708.i, %shr718.i
  %mul720.i = shl nsw i64 %shr718.i, 21
  %sub721.i = sub nsw i64 %add706.i, %mul720.i
  %add722.i = add nsw i64 %add710.i, 1048576
  %shr723.i = ashr i64 %add722.i, 21
  %add684.i = add i64 %add670.i, %176
  %add698.i = add i64 %add684.i, %mul683.i
  %sub712.i = add i64 %add698.i, %mul697.i
  %add724.i = add i64 %sub712.i, %shr723.i
  %mul725.i = shl nsw i64 %shr723.i, 21
  %add727.i = add nsw i64 %add714.i, 1048576
  %shr728.i = ashr i64 %add727.i, 21
  %sub477.i = add i64 %add415.i, %mul645.i
  %add646.i = add i64 %sub477.i, %mul659.i
  %add660.i = add i64 %add646.i, %mul673.i
  %add674.i = sub i64 %add660.i, %mul476.i
  %sub688.i = add i64 %add674.i, %177
  %add702.i = add i64 %sub688.i, %172
  %sub716.i = add i64 %add702.i, %mul701.i
  %add729.i = add i64 %sub716.i, %shr728.i
  %mul730.i = shl nsw i64 %shr728.i, 21
  %add732.i = add nsw i64 %sub704.i, 1048576
  %shr733.i = ashr i64 %add732.i, 21
  %sub624.i = add i64 %168, %mul649.i
  %add650.i = add i64 %sub624.i, %mul677.i
  %sub664.i = add i64 %add650.i, %add592.i
  %add678.i = sub i64 %sub664.i, %mul623.i
  %sub692.i = add i64 %add678.i, %173
  %add734.i = add i64 %sub692.i, %shr733.i
  %mul735.i = shl nsw i64 %shr733.i, 21
  %sub736.i = sub i64 %sub704.i, %mul735.i
  %add737.i = add nsw i64 %sub680.i, 1048576
  %shr738.i = ashr i64 %add737.i, 21
  %sub629.i = add i64 %169, %mul653.i
  %add654.i = add i64 %sub629.i, %add597.i
  %sub668.i = add i64 %add654.i, %shr738.i
  %add739.i = sub i64 %sub668.i, %mul628.i
  %mul740.i = shl nsw i64 %shr738.i, 21
  %sub741.i = sub i64 %sub680.i, %mul740.i
  %add742.i = add nsw i64 %sub656.i, 1048576
  %shr743.i = ashr i64 %add742.i, 21
  %add744.i = add nsw i64 %sub634.i, %shr743.i
  %mul745.i = shl nsw i64 %shr743.i, 21
  %add747.i = add nsw i64 %add719.i, 1048576
  %shr748.i = ashr i64 %add747.i, 21
  %mul750.i = shl nsw i64 %shr748.i, 21
  %add752.i = add nsw i64 %add724.i, 1048576
  %shr753.i = ashr i64 %add752.i, 21
  %mul755.i = shl nsw i64 %shr753.i, 21
  %add757.i = add nsw i64 %add729.i, 1048576
  %shr758.i = ashr i64 %add757.i, 21
  %add759.i = add nsw i64 %sub736.i, %shr758.i
  %mul760.i = shl nsw i64 %shr758.i, 21
  %add762.i = add nsw i64 %add734.i, 1048576
  %shr763.i = ashr i64 %add762.i, 21
  %add764.i = add nsw i64 %sub741.i, %shr763.i
  %mul765.i = shl nsw i64 %shr763.i, 21
  %sub766.i = sub nsw i64 %add734.i, %mul765.i
  %add767.i = add nsw i64 %add739.i, 1048576
  %shr768.i = ashr i64 %add767.i, 21
  %mul770.i = shl nsw i64 %shr768.i, 21
  %sub771.i = sub nsw i64 %add739.i, %mul770.i
  %add772.i = add nsw i64 %add744.i, 1048576
  %shr773.i = ashr i64 %add772.i, 21
  %mul775.i = shl nsw i64 %shr773.i, 21
  %sub776.i = sub nsw i64 %add744.i, %mul775.i
  %mul777.i = mul nsw i64 %shr773.i, 666643
  %add778.i = add nsw i64 %sub721.i, %mul777.i
  %mul779.i = mul nsw i64 %shr773.i, 470296
  %mul781.i = mul nsw i64 %shr773.i, 654183
  %178 = mul nsw i64 %shr773.i, -997805
  %mul785.i = mul nsw i64 %shr773.i, 136657
  %179 = mul nsw i64 %shr773.i, -683901
  %shr789.i = ashr i64 %add778.i, 21
  %sub751.i = add i64 %mul779.i, %add719.i
  %add780.i = sub i64 %sub751.i, %mul750.i
  %add790.i = add i64 %add780.i, %shr789.i
  %mul791.i = shl nsw i64 %shr789.i, 21
  %sub792.i = sub nsw i64 %add778.i, %mul791.i
  %shr793.i = ashr i64 %add790.i, 21
  %sub726.i = add i64 %mul781.i, %add710.i
  %add749.i = add i64 %sub726.i, %shr748.i
  %add782.i = sub i64 %add749.i, %mul725.i
  %add794.i = add i64 %add782.i, %shr793.i
  %mul795.i = shl nsw i64 %shr793.i, 21
  %sub796.i = sub i64 %add790.i, %mul795.i
  %shr797.i = ashr i64 %add794.i, 21
  %sub756.i = add i64 %add724.i, %178
  %sub784.i = sub i64 %sub756.i, %mul755.i
  %add798.i = add i64 %sub784.i, %shr797.i
  %mul799.i = shl nsw i64 %shr797.i, 21
  %sub800.i = sub i64 %add794.i, %mul799.i
  %shr801.i = ashr i64 %add798.i, 21
  %sub731.i = add i64 %mul785.i, %add714.i
  %add754.i = sub i64 %sub731.i, %mul730.i
  %add786.i = add i64 %add754.i, %shr753.i
  %add802.i = add i64 %add786.i, %shr801.i
  %mul803.i = shl nsw i64 %shr801.i, 21
  %sub804.i = sub i64 %add798.i, %mul803.i
  %shr805.i = ashr i64 %add802.i, 21
  %sub761.i = add i64 %add729.i, %179
  %sub788.i = sub i64 %sub761.i, %mul760.i
  %add806.i = add i64 %sub788.i, %shr805.i
  %mul807.i = shl nsw i64 %shr805.i, 21
  %sub808.i = sub i64 %add802.i, %mul807.i
  %shr809.i = ashr i64 %add806.i, 21
  %add810.i = add nsw i64 %add759.i, %shr809.i
  %mul811.i = shl nsw i64 %shr809.i, 21
  %sub812.i = sub i64 %add806.i, %mul811.i
  %shr813.i = ashr i64 %add810.i, 21
  %add814.i = add nsw i64 %shr813.i, %sub766.i
  %mul815.i = shl nsw i64 %shr813.i, 21
  %sub816.i = sub nsw i64 %add810.i, %mul815.i
  %shr817.i = ashr i64 %add814.i, 21
  %add818.i = add nsw i64 %add764.i, %shr817.i
  %mul819.i = shl nsw i64 %shr817.i, 21
  %sub820.i = sub nsw i64 %add814.i, %mul819.i
  %shr821.i = ashr i64 %add818.i, 21
  %add822.i = add nsw i64 %shr821.i, %sub771.i
  %mul823.i = shl nsw i64 %shr821.i, 21
  %sub824.i = sub nsw i64 %add818.i, %mul823.i
  %shr825.i = ashr i64 %add822.i, 21
  %sub746.i = add i64 %shr768.i, %sub656.i
  %add769.i = sub i64 %sub746.i, %mul745.i
  %add826.i = add i64 %add769.i, %shr825.i
  %mul827.i = shl nsw i64 %shr825.i, 21
  %sub828.i = sub nsw i64 %add822.i, %mul827.i
  %shr829.i = ashr i64 %add826.i, 21
  %add830.i = add nsw i64 %shr829.i, %sub776.i
  %mul831.i = shl nsw i64 %shr829.i, 21
  %sub832.i = sub nsw i64 %add826.i, %mul831.i
  %shr833.i = ashr i64 %add830.i, 21
  %mul835.i = shl nsw i64 %shr833.i, 21
  %sub836.i = sub nsw i64 %add830.i, %mul835.i
  %mul837.i = mul nsw i64 %shr833.i, 666643
  %add838.i = add nsw i64 %mul837.i, %sub792.i
  %mul839.i = mul nsw i64 %shr833.i, 470296
  %add840.i = add nsw i64 %sub796.i, %mul839.i
  %mul841.i = mul nsw i64 %shr833.i, 654183
  %add842.i = add nsw i64 %sub800.i, %mul841.i
  %180 = mul nsw i64 %shr833.i, -997805
  %sub844.i = add i64 %sub804.i, %180
  %mul845.i = mul nsw i64 %shr833.i, 136657
  %add846.i = add nsw i64 %sub808.i, %mul845.i
  %181 = mul nsw i64 %shr833.i, -683901
  %sub848.i = add i64 %sub812.i, %181
  %shr849.i = ashr i64 %add838.i, 21
  %add850.i = add nsw i64 %add840.i, %shr849.i
  %mul851.i = shl nsw i64 %shr849.i, 21
  %sub852.i = sub nsw i64 %add838.i, %mul851.i
  %shr853.i = ashr i64 %add850.i, 21
  %add854.i = add nsw i64 %add842.i, %shr853.i
  %mul855.i = shl nsw i64 %shr853.i, 21
  %sub856.i = sub nsw i64 %add850.i, %mul855.i
  %shr857.i = ashr i64 %add854.i, 21
  %add858.i = add nsw i64 %sub844.i, %shr857.i
  %mul859.i = shl nsw i64 %shr857.i, 21
  %sub860.i = sub nsw i64 %add854.i, %mul859.i
  %shr861.i = ashr i64 %add858.i, 21
  %add862.i = add nsw i64 %add846.i, %shr861.i
  %mul863.i = shl nsw i64 %shr861.i, 21
  %sub864.i = sub nsw i64 %add858.i, %mul863.i
  %shr865.i = ashr i64 %add862.i, 21
  %add866.i = add nsw i64 %sub848.i, %shr865.i
  %mul867.i = shl nsw i64 %shr865.i, 21
  %sub868.i = sub nsw i64 %add862.i, %mul867.i
  %shr869.i = ashr i64 %add866.i, 21
  %add870.i = add nsw i64 %shr869.i, %sub816.i
  %mul871.i = shl nsw i64 %shr869.i, 21
  %sub872.i = sub nsw i64 %add866.i, %mul871.i
  %shr873.i = ashr i64 %add870.i, 21
  %add874.i = add nsw i64 %shr873.i, %sub820.i
  %mul875.i = shl nsw i64 %shr873.i, 21
  %sub876.i = sub nsw i64 %add870.i, %mul875.i
  %shr877.i = ashr i64 %add874.i, 21
  %add878.i = add nsw i64 %shr877.i, %sub824.i
  %mul879.i = shl nsw i64 %shr877.i, 21
  %sub880.i = sub nsw i64 %add874.i, %mul879.i
  %shr881.i = ashr i64 %add878.i, 21
  %add882.i = add nsw i64 %shr881.i, %sub828.i
  %mul883.i = shl nsw i64 %shr881.i, 21
  %sub884.i = sub nsw i64 %add878.i, %mul883.i
  %shr885.i = ashr i64 %add882.i, 21
  %add886.i = add nsw i64 %shr885.i, %sub832.i
  %mul887.i = shl nsw i64 %shr885.i, 21
  %sub888.i = sub nsw i64 %add882.i, %mul887.i
  %shr889.i = ashr i64 %add886.i, 21
  %add890.i = add nsw i64 %shr889.i, %sub836.i
  %mul891.i = shl nsw i64 %shr889.i, 21
  %sub892.i = sub nsw i64 %add886.i, %mul891.i
  %conv.i = trunc i64 %sub852.i to i8
  store i8 %conv.i, i8* %add.ptr26, align 1, !tbaa !2
  %shr894.1928.i = lshr i64 %sub852.i, 8
  %conv895.i = trunc i64 %shr894.1928.i to i8
  %arrayidx896.i = getelementptr inbounds i8, i8* %out_sig, i64 33
  store i8 %conv895.i, i8* %arrayidx896.i, align 1, !tbaa !2
  %shr897.1929.i = lshr i64 %sub852.i, 16
  %shl.i = shl i64 %sub856.i, 5
  %or.i = or i64 %shl.i, %shr897.1929.i
  %conv898.i = trunc i64 %or.i to i8
  %arrayidx899.i = getelementptr inbounds i8, i8* %out_sig, i64 34
  store i8 %conv898.i, i8* %arrayidx899.i, align 1, !tbaa !2
  %shr900.1930.i = lshr i64 %sub856.i, 3
  %conv901.i = trunc i64 %shr900.1930.i to i8
  %arrayidx902.i = getelementptr inbounds i8, i8* %out_sig, i64 35
  store i8 %conv901.i, i8* %arrayidx902.i, align 1, !tbaa !2
  %shr903.1931.i = lshr i64 %sub856.i, 11
  %conv904.i = trunc i64 %shr903.1931.i to i8
  %arrayidx905.i = getelementptr inbounds i8, i8* %out_sig, i64 36
  store i8 %conv904.i, i8* %arrayidx905.i, align 1, !tbaa !2
  %shr906.1932.i = lshr i64 %sub856.i, 19
  %shl907.i = shl i64 %sub860.i, 2
  %or908.i = or i64 %shl907.i, %shr906.1932.i
  %conv909.i = trunc i64 %or908.i to i8
  %arrayidx910.i = getelementptr inbounds i8, i8* %out_sig, i64 37
  store i8 %conv909.i, i8* %arrayidx910.i, align 1, !tbaa !2
  %shr911.1933.i = lshr i64 %sub860.i, 6
  %conv912.i = trunc i64 %shr911.1933.i to i8
  %arrayidx913.i = getelementptr inbounds i8, i8* %out_sig, i64 38
  store i8 %conv912.i, i8* %arrayidx913.i, align 1, !tbaa !2
  %shr914.1934.i = lshr i64 %sub860.i, 14
  %shl915.i = shl i64 %sub864.i, 7
  %or916.i = or i64 %shl915.i, %shr914.1934.i
  %conv917.i = trunc i64 %or916.i to i8
  %arrayidx918.i = getelementptr inbounds i8, i8* %out_sig, i64 39
  store i8 %conv917.i, i8* %arrayidx918.i, align 1, !tbaa !2
  %shr919.1935.i = lshr i64 %sub864.i, 1
  %conv920.i = trunc i64 %shr919.1935.i to i8
  %arrayidx921.i = getelementptr inbounds i8, i8* %out_sig, i64 40
  store i8 %conv920.i, i8* %arrayidx921.i, align 1, !tbaa !2
  %shr922.1936.i = lshr i64 %sub864.i, 9
  %conv923.i = trunc i64 %shr922.1936.i to i8
  %arrayidx924.i = getelementptr inbounds i8, i8* %out_sig, i64 41
  store i8 %conv923.i, i8* %arrayidx924.i, align 1, !tbaa !2
  %shr925.1937.i = lshr i64 %sub864.i, 17
  %shl926.i = shl i64 %sub868.i, 4
  %or927.i = or i64 %shl926.i, %shr925.1937.i
  %conv928.i = trunc i64 %or927.i to i8
  %arrayidx929.i = getelementptr inbounds i8, i8* %out_sig, i64 42
  store i8 %conv928.i, i8* %arrayidx929.i, align 1, !tbaa !2
  %shr930.1938.i = lshr i64 %sub868.i, 4
  %conv931.i = trunc i64 %shr930.1938.i to i8
  %arrayidx932.i = getelementptr inbounds i8, i8* %out_sig, i64 43
  store i8 %conv931.i, i8* %arrayidx932.i, align 1, !tbaa !2
  %shr933.1939.i = lshr i64 %sub868.i, 12
  %conv934.i = trunc i64 %shr933.1939.i to i8
  %arrayidx935.i = getelementptr inbounds i8, i8* %out_sig, i64 44
  store i8 %conv934.i, i8* %arrayidx935.i, align 1, !tbaa !2
  %shr936.1940.i = lshr i64 %sub868.i, 20
  %shl937.i = shl i64 %sub872.i, 1
  %or938.i = or i64 %shl937.i, %shr936.1940.i
  %conv939.i = trunc i64 %or938.i to i8
  %arrayidx940.i = getelementptr inbounds i8, i8* %out_sig, i64 45
  store i8 %conv939.i, i8* %arrayidx940.i, align 1, !tbaa !2
  %shr941.1941.i = lshr i64 %sub872.i, 7
  %conv942.i = trunc i64 %shr941.1941.i to i8
  %arrayidx943.i = getelementptr inbounds i8, i8* %out_sig, i64 46
  store i8 %conv942.i, i8* %arrayidx943.i, align 1, !tbaa !2
  %shr944.1942.i = lshr i64 %sub872.i, 15
  %shl945.i = shl i64 %sub876.i, 6
  %or946.i = or i64 %shl945.i, %shr944.1942.i
  %conv947.i = trunc i64 %or946.i to i8
  %arrayidx948.i = getelementptr inbounds i8, i8* %out_sig, i64 47
  store i8 %conv947.i, i8* %arrayidx948.i, align 1, !tbaa !2
  %shr949.1943.i = lshr i64 %sub876.i, 2
  %conv950.i = trunc i64 %shr949.1943.i to i8
  %arrayidx951.i = getelementptr inbounds i8, i8* %out_sig, i64 48
  store i8 %conv950.i, i8* %arrayidx951.i, align 1, !tbaa !2
  %shr952.1944.i = lshr i64 %sub876.i, 10
  %conv953.i = trunc i64 %shr952.1944.i to i8
  %arrayidx954.i = getelementptr inbounds i8, i8* %out_sig, i64 49
  store i8 %conv953.i, i8* %arrayidx954.i, align 1, !tbaa !2
  %shr955.1945.i = lshr i64 %sub876.i, 18
  %shl956.i = shl i64 %sub880.i, 3
  %or957.i = or i64 %shl956.i, %shr955.1945.i
  %conv958.i = trunc i64 %or957.i to i8
  %arrayidx959.i = getelementptr inbounds i8, i8* %out_sig, i64 50
  store i8 %conv958.i, i8* %arrayidx959.i, align 1, !tbaa !2
  %shr960.1946.i = lshr i64 %sub880.i, 5
  %conv961.i = trunc i64 %shr960.1946.i to i8
  %arrayidx962.i = getelementptr inbounds i8, i8* %out_sig, i64 51
  store i8 %conv961.i, i8* %arrayidx962.i, align 1, !tbaa !2
  %shr963.1947.i = lshr i64 %sub880.i, 13
  %conv964.i = trunc i64 %shr963.1947.i to i8
  %arrayidx965.i = getelementptr inbounds i8, i8* %out_sig, i64 52
  store i8 %conv964.i, i8* %arrayidx965.i, align 1, !tbaa !2
  %conv967.i = trunc i64 %sub884.i to i8
  %arrayidx968.i = getelementptr inbounds i8, i8* %out_sig, i64 53
  store i8 %conv967.i, i8* %arrayidx968.i, align 1, !tbaa !2
  %shr969.1948.i = lshr i64 %sub884.i, 8
  %conv970.i = trunc i64 %shr969.1948.i to i8
  %arrayidx971.i = getelementptr inbounds i8, i8* %out_sig, i64 54
  store i8 %conv970.i, i8* %arrayidx971.i, align 1, !tbaa !2
  %shr972.1949.i = lshr i64 %sub884.i, 16
  %shl973.i = shl i64 %sub888.i, 5
  %or974.i = or i64 %shl973.i, %shr972.1949.i
  %conv975.i = trunc i64 %or974.i to i8
  %arrayidx976.i = getelementptr inbounds i8, i8* %out_sig, i64 55
  store i8 %conv975.i, i8* %arrayidx976.i, align 1, !tbaa !2
  %shr977.1950.i = lshr i64 %sub888.i, 3
  %conv978.i = trunc i64 %shr977.1950.i to i8
  %arrayidx979.i = getelementptr inbounds i8, i8* %out_sig, i64 56
  store i8 %conv978.i, i8* %arrayidx979.i, align 1, !tbaa !2
  %shr980.1951.i = lshr i64 %sub888.i, 11
  %conv981.i = trunc i64 %shr980.1951.i to i8
  %arrayidx982.i = getelementptr inbounds i8, i8* %out_sig, i64 57
  store i8 %conv981.i, i8* %arrayidx982.i, align 1, !tbaa !2
  %shr983.1952.i = lshr i64 %sub888.i, 19
  %shl984.i = shl i64 %sub892.i, 2
  %or985.i = or i64 %shl984.i, %shr983.1952.i
  %conv986.i = trunc i64 %or985.i to i8
  %arrayidx987.i = getelementptr inbounds i8, i8* %out_sig, i64 58
  store i8 %conv986.i, i8* %arrayidx987.i, align 1, !tbaa !2
  %shr988.1953.i = lshr i64 %sub892.i, 6
  %conv989.i = trunc i64 %shr988.1953.i to i8
  %arrayidx990.i = getelementptr inbounds i8, i8* %out_sig, i64 59
  store i8 %conv989.i, i8* %arrayidx990.i, align 1, !tbaa !2
  %shr991.1954.i = lshr i64 %sub892.i, 14
  %shl992.i = shl i64 %add890.i, 7
  %or993.i = or i64 %shr991.1954.i, %shl992.i
  %conv994.i = trunc i64 %or993.i to i8
  %arrayidx995.i = getelementptr inbounds i8, i8* %out_sig, i64 60
  store i8 %conv994.i, i8* %arrayidx995.i, align 1, !tbaa !2
  %shr996.1955.i = lshr i64 %add890.i, 1
  %conv997.i = trunc i64 %shr996.1955.i to i8
  %arrayidx998.i = getelementptr inbounds i8, i8* %out_sig, i64 61
  store i8 %conv997.i, i8* %arrayidx998.i, align 1, !tbaa !2
  %shr999.1956.i = lshr i64 %add890.i, 9
  %conv1000.i = trunc i64 %shr999.1956.i to i8
  %arrayidx1001.i = getelementptr inbounds i8, i8* %out_sig, i64 62
  store i8 %conv1000.i, i8* %arrayidx1001.i, align 1, !tbaa !2
  %shr1002.1957.i = lshr i64 %add890.i, 17
  %conv1003.i = trunc i64 %shr1002.1957.i to i8
  %arrayidx1004.i = getelementptr inbounds i8, i8* %out_sig, i64 63
  store i8 %conv1003.i, i8* %arrayidx1004.i, align 1, !tbaa !2
  call void @OPENSSL_cleanse(i8* %4, i64 216) #1
  call void @OPENSSL_cleanse(i8* %1, i64 64) #1
  call void @OPENSSL_cleanse(i8* %0, i64 64) #1
  call void @llvm.lifetime.end(i64 216, i8* %4) #1
  call void @llvm.lifetime.end(i64 64, i8* %3) #1
  call void @llvm.lifetime.end(i64 160, i8* %2) #1
  call void @llvm.lifetime.end(i64 64, i8* %1) #1
  call void @llvm.lifetime.end(i64 64, i8* %0) #1
  ret i32 1
}

declare i32 @SHA512_Init(%struct.SHA512state_st*) #2

declare i32 @SHA512_Update(%struct.SHA512state_st*, i8*, i64) #2

declare i32 @SHA512_Final(i8*, %struct.SHA512state_st*) #2

; Function Attrs: nounwind uwtable
define internal fastcc void @x25519_sc_reduce(i8* %s) #0 {
entry:
  %s.val = load i8, i8* %s, align 1, !tbaa !2
  %s.idx = getelementptr i8, i8* %s, i64 1
  %s.idx.val = load i8, i8* %s.idx, align 1, !tbaa !2
  %s.idx1108 = getelementptr i8, i8* %s, i64 2
  %s.idx1108.val = load i8, i8* %s.idx1108, align 1, !tbaa !2
  %conv.i = zext i8 %s.val to i64
  %conv2.i = zext i8 %s.idx.val to i64
  %shl.i = shl nuw nsw i64 %conv2.i, 8
  %or.i = or i64 %shl.i, %conv.i
  %conv4.i = zext i8 %s.idx1108.val to i64
  %shl5.i = shl nuw nsw i64 %conv4.i, 16
  %shl5.i.masked = and i64 %shl5.i, 2031616
  %and = or i64 %or.i, %shl5.i.masked
  %arrayidx1.i.1330 = getelementptr inbounds i8, i8* %s, i64 3
  %0 = load i8, i8* %arrayidx1.i.1330, align 1, !tbaa !2
  %conv2.i.1331 = zext i8 %0 to i64
  %shl.i.1332 = shl nuw nsw i64 %conv2.i.1331, 8
  %or.i.1333 = or i64 %shl.i.1332, %conv4.i
  %arrayidx3.i.1334 = getelementptr inbounds i8, i8* %s, i64 4
  %1 = load i8, i8* %arrayidx3.i.1334, align 1, !tbaa !2
  %conv4.i.1335 = zext i8 %1 to i64
  %shl5.i.1336 = shl nuw nsw i64 %conv4.i.1335, 16
  %or6.i.1337 = or i64 %or.i.1333, %shl5.i.1336
  %arrayidx7.i.1338 = getelementptr inbounds i8, i8* %s, i64 5
  %2 = load i8, i8* %arrayidx7.i.1338, align 1, !tbaa !2
  %conv8.i.1339 = zext i8 %2 to i64
  %shl9.i.1340 = shl nuw nsw i64 %conv8.i.1339, 24
  %or10.i.1341 = or i64 %or6.i.1337, %shl9.i.1340
  %shr = lshr i64 %or10.i.1341, 5
  %and2 = and i64 %shr, 2097151
  %add.ptr3.idx = getelementptr i8, i8* %s, i64 6
  %add.ptr3.idx.val = load i8, i8* %add.ptr3.idx, align 1, !tbaa !2
  %add.ptr3.idx1107 = getelementptr i8, i8* %s, i64 7
  %add.ptr3.idx1107.val = load i8, i8* %add.ptr3.idx1107, align 1, !tbaa !2
  %conv2.i.1323 = zext i8 %add.ptr3.idx.val to i64
  %shl.i.1324 = shl nuw nsw i64 %conv2.i.1323, 8
  %or.i.1325 = or i64 %shl.i.1324, %conv8.i.1339
  %conv4.i.1326 = zext i8 %add.ptr3.idx1107.val to i64
  %shl5.i.1327 = shl nuw nsw i64 %conv4.i.1326, 16
  %or6.i.1328 = or i64 %or.i.1325, %shl5.i.1327
  %shr5 = lshr i64 %or6.i.1328, 2
  %and6 = and i64 %shr5, 2097151
  %arrayidx1.i.1310 = getelementptr inbounds i8, i8* %s, i64 8
  %3 = load i8, i8* %arrayidx1.i.1310, align 1, !tbaa !2
  %conv2.i.1311 = zext i8 %3 to i64
  %shl.i.1312 = shl nuw nsw i64 %conv2.i.1311, 8
  %or.i.1313 = or i64 %shl.i.1312, %conv4.i.1326
  %arrayidx3.i.1314 = getelementptr inbounds i8, i8* %s, i64 9
  %4 = load i8, i8* %arrayidx3.i.1314, align 1, !tbaa !2
  %conv4.i.1315 = zext i8 %4 to i64
  %shl5.i.1316 = shl nuw nsw i64 %conv4.i.1315, 16
  %or6.i.1317 = or i64 %or.i.1313, %shl5.i.1316
  %arrayidx7.i.1318 = getelementptr inbounds i8, i8* %s, i64 10
  %5 = load i8, i8* %arrayidx7.i.1318, align 1, !tbaa !2
  %conv8.i.1319 = zext i8 %5 to i64
  %shl9.i.1320 = shl nuw nsw i64 %conv8.i.1319, 24
  %or10.i.1321 = or i64 %or6.i.1317, %shl9.i.1320
  %shr9 = lshr i64 %or10.i.1321, 7
  %and10 = and i64 %shr9, 2097151
  %arrayidx1.i.1297 = getelementptr inbounds i8, i8* %s, i64 11
  %6 = load i8, i8* %arrayidx1.i.1297, align 1, !tbaa !2
  %conv2.i.1298 = zext i8 %6 to i64
  %shl.i.1299 = shl nuw nsw i64 %conv2.i.1298, 8
  %or.i.1300 = or i64 %shl.i.1299, %conv8.i.1319
  %arrayidx3.i.1301 = getelementptr inbounds i8, i8* %s, i64 12
  %7 = load i8, i8* %arrayidx3.i.1301, align 1, !tbaa !2
  %conv4.i.1302 = zext i8 %7 to i64
  %shl5.i.1303 = shl nuw nsw i64 %conv4.i.1302, 16
  %or6.i.1304 = or i64 %or.i.1300, %shl5.i.1303
  %arrayidx7.i.1305 = getelementptr inbounds i8, i8* %s, i64 13
  %8 = load i8, i8* %arrayidx7.i.1305, align 1, !tbaa !2
  %conv8.i.1306 = zext i8 %8 to i64
  %shl9.i.1307 = shl nuw nsw i64 %conv8.i.1306, 24
  %or10.i.1308 = or i64 %or6.i.1304, %shl9.i.1307
  %shr13 = lshr i64 %or10.i.1308, 4
  %and14 = and i64 %shr13, 2097151
  %add.ptr15.idx = getelementptr i8, i8* %s, i64 14
  %add.ptr15.idx.val = load i8, i8* %add.ptr15.idx, align 1, !tbaa !2
  %add.ptr15.idx1106 = getelementptr i8, i8* %s, i64 15
  %add.ptr15.idx1106.val = load i8, i8* %add.ptr15.idx1106, align 1, !tbaa !2
  %conv2.i.1290 = zext i8 %add.ptr15.idx.val to i64
  %shl.i.1291 = shl nuw nsw i64 %conv2.i.1290, 8
  %or.i.1292 = or i64 %shl.i.1291, %conv8.i.1306
  %conv4.i.1293 = zext i8 %add.ptr15.idx1106.val to i64
  %shl5.i.1294 = shl nuw nsw i64 %conv4.i.1293, 16
  %or6.i.1295 = or i64 %or.i.1292, %shl5.i.1294
  %shr17 = lshr i64 %or6.i.1295, 1
  %and18 = and i64 %shr17, 2097151
  %arrayidx1.i.1277 = getelementptr inbounds i8, i8* %s, i64 16
  %9 = load i8, i8* %arrayidx1.i.1277, align 1, !tbaa !2
  %conv2.i.1278 = zext i8 %9 to i64
  %shl.i.1279 = shl nuw nsw i64 %conv2.i.1278, 8
  %or.i.1280 = or i64 %shl.i.1279, %conv4.i.1293
  %arrayidx3.i.1281 = getelementptr inbounds i8, i8* %s, i64 17
  %10 = load i8, i8* %arrayidx3.i.1281, align 1, !tbaa !2
  %conv4.i.1282 = zext i8 %10 to i64
  %shl5.i.1283 = shl nuw nsw i64 %conv4.i.1282, 16
  %or6.i.1284 = or i64 %or.i.1280, %shl5.i.1283
  %arrayidx7.i.1285 = getelementptr inbounds i8, i8* %s, i64 18
  %11 = load i8, i8* %arrayidx7.i.1285, align 1, !tbaa !2
  %conv8.i.1286 = zext i8 %11 to i64
  %shl9.i.1287 = shl nuw nsw i64 %conv8.i.1286, 24
  %or10.i.1288 = or i64 %or6.i.1284, %shl9.i.1287
  %shr21 = lshr i64 %or10.i.1288, 6
  %and22 = and i64 %shr21, 2097151
  %add.ptr23.idx = getelementptr i8, i8* %s, i64 19
  %add.ptr23.idx.val = load i8, i8* %add.ptr23.idx, align 1, !tbaa !2
  %add.ptr23.idx1105 = getelementptr i8, i8* %s, i64 20
  %add.ptr23.idx1105.val = load i8, i8* %add.ptr23.idx1105, align 1, !tbaa !2
  %conv2.i.1270 = zext i8 %add.ptr23.idx.val to i64
  %shl.i.1271 = shl nuw nsw i64 %conv2.i.1270, 8
  %or.i.1272 = or i64 %shl.i.1271, %conv8.i.1286
  %conv4.i.1273 = zext i8 %add.ptr23.idx1105.val to i64
  %shl5.i.1274 = shl nuw nsw i64 %conv4.i.1273, 16
  %or6.i.1275 = or i64 %or.i.1272, %shl5.i.1274
  %shr25 = lshr i64 %or6.i.1275, 3
  %add.ptr27 = getelementptr inbounds i8, i8* %s, i64 21
  %add.ptr27.val = load i8, i8* %add.ptr27, align 1, !tbaa !2
  %add.ptr27.idx = getelementptr i8, i8* %s, i64 22
  %add.ptr27.idx.val = load i8, i8* %add.ptr27.idx, align 1, !tbaa !2
  %add.ptr27.idx1104 = getelementptr i8, i8* %s, i64 23
  %add.ptr27.idx1104.val = load i8, i8* %add.ptr27.idx1104, align 1, !tbaa !2
  %conv.i.1262 = zext i8 %add.ptr27.val to i64
  %conv2.i.1263 = zext i8 %add.ptr27.idx.val to i64
  %shl.i.1264 = shl nuw nsw i64 %conv2.i.1263, 8
  %or.i.1265 = or i64 %shl.i.1264, %conv.i.1262
  %conv4.i.1266 = zext i8 %add.ptr27.idx1104.val to i64
  %shl5.i.1267 = shl nuw nsw i64 %conv4.i.1266, 16
  %shl5.i.1267.masked = and i64 %shl5.i.1267, 2031616
  %and29 = or i64 %or.i.1265, %shl5.i.1267.masked
  %arrayidx1.i.1250 = getelementptr inbounds i8, i8* %s, i64 24
  %12 = load i8, i8* %arrayidx1.i.1250, align 1, !tbaa !2
  %conv2.i.1251 = zext i8 %12 to i64
  %shl.i.1252 = shl nuw nsw i64 %conv2.i.1251, 8
  %or.i.1253 = or i64 %shl.i.1252, %conv4.i.1266
  %arrayidx3.i.1254 = getelementptr inbounds i8, i8* %s, i64 25
  %13 = load i8, i8* %arrayidx3.i.1254, align 1, !tbaa !2
  %conv4.i.1255 = zext i8 %13 to i64
  %shl5.i.1256 = shl nuw nsw i64 %conv4.i.1255, 16
  %or6.i.1257 = or i64 %or.i.1253, %shl5.i.1256
  %arrayidx7.i.1258 = getelementptr inbounds i8, i8* %s, i64 26
  %14 = load i8, i8* %arrayidx7.i.1258, align 1, !tbaa !2
  %conv8.i.1259 = zext i8 %14 to i64
  %shl9.i.1260 = shl nuw nsw i64 %conv8.i.1259, 24
  %or10.i.1261 = or i64 %or6.i.1257, %shl9.i.1260
  %shr32 = lshr i64 %or10.i.1261, 5
  %and33 = and i64 %shr32, 2097151
  %add.ptr34.idx = getelementptr i8, i8* %s, i64 27
  %add.ptr34.idx.val = load i8, i8* %add.ptr34.idx, align 1, !tbaa !2
  %add.ptr34.idx1103 = getelementptr i8, i8* %s, i64 28
  %add.ptr34.idx1103.val = load i8, i8* %add.ptr34.idx1103, align 1, !tbaa !2
  %conv2.i.1243 = zext i8 %add.ptr34.idx.val to i64
  %shl.i.1244 = shl nuw nsw i64 %conv2.i.1243, 8
  %or.i.1245 = or i64 %shl.i.1244, %conv8.i.1259
  %conv4.i.1246 = zext i8 %add.ptr34.idx1103.val to i64
  %shl5.i.1247 = shl nuw nsw i64 %conv4.i.1246, 16
  %or6.i.1248 = or i64 %or.i.1245, %shl5.i.1247
  %shr36 = lshr i64 %or6.i.1248, 2
  %and37 = and i64 %shr36, 2097151
  %arrayidx1.i.1230 = getelementptr inbounds i8, i8* %s, i64 29
  %15 = load i8, i8* %arrayidx1.i.1230, align 1, !tbaa !2
  %conv2.i.1231 = zext i8 %15 to i64
  %shl.i.1232 = shl nuw nsw i64 %conv2.i.1231, 8
  %or.i.1233 = or i64 %shl.i.1232, %conv4.i.1246
  %arrayidx3.i.1234 = getelementptr inbounds i8, i8* %s, i64 30
  %16 = load i8, i8* %arrayidx3.i.1234, align 1, !tbaa !2
  %conv4.i.1235 = zext i8 %16 to i64
  %shl5.i.1236 = shl nuw nsw i64 %conv4.i.1235, 16
  %or6.i.1237 = or i64 %or.i.1233, %shl5.i.1236
  %arrayidx7.i.1238 = getelementptr inbounds i8, i8* %s, i64 31
  %17 = load i8, i8* %arrayidx7.i.1238, align 1, !tbaa !2
  %conv8.i.1239 = zext i8 %17 to i64
  %shl9.i.1240 = shl nuw nsw i64 %conv8.i.1239, 24
  %or10.i.1241 = or i64 %or6.i.1237, %shl9.i.1240
  %shr40 = lshr i64 %or10.i.1241, 7
  %and41 = and i64 %shr40, 2097151
  %arrayidx1.i.1217 = getelementptr inbounds i8, i8* %s, i64 32
  %18 = load i8, i8* %arrayidx1.i.1217, align 1, !tbaa !2
  %conv2.i.1218 = zext i8 %18 to i64
  %shl.i.1219 = shl nuw nsw i64 %conv2.i.1218, 8
  %or.i.1220 = or i64 %shl.i.1219, %conv8.i.1239
  %arrayidx3.i.1221 = getelementptr inbounds i8, i8* %s, i64 33
  %19 = load i8, i8* %arrayidx3.i.1221, align 1, !tbaa !2
  %conv4.i.1222 = zext i8 %19 to i64
  %shl5.i.1223 = shl nuw nsw i64 %conv4.i.1222, 16
  %or6.i.1224 = or i64 %or.i.1220, %shl5.i.1223
  %arrayidx7.i.1225 = getelementptr inbounds i8, i8* %s, i64 34
  %20 = load i8, i8* %arrayidx7.i.1225, align 1, !tbaa !2
  %conv8.i.1226 = zext i8 %20 to i64
  %shl9.i.1227 = shl nuw nsw i64 %conv8.i.1226, 24
  %or10.i.1228 = or i64 %or6.i.1224, %shl9.i.1227
  %shr44 = lshr i64 %or10.i.1228, 4
  %and45 = and i64 %shr44, 2097151
  %add.ptr46.idx = getelementptr i8, i8* %s, i64 35
  %add.ptr46.idx.val = load i8, i8* %add.ptr46.idx, align 1, !tbaa !2
  %add.ptr46.idx1102 = getelementptr i8, i8* %s, i64 36
  %add.ptr46.idx1102.val = load i8, i8* %add.ptr46.idx1102, align 1, !tbaa !2
  %conv2.i.1210 = zext i8 %add.ptr46.idx.val to i64
  %shl.i.1211 = shl nuw nsw i64 %conv2.i.1210, 8
  %or.i.1212 = or i64 %shl.i.1211, %conv8.i.1226
  %conv4.i.1213 = zext i8 %add.ptr46.idx1102.val to i64
  %shl5.i.1214 = shl nuw nsw i64 %conv4.i.1213, 16
  %or6.i.1215 = or i64 %or.i.1212, %shl5.i.1214
  %shr48 = lshr i64 %or6.i.1215, 1
  %and49 = and i64 %shr48, 2097151
  %arrayidx1.i.1197 = getelementptr inbounds i8, i8* %s, i64 37
  %21 = load i8, i8* %arrayidx1.i.1197, align 1, !tbaa !2
  %conv2.i.1198 = zext i8 %21 to i64
  %shl.i.1199 = shl nuw nsw i64 %conv2.i.1198, 8
  %or.i.1200 = or i64 %shl.i.1199, %conv4.i.1213
  %arrayidx3.i.1201 = getelementptr inbounds i8, i8* %s, i64 38
  %22 = load i8, i8* %arrayidx3.i.1201, align 1, !tbaa !2
  %conv4.i.1202 = zext i8 %22 to i64
  %shl5.i.1203 = shl nuw nsw i64 %conv4.i.1202, 16
  %or6.i.1204 = or i64 %or.i.1200, %shl5.i.1203
  %arrayidx7.i.1205 = getelementptr inbounds i8, i8* %s, i64 39
  %23 = load i8, i8* %arrayidx7.i.1205, align 1, !tbaa !2
  %conv8.i.1206 = zext i8 %23 to i64
  %shl9.i.1207 = shl nuw nsw i64 %conv8.i.1206, 24
  %or10.i.1208 = or i64 %or6.i.1204, %shl9.i.1207
  %shr52 = lshr i64 %or10.i.1208, 6
  %and53 = and i64 %shr52, 2097151
  %add.ptr54.idx = getelementptr i8, i8* %s, i64 40
  %add.ptr54.idx.val = load i8, i8* %add.ptr54.idx, align 1, !tbaa !2
  %add.ptr54.idx1101 = getelementptr i8, i8* %s, i64 41
  %add.ptr54.idx1101.val = load i8, i8* %add.ptr54.idx1101, align 1, !tbaa !2
  %conv2.i.1190 = zext i8 %add.ptr54.idx.val to i64
  %shl.i.1191 = shl nuw nsw i64 %conv2.i.1190, 8
  %or.i.1192 = or i64 %shl.i.1191, %conv8.i.1206
  %conv4.i.1193 = zext i8 %add.ptr54.idx1101.val to i64
  %shl5.i.1194 = shl nuw nsw i64 %conv4.i.1193, 16
  %or6.i.1195 = or i64 %or.i.1192, %shl5.i.1194
  %shr56 = lshr i64 %or6.i.1195, 3
  %add.ptr58 = getelementptr inbounds i8, i8* %s, i64 42
  %add.ptr58.val = load i8, i8* %add.ptr58, align 1, !tbaa !2
  %add.ptr58.idx = getelementptr i8, i8* %s, i64 43
  %add.ptr58.idx.val = load i8, i8* %add.ptr58.idx, align 1, !tbaa !2
  %add.ptr58.idx1100 = getelementptr i8, i8* %s, i64 44
  %add.ptr58.idx1100.val = load i8, i8* %add.ptr58.idx1100, align 1, !tbaa !2
  %conv.i.1182 = zext i8 %add.ptr58.val to i64
  %conv2.i.1183 = zext i8 %add.ptr58.idx.val to i64
  %shl.i.1184 = shl nuw nsw i64 %conv2.i.1183, 8
  %or.i.1185 = or i64 %shl.i.1184, %conv.i.1182
  %conv4.i.1186 = zext i8 %add.ptr58.idx1100.val to i64
  %shl5.i.1187 = shl nuw nsw i64 %conv4.i.1186, 16
  %shl5.i.1187.masked = and i64 %shl5.i.1187, 2031616
  %and60 = or i64 %or.i.1185, %shl5.i.1187.masked
  %arrayidx1.i.1170 = getelementptr inbounds i8, i8* %s, i64 45
  %24 = load i8, i8* %arrayidx1.i.1170, align 1, !tbaa !2
  %conv2.i.1171 = zext i8 %24 to i64
  %shl.i.1172 = shl nuw nsw i64 %conv2.i.1171, 8
  %or.i.1173 = or i64 %shl.i.1172, %conv4.i.1186
  %arrayidx3.i.1174 = getelementptr inbounds i8, i8* %s, i64 46
  %25 = load i8, i8* %arrayidx3.i.1174, align 1, !tbaa !2
  %conv4.i.1175 = zext i8 %25 to i64
  %shl5.i.1176 = shl nuw nsw i64 %conv4.i.1175, 16
  %or6.i.1177 = or i64 %or.i.1173, %shl5.i.1176
  %arrayidx7.i.1178 = getelementptr inbounds i8, i8* %s, i64 47
  %26 = load i8, i8* %arrayidx7.i.1178, align 1, !tbaa !2
  %conv8.i.1179 = zext i8 %26 to i64
  %shl9.i.1180 = shl nuw nsw i64 %conv8.i.1179, 24
  %or10.i.1181 = or i64 %or6.i.1177, %shl9.i.1180
  %shr63 = lshr i64 %or10.i.1181, 5
  %and64 = and i64 %shr63, 2097151
  %add.ptr65.idx = getelementptr i8, i8* %s, i64 48
  %add.ptr65.idx.val = load i8, i8* %add.ptr65.idx, align 1, !tbaa !2
  %add.ptr65.idx1099 = getelementptr i8, i8* %s, i64 49
  %add.ptr65.idx1099.val = load i8, i8* %add.ptr65.idx1099, align 1, !tbaa !2
  %conv2.i.1163 = zext i8 %add.ptr65.idx.val to i64
  %shl.i.1164 = shl nuw nsw i64 %conv2.i.1163, 8
  %or.i.1165 = or i64 %shl.i.1164, %conv8.i.1179
  %conv4.i.1166 = zext i8 %add.ptr65.idx1099.val to i64
  %shl5.i.1167 = shl nuw nsw i64 %conv4.i.1166, 16
  %or6.i.1168 = or i64 %or.i.1165, %shl5.i.1167
  %shr67 = lshr i64 %or6.i.1168, 2
  %and68 = and i64 %shr67, 2097151
  %arrayidx1.i.1150 = getelementptr inbounds i8, i8* %s, i64 50
  %27 = load i8, i8* %arrayidx1.i.1150, align 1, !tbaa !2
  %conv2.i.1151 = zext i8 %27 to i64
  %shl.i.1152 = shl nuw nsw i64 %conv2.i.1151, 8
  %or.i.1153 = or i64 %shl.i.1152, %conv4.i.1166
  %arrayidx3.i.1154 = getelementptr inbounds i8, i8* %s, i64 51
  %28 = load i8, i8* %arrayidx3.i.1154, align 1, !tbaa !2
  %conv4.i.1155 = zext i8 %28 to i64
  %shl5.i.1156 = shl nuw nsw i64 %conv4.i.1155, 16
  %or6.i.1157 = or i64 %or.i.1153, %shl5.i.1156
  %arrayidx7.i.1158 = getelementptr inbounds i8, i8* %s, i64 52
  %29 = load i8, i8* %arrayidx7.i.1158, align 1, !tbaa !2
  %conv8.i.1159 = zext i8 %29 to i64
  %shl9.i.1160 = shl nuw nsw i64 %conv8.i.1159, 24
  %or10.i.1161 = or i64 %or6.i.1157, %shl9.i.1160
  %shr71 = lshr i64 %or10.i.1161, 7
  %and72 = and i64 %shr71, 2097151
  %arrayidx1.i.1137 = getelementptr inbounds i8, i8* %s, i64 53
  %30 = load i8, i8* %arrayidx1.i.1137, align 1, !tbaa !2
  %conv2.i.1138 = zext i8 %30 to i64
  %shl.i.1139 = shl nuw nsw i64 %conv2.i.1138, 8
  %or.i.1140 = or i64 %shl.i.1139, %conv8.i.1159
  %arrayidx3.i.1141 = getelementptr inbounds i8, i8* %s, i64 54
  %31 = load i8, i8* %arrayidx3.i.1141, align 1, !tbaa !2
  %conv4.i.1142 = zext i8 %31 to i64
  %shl5.i.1143 = shl nuw nsw i64 %conv4.i.1142, 16
  %or6.i.1144 = or i64 %or.i.1140, %shl5.i.1143
  %arrayidx7.i.1145 = getelementptr inbounds i8, i8* %s, i64 55
  %32 = load i8, i8* %arrayidx7.i.1145, align 1, !tbaa !2
  %conv8.i.1146 = zext i8 %32 to i64
  %shl9.i.1147 = shl nuw nsw i64 %conv8.i.1146, 24
  %or10.i.1148 = or i64 %or6.i.1144, %shl9.i.1147
  %shr75 = lshr i64 %or10.i.1148, 4
  %and76 = and i64 %shr75, 2097151
  %add.ptr77.idx = getelementptr i8, i8* %s, i64 56
  %add.ptr77.idx.val = load i8, i8* %add.ptr77.idx, align 1, !tbaa !2
  %add.ptr77.idx1098 = getelementptr i8, i8* %s, i64 57
  %add.ptr77.idx1098.val = load i8, i8* %add.ptr77.idx1098, align 1, !tbaa !2
  %conv2.i.1130 = zext i8 %add.ptr77.idx.val to i64
  %shl.i.1131 = shl nuw nsw i64 %conv2.i.1130, 8
  %or.i.1132 = or i64 %shl.i.1131, %conv8.i.1146
  %conv4.i.1133 = zext i8 %add.ptr77.idx1098.val to i64
  %shl5.i.1134 = shl nuw nsw i64 %conv4.i.1133, 16
  %or6.i.1135 = or i64 %or.i.1132, %shl5.i.1134
  %shr79 = lshr i64 %or6.i.1135, 1
  %and80 = and i64 %shr79, 2097151
  %arrayidx1.i.1117 = getelementptr inbounds i8, i8* %s, i64 58
  %33 = load i8, i8* %arrayidx1.i.1117, align 1, !tbaa !2
  %conv2.i.1118 = zext i8 %33 to i64
  %shl.i.1119 = shl nuw nsw i64 %conv2.i.1118, 8
  %or.i.1120 = or i64 %shl.i.1119, %conv4.i.1133
  %arrayidx3.i.1121 = getelementptr inbounds i8, i8* %s, i64 59
  %34 = load i8, i8* %arrayidx3.i.1121, align 1, !tbaa !2
  %conv4.i.1122 = zext i8 %34 to i64
  %shl5.i.1123 = shl nuw nsw i64 %conv4.i.1122, 16
  %or6.i.1124 = or i64 %or.i.1120, %shl5.i.1123
  %arrayidx7.i.1125 = getelementptr inbounds i8, i8* %s, i64 60
  %35 = load i8, i8* %arrayidx7.i.1125, align 1, !tbaa !2
  %conv8.i.1126 = zext i8 %35 to i64
  %shl9.i.1127 = shl nuw nsw i64 %conv8.i.1126, 24
  %or10.i.1128 = or i64 %or6.i.1124, %shl9.i.1127
  %shr83 = lshr i64 %or10.i.1128, 6
  %and84 = and i64 %shr83, 2097151
  %arrayidx1.i = getelementptr inbounds i8, i8* %s, i64 61
  %36 = load i8, i8* %arrayidx1.i, align 1, !tbaa !2
  %conv2.i.1110 = zext i8 %36 to i64
  %shl.i.1111 = shl nuw nsw i64 %conv2.i.1110, 8
  %or.i.1112 = or i64 %shl.i.1111, %conv8.i.1126
  %arrayidx3.i = getelementptr inbounds i8, i8* %s, i64 62
  %37 = load i8, i8* %arrayidx3.i, align 1, !tbaa !2
  %conv4.i.1113 = zext i8 %37 to i64
  %shl5.i.1114 = shl nuw nsw i64 %conv4.i.1113, 16
  %or6.i.1115 = or i64 %or.i.1112, %shl5.i.1114
  %arrayidx7.i = getelementptr inbounds i8, i8* %s, i64 63
  %38 = load i8, i8* %arrayidx7.i, align 1, !tbaa !2
  %conv8.i = zext i8 %38 to i64
  %shl9.i = shl nuw nsw i64 %conv8.i, 24
  %or10.i = or i64 %or6.i.1115, %shl9.i
  %shr87 = lshr i64 %or10.i, 3
  %mul = mul nuw nsw i64 %shr87, 666643
  %mul88 = mul nuw nsw i64 %shr87, 470296
  %mul90 = mul nuw nsw i64 %shr87, 654183
  %39 = mul nsw i64 %shr87, -997805
  %mul93 = mul nuw nsw i64 %shr87, 136657
  %40 = mul nsw i64 %shr87, -683901
  %sub96 = add i64 %40, %and60
  %mul97 = mul nuw nsw i64 %and84, 666643
  %mul99 = mul nuw nsw i64 %and84, 470296
  %mul101 = mul nuw nsw i64 %and84, 654183
  %41 = mul nsw i64 %and84, -997805
  %mul105 = mul nuw nsw i64 %and84, 136657
  %42 = mul nsw i64 %and84, -683901
  %mul109 = mul nuw nsw i64 %and80, 666643
  %mul111 = mul nuw nsw i64 %and80, 470296
  %mul113 = mul nuw nsw i64 %and80, 654183
  %43 = mul nsw i64 %and80, -997805
  %mul117 = mul nuw nsw i64 %and80, 136657
  %44 = mul nsw i64 %and80, -683901
  %sub = add i64 %44, %and53
  %add106 = add i64 %sub, %mul105
  %sub120 = add i64 %add106, %39
  %mul121 = mul nuw nsw i64 %and76, 666643
  %mul123 = mul nuw nsw i64 %and76, 470296
  %mul125 = mul nuw nsw i64 %and76, 654183
  %45 = mul nsw i64 %and76, -997805
  %mul129 = mul nuw nsw i64 %and76, 136657
  %46 = mul nsw i64 %and76, -683901
  %mul133 = mul nuw nsw i64 %and72, 666643
  %mul135 = mul nuw nsw i64 %and72, 470296
  %mul137 = mul nuw nsw i64 %and72, 654183
  %47 = mul nsw i64 %and72, -997805
  %mul141 = mul nuw nsw i64 %and72, 136657
  %48 = mul nsw i64 %and72, -683901
  %add89 = add i64 %48, %and45
  %add102 = add i64 %add89, %mul129
  %sub116 = add i64 %add102, %43
  %add130 = add i64 %sub116, %mul101
  %sub144 = add i64 %add130, %mul88
  %mul145 = mul nuw nsw i64 %and68, 666643
  %add146 = add nuw nsw i64 %mul145, %and22
  %mul147 = mul nuw nsw i64 %and68, 470296
  %mul149 = mul nuw nsw i64 %and68, 654183
  %add122 = add nuw nsw i64 %mul149, %and29
  %add136 = add nuw nsw i64 %add122, %mul135
  %add150 = add nuw nsw i64 %add136, %mul121
  %49 = mul nsw i64 %and68, -997805
  %mul153 = mul nuw nsw i64 %and68, 136657
  %add98 = add nuw nsw i64 %mul153, %and37
  %add112 = add i64 %add98, %47
  %add126 = add i64 %add112, %mul125
  %sub140 = add i64 %add126, %mul111
  %add154 = add i64 %sub140, %mul97
  %50 = mul nsw i64 %and68, -683901
  %add157 = add nuw nsw i64 %add146, 1048576
  %shr158.1067 = lshr i64 %add157, 21
  %add134 = add nuw nsw i64 %mul147, %shr25
  %add148 = add nuw nsw i64 %add134, %shr158.1067
  %add159 = add nuw i64 %add148, %mul133
  %mul160 = shl nuw nsw i64 %shr158.1067, 21
  %sub161 = sub nsw i64 %add146, %mul160
  %add162 = add nuw nsw i64 %add150, 1048576
  %shr163 = lshr i64 %add162, 21
  %add110 = add i64 %49, %and33
  %add124 = add i64 %add110, %mul137
  %add138 = add i64 %add124, %mul123
  %sub152 = add i64 %add138, %mul109
  %add164 = add i64 %sub152, %shr163
  %mul165 = shl nuw nsw i64 %shr163, 21
  %add167 = add nsw i64 %add154, 1048576
  %shr168 = ashr i64 %add167, 21
  %add = add i64 %50, %and41
  %add100 = add i64 %add, %mul141
  %add114 = add i64 %add100, %45
  %sub128 = add i64 %add114, %mul113
  %add142 = add i64 %sub128, %mul99
  %sub156 = add i64 %add142, %mul
  %add169 = add i64 %sub156, %shr168
  %mul170 = shl nsw i64 %shr168, 21
  %add172 = add nsw i64 %sub144, 1048576
  %shr173 = ashr i64 %add172, 21
  %add91 = add i64 %46, %and49
  %sub104 = add i64 %add91, %mul117
  %add118 = add i64 %sub104, %41
  %sub132 = add i64 %add118, %mul90
  %add174 = add i64 %sub132, %shr173
  %mul175 = shl nsw i64 %shr173, 21
  %sub176 = sub nsw i64 %sub144, %mul175
  %add177 = add nsw i64 %sub120, 1048576
  %shr178 = ashr i64 %add177, 21
  %add94 = add i64 %42, %shr56
  %sub108 = add i64 %add94, %mul93
  %add179 = add i64 %sub108, %shr178
  %mul180 = shl nsw i64 %shr178, 21
  %sub181 = sub nsw i64 %sub120, %mul180
  %add182 = add nsw i64 %sub96, 1048576
  %shr183 = ashr i64 %add182, 21
  %add184 = add nsw i64 %shr183, %and64
  %mul185 = shl nsw i64 %shr183, 21
  %sub186 = sub nsw i64 %sub96, %mul185
  %add187 = add nuw nsw i64 %add159, 1048576
  %shr188 = lshr i64 %add187, 21
  %mul190 = shl nuw nsw i64 %shr188, 21
  %sub191 = sub i64 %add159, %mul190
  %add192 = add nsw i64 %add164, 1048576
  %shr193 = ashr i64 %add192, 21
  %mul195 = shl nsw i64 %shr193, 21
  %sub196 = sub i64 %add164, %mul195
  %add197 = add nsw i64 %add169, 1048576
  %shr198 = ashr i64 %add197, 21
  %add199 = add nsw i64 %sub176, %shr198
  %mul200 = shl nsw i64 %shr198, 21
  %sub201 = sub nsw i64 %add169, %mul200
  %add202 = add nsw i64 %add174, 1048576
  %shr203 = ashr i64 %add202, 21
  %add204 = add nsw i64 %shr203, %sub181
  %mul205 = shl nsw i64 %shr203, 21
  %sub206 = sub nsw i64 %add174, %mul205
  %add207 = add nsw i64 %add179, 1048576
  %shr208 = ashr i64 %add207, 21
  %add209 = add nsw i64 %shr208, %sub186
  %mul210 = shl nsw i64 %shr208, 21
  %sub211 = sub nsw i64 %add179, %mul210
  %mul212 = mul nsw i64 %add184, 666643
  %add213 = add nsw i64 %mul212, %and18
  %mul214 = mul nsw i64 %add184, 470296
  %add215 = add nsw i64 %sub161, %mul214
  %mul216 = mul nsw i64 %add184, 654183
  %add217 = add nsw i64 %sub191, %mul216
  %51 = mul i64 %add184, -997805
  %mul220 = mul nsw i64 %add184, 136657
  %add221 = add nsw i64 %sub196, %mul220
  %52 = mul i64 %add184, -683901
  %sub171 = add i64 %add154, %shr193
  %add194 = sub i64 %sub171, %mul170
  %sub223 = add i64 %add194, %52
  %mul224 = mul nsw i64 %add209, 666643
  %add225 = add nsw i64 %mul224, %and14
  %mul226 = mul nsw i64 %add209, 470296
  %add227 = add nsw i64 %add213, %mul226
  %mul228 = mul nsw i64 %add209, 654183
  %add229 = add nsw i64 %add215, %mul228
  %53 = mul i64 %add209, -997805
  %sub231 = add i64 %add217, %53
  %mul232 = mul nsw i64 %add209, 136657
  %54 = mul i64 %add209, -683901
  %sub235 = add i64 %add221, %54
  %mul236 = mul nsw i64 %sub211, 666643
  %add237 = add nsw i64 %mul236, %and10
  %mul238 = mul nsw i64 %sub211, 470296
  %add239 = add nsw i64 %add225, %mul238
  %mul240 = mul nsw i64 %sub211, 654183
  %add241 = add nsw i64 %add227, %mul240
  %55 = mul i64 %sub211, -997805
  %sub243 = add i64 %add229, %55
  %mul244 = mul nsw i64 %sub211, 136657
  %add245 = add nsw i64 %sub231, %mul244
  %56 = mul i64 %sub211, -683901
  %sub166 = add i64 %add150, %shr188
  %add189 = sub i64 %sub166, %mul165
  %sub219 = add i64 %add189, %51
  %add233 = add i64 %sub219, %mul232
  %sub247 = add i64 %add233, %56
  %mul248 = mul nsw i64 %add204, 666643
  %mul250 = mul nsw i64 %add204, 470296
  %mul252 = mul nsw i64 %add204, 654183
  %57 = mul i64 %add204, -997805
  %mul256 = mul nsw i64 %add204, 136657
  %add257 = add nsw i64 %sub243, %mul256
  %58 = mul i64 %add204, -683901
  %sub259 = add i64 %add245, %58
  %mul260 = mul nsw i64 %sub206, 666643
  %mul262 = mul nsw i64 %sub206, 470296
  %mul264 = mul nsw i64 %sub206, 654183
  %59 = mul i64 %sub206, -997805
  %mul268 = mul nsw i64 %sub206, 136657
  %60 = mul i64 %sub206, -683901
  %sub271 = add i64 %add257, %60
  %mul272 = mul nsw i64 %add199, 666643
  %add273 = add nsw i64 %mul272, %and
  %mul274 = mul nsw i64 %add199, 470296
  %mul276 = mul nsw i64 %add199, 654183
  %add249 = add i64 %mul276, %and6
  %add263 = add i64 %add249, %mul248
  %add277 = add i64 %add263, %mul262
  %61 = mul i64 %add199, -997805
  %mul280 = mul nsw i64 %add199, 136657
  %add253 = add i64 %add239, %mul280
  %sub267 = add i64 %add253, %mul252
  %add281 = add i64 %sub267, %59
  %62 = mul i64 %add199, -683901
  %add284 = add nsw i64 %add273, 1048576
  %shr285 = ashr i64 %add284, 21
  %add261 = add i64 %mul274, %and2
  %add275 = add i64 %add261, %mul260
  %add286 = add i64 %add275, %shr285
  %mul287 = shl nsw i64 %shr285, 21
  %sub288 = sub nsw i64 %add273, %mul287
  %add289 = add nsw i64 %add277, 1048576
  %shr290 = ashr i64 %add289, 21
  %add251 = add i64 %add237, %61
  %add265 = add i64 %add251, %mul250
  %sub279 = add i64 %add265, %mul264
  %add291 = add i64 %sub279, %shr290
  %mul292 = shl nsw i64 %shr290, 21
  %add294 = add nsw i64 %add281, 1048576
  %shr295 = ashr i64 %add294, 21
  %sub255 = add i64 %add241, %62
  %add269 = add i64 %sub255, %57
  %sub283 = add i64 %add269, %mul268
  %add296 = add i64 %sub283, %shr295
  %mul297 = shl nsw i64 %shr295, 21
  %add299 = add nsw i64 %sub271, 1048576
  %shr300 = ashr i64 %add299, 21
  %add301 = add nsw i64 %sub259, %shr300
  %mul302 = shl nsw i64 %shr300, 21
  %sub303 = sub i64 %sub271, %mul302
  %add304 = add nsw i64 %sub247, 1048576
  %shr305 = ashr i64 %add304, 21
  %add306 = add nsw i64 %sub235, %shr305
  %mul307 = shl nsw i64 %shr305, 21
  %sub308 = sub i64 %sub247, %mul307
  %add309 = add nsw i64 %sub223, 1048576
  %shr310 = ashr i64 %add309, 21
  %add311 = add nsw i64 %sub201, %shr310
  %mul312 = shl nsw i64 %shr310, 21
  %sub313 = sub i64 %sub223, %mul312
  %add314 = add nsw i64 %add286, 1048576
  %shr315 = ashr i64 %add314, 21
  %mul317 = shl nsw i64 %shr315, 21
  %add319 = add nsw i64 %add291, 1048576
  %shr320 = ashr i64 %add319, 21
  %mul322 = shl nsw i64 %shr320, 21
  %add324 = add nsw i64 %add296, 1048576
  %shr325 = ashr i64 %add324, 21
  %add326 = add nsw i64 %sub303, %shr325
  %mul327 = shl nsw i64 %shr325, 21
  %add329 = add nsw i64 %add301, 1048576
  %shr330 = ashr i64 %add329, 21
  %add331 = add nsw i64 %sub308, %shr330
  %mul332 = shl nsw i64 %shr330, 21
  %sub333 = sub nsw i64 %add301, %mul332
  %add334 = add nsw i64 %add306, 1048576
  %shr335 = ashr i64 %add334, 21
  %add336 = add nsw i64 %sub313, %shr335
  %mul337 = shl nsw i64 %shr335, 21
  %sub338 = sub nsw i64 %add306, %mul337
  %add339 = add nsw i64 %add311, 1048576
  %shr340 = ashr i64 %add339, 21
  %mul342 = shl nsw i64 %shr340, 21
  %sub343 = sub nsw i64 %add311, %mul342
  %mul344 = mul nsw i64 %shr340, 666643
  %add345 = add nsw i64 %sub288, %mul344
  %mul346 = mul nsw i64 %shr340, 470296
  %mul348 = mul nsw i64 %shr340, 654183
  %63 = mul nsw i64 %shr340, -997805
  %mul352 = mul nsw i64 %shr340, 136657
  %64 = mul nsw i64 %shr340, -683901
  %shr356 = ashr i64 %add345, 21
  %sub318 = add i64 %add286, %mul346
  %add347 = add i64 %sub318, %shr356
  %add357 = sub i64 %add347, %mul317
  %mul358 = shl nsw i64 %shr356, 21
  %sub359 = sub nsw i64 %add345, %mul358
  %shr360 = ashr i64 %add357, 21
  %sub293 = add i64 %mul348, %add277
  %add316 = sub i64 %sub293, %mul292
  %add349 = add i64 %add316, %shr315
  %add361 = add i64 %add349, %shr360
  %mul362 = shl nsw i64 %shr360, 21
  %sub363 = sub i64 %add357, %mul362
  %shr364 = ashr i64 %add361, 21
  %sub323 = add i64 %add291, %63
  %sub351 = sub i64 %sub323, %mul322
  %add365 = add i64 %sub351, %shr364
  %mul366 = shl nsw i64 %shr364, 21
  %sub367 = sub i64 %add361, %mul366
  %shr368 = ashr i64 %add365, 21
  %sub298 = add i64 %mul352, %add281
  %add321 = sub i64 %sub298, %mul297
  %add353 = add i64 %add321, %shr320
  %add369 = add i64 %add353, %shr368
  %mul370 = shl nsw i64 %shr368, 21
  %sub371 = sub i64 %add365, %mul370
  %shr372 = ashr i64 %add369, 21
  %sub328 = add i64 %add296, %64
  %sub355 = sub i64 %sub328, %mul327
  %add373 = add i64 %sub355, %shr372
  %mul374 = shl nsw i64 %shr372, 21
  %sub375 = sub i64 %add369, %mul374
  %shr376 = ashr i64 %add373, 21
  %add377 = add nsw i64 %add326, %shr376
  %mul378 = shl nsw i64 %shr376, 21
  %sub379 = sub i64 %add373, %mul378
  %shr380 = ashr i64 %add377, 21
  %add381 = add nsw i64 %shr380, %sub333
  %mul382 = shl nsw i64 %shr380, 21
  %sub383 = sub nsw i64 %add377, %mul382
  %shr384 = ashr i64 %add381, 21
  %add385 = add nsw i64 %add331, %shr384
  %mul386 = shl nsw i64 %shr384, 21
  %sub387 = sub nsw i64 %add381, %mul386
  %shr388 = ashr i64 %add385, 21
  %add389 = add nsw i64 %shr388, %sub338
  %mul390 = shl nsw i64 %shr388, 21
  %sub391 = sub nsw i64 %add385, %mul390
  %shr392 = ashr i64 %add389, 21
  %add393 = add nsw i64 %add336, %shr392
  %mul394 = shl nsw i64 %shr392, 21
  %sub395 = sub nsw i64 %add389, %mul394
  %shr396 = ashr i64 %add393, 21
  %add397 = add nsw i64 %shr396, %sub343
  %mul398 = shl nsw i64 %shr396, 21
  %sub399 = sub nsw i64 %add393, %mul398
  %shr400 = ashr i64 %add397, 21
  %mul402 = shl nsw i64 %shr400, 21
  %sub403 = sub nsw i64 %add397, %mul402
  %mul404 = mul nsw i64 %shr400, 666643
  %add405 = add nsw i64 %mul404, %sub359
  %mul406 = mul nsw i64 %shr400, 470296
  %add407 = add nsw i64 %sub363, %mul406
  %mul408 = mul nsw i64 %shr400, 654183
  %add409 = add nsw i64 %sub367, %mul408
  %65 = mul nsw i64 %shr400, -997805
  %sub411 = add i64 %sub371, %65
  %mul412 = mul nsw i64 %shr400, 136657
  %add413 = add nsw i64 %sub375, %mul412
  %66 = mul nsw i64 %shr400, -683901
  %sub415 = add i64 %sub379, %66
  %shr416 = ashr i64 %add405, 21
  %add417 = add nsw i64 %add407, %shr416
  %mul418 = shl nsw i64 %shr416, 21
  %sub419 = sub nsw i64 %add405, %mul418
  %shr420 = ashr i64 %add417, 21
  %add421 = add nsw i64 %add409, %shr420
  %mul422 = shl nsw i64 %shr420, 21
  %sub423 = sub nsw i64 %add417, %mul422
  %shr424 = ashr i64 %add421, 21
  %add425 = add nsw i64 %sub411, %shr424
  %mul426 = shl nsw i64 %shr424, 21
  %sub427 = sub nsw i64 %add421, %mul426
  %shr428 = ashr i64 %add425, 21
  %add429 = add nsw i64 %add413, %shr428
  %mul430 = shl nsw i64 %shr428, 21
  %sub431 = sub nsw i64 %add425, %mul430
  %shr432 = ashr i64 %add429, 21
  %add433 = add nsw i64 %sub415, %shr432
  %mul434 = shl nsw i64 %shr432, 21
  %sub435 = sub nsw i64 %add429, %mul434
  %shr436 = ashr i64 %add433, 21
  %add437 = add nsw i64 %shr436, %sub383
  %mul438 = shl nsw i64 %shr436, 21
  %sub439 = sub nsw i64 %add433, %mul438
  %shr440 = ashr i64 %add437, 21
  %add441 = add nsw i64 %shr440, %sub387
  %mul442 = shl nsw i64 %shr440, 21
  %sub443 = sub nsw i64 %add437, %mul442
  %shr444 = ashr i64 %add441, 21
  %add445 = add nsw i64 %shr444, %sub391
  %mul446 = shl nsw i64 %shr444, 21
  %sub447 = sub nsw i64 %add441, %mul446
  %shr448 = ashr i64 %add445, 21
  %add449 = add nsw i64 %shr448, %sub395
  %mul450 = shl nsw i64 %shr448, 21
  %sub451 = sub nsw i64 %add445, %mul450
  %shr452 = ashr i64 %add449, 21
  %add453 = add nsw i64 %shr452, %sub399
  %mul454 = shl nsw i64 %shr452, 21
  %sub455 = sub nsw i64 %add449, %mul454
  %shr456 = ashr i64 %add453, 21
  %add457 = add nsw i64 %shr456, %sub403
  %mul458 = shl nsw i64 %shr456, 21
  %sub459 = sub nsw i64 %add453, %mul458
  %conv = trunc i64 %sub419 to i8
  store i8 %conv, i8* %s, align 1, !tbaa !2
  %shr461.1068 = lshr i64 %sub419, 8
  %conv462 = trunc i64 %shr461.1068 to i8
  store i8 %conv462, i8* %s.idx, align 1, !tbaa !2
  %shr464.1069 = lshr i64 %sub419, 16
  %shl = shl i64 %sub423, 5
  %or = or i64 %shl, %shr464.1069
  %conv465 = trunc i64 %or to i8
  store i8 %conv465, i8* %s.idx1108, align 1, !tbaa !2
  %shr467.1070 = lshr i64 %sub423, 3
  %conv468 = trunc i64 %shr467.1070 to i8
  store i8 %conv468, i8* %arrayidx1.i.1330, align 1, !tbaa !2
  %shr470.1071 = lshr i64 %sub423, 11
  %conv471 = trunc i64 %shr470.1071 to i8
  store i8 %conv471, i8* %arrayidx3.i.1334, align 1, !tbaa !2
  %shr473.1072 = lshr i64 %sub423, 19
  %shl474 = shl i64 %sub427, 2
  %or475 = or i64 %shl474, %shr473.1072
  %conv476 = trunc i64 %or475 to i8
  store i8 %conv476, i8* %arrayidx7.i.1338, align 1, !tbaa !2
  %shr478.1073 = lshr i64 %sub427, 6
  %conv479 = trunc i64 %shr478.1073 to i8
  store i8 %conv479, i8* %add.ptr3.idx, align 1, !tbaa !2
  %shr481.1074 = lshr i64 %sub427, 14
  %shl482 = shl i64 %sub431, 7
  %or483 = or i64 %shl482, %shr481.1074
  %conv484 = trunc i64 %or483 to i8
  store i8 %conv484, i8* %add.ptr3.idx1107, align 1, !tbaa !2
  %shr486.1075 = lshr i64 %sub431, 1
  %conv487 = trunc i64 %shr486.1075 to i8
  store i8 %conv487, i8* %arrayidx1.i.1310, align 1, !tbaa !2
  %shr489.1076 = lshr i64 %sub431, 9
  %conv490 = trunc i64 %shr489.1076 to i8
  store i8 %conv490, i8* %arrayidx3.i.1314, align 1, !tbaa !2
  %shr492.1077 = lshr i64 %sub431, 17
  %shl493 = shl i64 %sub435, 4
  %or494 = or i64 %shl493, %shr492.1077
  %conv495 = trunc i64 %or494 to i8
  store i8 %conv495, i8* %arrayidx7.i.1318, align 1, !tbaa !2
  %shr497.1078 = lshr i64 %sub435, 4
  %conv498 = trunc i64 %shr497.1078 to i8
  store i8 %conv498, i8* %arrayidx1.i.1297, align 1, !tbaa !2
  %shr500.1079 = lshr i64 %sub435, 12
  %conv501 = trunc i64 %shr500.1079 to i8
  store i8 %conv501, i8* %arrayidx3.i.1301, align 1, !tbaa !2
  %shr503.1080 = lshr i64 %sub435, 20
  %shl504 = shl i64 %sub439, 1
  %or505 = or i64 %shl504, %shr503.1080
  %conv506 = trunc i64 %or505 to i8
  store i8 %conv506, i8* %arrayidx7.i.1305, align 1, !tbaa !2
  %shr508.1081 = lshr i64 %sub439, 7
  %conv509 = trunc i64 %shr508.1081 to i8
  store i8 %conv509, i8* %add.ptr15.idx, align 1, !tbaa !2
  %shr511.1082 = lshr i64 %sub439, 15
  %shl512 = shl i64 %sub443, 6
  %or513 = or i64 %shl512, %shr511.1082
  %conv514 = trunc i64 %or513 to i8
  store i8 %conv514, i8* %add.ptr15.idx1106, align 1, !tbaa !2
  %shr516.1083 = lshr i64 %sub443, 2
  %conv517 = trunc i64 %shr516.1083 to i8
  store i8 %conv517, i8* %arrayidx1.i.1277, align 1, !tbaa !2
  %shr519.1084 = lshr i64 %sub443, 10
  %conv520 = trunc i64 %shr519.1084 to i8
  store i8 %conv520, i8* %arrayidx3.i.1281, align 1, !tbaa !2
  %shr522.1085 = lshr i64 %sub443, 18
  %shl523 = shl i64 %sub447, 3
  %or524 = or i64 %shl523, %shr522.1085
  %conv525 = trunc i64 %or524 to i8
  store i8 %conv525, i8* %arrayidx7.i.1285, align 1, !tbaa !2
  %shr527.1086 = lshr i64 %sub447, 5
  %conv528 = trunc i64 %shr527.1086 to i8
  store i8 %conv528, i8* %add.ptr23.idx, align 1, !tbaa !2
  %shr530.1087 = lshr i64 %sub447, 13
  %conv531 = trunc i64 %shr530.1087 to i8
  store i8 %conv531, i8* %add.ptr23.idx1105, align 1, !tbaa !2
  %conv534 = trunc i64 %sub451 to i8
  store i8 %conv534, i8* %add.ptr27, align 1, !tbaa !2
  %shr536.1088 = lshr i64 %sub451, 8
  %conv537 = trunc i64 %shr536.1088 to i8
  store i8 %conv537, i8* %add.ptr27.idx, align 1, !tbaa !2
  %shr539.1089 = lshr i64 %sub451, 16
  %shl540 = shl i64 %sub455, 5
  %or541 = or i64 %shl540, %shr539.1089
  %conv542 = trunc i64 %or541 to i8
  store i8 %conv542, i8* %add.ptr27.idx1104, align 1, !tbaa !2
  %shr544.1090 = lshr i64 %sub455, 3
  %conv545 = trunc i64 %shr544.1090 to i8
  store i8 %conv545, i8* %arrayidx1.i.1250, align 1, !tbaa !2
  %shr547.1091 = lshr i64 %sub455, 11
  %conv548 = trunc i64 %shr547.1091 to i8
  store i8 %conv548, i8* %arrayidx3.i.1254, align 1, !tbaa !2
  %shr550.1092 = lshr i64 %sub455, 19
  %shl551 = shl i64 %sub459, 2
  %or552 = or i64 %shl551, %shr550.1092
  %conv553 = trunc i64 %or552 to i8
  store i8 %conv553, i8* %arrayidx7.i.1258, align 1, !tbaa !2
  %shr555.1093 = lshr i64 %sub459, 6
  %conv556 = trunc i64 %shr555.1093 to i8
  store i8 %conv556, i8* %add.ptr34.idx, align 1, !tbaa !2
  %shr558.1094 = lshr i64 %sub459, 14
  %shl559 = shl i64 %add457, 7
  %or560 = or i64 %shr558.1094, %shl559
  %conv561 = trunc i64 %or560 to i8
  store i8 %conv561, i8* %add.ptr34.idx1103, align 1, !tbaa !2
  %shr563.1095 = lshr i64 %add457, 1
  %conv564 = trunc i64 %shr563.1095 to i8
  store i8 %conv564, i8* %arrayidx1.i.1230, align 1, !tbaa !2
  %shr566.1096 = lshr i64 %add457, 9
  %conv567 = trunc i64 %shr566.1096 to i8
  store i8 %conv567, i8* %arrayidx3.i.1234, align 1, !tbaa !2
  %shr569.1097 = lshr i64 %add457, 17
  %conv570 = trunc i64 %shr569.1097 to i8
  store i8 %conv570, i8* %arrayidx7.i.1238, align 1, !tbaa !2
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ge_scalarmult_base(%struct.ge_p3* %h, i8* nocapture readonly %a) #0 {
entry:
  %q.i = alloca %struct.ge_p2, align 4
  %e = alloca [64 x i8], align 16
  %r = alloca %struct.ge_p1p1, align 4
  %s = alloca %struct.ge_p2, align 4
  %t = alloca %struct.ge_precomp, align 4
  %0 = getelementptr inbounds [64 x i8], [64 x i8]* %e, i64 0, i64 0
  call void @llvm.lifetime.start(i64 64, i8* %0) #1
  %1 = bitcast %struct.ge_p1p1* %r to i8*
  call void @llvm.lifetime.start(i64 160, i8* %1) #1
  %2 = bitcast %struct.ge_p2* %s to i8*
  call void @llvm.lifetime.start(i64 120, i8* %2) #1
  %3 = bitcast %struct.ge_precomp* %t to i8*
  call void @llvm.lifetime.start(i64 120, i8* %3) #1
  br label %for.body

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv145 = phi i64 [ 0, %entry ], [ %indvars.iv.next146.1, %for.body ]
  %arrayidx = getelementptr inbounds i8, i8* %a, i64 %indvars.iv145
  %4 = load i8, i8* %arrayidx, align 1, !tbaa !2
  %and = and i8 %4, 15
  %5 = shl nsw i64 %indvars.iv145, 1
  %arrayidx3 = getelementptr inbounds [64 x i8], [64 x i8]* %e, i64 0, i64 %5
  store i8 %and, i8* %arrayidx3, align 4, !tbaa !2
  %shr7.96 = lshr i8 %4, 4
  %6 = or i64 %5, 1
  %arrayidx13 = getelementptr inbounds [64 x i8], [64 x i8]* %e, i64 0, i64 %6
  store i8 %shr7.96, i8* %arrayidx13, align 1, !tbaa !2
  %indvars.iv.next146 = or i64 %indvars.iv145, 1
  %arrayidx.1 = getelementptr inbounds i8, i8* %a, i64 %indvars.iv.next146
  %7 = load i8, i8* %arrayidx.1, align 1, !tbaa !2
  %and.1 = and i8 %7, 15
  %8 = shl nsw i64 %indvars.iv.next146, 1
  %arrayidx3.1 = getelementptr inbounds [64 x i8], [64 x i8]* %e, i64 0, i64 %8
  store i8 %and.1, i8* %arrayidx3.1, align 2, !tbaa !2
  %shr7.96.1 = lshr i8 %7, 4
  %9 = or i64 %8, 1
  %arrayidx13.1 = getelementptr inbounds [64 x i8], [64 x i8]* %e, i64 0, i64 %9
  store i8 %shr7.96.1, i8* %arrayidx13.1, align 1, !tbaa !2
  %indvars.iv.next146.1 = add nsw i64 %indvars.iv145, 2
  %exitcond149.1 = icmp eq i64 %indvars.iv.next146.1, 32
  br i1 %exitcond149.1, label %for.body.17.preheader, label %for.body

for.body.17.preheader:                            ; preds = %for.body
  br label %for.body.17

for.body.17:                                      ; preds = %for.body.17.preheader, %for.body.17
  %indvars.iv143 = phi i64 [ %indvars.iv.next144, %for.body.17 ], [ 0, %for.body.17.preheader ]
  %carry.0138 = phi i32 [ %shr30, %for.body.17 ], [ 0, %for.body.17.preheader ]
  %arrayidx20 = getelementptr inbounds [64 x i8], [64 x i8]* %e, i64 0, i64 %indvars.iv143
  %10 = load i8, i8* %arrayidx20, align 1, !tbaa !2
  %conv21.93 = zext i8 %10 to i32
  %add22 = add nsw i32 %conv21.93, %carry.0138
  %sext = shl i32 %add22, 24
  %sext94 = add i32 %sext, 134217728
  %shr30 = ashr i32 %sext94, 28
  %shl = shl nsw i32 %shr30, 4
  %sub = sub nsw i32 %add22, %shl
  %conv36 = trunc i32 %sub to i8
  store i8 %conv36, i8* %arrayidx20, align 1, !tbaa !2
  %indvars.iv.next144 = add nuw nsw i64 %indvars.iv143, 1
  %exitcond = icmp eq i64 %indvars.iv.next144, 63
  br i1 %exitcond, label %for.end.39, label %for.body.17

for.end.39:                                       ; preds = %for.body.17
  %shr30.lcssa = phi i32 [ %shr30, %for.body.17 ]
  %arrayidx41 = getelementptr inbounds [64 x i8], [64 x i8]* %e, i64 0, i64 63
  %11 = load i8, i8* %arrayidx41, align 1, !tbaa !2
  %conv42.92 = zext i8 %11 to i32
  %add43 = add nsw i32 %conv42.92, %shr30.lcssa
  %conv44 = trunc i32 %add43 to i8
  store i8 %conv44, i8* %arrayidx41, align 1, !tbaa !2
  %arraydecay1.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %h, i64 0, i32 1, i64 0
  %12 = bitcast %struct.ge_p3* %h to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %12, i8 0, i64 80, i32 4, i1 false) #1
  store i32 1, i32* %arraydecay1.i, align 4, !tbaa !7
  %arraydecay2.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %h, i64 0, i32 2, i64 0
  %13 = bitcast i32* %arraydecay2.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %13, i8 0, i64 40, i32 4, i1 false) #1
  store i32 1, i32* %arraydecay2.i, align 4, !tbaa !7
  %arraydecay3.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %h, i64 0, i32 3, i64 0
  %14 = bitcast i32* %arraydecay3.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %14, i8 0, i64 40, i32 4, i1 false) #1
  %arraydecay.i.99 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %h, i64 0, i32 0, i64 0
  %arraydecay2.i.100 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 0
  %arraydecay3.i.101 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 0
  %arraydecay6.i.103 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 0
  %arraydecay7.i.104 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 0
  br label %for.body.48

for.body.48:                                      ; preds = %for.end.39, %for.body.48
  %indvars.iv141 = phi i64 [ 1, %for.end.39 ], [ %indvars.iv.next142, %for.body.48 ]
  %15 = trunc i64 %indvars.iv141 to i32
  %div = sdiv i32 %15, 2
  %arrayidx50 = getelementptr inbounds [64 x i8], [64 x i8]* %e, i64 0, i64 %indvars.iv141
  %16 = load i8, i8* %arrayidx50, align 1, !tbaa !2
  call fastcc void @table_select(%struct.ge_precomp* nonnull %t, i32 %div, i8 signext %16)
  call fastcc void @ge_madd(%struct.ge_p1p1* nonnull %r, %struct.ge_p3* %h, %struct.ge_precomp* nonnull %t)
  call fastcc void @fe_mul(i32* %arraydecay.i.99, i32* %arraydecay2.i.100, i32* %arraydecay3.i.101) #1
  call fastcc void @fe_mul(i32* %arraydecay1.i, i32* %arraydecay6.i.103, i32* %arraydecay7.i.104) #1
  call fastcc void @fe_mul(i32* %arraydecay2.i, i32* %arraydecay7.i.104, i32* %arraydecay3.i.101) #1
  call fastcc void @fe_mul(i32* %arraydecay3.i, i32* %arraydecay2.i.100, i32* %arraydecay6.i.103) #1
  %indvars.iv.next142 = add nuw nsw i64 %indvars.iv141, 2
  %cmp46 = icmp slt i64 %indvars.iv.next142, 64
  br i1 %cmp46, label %for.body.48, label %for.end.53

for.end.53:                                       ; preds = %for.body.48
  %17 = bitcast %struct.ge_p2* %q.i to i8*
  call void @llvm.lifetime.start(i64 120, i8* %17) #1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %12, i64 40, i32 4, i1 false) #1
  %arraydecay3.i.i = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %q.i, i64 0, i32 1, i64 0
  %18 = bitcast i32* %arraydecay3.i.i to i8*
  %19 = bitcast i32* %arraydecay1.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 40, i32 4, i1 false) #1
  %arraydecay6.i.i = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %q.i, i64 0, i32 2, i64 0
  %20 = bitcast i32* %arraydecay6.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %13, i64 40, i32 4, i1 false) #1
  call fastcc void @ge_p2_dbl(%struct.ge_p1p1* nonnull %r, %struct.ge_p2* nonnull %q.i) #1
  call void @llvm.lifetime.end(i64 120, i8* %17) #1
  %arraydecay.i.107 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %s, i64 0, i32 0, i64 0
  call fastcc void @fe_mul(i32* %arraydecay.i.107, i32* %arraydecay2.i.100, i32* %arraydecay3.i.101) #1
  %arraydecay4.i.110 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %s, i64 0, i32 1, i64 0
  call fastcc void @fe_mul(i32* %arraydecay4.i.110, i32* %arraydecay6.i.103, i32* %arraydecay7.i.104) #1
  %arraydecay9.i.113 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %s, i64 0, i32 2, i64 0
  call fastcc void @fe_mul(i32* %arraydecay9.i.113, i32* %arraydecay7.i.104, i32* %arraydecay3.i.101) #1
  call fastcc void @ge_p2_dbl(%struct.ge_p1p1* nonnull %r, %struct.ge_p2* nonnull %s)
  call fastcc void @fe_mul(i32* %arraydecay.i.107, i32* %arraydecay2.i.100, i32* %arraydecay3.i.101) #1
  call fastcc void @fe_mul(i32* %arraydecay4.i.110, i32* %arraydecay6.i.103, i32* %arraydecay7.i.104) #1
  call fastcc void @fe_mul(i32* %arraydecay9.i.113, i32* %arraydecay7.i.104, i32* %arraydecay3.i.101) #1
  call fastcc void @ge_p2_dbl(%struct.ge_p1p1* nonnull %r, %struct.ge_p2* nonnull %s)
  call fastcc void @fe_mul(i32* %arraydecay.i.107, i32* %arraydecay2.i.100, i32* %arraydecay3.i.101) #1
  call fastcc void @fe_mul(i32* %arraydecay4.i.110, i32* %arraydecay6.i.103, i32* %arraydecay7.i.104) #1
  call fastcc void @fe_mul(i32* %arraydecay9.i.113, i32* %arraydecay7.i.104, i32* %arraydecay3.i.101) #1
  call fastcc void @ge_p2_dbl(%struct.ge_p1p1* nonnull %r, %struct.ge_p2* nonnull %s)
  call fastcc void @fe_mul(i32* %arraydecay.i.99, i32* %arraydecay2.i.100, i32* %arraydecay3.i.101) #1
  call fastcc void @fe_mul(i32* %arraydecay1.i, i32* %arraydecay6.i.103, i32* %arraydecay7.i.104) #1
  call fastcc void @fe_mul(i32* %arraydecay2.i, i32* %arraydecay7.i.104, i32* %arraydecay3.i.101) #1
  call fastcc void @fe_mul(i32* %arraydecay3.i, i32* %arraydecay2.i.100, i32* %arraydecay6.i.103) #1
  br label %for.body.57

for.body.57:                                      ; preds = %for.end.53, %for.body.57
  %indvars.iv = phi i64 [ 0, %for.end.53 ], [ %indvars.iv.next, %for.body.57 ]
  %21 = trunc i64 %indvars.iv to i32
  %div58 = sdiv i32 %21, 2
  %arrayidx60 = getelementptr inbounds [64 x i8], [64 x i8]* %e, i64 0, i64 %indvars.iv
  %22 = load i8, i8* %arrayidx60, align 2, !tbaa !2
  call fastcc void @table_select(%struct.ge_precomp* nonnull %t, i32 %div58, i8 signext %22)
  call fastcc void @ge_madd(%struct.ge_p1p1* nonnull %r, %struct.ge_p3* %h, %struct.ge_precomp* nonnull %t)
  call fastcc void @fe_mul(i32* %arraydecay.i.99, i32* %arraydecay2.i.100, i32* %arraydecay3.i.101) #1
  call fastcc void @fe_mul(i32* %arraydecay1.i, i32* %arraydecay6.i.103, i32* %arraydecay7.i.104) #1
  call fastcc void @fe_mul(i32* %arraydecay2.i, i32* %arraydecay7.i.104, i32* %arraydecay3.i.101) #1
  call fastcc void @fe_mul(i32* %arraydecay3.i, i32* %arraydecay2.i.100, i32* %arraydecay6.i.103) #1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 2
  %cmp55 = icmp slt i64 %indvars.iv.next, 64
  br i1 %cmp55, label %for.body.57, label %for.end.63

for.end.63:                                       ; preds = %for.body.57
  call void @OPENSSL_cleanse(i8* %0, i64 64) #1
  call void @llvm.lifetime.end(i64 120, i8* %3) #1
  call void @llvm.lifetime.end(i64 120, i8* %2) #1
  call void @llvm.lifetime.end(i64 160, i8* %1) #1
  call void @llvm.lifetime.end(i64 64, i8* %0) #1
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ED25519_verify(i8* %message, i64 %message_len, i8* %signature, i8* %public_key) #0 {
entry:
  %q.i.i = alloca %struct.ge_p2, align 4
  %aslide.i = alloca [256 x i8], align 16
  %bslide.i = alloca [256 x i8], align 16
  %Ai.i = alloca [8 x %struct.ge_cached], align 16
  %t.i = alloca %struct.ge_p1p1, align 16
  %u.i.62 = alloca %struct.ge_p3, align 16
  %A2.i = alloca %struct.ge_p3, align 4
  %t0.i.i = alloca [10 x i32], align 16
  %t1.i.i = alloca [10 x i32], align 16
  %t2.i.i = alloca [10 x i32], align 16
  %s.i.i = alloca [32 x i8], align 16
  %u.i = alloca [10 x i32], align 16
  %v.i = alloca [10 x i32], align 16
  %v3.i = alloca [10 x i32], align 16
  %vxx.i = alloca [10 x i32], align 16
  %check.i = alloca [10 x i32], align 16
  %A = alloca %struct.ge_p3, align 16
  %rcopy = alloca [32 x i8], align 16
  %scopy = alloca [32 x i8], align 16
  %hash_ctx = alloca %struct.SHA512state_st, align 8
  %R = alloca %struct.ge_p2, align 4
  %rcheck = alloca [32 x i8], align 16
  %h = alloca [64 x i8], align 16
  %0 = bitcast %struct.ge_p3* %A to i8*
  call void @llvm.lifetime.start(i64 160, i8* %0) #1
  %1 = getelementptr inbounds [32 x i8], [32 x i8]* %rcopy, i64 0, i64 0
  call void @llvm.lifetime.start(i64 32, i8* %1) #1
  %2 = getelementptr inbounds [32 x i8], [32 x i8]* %scopy, i64 0, i64 0
  call void @llvm.lifetime.start(i64 32, i8* %2) #1
  %3 = bitcast %struct.SHA512state_st* %hash_ctx to i8*
  call void @llvm.lifetime.start(i64 216, i8* %3) #1
  %4 = bitcast %struct.ge_p2* %R to i8*
  call void @llvm.lifetime.start(i64 120, i8* %4) #1
  %5 = getelementptr inbounds [32 x i8], [32 x i8]* %rcheck, i64 0, i64 0
  call void @llvm.lifetime.start(i64 32, i8* %5) #1
  %6 = getelementptr inbounds [64 x i8], [64 x i8]* %h, i64 0, i64 0
  call void @llvm.lifetime.start(i64 64, i8* %6) #1
  %arrayidx = getelementptr inbounds i8, i8* %signature, i64 63
  %7 = load i8, i8* %arrayidx, align 1, !tbaa !2
  %cmp = icmp ugt i8 %7, 31
  br i1 %cmp, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %8 = bitcast [10 x i32]* %u.i to i8*
  call void @llvm.lifetime.start(i64 40, i8* %8) #1
  %9 = bitcast [10 x i32]* %v.i to i8*
  call void @llvm.lifetime.start(i64 40, i8* %9) #1
  %10 = bitcast [10 x i32]* %v3.i to i8*
  call void @llvm.lifetime.start(i64 40, i8* %10) #1
  %11 = bitcast [10 x i32]* %vxx.i to i8*
  call void @llvm.lifetime.start(i64 40, i8* %11) #1
  %12 = bitcast [10 x i32]* %check.i to i8*
  call void @llvm.lifetime.start(i64 40, i8* %12) #1
  %arraydecay.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 1, i64 0
  %13 = load i8, i8* %public_key, align 1, !tbaa !2
  %conv.i.i.i = zext i8 %13 to i64
  %arrayidx1.i.i.i = getelementptr inbounds i8, i8* %public_key, i64 1
  %14 = load i8, i8* %arrayidx1.i.i.i, align 1, !tbaa !2
  %conv2.i.i.i = zext i8 %14 to i64
  %shl.i.i.i = shl nuw nsw i64 %conv2.i.i.i, 8
  %or.i.i.i = or i64 %shl.i.i.i, %conv.i.i.i
  %arrayidx3.i.i.i = getelementptr inbounds i8, i8* %public_key, i64 2
  %15 = load i8, i8* %arrayidx3.i.i.i, align 1, !tbaa !2
  %conv4.i.i.i = zext i8 %15 to i64
  %shl5.i.i.i = shl nuw nsw i64 %conv4.i.i.i, 16
  %or6.i.i.i = or i64 %or.i.i.i, %shl5.i.i.i
  %arrayidx7.i.i.i = getelementptr inbounds i8, i8* %public_key, i64 3
  %16 = load i8, i8* %arrayidx7.i.i.i, align 1, !tbaa !2
  %conv8.i.i.i = zext i8 %16 to i64
  %shl9.i.i.i = shl nuw nsw i64 %conv8.i.i.i, 24
  %or10.i.i.i = or i64 %or6.i.i.i, %shl9.i.i.i
  %add.ptr.i.i = getelementptr inbounds i8, i8* %public_key, i64 4
  %add.ptr.val.i.i = load i8, i8* %add.ptr.i.i, align 1, !tbaa !2
  %add.ptr.idx.i.i = getelementptr i8, i8* %public_key, i64 5
  %add.ptr.idx.val.i.i = load i8, i8* %add.ptr.idx.i.i, align 1, !tbaa !2
  %add.ptr.idx181.i.i = getelementptr i8, i8* %public_key, i64 6
  %add.ptr.idx181.val.i.i = load i8, i8* %add.ptr.idx181.i.i, align 1, !tbaa !2
  %conv.i.244.i.i = zext i8 %add.ptr.val.i.i to i64
  %conv2.i.245.i.i = zext i8 %add.ptr.idx.val.i.i to i64
  %shl.i.246.i.i = shl nuw nsw i64 %conv2.i.245.i.i, 8
  %or.i.247.i.i = or i64 %shl.i.246.i.i, %conv.i.244.i.i
  %conv4.i.248.i.i = zext i8 %add.ptr.idx181.val.i.i to i64
  %shl5.i.249.i.i = shl nuw nsw i64 %conv4.i.248.i.i, 16
  %or6.i.250.i.i = or i64 %or.i.247.i.i, %shl5.i.249.i.i
  %shl.i.i = shl nuw nsw i64 %or6.i.250.i.i, 6
  %add.ptr2.i.i = getelementptr inbounds i8, i8* %public_key, i64 7
  %add.ptr2.val.i.i = load i8, i8* %add.ptr2.i.i, align 1, !tbaa !2
  %add.ptr2.idx.i.i = getelementptr i8, i8* %public_key, i64 8
  %add.ptr2.idx.val.i.i = load i8, i8* %add.ptr2.idx.i.i, align 1, !tbaa !2
  %add.ptr2.idx180.i.i = getelementptr i8, i8* %public_key, i64 9
  %add.ptr2.idx180.val.i.i = load i8, i8* %add.ptr2.idx180.i.i, align 1, !tbaa !2
  %conv.i.237.i.i = zext i8 %add.ptr2.val.i.i to i64
  %conv2.i.238.i.i = zext i8 %add.ptr2.idx.val.i.i to i64
  %shl.i.239.i.i = shl nuw nsw i64 %conv2.i.238.i.i, 8
  %or.i.240.i.i = or i64 %shl.i.239.i.i, %conv.i.237.i.i
  %conv4.i.241.i.i = zext i8 %add.ptr2.idx180.val.i.i to i64
  %shl5.i.242.i.i = shl nuw nsw i64 %conv4.i.241.i.i, 16
  %or6.i.243.i.i = or i64 %or.i.240.i.i, %shl5.i.242.i.i
  %shl4.i.i = shl nuw nsw i64 %or6.i.243.i.i, 5
  %add.ptr5.i.i = getelementptr inbounds i8, i8* %public_key, i64 10
  %add.ptr5.val.i.i = load i8, i8* %add.ptr5.i.i, align 1, !tbaa !2
  %add.ptr5.idx.i.i = getelementptr i8, i8* %public_key, i64 11
  %add.ptr5.idx.val.i.i = load i8, i8* %add.ptr5.idx.i.i, align 1, !tbaa !2
  %add.ptr5.idx179.i.i = getelementptr i8, i8* %public_key, i64 12
  %add.ptr5.idx179.val.i.i = load i8, i8* %add.ptr5.idx179.i.i, align 1, !tbaa !2
  %conv.i.230.i.i = zext i8 %add.ptr5.val.i.i to i64
  %conv2.i.231.i.i = zext i8 %add.ptr5.idx.val.i.i to i64
  %shl.i.232.i.i = shl nuw nsw i64 %conv2.i.231.i.i, 8
  %or.i.233.i.i = or i64 %shl.i.232.i.i, %conv.i.230.i.i
  %conv4.i.234.i.i = zext i8 %add.ptr5.idx179.val.i.i to i64
  %shl5.i.235.i.i = shl nuw nsw i64 %conv4.i.234.i.i, 16
  %or6.i.236.i.i = or i64 %or.i.233.i.i, %shl5.i.235.i.i
  %shl7.i.i = shl nuw nsw i64 %or6.i.236.i.i, 3
  %add.ptr8.i.i = getelementptr inbounds i8, i8* %public_key, i64 13
  %add.ptr8.val.i.i = load i8, i8* %add.ptr8.i.i, align 1, !tbaa !2
  %add.ptr8.idx.i.i = getelementptr i8, i8* %public_key, i64 14
  %add.ptr8.idx.val.i.i = load i8, i8* %add.ptr8.idx.i.i, align 1, !tbaa !2
  %add.ptr8.idx178.i.i = getelementptr i8, i8* %public_key, i64 15
  %add.ptr8.idx178.val.i.i = load i8, i8* %add.ptr8.idx178.i.i, align 1, !tbaa !2
  %conv.i.223.i.i = zext i8 %add.ptr8.val.i.i to i64
  %conv2.i.224.i.i = zext i8 %add.ptr8.idx.val.i.i to i64
  %shl.i.225.i.i = shl nuw nsw i64 %conv2.i.224.i.i, 8
  %or.i.226.i.i = or i64 %shl.i.225.i.i, %conv.i.223.i.i
  %conv4.i.227.i.i = zext i8 %add.ptr8.idx178.val.i.i to i64
  %shl5.i.228.i.i = shl nuw nsw i64 %conv4.i.227.i.i, 16
  %or6.i.229.i.i = or i64 %or.i.226.i.i, %shl5.i.228.i.i
  %shl10.i.i = shl nuw nsw i64 %or6.i.229.i.i, 2
  %add.ptr11.i.i = getelementptr inbounds i8, i8* %public_key, i64 16
  %17 = load i8, i8* %add.ptr11.i.i, align 1, !tbaa !2
  %conv.i.210.i.i = zext i8 %17 to i64
  %arrayidx1.i.211.i.i = getelementptr inbounds i8, i8* %public_key, i64 17
  %18 = load i8, i8* %arrayidx1.i.211.i.i, align 1, !tbaa !2
  %conv2.i.212.i.i = zext i8 %18 to i64
  %shl.i.213.i.i = shl nuw nsw i64 %conv2.i.212.i.i, 8
  %or.i.214.i.i = or i64 %shl.i.213.i.i, %conv.i.210.i.i
  %arrayidx3.i.215.i.i = getelementptr inbounds i8, i8* %public_key, i64 18
  %19 = load i8, i8* %arrayidx3.i.215.i.i, align 1, !tbaa !2
  %conv4.i.216.i.i = zext i8 %19 to i64
  %shl5.i.217.i.i = shl nuw nsw i64 %conv4.i.216.i.i, 16
  %or6.i.218.i.i = or i64 %or.i.214.i.i, %shl5.i.217.i.i
  %arrayidx7.i.219.i.i = getelementptr inbounds i8, i8* %public_key, i64 19
  %20 = load i8, i8* %arrayidx7.i.219.i.i, align 1, !tbaa !2
  %conv8.i.220.i.i = zext i8 %20 to i64
  %shl9.i.221.i.i = shl nuw nsw i64 %conv8.i.220.i.i, 24
  %or10.i.222.i.i = or i64 %or6.i.218.i.i, %shl9.i.221.i.i
  %add.ptr13.i.i = getelementptr inbounds i8, i8* %public_key, i64 20
  %add.ptr13.val.i.i = load i8, i8* %add.ptr13.i.i, align 1, !tbaa !2
  %add.ptr13.idx.i.i = getelementptr i8, i8* %public_key, i64 21
  %add.ptr13.idx.val.i.i = load i8, i8* %add.ptr13.idx.i.i, align 1, !tbaa !2
  %add.ptr13.idx177.i.i = getelementptr i8, i8* %public_key, i64 22
  %add.ptr13.idx177.val.i.i = load i8, i8* %add.ptr13.idx177.i.i, align 1, !tbaa !2
  %conv.i.203.i.i = zext i8 %add.ptr13.val.i.i to i64
  %conv2.i.204.i.i = zext i8 %add.ptr13.idx.val.i.i to i64
  %shl.i.205.i.i = shl nuw nsw i64 %conv2.i.204.i.i, 8
  %or.i.206.i.i = or i64 %shl.i.205.i.i, %conv.i.203.i.i
  %conv4.i.207.i.i = zext i8 %add.ptr13.idx177.val.i.i to i64
  %shl5.i.208.i.i = shl nuw nsw i64 %conv4.i.207.i.i, 16
  %or6.i.209.i.i = or i64 %or.i.206.i.i, %shl5.i.208.i.i
  %shl15.i.i = shl nuw nsw i64 %or6.i.209.i.i, 7
  %add.ptr16.i.i = getelementptr inbounds i8, i8* %public_key, i64 23
  %add.ptr16.val.i.i = load i8, i8* %add.ptr16.i.i, align 1, !tbaa !2
  %add.ptr16.idx.i.i = getelementptr i8, i8* %public_key, i64 24
  %add.ptr16.idx.val.i.i = load i8, i8* %add.ptr16.idx.i.i, align 1, !tbaa !2
  %add.ptr16.idx176.i.i = getelementptr i8, i8* %public_key, i64 25
  %add.ptr16.idx176.val.i.i = load i8, i8* %add.ptr16.idx176.i.i, align 1, !tbaa !2
  %conv.i.196.i.i = zext i8 %add.ptr16.val.i.i to i64
  %conv2.i.197.i.i = zext i8 %add.ptr16.idx.val.i.i to i64
  %shl.i.198.i.i = shl nuw nsw i64 %conv2.i.197.i.i, 8
  %or.i.199.i.i = or i64 %shl.i.198.i.i, %conv.i.196.i.i
  %conv4.i.200.i.i = zext i8 %add.ptr16.idx176.val.i.i to i64
  %shl5.i.201.i.i = shl nuw nsw i64 %conv4.i.200.i.i, 16
  %or6.i.202.i.i = or i64 %or.i.199.i.i, %shl5.i.201.i.i
  %shl18.i.i = shl nuw nsw i64 %or6.i.202.i.i, 5
  %add.ptr19.i.i = getelementptr inbounds i8, i8* %public_key, i64 26
  %add.ptr19.val.i.i = load i8, i8* %add.ptr19.i.i, align 1, !tbaa !2
  %add.ptr19.idx.i.i = getelementptr i8, i8* %public_key, i64 27
  %add.ptr19.idx.val.i.i = load i8, i8* %add.ptr19.idx.i.i, align 1, !tbaa !2
  %add.ptr19.idx175.i.i = getelementptr i8, i8* %public_key, i64 28
  %add.ptr19.idx175.val.i.i = load i8, i8* %add.ptr19.idx175.i.i, align 1, !tbaa !2
  %conv.i.189.i.i = zext i8 %add.ptr19.val.i.i to i64
  %conv2.i.190.i.i = zext i8 %add.ptr19.idx.val.i.i to i64
  %shl.i.191.i.i = shl nuw nsw i64 %conv2.i.190.i.i, 8
  %or.i.192.i.i = or i64 %shl.i.191.i.i, %conv.i.189.i.i
  %conv4.i.193.i.i = zext i8 %add.ptr19.idx175.val.i.i to i64
  %shl5.i.194.i.i = shl nuw nsw i64 %conv4.i.193.i.i, 16
  %or6.i.195.i.i = or i64 %or.i.192.i.i, %shl5.i.194.i.i
  %shl21.i.i = shl nuw nsw i64 %or6.i.195.i.i, 4
  %add.ptr22.i.i = getelementptr inbounds i8, i8* %public_key, i64 29
  %add.ptr22.val.i.i = load i8, i8* %add.ptr22.i.i, align 1, !tbaa !2
  %add.ptr22.idx.i.i = getelementptr i8, i8* %public_key, i64 30
  %add.ptr22.idx.val.i.i = load i8, i8* %add.ptr22.idx.i.i, align 1, !tbaa !2
  %add.ptr22.idx174.i.i = getelementptr i8, i8* %public_key, i64 31
  %add.ptr22.idx174.val.i.i = load i8, i8* %add.ptr22.idx174.i.i, align 1, !tbaa !2
  %conv.i.182.i.i = zext i8 %add.ptr22.val.i.i to i64
  %conv2.i.183.i.i = zext i8 %add.ptr22.idx.val.i.i to i64
  %shl.i.184.i.i = shl nuw nsw i64 %conv2.i.183.i.i, 8
  %or.i.185.i.i = or i64 %shl.i.184.i.i, %conv.i.182.i.i
  %conv4.i.186.i.i = zext i8 %add.ptr22.idx174.val.i.i to i64
  %shl5.i.187.i.i = shl nuw nsw i64 %conv4.i.186.i.i, 16
  %or6.i.188.i.i = or i64 %or.i.185.i.i, %shl5.i.187.i.i
  %and.i.i = shl nuw nsw i64 %or6.i.188.i.i, 2
  %shl24.i.i = and i64 %and.i.i, 33554428
  %add.i.i = add nuw nsw i64 %shl24.i.i, 16777216
  %shr.168.i.i = lshr i64 %add.i.i, 25
  %21 = sub nsw i64 0, %shr.168.i.i
  %mul.i.i = and i64 %21, 19
  %add25.i.i = add nuw nsw i64 %mul.i.i, %or10.i.i.i
  %and26.i.i = and i64 %add.i.i, 33554432
  %add27.i.i = add nuw nsw i64 %shl.i.i, 16777216
  %shr28.i.i = lshr i64 %add27.i.i, 25
  %add29.i.i = add nuw nsw i64 %shl4.i.i, %shr28.i.i
  %and30.i.i = and i64 %add27.i.i, 4261412864
  %sub31.i.i = sub nsw i64 %shl.i.i, %and30.i.i
  %add32.i.i = add nuw nsw i64 %shl7.i.i, 16777216
  %shr33.i.i = lshr i64 %add32.i.i, 25
  %add34.i.i = add nuw nsw i64 %shl10.i.i, %shr33.i.i
  %and35.i.i = and i64 %add32.i.i, 4261412864
  %add37.i.i = add nuw nsw i64 %or10.i.222.i.i, 16777216
  %shr38.i.i = lshr i64 %add37.i.i, 25
  %add39.i.i = add nuw nsw i64 %shl15.i.i, %shr38.i.i
  %and40.i.i = and i64 %add37.i.i, 4261412864
  %add42.i.i = add nuw nsw i64 %shl18.i.i, 16777216
  %shr43.i.i = lshr i64 %add42.i.i, 25
  %add44.i.i = add nuw nsw i64 %shl21.i.i, %shr43.i.i
  %and45.i.i = and i64 %add42.i.i, 4261412864
  %add47.i.i = add nuw nsw i64 %add25.i.i, 33554432
  %shr48.169.i.i = lshr i64 %add47.i.i, 26
  %add49.i.i = add nsw i64 %sub31.i.i, %shr48.169.i.i
  %and50.i.i = and i64 %add47.i.i, 4227858432
  %sub51.i.i = sub nsw i64 %add25.i.i, %and50.i.i
  %add52.i.i = add nuw nsw i64 %add29.i.i, 33554432
  %shr53.170.i.i = lshr i64 %add52.i.i, 26
  %sub36.i.i = add nuw nsw i64 %shr53.170.i.i, %shl7.i.i
  %add54.i.i = sub nsw i64 %sub36.i.i, %and35.i.i
  %and55.i.i = and i64 %add52.i.i, 4227858432
  %sub56.i.i = sub nsw i64 %add29.i.i, %and55.i.i
  %add57.i.i = add nuw nsw i64 %add34.i.i, 33554432
  %shr58.171.i.i = lshr i64 %add57.i.i, 26
  %sub41.i.i = add nuw nsw i64 %shr58.171.i.i, %or10.i.222.i.i
  %add59.i.i = sub nsw i64 %sub41.i.i, %and40.i.i
  %and60.i.i = and i64 %add57.i.i, 4227858432
  %sub61.i.i = sub nsw i64 %add34.i.i, %and60.i.i
  %add62.i.i = add nuw nsw i64 %add39.i.i, 33554432
  %shr63.172.i.i = lshr i64 %add62.i.i, 26
  %sub46.i.i = add nuw nsw i64 %shr63.172.i.i, %shl18.i.i
  %add64.i.i = sub nsw i64 %sub46.i.i, %and45.i.i
  %and65.i.i = and i64 %add62.i.i, 4227858432
  %sub66.i.i = sub nsw i64 %add39.i.i, %and65.i.i
  %add67.i.i = add nuw nsw i64 %add44.i.i, 33554432
  %shr68.173.i.i = lshr i64 %add67.i.i, 26
  %sub.i.i = add nuw nsw i64 %shl24.i.i, %shr68.173.i.i
  %add69.i.i = sub nsw i64 %sub.i.i, %and26.i.i
  %and70.i.i = and i64 %add67.i.i, 4227858432
  %sub71.i.i = sub nsw i64 %add44.i.i, %and70.i.i
  %conv.i.i = trunc i64 %sub51.i.i to i32
  store i32 %conv.i.i, i32* %arraydecay.i, align 8, !tbaa !7
  %conv72.i.i = trunc i64 %add49.i.i to i32
  %arrayidx73.i.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 1, i64 1
  store i32 %conv72.i.i, i32* %arrayidx73.i.i, align 4, !tbaa !7
  %conv74.i.i = trunc i64 %sub56.i.i to i32
  %arrayidx75.i.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 1, i64 2
  store i32 %conv74.i.i, i32* %arrayidx75.i.i, align 8, !tbaa !7
  %conv76.i.i = trunc i64 %add54.i.i to i32
  %arrayidx77.i.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 1, i64 3
  store i32 %conv76.i.i, i32* %arrayidx77.i.i, align 4, !tbaa !7
  %conv78.i.i = trunc i64 %sub61.i.i to i32
  %arrayidx79.i.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 1, i64 4
  store i32 %conv78.i.i, i32* %arrayidx79.i.i, align 8, !tbaa !7
  %conv80.i.i = trunc i64 %add59.i.i to i32
  %arrayidx81.i.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 1, i64 5
  store i32 %conv80.i.i, i32* %arrayidx81.i.i, align 4, !tbaa !7
  %conv82.i.i = trunc i64 %sub66.i.i to i32
  %arrayidx83.i.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 1, i64 6
  store i32 %conv82.i.i, i32* %arrayidx83.i.i, align 8, !tbaa !7
  %conv84.i.i = trunc i64 %add64.i.i to i32
  %arrayidx85.i.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 1, i64 7
  store i32 %conv84.i.i, i32* %arrayidx85.i.i, align 4, !tbaa !7
  %conv86.i.i = trunc i64 %sub71.i.i to i32
  %arrayidx87.i.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 1, i64 8
  store i32 %conv86.i.i, i32* %arrayidx87.i.i, align 8, !tbaa !7
  %conv88.i.i = trunc i64 %add69.i.i to i32
  %arrayidx89.i.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 1, i64 9
  store i32 %conv88.i.i, i32* %arrayidx89.i.i, align 4, !tbaa !7
  %arraydecay1.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 2, i64 0
  %22 = bitcast i32* %arraydecay1.i to i8*
  call void @llvm.memset.p0i8.i64(i8* %22, i8 0, i64 40, i32 16, i1 false) #1
  store i32 1, i32* %arraydecay1.i, align 16, !tbaa !7
  %arraydecay2.i = getelementptr inbounds [10 x i32], [10 x i32]* %u.i, i64 0, i64 0
  call fastcc void @fe_sq(i32* %arraydecay2.i, i32* %arraydecay.i) #1
  %arraydecay5.i = getelementptr inbounds [10 x i32], [10 x i32]* %v.i, i64 0, i64 0
  call fastcc void @fe_mul(i32* %arraydecay5.i, i32* %arraydecay2.i, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @d, i64 0, i64 0)) #1
  %23 = bitcast [10 x i32]* %u.i to i64*
  %24 = load i64, i64* %23, align 16
  %25 = trunc i64 %24 to i32
  %26 = load i32, i32* %arraydecay1.i, align 16, !tbaa !7
  %sub.i.116.i = sub nsw i32 %25, %26
  store i32 %sub.i.116.i, i32* %arraydecay2.i, align 16, !tbaa !7
  %arrayidx.1.i.117.i = getelementptr inbounds [10 x i32], [10 x i32]* %u.i, i64 0, i64 1
  %27 = lshr i64 %24, 32
  %28 = trunc i64 %27 to i32
  %arrayidx2.1.i.118.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 2, i64 1
  %29 = load i32, i32* %arrayidx2.1.i.118.i, align 4, !tbaa !7
  %sub.1.i.119.i = sub nsw i32 %28, %29
  store i32 %sub.1.i.119.i, i32* %arrayidx.1.i.117.i, align 4, !tbaa !7
  %arrayidx.2.i.120.i = getelementptr inbounds [10 x i32], [10 x i32]* %u.i, i64 0, i64 2
  %30 = bitcast i32* %arrayidx.2.i.120.i to i64*
  %31 = load i64, i64* %30, align 8
  %32 = trunc i64 %31 to i32
  %arrayidx2.2.i.121.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 2, i64 2
  %33 = load i32, i32* %arrayidx2.2.i.121.i, align 8, !tbaa !7
  %sub.2.i.122.i = sub nsw i32 %32, %33
  store i32 %sub.2.i.122.i, i32* %arrayidx.2.i.120.i, align 8, !tbaa !7
  %arrayidx.3.i.123.i = getelementptr inbounds [10 x i32], [10 x i32]* %u.i, i64 0, i64 3
  %34 = lshr i64 %31, 32
  %35 = trunc i64 %34 to i32
  %arrayidx2.3.i.124.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 2, i64 3
  %36 = load i32, i32* %arrayidx2.3.i.124.i, align 4, !tbaa !7
  %sub.3.i.125.i = sub nsw i32 %35, %36
  store i32 %sub.3.i.125.i, i32* %arrayidx.3.i.123.i, align 4, !tbaa !7
  %arrayidx.4.i.126.i = getelementptr inbounds [10 x i32], [10 x i32]* %u.i, i64 0, i64 4
  %37 = bitcast i32* %arrayidx.4.i.126.i to i64*
  %38 = load i64, i64* %37, align 16
  %39 = trunc i64 %38 to i32
  %arrayidx2.4.i.127.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 2, i64 4
  %40 = load i32, i32* %arrayidx2.4.i.127.i, align 16, !tbaa !7
  %sub.4.i.128.i = sub nsw i32 %39, %40
  store i32 %sub.4.i.128.i, i32* %arrayidx.4.i.126.i, align 16, !tbaa !7
  %arrayidx.5.i.129.i = getelementptr inbounds [10 x i32], [10 x i32]* %u.i, i64 0, i64 5
  %41 = lshr i64 %38, 32
  %42 = trunc i64 %41 to i32
  %arrayidx2.5.i.130.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 2, i64 5
  %43 = load i32, i32* %arrayidx2.5.i.130.i, align 4, !tbaa !7
  %sub.5.i.131.i = sub nsw i32 %42, %43
  store i32 %sub.5.i.131.i, i32* %arrayidx.5.i.129.i, align 4, !tbaa !7
  %arrayidx.6.i.132.i = getelementptr inbounds [10 x i32], [10 x i32]* %u.i, i64 0, i64 6
  %44 = bitcast i32* %arrayidx.6.i.132.i to i64*
  %45 = load i64, i64* %44, align 8
  %46 = trunc i64 %45 to i32
  %arrayidx2.6.i.133.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 2, i64 6
  %47 = load i32, i32* %arrayidx2.6.i.133.i, align 8, !tbaa !7
  %sub.6.i.134.i = sub nsw i32 %46, %47
  store i32 %sub.6.i.134.i, i32* %arrayidx.6.i.132.i, align 8, !tbaa !7
  %arrayidx.7.i.135.i = getelementptr inbounds [10 x i32], [10 x i32]* %u.i, i64 0, i64 7
  %48 = lshr i64 %45, 32
  %49 = trunc i64 %48 to i32
  %arrayidx2.7.i.136.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 2, i64 7
  %50 = load i32, i32* %arrayidx2.7.i.136.i, align 4, !tbaa !7
  %sub.7.i.137.i = sub nsw i32 %49, %50
  store i32 %sub.7.i.137.i, i32* %arrayidx.7.i.135.i, align 4, !tbaa !7
  %arrayidx.8.i.138.i = getelementptr inbounds [10 x i32], [10 x i32]* %u.i, i64 0, i64 8
  %51 = bitcast i32* %arrayidx.8.i.138.i to i64*
  %52 = load i64, i64* %51, align 16
  %53 = trunc i64 %52 to i32
  %arrayidx2.8.i.139.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 2, i64 8
  %54 = load i32, i32* %arrayidx2.8.i.139.i, align 16, !tbaa !7
  %sub.8.i.140.i = sub nsw i32 %53, %54
  store i32 %sub.8.i.140.i, i32* %arrayidx.8.i.138.i, align 16, !tbaa !7
  %arrayidx.9.i.141.i = getelementptr inbounds [10 x i32], [10 x i32]* %u.i, i64 0, i64 9
  %55 = lshr i64 %52, 32
  %56 = trunc i64 %55 to i32
  %arrayidx2.9.i.142.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 2, i64 9
  %57 = load i32, i32* %arrayidx2.9.i.142.i, align 4, !tbaa !7
  %sub.9.i.143.i = sub nsw i32 %56, %57
  store i32 %sub.9.i.143.i, i32* %arrayidx.9.i.141.i, align 4, !tbaa !7
  %58 = bitcast [10 x i32]* %v.i to i64*
  %59 = load i64, i64* %58, align 16
  %60 = trunc i64 %59 to i32
  %add.i.144.i = add nsw i32 %60, %26
  store i32 %add.i.144.i, i32* %arraydecay5.i, align 16, !tbaa !7
  %arrayidx.1.i.145.i = getelementptr inbounds [10 x i32], [10 x i32]* %v.i, i64 0, i64 1
  %61 = lshr i64 %59, 32
  %62 = trunc i64 %61 to i32
  %add.1.i.i = add nsw i32 %62, %29
  store i32 %add.1.i.i, i32* %arrayidx.1.i.145.i, align 4, !tbaa !7
  %arrayidx.2.i.148.i = getelementptr inbounds [10 x i32], [10 x i32]* %v.i, i64 0, i64 2
  %63 = bitcast i32* %arrayidx.2.i.148.i to i64*
  %64 = load i64, i64* %63, align 8
  %65 = trunc i64 %64 to i32
  %add.2.i.i = add nsw i32 %65, %33
  store i32 %add.2.i.i, i32* %arrayidx.2.i.148.i, align 8, !tbaa !7
  %arrayidx.3.i.151.i = getelementptr inbounds [10 x i32], [10 x i32]* %v.i, i64 0, i64 3
  %66 = lshr i64 %64, 32
  %67 = trunc i64 %66 to i32
  %add.3.i.i = add nsw i32 %67, %36
  store i32 %add.3.i.i, i32* %arrayidx.3.i.151.i, align 4, !tbaa !7
  %arrayidx.4.i.154.i = getelementptr inbounds [10 x i32], [10 x i32]* %v.i, i64 0, i64 4
  %68 = bitcast i32* %arrayidx.4.i.154.i to i64*
  %69 = load i64, i64* %68, align 16
  %70 = trunc i64 %69 to i32
  %add.4.i.i = add nsw i32 %70, %40
  store i32 %add.4.i.i, i32* %arrayidx.4.i.154.i, align 16, !tbaa !7
  %arrayidx.5.i.157.i = getelementptr inbounds [10 x i32], [10 x i32]* %v.i, i64 0, i64 5
  %71 = lshr i64 %69, 32
  %72 = trunc i64 %71 to i32
  %add.5.i.i = add nsw i32 %72, %43
  store i32 %add.5.i.i, i32* %arrayidx.5.i.157.i, align 4, !tbaa !7
  %arrayidx.6.i.160.i = getelementptr inbounds [10 x i32], [10 x i32]* %v.i, i64 0, i64 6
  %73 = bitcast i32* %arrayidx.6.i.160.i to i64*
  %74 = load i64, i64* %73, align 8
  %75 = trunc i64 %74 to i32
  %add.6.i.i = add nsw i32 %75, %47
  store i32 %add.6.i.i, i32* %arrayidx.6.i.160.i, align 8, !tbaa !7
  %arrayidx.7.i.163.i = getelementptr inbounds [10 x i32], [10 x i32]* %v.i, i64 0, i64 7
  %76 = lshr i64 %74, 32
  %77 = trunc i64 %76 to i32
  %add.7.i.i = add nsw i32 %77, %50
  store i32 %add.7.i.i, i32* %arrayidx.7.i.163.i, align 4, !tbaa !7
  %arrayidx.8.i.166.i = getelementptr inbounds [10 x i32], [10 x i32]* %v.i, i64 0, i64 8
  %78 = bitcast i32* %arrayidx.8.i.166.i to i64*
  %79 = load i64, i64* %78, align 16
  %80 = trunc i64 %79 to i32
  %add.8.i.i = add nsw i32 %80, %54
  store i32 %add.8.i.i, i32* %arrayidx.8.i.166.i, align 16, !tbaa !7
  %arrayidx.9.i.169.i = getelementptr inbounds [10 x i32], [10 x i32]* %v.i, i64 0, i64 9
  %81 = lshr i64 %79, 32
  %82 = trunc i64 %81 to i32
  %add.9.i.i = add nsw i32 %82, %57
  store i32 %add.9.i.i, i32* %arrayidx.9.i.169.i, align 4, !tbaa !7
  %arraydecay15.i = getelementptr inbounds [10 x i32], [10 x i32]* %v3.i, i64 0, i64 0
  call fastcc void @fe_sq(i32* %arraydecay15.i, i32* %arraydecay5.i) #1
  call fastcc void @fe_mul(i32* %arraydecay15.i, i32* %arraydecay15.i, i32* %arraydecay5.i) #1
  %arraydecay20.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 0, i64 0
  call fastcc void @fe_sq(i32* %arraydecay20.i, i32* %arraydecay15.i) #1
  call fastcc void @fe_mul(i32* %arraydecay20.i, i32* %arraydecay20.i, i32* %arraydecay5.i) #1
  call fastcc void @fe_mul(i32* %arraydecay20.i, i32* %arraydecay20.i, i32* %arraydecay2.i) #1
  %83 = bitcast [10 x i32]* %t0.i.i to i8*
  call void @llvm.lifetime.start(i64 40, i8* %83) #1
  %84 = bitcast [10 x i32]* %t1.i.i to i8*
  call void @llvm.lifetime.start(i64 40, i8* %84) #1
  %85 = bitcast [10 x i32]* %t2.i.i to i8*
  call void @llvm.lifetime.start(i64 40, i8* %85) #1
  %arraydecay.i.i = getelementptr inbounds [10 x i32], [10 x i32]* %t0.i.i, i64 0, i64 0
  call fastcc void @fe_sq(i32* %arraydecay.i.i, i32* %arraydecay20.i) #1
  %arraydecay1.i.i = getelementptr inbounds [10 x i32], [10 x i32]* %t1.i.i, i64 0, i64 0
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_mul(i32* %arraydecay1.i.i, i32* %arraydecay20.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_mul(i32* %arraydecay.i.i, i32* %arraydecay.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay.i.i, i32* %arraydecay.i.i) #1
  call fastcc void @fe_mul(i32* %arraydecay.i.i, i32* %arraydecay1.i.i, i32* %arraydecay.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_mul(i32* %arraydecay.i.i, i32* %arraydecay1.i.i, i32* %arraydecay.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_mul(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i, i32* %arraydecay.i.i) #1
  %arraydecay41.i.i = getelementptr inbounds [10 x i32], [10 x i32]* %t2.i.i, i64 0, i64 0
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay41.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay41.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay41.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay41.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay41.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay41.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay41.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay41.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay41.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay41.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay41.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay41.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay41.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay41.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay41.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay41.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay41.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay41.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay41.i.i) #1
  call fastcc void @fe_mul(i32* %arraydecay1.i.i, i32* %arraydecay41.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_mul(i32* %arraydecay.i.i, i32* %arraydecay1.i.i, i32* %arraydecay.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay.i.i) #1
  br label %for.body.71.i.i

for.body.71.i.i:                                  ; preds = %for.body.71.i.i, %lor.lhs.false
  %i.5140.i.i = phi i32 [ 1, %lor.lhs.false ], [ %inc75.i.i, %for.body.71.i.i ]
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  %inc75.i.i = add nuw nsw i32 %i.5140.i.i, 1
  %exitcond147.i.i = icmp eq i32 %inc75.i.i, 50
  br i1 %exitcond147.i.i, label %for.end.76.i.i, label %for.body.71.i.i

for.end.76.i.i:                                   ; preds = %for.body.71.i.i
  call fastcc void @fe_mul(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i, i32* %arraydecay.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay1.i.i) #1
  br label %for.body.84.i.i

for.body.84.i.i:                                  ; preds = %for.body.84.i.i, %for.end.76.i.i
  %i.6139.i.i = phi i32 [ 1, %for.end.76.i.i ], [ %inc88.i.i, %for.body.84.i.i ]
  call fastcc void @fe_sq(i32* %arraydecay41.i.i, i32* %arraydecay41.i.i) #1
  %inc88.i.i = add nuw nsw i32 %i.6139.i.i, 1
  %exitcond146.i.i = icmp eq i32 %inc88.i.i, 100
  br i1 %exitcond146.i.i, label %for.end.89.i.i, label %for.body.84.i.i

for.end.89.i.i:                                   ; preds = %for.body.84.i.i
  call fastcc void @fe_mul(i32* %arraydecay1.i.i, i32* %arraydecay41.i.i, i32* %arraydecay1.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  br label %for.body.97.i.i

for.body.97.i.i:                                  ; preds = %for.body.97.i.i, %for.end.89.i.i
  %i.7138.i.i = phi i32 [ 1, %for.end.89.i.i ], [ %inc101.i.i, %for.body.97.i.i ]
  call fastcc void @fe_sq(i32* %arraydecay1.i.i, i32* %arraydecay1.i.i) #1
  %inc101.i.i = add nuw nsw i32 %i.7138.i.i, 1
  %exitcond.i.i = icmp eq i32 %inc101.i.i, 50
  br i1 %exitcond.i.i, label %fe_pow22523.exit.i, label %for.body.97.i.i

fe_pow22523.exit.i:                               ; preds = %for.body.97.i.i
  call fastcc void @fe_mul(i32* %arraydecay.i.i, i32* %arraydecay1.i.i, i32* %arraydecay.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay.i.i, i32* %arraydecay.i.i) #1
  call fastcc void @fe_sq(i32* %arraydecay.i.i, i32* %arraydecay.i.i) #1
  call fastcc void @fe_mul(i32* %arraydecay20.i, i32* %arraydecay.i.i, i32* %arraydecay20.i) #1
  call void @llvm.lifetime.end(i64 40, i8* %85) #1
  call void @llvm.lifetime.end(i64 40, i8* %84) #1
  call void @llvm.lifetime.end(i64 40, i8* %83) #1
  call fastcc void @fe_mul(i32* %arraydecay20.i, i32* %arraydecay20.i, i32* %arraydecay15.i) #1
  call fastcc void @fe_mul(i32* %arraydecay20.i, i32* %arraydecay20.i, i32* %arraydecay2.i) #1
  %arraydecay46.i = getelementptr inbounds [10 x i32], [10 x i32]* %vxx.i, i64 0, i64 0
  call fastcc void @fe_sq(i32* %arraydecay46.i, i32* %arraydecay20.i) #1
  call fastcc void @fe_mul(i32* %arraydecay46.i, i32* %arraydecay46.i, i32* %arraydecay5.i) #1
  %arraydecay52.i = getelementptr inbounds [10 x i32], [10 x i32]* %check.i, i64 0, i64 0
  %86 = bitcast [10 x i32]* %vxx.i to i64*
  %87 = load i64, i64* %86, align 16
  %88 = trunc i64 %87 to i32
  %89 = load i64, i64* %23, align 16
  %90 = trunc i64 %89 to i32
  %sub.i.174.i = sub nsw i32 %88, %90
  store i32 %sub.i.174.i, i32* %arraydecay52.i, align 16, !tbaa !7
  %91 = lshr i64 %87, 32
  %92 = trunc i64 %91 to i32
  %93 = lshr i64 %89, 32
  %94 = trunc i64 %93 to i32
  %sub.1.i.177.i = sub nsw i32 %92, %94
  %arrayidx4.1.i.178.i = getelementptr inbounds [10 x i32], [10 x i32]* %check.i, i64 0, i64 1
  store i32 %sub.1.i.177.i, i32* %arrayidx4.1.i.178.i, align 4, !tbaa !7
  %arrayidx.2.i.179.i = getelementptr inbounds [10 x i32], [10 x i32]* %vxx.i, i64 0, i64 2
  %95 = bitcast i32* %arrayidx.2.i.179.i to i64*
  %96 = load i64, i64* %95, align 8
  %97 = trunc i64 %96 to i32
  %98 = load i64, i64* %30, align 8
  %99 = trunc i64 %98 to i32
  %sub.2.i.181.i = sub nsw i32 %97, %99
  %arrayidx4.2.i.182.i = getelementptr inbounds [10 x i32], [10 x i32]* %check.i, i64 0, i64 2
  store i32 %sub.2.i.181.i, i32* %arrayidx4.2.i.182.i, align 8, !tbaa !7
  %100 = lshr i64 %96, 32
  %101 = trunc i64 %100 to i32
  %102 = lshr i64 %98, 32
  %103 = trunc i64 %102 to i32
  %sub.3.i.185.i = sub nsw i32 %101, %103
  %arrayidx4.3.i.186.i = getelementptr inbounds [10 x i32], [10 x i32]* %check.i, i64 0, i64 3
  store i32 %sub.3.i.185.i, i32* %arrayidx4.3.i.186.i, align 4, !tbaa !7
  %arrayidx.4.i.187.i = getelementptr inbounds [10 x i32], [10 x i32]* %vxx.i, i64 0, i64 4
  %104 = bitcast i32* %arrayidx.4.i.187.i to i64*
  %105 = load i64, i64* %104, align 16
  %106 = trunc i64 %105 to i32
  %107 = load i64, i64* %37, align 16
  %108 = trunc i64 %107 to i32
  %sub.4.i.189.i = sub nsw i32 %106, %108
  %arrayidx4.4.i.190.i = getelementptr inbounds [10 x i32], [10 x i32]* %check.i, i64 0, i64 4
  store i32 %sub.4.i.189.i, i32* %arrayidx4.4.i.190.i, align 16, !tbaa !7
  %109 = lshr i64 %105, 32
  %110 = trunc i64 %109 to i32
  %111 = lshr i64 %107, 32
  %112 = trunc i64 %111 to i32
  %sub.5.i.193.i = sub nsw i32 %110, %112
  %arrayidx4.5.i.194.i = getelementptr inbounds [10 x i32], [10 x i32]* %check.i, i64 0, i64 5
  store i32 %sub.5.i.193.i, i32* %arrayidx4.5.i.194.i, align 4, !tbaa !7
  %arrayidx.6.i.195.i = getelementptr inbounds [10 x i32], [10 x i32]* %vxx.i, i64 0, i64 6
  %113 = bitcast i32* %arrayidx.6.i.195.i to i64*
  %114 = load i64, i64* %113, align 8
  %115 = trunc i64 %114 to i32
  %116 = load i64, i64* %44, align 8
  %117 = trunc i64 %116 to i32
  %sub.6.i.197.i = sub nsw i32 %115, %117
  %arrayidx4.6.i.198.i = getelementptr inbounds [10 x i32], [10 x i32]* %check.i, i64 0, i64 6
  store i32 %sub.6.i.197.i, i32* %arrayidx4.6.i.198.i, align 8, !tbaa !7
  %118 = lshr i64 %114, 32
  %119 = trunc i64 %118 to i32
  %120 = lshr i64 %116, 32
  %121 = trunc i64 %120 to i32
  %sub.7.i.201.i = sub nsw i32 %119, %121
  %arrayidx4.7.i.202.i = getelementptr inbounds [10 x i32], [10 x i32]* %check.i, i64 0, i64 7
  store i32 %sub.7.i.201.i, i32* %arrayidx4.7.i.202.i, align 4, !tbaa !7
  %arrayidx.8.i.203.i = getelementptr inbounds [10 x i32], [10 x i32]* %vxx.i, i64 0, i64 8
  %122 = bitcast i32* %arrayidx.8.i.203.i to i64*
  %123 = load i64, i64* %122, align 16
  %124 = trunc i64 %123 to i32
  %125 = load i64, i64* %51, align 16
  %126 = trunc i64 %125 to i32
  %sub.8.i.205.i = sub nsw i32 %124, %126
  %arrayidx4.8.i.206.i = getelementptr inbounds [10 x i32], [10 x i32]* %check.i, i64 0, i64 8
  store i32 %sub.8.i.205.i, i32* %arrayidx4.8.i.206.i, align 16, !tbaa !7
  %127 = lshr i64 %123, 32
  %128 = trunc i64 %127 to i32
  %129 = lshr i64 %125, 32
  %130 = trunc i64 %129 to i32
  %sub.9.i.209.i = sub nsw i32 %128, %130
  %arrayidx4.9.i.210.i = getelementptr inbounds [10 x i32], [10 x i32]* %check.i, i64 0, i64 9
  store i32 %sub.9.i.209.i, i32* %arrayidx4.9.i.210.i, align 4, !tbaa !7
  %131 = getelementptr inbounds [32 x i8], [32 x i8]* %s.i.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 32, i8* %131) #1
  call fastcc void @fe_tobytes(i8* %131, i32* %arraydecay52.i) #1
  %call.i.212.i = call i32 @CRYPTO_memcmp(i8* %131, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @fe_isnonzero.zero, i64 0, i64 0), i64 32) #1
  %cmp.i.213.i = icmp eq i32 %call.i.212.i, 0
  call void @llvm.lifetime.end(i64 32, i8* %131) #1
  br i1 %cmp.i.213.i, label %if.end.67.i, label %if.then.i

if.then.i:                                        ; preds = %fe_pow22523.exit.i
  %add.i.215.i = add nsw i32 %90, %88
  store i32 %add.i.215.i, i32* %arraydecay52.i, align 16, !tbaa !7
  %132 = load i32, i32* %arrayidx.1.i.117.i, align 4, !tbaa !7
  %add.1.i.218.i = add nsw i32 %132, %92
  store i32 %add.1.i.218.i, i32* %arrayidx4.1.i.178.i, align 4, !tbaa !7
  %add.2.i.222.i = add nsw i32 %99, %97
  store i32 %add.2.i.222.i, i32* %arrayidx4.2.i.182.i, align 8, !tbaa !7
  %add.3.i.226.i = add nsw i32 %103, %101
  store i32 %add.3.i.226.i, i32* %arrayidx4.3.i.186.i, align 4, !tbaa !7
  %add.4.i.230.i = add nsw i32 %108, %106
  store i32 %add.4.i.230.i, i32* %arrayidx4.4.i.190.i, align 16, !tbaa !7
  %add.5.i.234.i = add nsw i32 %112, %110
  store i32 %add.5.i.234.i, i32* %arrayidx4.5.i.194.i, align 4, !tbaa !7
  %add.6.i.238.i = add nsw i32 %117, %115
  store i32 %add.6.i.238.i, i32* %arrayidx4.6.i.198.i, align 8, !tbaa !7
  %add.7.i.242.i = add nsw i32 %121, %119
  store i32 %add.7.i.242.i, i32* %arrayidx4.7.i.202.i, align 4, !tbaa !7
  %add.8.i.246.i = add nsw i32 %126, %124
  store i32 %add.8.i.246.i, i32* %arrayidx4.8.i.206.i, align 16, !tbaa !7
  %add.9.i.250.i = add nsw i32 %130, %128
  store i32 %add.9.i.250.i, i32* %arrayidx4.9.i.210.i, align 4, !tbaa !7
  call void @llvm.lifetime.start(i64 32, i8* %131) #1
  call fastcc void @fe_tobytes(i8* %131, i32* %arraydecay52.i) #1
  %call.i.i = call i32 @CRYPTO_memcmp(i8* %131, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @fe_isnonzero.zero, i64 0, i64 0), i64 32) #1
  %cmp.i.i = icmp eq i32 %call.i.i, 0
  call void @llvm.lifetime.end(i64 32, i8* %131) #1
  br i1 %cmp.i.i, label %if.end.i, label %ge_frombytes_vartime.exit

if.end.i:                                         ; preds = %if.then.i
  call fastcc void @fe_mul(i32* %arraydecay20.i, i32* %arraydecay20.i, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @sqrtm1, i64 0, i64 0)) #1
  br label %if.end.67.i

if.end.67.i:                                      ; preds = %if.end.i, %fe_pow22523.exit.i
  call void @llvm.lifetime.start(i64 32, i8* %131) #1
  call fastcc void @fe_tobytes(i8* %131, i32* %arraydecay20.i) #1
  %133 = load i8, i8* %131, align 16, !tbaa !2
  %conv.i.114.i = zext i8 %133 to i32
  %and.i.115.i = and i32 %conv.i.114.i, 1
  call void @llvm.lifetime.end(i64 32, i8* %131) #1
  %134 = load i8, i8* %add.ptr22.idx174.i.i, align 1, !tbaa !2
  %conv.i = zext i8 %134 to i32
  %shr.112.i = lshr i32 %conv.i, 7
  %cmp.i = icmp eq i32 %and.i.115.i, %shr.112.i
  %.pre = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 0, i64 1
  %.pre92 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 0, i64 2
  %.pre93 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 0, i64 3
  br i1 %cmp.i, label %if.end.67.i.if.end.77.i_crit_edge, label %if.then.72.i

if.end.67.i.if.end.77.i_crit_edge:                ; preds = %if.end.67.i
  %.pre94 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 0, i64 4
  %.pre95 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 0, i64 5
  %.pre96 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 0, i64 6
  %.pre97 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 0, i64 7
  %.pre98 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 0, i64 8
  %.pre99 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 0, i64 9
  br label %if.end.77.i

if.then.72.i:                                     ; preds = %if.end.67.i
  %135 = bitcast %struct.ge_p3* %A to <4 x i32>*
  %136 = load <4 x i32>, <4 x i32>* %135, align 16, !tbaa !7
  %137 = sub nsw <4 x i32> zeroinitializer, %136
  %138 = bitcast %struct.ge_p3* %A to <4 x i32>*
  store <4 x i32> %137, <4 x i32>* %138, align 16, !tbaa !7
  %arrayidx.4.i.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 0, i64 4
  %arrayidx.5.i.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 0, i64 5
  %arrayidx.6.i.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 0, i64 6
  %arrayidx.7.i.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 0, i64 7
  %139 = bitcast i32* %arrayidx.4.i.i to <4 x i32>*
  %140 = load <4 x i32>, <4 x i32>* %139, align 16, !tbaa !7
  %141 = sub nsw <4 x i32> zeroinitializer, %140
  %142 = bitcast i32* %arrayidx.4.i.i to <4 x i32>*
  store <4 x i32> %141, <4 x i32>* %142, align 16, !tbaa !7
  %arrayidx.8.i.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 0, i64 8
  %143 = load i32, i32* %arrayidx.8.i.i, align 16, !tbaa !7
  %sub.8.i.i = sub nsw i32 0, %143
  store i32 %sub.8.i.i, i32* %arrayidx.8.i.i, align 16, !tbaa !7
  %arrayidx.9.i.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 0, i64 9
  %144 = load i32, i32* %arrayidx.9.i.i, align 4, !tbaa !7
  %sub.9.i.i = sub nsw i32 0, %144
  store i32 %sub.9.i.i, i32* %arrayidx.9.i.i, align 4, !tbaa !7
  br label %if.end.77.i

if.end.77.i:                                      ; preds = %if.end.67.i.if.end.77.i_crit_edge, %if.then.72.i
  %arrayidx.9.i.pre-phi = phi i32* [ %.pre99, %if.end.67.i.if.end.77.i_crit_edge ], [ %arrayidx.9.i.i, %if.then.72.i ]
  %arrayidx.8.i.pre-phi = phi i32* [ %.pre98, %if.end.67.i.if.end.77.i_crit_edge ], [ %arrayidx.8.i.i, %if.then.72.i ]
  %arrayidx.7.i.pre-phi = phi i32* [ %.pre97, %if.end.67.i.if.end.77.i_crit_edge ], [ %arrayidx.7.i.i, %if.then.72.i ]
  %arrayidx.6.i.pre-phi = phi i32* [ %.pre96, %if.end.67.i.if.end.77.i_crit_edge ], [ %arrayidx.6.i.i, %if.then.72.i ]
  %arrayidx.5.i.pre-phi = phi i32* [ %.pre95, %if.end.67.i.if.end.77.i_crit_edge ], [ %arrayidx.5.i.i, %if.then.72.i ]
  %arrayidx.4.i.pre-phi = phi i32* [ %.pre94, %if.end.67.i.if.end.77.i_crit_edge ], [ %arrayidx.4.i.i, %if.then.72.i ]
  %arraydecay78.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 3, i64 0
  call fastcc void @fe_mul(i32* %arraydecay78.i, i32* %arraydecay20.i, i32* %arraydecay.i) #1
  call void @llvm.lifetime.end(i64 40, i8* %12) #1
  call void @llvm.lifetime.end(i64 40, i8* %11) #1
  call void @llvm.lifetime.end(i64 40, i8* %10) #1
  call void @llvm.lifetime.end(i64 40, i8* %9) #1
  call void @llvm.lifetime.end(i64 40, i8* %8) #1
  %145 = load i32, i32* %arraydecay20.i, align 16, !tbaa !7
  %sub.i = sub nsw i32 0, %145
  store i32 %sub.i, i32* %arraydecay20.i, align 16, !tbaa !7
  %146 = load i32, i32* %.pre, align 4, !tbaa !7
  %sub.1.i = sub nsw i32 0, %146
  store i32 %sub.1.i, i32* %.pre, align 4, !tbaa !7
  %147 = load i32, i32* %.pre92, align 8, !tbaa !7
  %sub.2.i = sub nsw i32 0, %147
  store i32 %sub.2.i, i32* %.pre92, align 8, !tbaa !7
  %148 = load i32, i32* %.pre93, align 4, !tbaa !7
  %sub.3.i = sub nsw i32 0, %148
  store i32 %sub.3.i, i32* %.pre93, align 4, !tbaa !7
  %149 = load i32, i32* %arrayidx.4.i.pre-phi, align 4, !tbaa !7
  %sub.4.i = sub nsw i32 0, %149
  store i32 %sub.4.i, i32* %arrayidx.4.i.pre-phi, align 4, !tbaa !7
  %150 = load i32, i32* %arrayidx.5.i.pre-phi, align 4, !tbaa !7
  %sub.5.i = sub nsw i32 0, %150
  store i32 %sub.5.i, i32* %arrayidx.5.i.pre-phi, align 4, !tbaa !7
  %151 = load i32, i32* %arrayidx.6.i.pre-phi, align 4, !tbaa !7
  %sub.6.i = sub nsw i32 0, %151
  store i32 %sub.6.i, i32* %arrayidx.6.i.pre-phi, align 4, !tbaa !7
  %152 = load i32, i32* %arrayidx.7.i.pre-phi, align 4, !tbaa !7
  %sub.7.i = sub nsw i32 0, %152
  store i32 %sub.7.i, i32* %arrayidx.7.i.pre-phi, align 4, !tbaa !7
  %153 = load i32, i32* %arrayidx.8.i.pre-phi, align 4, !tbaa !7
  %sub.8.i = sub nsw i32 0, %153
  store i32 %sub.8.i, i32* %arrayidx.8.i.pre-phi, align 4, !tbaa !7
  %154 = load i32, i32* %arrayidx.9.i.pre-phi, align 4, !tbaa !7
  %sub.9.i = sub nsw i32 0, %154
  store i32 %sub.9.i, i32* %arrayidx.9.i.pre-phi, align 4, !tbaa !7
  %155 = bitcast i32* %arraydecay78.i to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 8, !tbaa !7
  %157 = sub nsw <4 x i32> zeroinitializer, %156
  %158 = bitcast i32* %arraydecay78.i to <4 x i32>*
  store <4 x i32> %157, <4 x i32>* %158, align 8, !tbaa !7
  %arrayidx.4.i.44 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 3, i64 4
  %159 = bitcast i32* %arrayidx.4.i.44 to <4 x i32>*
  %160 = load <4 x i32>, <4 x i32>* %159, align 8, !tbaa !7
  %161 = sub nsw <4 x i32> zeroinitializer, %160
  %162 = bitcast i32* %arrayidx.4.i.44 to <4 x i32>*
  store <4 x i32> %161, <4 x i32>* %162, align 8, !tbaa !7
  %arrayidx.8.i.56 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 3, i64 8
  %163 = load i32, i32* %arrayidx.8.i.56, align 8, !tbaa !7
  %sub.8.i.57 = sub nsw i32 0, %163
  store i32 %sub.8.i.57, i32* %arrayidx.8.i.56, align 8, !tbaa !7
  %arrayidx.9.i.59 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 3, i64 9
  %164 = load i32, i32* %arrayidx.9.i.59, align 4, !tbaa !7
  %sub.9.i.60 = sub nsw i32 0, %164
  store i32 %sub.9.i.60, i32* %arrayidx.9.i.59, align 4, !tbaa !7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %signature, i64 32, i32 1, i1 false)
  %add.ptr = getelementptr inbounds i8, i8* %signature, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %add.ptr, i64 32, i32 1, i1 false)
  %call9 = call i32 @SHA512_Init(%struct.SHA512state_st* nonnull %hash_ctx) #1
  %call10 = call i32 @SHA512_Update(%struct.SHA512state_st* nonnull %hash_ctx, i8* %signature, i64 32) #1
  %call11 = call i32 @SHA512_Update(%struct.SHA512state_st* nonnull %hash_ctx, i8* %public_key, i64 32) #1
  %call12 = call i32 @SHA512_Update(%struct.SHA512state_st* nonnull %hash_ctx, i8* %message, i64 %message_len) #1
  %call14 = call i32 @SHA512_Final(i8* %6, %struct.SHA512state_st* nonnull %hash_ctx) #1
  call fastcc void @x25519_sc_reduce(i8* %6)
  %165 = getelementptr inbounds [256 x i8], [256 x i8]* %aslide.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 256, i8* %165) #1
  %166 = getelementptr inbounds [256 x i8], [256 x i8]* %bslide.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 256, i8* %166) #1
  %167 = bitcast [8 x %struct.ge_cached]* %Ai.i to i8*
  call void @llvm.lifetime.start(i64 1280, i8* %167) #1
  %168 = bitcast %struct.ge_p1p1* %t.i to i8*
  call void @llvm.lifetime.start(i64 160, i8* %168) #1
  %169 = bitcast %struct.ge_p3* %u.i.62 to i8*
  call void @llvm.lifetime.start(i64 160, i8* %169) #1
  %170 = bitcast %struct.ge_p3* %A2.i to i8*
  call void @llvm.lifetime.start(i64 160, i8* %170) #1
  br label %for.body.i.i

ge_frombytes_vartime.exit:                        ; preds = %if.then.i
  call void @llvm.lifetime.end(i64 40, i8* %12) #1
  call void @llvm.lifetime.end(i64 40, i8* %11) #1
  call void @llvm.lifetime.end(i64 40, i8* %10) #1
  call void @llvm.lifetime.end(i64 40, i8* %9) #1
  call void @llvm.lifetime.end(i64 40, i8* %8) #1
  br label %cleanup

for.body.i.i:                                     ; preds = %for.body.i.i, %if.end.77.i
  %indvars.iv162.i.i = phi i64 [ 0, %if.end.77.i ], [ %indvars.iv.next163.i.i.1, %for.body.i.i ]
  %171 = trunc i64 %indvars.iv162.i.i to i32
  %shr.i.i = ashr i32 %171, 3
  %idxprom.i.i = sext i32 %shr.i.i to i64
  %arrayidx.i.i = getelementptr inbounds [64 x i8], [64 x i8]* %h, i64 0, i64 %idxprom.i.i
  %172 = load i8, i8* %arrayidx.i.i, align 1, !tbaa !2
  %conv.i.i.63 = zext i8 %172 to i32
  %and.i.i.64 = and i32 %171, 6
  %shr1.i.i = lshr i32 %conv.i.i.63, %and.i.i.64
  %shr1.tr.i.i = trunc i32 %shr1.i.i to i8
  %conv3.i.i = and i8 %shr1.tr.i.i, 1
  %arrayidx5.i.i = getelementptr inbounds [256 x i8], [256 x i8]* %aslide.i, i64 0, i64 %indvars.iv162.i.i
  store i8 %conv3.i.i, i8* %arrayidx5.i.i, align 2, !tbaa !2
  %indvars.iv.next163.i.i = or i64 %indvars.iv162.i.i, 1
  %173 = trunc i64 %indvars.iv.next163.i.i to i32
  %shr.i.i.1 = ashr i32 %173, 3
  %idxprom.i.i.1 = sext i32 %shr.i.i.1 to i64
  %arrayidx.i.i.1 = getelementptr inbounds [64 x i8], [64 x i8]* %h, i64 0, i64 %idxprom.i.i.1
  %174 = load i8, i8* %arrayidx.i.i.1, align 1, !tbaa !2
  %conv.i.i.63.1 = zext i8 %174 to i32
  %and.i.i.64.1 = and i32 %173, 7
  %shr1.i.i.1 = lshr i32 %conv.i.i.63.1, %and.i.i.64.1
  %shr1.tr.i.i.1 = trunc i32 %shr1.i.i.1 to i8
  %conv3.i.i.1 = and i8 %shr1.tr.i.i.1, 1
  %arrayidx5.i.i.1 = getelementptr inbounds [256 x i8], [256 x i8]* %aslide.i, i64 0, i64 %indvars.iv.next163.i.i
  store i8 %conv3.i.i.1, i8* %arrayidx5.i.i.1, align 1, !tbaa !2
  %indvars.iv.next163.i.i.1 = add nsw i64 %indvars.iv162.i.i, 2
  %exitcond164.i.i.1 = icmp eq i64 %indvars.iv.next163.i.i.1, 256
  br i1 %exitcond164.i.i.1, label %for.body.9.i.i.preheader, label %for.body.i.i

for.body.9.i.i.preheader:                         ; preds = %for.body.i.i
  br label %for.body.9.i.i

for.body.9.i.i:                                   ; preds = %for.body.9.i.i.preheader, %for.inc.92.i.i
  %indvars.iv160.i.i = phi i64 [ %indvars.iv.next161.i.i, %for.inc.92.i.i ], [ 0, %for.body.9.i.i.preheader ]
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %for.inc.92.i.i ], [ 1, %for.body.9.i.i.preheader ]
  %arrayidx11.i.i = getelementptr inbounds [256 x i8], [256 x i8]* %aslide.i, i64 0, i64 %indvars.iv160.i.i
  %175 = load i8, i8* %arrayidx11.i.i, align 1, !tbaa !2
  %tobool.i.i = icmp eq i8 %175, 0
  br i1 %tobool.i.i, label %for.inc.92.i.i, label %land.rhs.i.i.preheader

land.rhs.i.i.preheader:                           ; preds = %for.body.9.i.i
  br label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %land.rhs.i.i.preheader, %for.inc.88.i.i
  %indvars.iv157.i.i = phi i64 [ %indvars.iv.next158.i.i, %for.inc.88.i.i ], [ 1, %land.rhs.i.i.preheader ]
  %indvars.iv153.i.i = phi i64 [ %indvars.iv.next154.i.i, %for.inc.88.i.i ], [ %indvars.iv.i.i, %land.rhs.i.i.preheader ]
  %176 = add nuw nsw i64 %indvars.iv157.i.i, %indvars.iv160.i.i
  %cmp15.i.i = icmp slt i64 %176, 256
  br i1 %cmp15.i.i, label %for.body.17.i.i, label %for.inc.92.i.i.loopexit

for.body.17.i.i:                                  ; preds = %land.rhs.i.i
  %arrayidx20.i.i = getelementptr inbounds [256 x i8], [256 x i8]* %aslide.i, i64 0, i64 %176
  %177 = load i8, i8* %arrayidx20.i.i, align 1, !tbaa !2
  %tobool21.i.i = icmp eq i8 %177, 0
  br i1 %tobool21.i.i, label %for.inc.88.i.i, label %if.then.22.i.i

if.then.22.i.i:                                   ; preds = %for.body.17.i.i
  %178 = load i8, i8* %arrayidx11.i.i, align 1, !tbaa !2
  %conv25.i.i = sext i8 %178 to i32
  %conv29.i.i = sext i8 %177 to i32
  %179 = trunc i64 %indvars.iv157.i.i to i32
  %shl.i.i.65 = shl i32 %conv29.i.i, %179
  %add30.i.i = add nsw i32 %conv25.i.i, %shl.i.i.65
  %cmp31.i.i = icmp slt i32 %add30.i.i, 16
  br i1 %cmp31.i.i, label %if.then.33.i.i, label %if.else.i.i

if.then.33.i.i:                                   ; preds = %if.then.22.i.i
  %conv43.i.i = trunc i32 %add30.i.i to i8
  store i8 %conv43.i.i, i8* %arrayidx11.i.i, align 1, !tbaa !2
  store i8 0, i8* %arrayidx20.i.i, align 1, !tbaa !2
  br label %for.inc.88.i.i

if.else.i.i:                                      ; preds = %if.then.22.i.i
  %sub.i.i.66 = sub nsw i32 %conv25.i.i, %shl.i.i.65
  %cmp55.i.i = icmp sgt i32 %sub.i.i.66, -16
  br i1 %cmp55.i.i, label %for.body.72.lr.ph.i.i, label %for.inc.92.i.i.loopexit

for.body.72.lr.ph.i.i:                            ; preds = %if.else.i.i
  %conv67.i.i = trunc i32 %sub.i.i.66 to i8
  store i8 %conv67.i.i, i8* %arrayidx11.i.i, align 1, !tbaa !2
  br label %for.body.72.i.i

for.body.72.i.i:                                  ; preds = %if.end.i.i, %for.body.72.lr.ph.i.i
  %indvars.iv155.i.i = phi i64 [ %indvars.iv153.i.i, %for.body.72.lr.ph.i.i ], [ %indvars.iv.next156.i.i, %if.end.i.i ]
  %arrayidx74.i.i = getelementptr inbounds [256 x i8], [256 x i8]* %aslide.i, i64 0, i64 %indvars.iv155.i.i
  %180 = load i8, i8* %arrayidx74.i.i, align 1, !tbaa !2
  %tobool75.i.i = icmp eq i8 %180, 0
  br i1 %tobool75.i.i, label %if.then.76.i.i, label %if.end.i.i

if.then.76.i.i:                                   ; preds = %for.body.72.i.i
  %arrayidx74.i.i.lcssa = phi i8* [ %arrayidx74.i.i, %for.body.72.i.i ]
  store i8 1, i8* %arrayidx74.i.i.lcssa, align 1, !tbaa !2
  br label %for.inc.88.i.i

if.end.i.i:                                       ; preds = %for.body.72.i.i
  store i8 0, i8* %arrayidx74.i.i, align 1, !tbaa !2
  %indvars.iv.next156.i.i = add nuw nsw i64 %indvars.iv155.i.i, 1
  %cmp70.i.i = icmp slt i64 %indvars.iv.next156.i.i, 256
  br i1 %cmp70.i.i, label %for.body.72.i.i, label %for.inc.88.i.i.loopexit

for.inc.88.i.i.loopexit:                          ; preds = %if.end.i.i
  br label %for.inc.88.i.i

for.inc.88.i.i:                                   ; preds = %for.inc.88.i.i.loopexit, %if.then.76.i.i, %if.then.33.i.i, %for.body.17.i.i
  %indvars.iv.next158.i.i = add nuw nsw i64 %indvars.iv157.i.i, 1
  %cmp13.i.i = icmp slt i64 %indvars.iv.next158.i.i, 7
  %indvars.iv.next154.i.i = add nuw nsw i64 %indvars.iv153.i.i, 1
  br i1 %cmp13.i.i, label %land.rhs.i.i, label %for.inc.92.i.i.loopexit

for.inc.92.i.i.loopexit:                          ; preds = %land.rhs.i.i, %if.else.i.i, %for.inc.88.i.i
  br label %for.inc.92.i.i

for.inc.92.i.i:                                   ; preds = %for.inc.92.i.i.loopexit, %for.body.9.i.i
  %indvars.iv.next161.i.i = add nuw nsw i64 %indvars.iv160.i.i, 1
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.i.i.67 = icmp eq i64 %indvars.iv.next161.i.i, 256
  br i1 %exitcond.i.i.67, label %for.body.i.110.i.preheader, label %for.body.9.i.i

for.body.i.110.i.preheader:                       ; preds = %for.inc.92.i.i
  br label %for.body.i.110.i

for.body.i.110.i:                                 ; preds = %for.body.i.110.i, %for.body.i.110.i.preheader
  %indvars.iv162.i.98.i = phi i64 [ 0, %for.body.i.110.i.preheader ], [ %indvars.iv.next163.i.108.i.1, %for.body.i.110.i ]
  %181 = trunc i64 %indvars.iv162.i.98.i to i32
  %shr.i.99.i = ashr i32 %181, 3
  %idxprom.i.100.i = sext i32 %shr.i.99.i to i64
  %arrayidx.i.101.i = getelementptr inbounds [32 x i8], [32 x i8]* %scopy, i64 0, i64 %idxprom.i.100.i
  %182 = load i8, i8* %arrayidx.i.101.i, align 1, !tbaa !2
  %conv.i.102.i = zext i8 %182 to i32
  %and.i.103.i = and i32 %181, 6
  %shr1.i.104.i = lshr i32 %conv.i.102.i, %and.i.103.i
  %shr1.tr.i.105.i = trunc i32 %shr1.i.104.i to i8
  %conv3.i.106.i = and i8 %shr1.tr.i.105.i, 1
  %arrayidx5.i.107.i = getelementptr inbounds [256 x i8], [256 x i8]* %bslide.i, i64 0, i64 %indvars.iv162.i.98.i
  store i8 %conv3.i.106.i, i8* %arrayidx5.i.107.i, align 2, !tbaa !2
  %indvars.iv.next163.i.108.i = or i64 %indvars.iv162.i.98.i, 1
  %183 = trunc i64 %indvars.iv.next163.i.108.i to i32
  %shr.i.99.i.1 = ashr i32 %183, 3
  %idxprom.i.100.i.1 = sext i32 %shr.i.99.i.1 to i64
  %arrayidx.i.101.i.1 = getelementptr inbounds [32 x i8], [32 x i8]* %scopy, i64 0, i64 %idxprom.i.100.i.1
  %184 = load i8, i8* %arrayidx.i.101.i.1, align 1, !tbaa !2
  %conv.i.102.i.1 = zext i8 %184 to i32
  %and.i.103.i.1 = and i32 %183, 7
  %shr1.i.104.i.1 = lshr i32 %conv.i.102.i.1, %and.i.103.i.1
  %shr1.tr.i.105.i.1 = trunc i32 %shr1.i.104.i.1 to i8
  %conv3.i.106.i.1 = and i8 %shr1.tr.i.105.i.1, 1
  %arrayidx5.i.107.i.1 = getelementptr inbounds [256 x i8], [256 x i8]* %bslide.i, i64 0, i64 %indvars.iv.next163.i.108.i
  store i8 %conv3.i.106.i.1, i8* %arrayidx5.i.107.i.1, align 1, !tbaa !2
  %indvars.iv.next163.i.108.i.1 = add nsw i64 %indvars.iv162.i.98.i, 2
  %exitcond164.i.109.i.1 = icmp eq i64 %indvars.iv.next163.i.108.i.1, 256
  br i1 %exitcond164.i.109.i.1, label %for.body.9.i.115.i.preheader, label %for.body.i.110.i

for.body.9.i.115.i.preheader:                     ; preds = %for.body.i.110.i
  br label %for.body.9.i.115.i

for.body.9.i.115.i:                               ; preds = %for.body.9.i.115.i.preheader, %for.inc.92.i.151.i
  %indvars.iv160.i.111.i = phi i64 [ %indvars.iv.next161.i.148.i, %for.inc.92.i.151.i ], [ 0, %for.body.9.i.115.i.preheader ]
  %indvars.iv.i.112.i = phi i64 [ %indvars.iv.next.i.149.i, %for.inc.92.i.151.i ], [ 1, %for.body.9.i.115.i.preheader ]
  %arrayidx11.i.113.i = getelementptr inbounds [256 x i8], [256 x i8]* %bslide.i, i64 0, i64 %indvars.iv160.i.111.i
  %185 = load i8, i8* %arrayidx11.i.113.i, align 1, !tbaa !2
  %tobool.i.114.i = icmp eq i8 %185, 0
  br i1 %tobool.i.114.i, label %for.inc.92.i.151.i, label %land.rhs.i.119.i.preheader

land.rhs.i.119.i.preheader:                       ; preds = %for.body.9.i.115.i
  br label %land.rhs.i.119.i

land.rhs.i.119.i:                                 ; preds = %land.rhs.i.119.i.preheader, %for.inc.88.i.147.i
  %indvars.iv157.i.116.i = phi i64 [ %indvars.iv.next158.i.144.i, %for.inc.88.i.147.i ], [ 1, %land.rhs.i.119.i.preheader ]
  %indvars.iv153.i.117.i = phi i64 [ %indvars.iv.next154.i.146.i, %for.inc.88.i.147.i ], [ %indvars.iv.i.112.i, %land.rhs.i.119.i.preheader ]
  %186 = add nuw nsw i64 %indvars.iv157.i.116.i, %indvars.iv160.i.111.i
  %cmp15.i.118.i = icmp slt i64 %186, 256
  br i1 %cmp15.i.118.i, label %for.body.17.i.122.i, label %for.inc.92.i.151.i.loopexit

for.body.17.i.122.i:                              ; preds = %land.rhs.i.119.i
  %arrayidx20.i.120.i = getelementptr inbounds [256 x i8], [256 x i8]* %bslide.i, i64 0, i64 %186
  %187 = load i8, i8* %arrayidx20.i.120.i, align 1, !tbaa !2
  %tobool21.i.121.i = icmp eq i8 %187, 0
  br i1 %tobool21.i.121.i, label %for.inc.88.i.147.i, label %if.then.22.i.128.i

if.then.22.i.128.i:                               ; preds = %for.body.17.i.122.i
  %188 = load i8, i8* %arrayidx11.i.113.i, align 1, !tbaa !2
  %conv25.i.123.i = sext i8 %188 to i32
  %conv29.i.124.i = sext i8 %187 to i32
  %189 = trunc i64 %indvars.iv157.i.116.i to i32
  %shl.i.125.i = shl i32 %conv29.i.124.i, %189
  %add30.i.126.i = add nsw i32 %conv25.i.123.i, %shl.i.125.i
  %cmp31.i.127.i = icmp slt i32 %add30.i.126.i, 16
  br i1 %cmp31.i.127.i, label %if.then.33.i.130.i, label %if.else.i.133.i

if.then.33.i.130.i:                               ; preds = %if.then.22.i.128.i
  %conv43.i.129.i = trunc i32 %add30.i.126.i to i8
  store i8 %conv43.i.129.i, i8* %arrayidx11.i.113.i, align 1, !tbaa !2
  store i8 0, i8* %arrayidx20.i.120.i, align 1, !tbaa !2
  br label %for.inc.88.i.147.i

if.else.i.133.i:                                  ; preds = %if.then.22.i.128.i
  %sub.i.131.i = sub nsw i32 %conv25.i.123.i, %shl.i.125.i
  %cmp55.i.132.i = icmp sgt i32 %sub.i.131.i, -16
  br i1 %cmp55.i.132.i, label %for.body.72.lr.ph.i.135.i, label %for.inc.92.i.151.i.loopexit

for.body.72.lr.ph.i.135.i:                        ; preds = %if.else.i.133.i
  %conv67.i.134.i = trunc i32 %sub.i.131.i to i8
  store i8 %conv67.i.134.i, i8* %arrayidx11.i.113.i, align 1, !tbaa !2
  br label %for.body.72.i.139.i

for.body.72.i.139.i:                              ; preds = %if.end.i.143.i, %for.body.72.lr.ph.i.135.i
  %indvars.iv155.i.136.i = phi i64 [ %indvars.iv153.i.117.i, %for.body.72.lr.ph.i.135.i ], [ %indvars.iv.next156.i.141.i, %if.end.i.143.i ]
  %arrayidx74.i.137.i = getelementptr inbounds [256 x i8], [256 x i8]* %bslide.i, i64 0, i64 %indvars.iv155.i.136.i
  %190 = load i8, i8* %arrayidx74.i.137.i, align 1, !tbaa !2
  %tobool75.i.138.i = icmp eq i8 %190, 0
  br i1 %tobool75.i.138.i, label %if.then.76.i.140.i, label %if.end.i.143.i

if.then.76.i.140.i:                               ; preds = %for.body.72.i.139.i
  %arrayidx74.i.137.i.lcssa = phi i8* [ %arrayidx74.i.137.i, %for.body.72.i.139.i ]
  store i8 1, i8* %arrayidx74.i.137.i.lcssa, align 1, !tbaa !2
  br label %for.inc.88.i.147.i

if.end.i.143.i:                                   ; preds = %for.body.72.i.139.i
  store i8 0, i8* %arrayidx74.i.137.i, align 1, !tbaa !2
  %indvars.iv.next156.i.141.i = add nuw nsw i64 %indvars.iv155.i.136.i, 1
  %cmp70.i.142.i = icmp slt i64 %indvars.iv.next156.i.141.i, 256
  br i1 %cmp70.i.142.i, label %for.body.72.i.139.i, label %for.inc.88.i.147.i.loopexit

for.inc.88.i.147.i.loopexit:                      ; preds = %if.end.i.143.i
  br label %for.inc.88.i.147.i

for.inc.88.i.147.i:                               ; preds = %for.inc.88.i.147.i.loopexit, %if.then.76.i.140.i, %if.then.33.i.130.i, %for.body.17.i.122.i
  %indvars.iv.next158.i.144.i = add nuw nsw i64 %indvars.iv157.i.116.i, 1
  %cmp13.i.145.i = icmp slt i64 %indvars.iv.next158.i.144.i, 7
  %indvars.iv.next154.i.146.i = add nuw nsw i64 %indvars.iv153.i.117.i, 1
  br i1 %cmp13.i.145.i, label %land.rhs.i.119.i, label %for.inc.92.i.151.i.loopexit

for.inc.92.i.151.i.loopexit:                      ; preds = %land.rhs.i.119.i, %if.else.i.133.i, %for.inc.88.i.147.i
  br label %for.inc.92.i.151.i

for.inc.92.i.151.i:                               ; preds = %for.inc.92.i.151.i.loopexit, %for.body.9.i.115.i
  %indvars.iv.next161.i.148.i = add nuw nsw i64 %indvars.iv160.i.111.i, 1
  %indvars.iv.next.i.149.i = add nuw nsw i64 %indvars.iv.i.112.i, 1
  %exitcond.i.150.i = icmp eq i64 %indvars.iv.next161.i.148.i, 256
  br i1 %exitcond.i.150.i, label %slide.exit152.i, label %for.body.9.i.115.i

slide.exit152.i:                                  ; preds = %for.inc.92.i.151.i
  %arrayidx.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 0
  %191 = load i32, i32* %arraydecay20.i, align 16, !tbaa !7
  %192 = load i32, i32* %.pre, align 4, !tbaa !7
  %193 = load i32, i32* %.pre92, align 8, !tbaa !7
  %194 = bitcast i32* %arraydecay.i to <4 x i32>*
  %195 = load <4 x i32>, <4 x i32>* %194, align 8, !tbaa !7
  %196 = load i32, i32* %.pre93, align 4, !tbaa !7
  %197 = insertelement <4 x i32> undef, i32 %191, i32 0
  %198 = insertelement <4 x i32> %197, i32 %192, i32 1
  %199 = insertelement <4 x i32> %198, i32 %193, i32 2
  %200 = insertelement <4 x i32> %199, i32 %196, i32 3
  %201 = add nsw <4 x i32> %200, %195
  %202 = bitcast [8 x %struct.ge_cached]* %Ai.i to <4 x i32>*
  store <4 x i32> %201, <4 x i32>* %202, align 16, !tbaa !7
  %203 = load i32, i32* %arrayidx.4.i.pre-phi, align 4, !tbaa !7
  %arrayidx4.4.i.i.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 0, i32 0, i64 4
  %204 = load i32, i32* %arrayidx.5.i.pre-phi, align 4, !tbaa !7
  %205 = load i32, i32* %arrayidx.6.i.pre-phi, align 4, !tbaa !7
  %206 = bitcast i32* %arrayidx79.i.i to <4 x i32>*
  %207 = load <4 x i32>, <4 x i32>* %206, align 8, !tbaa !7
  %208 = load i32, i32* %arrayidx.7.i.pre-phi, align 4, !tbaa !7
  %209 = insertelement <4 x i32> undef, i32 %203, i32 0
  %210 = insertelement <4 x i32> %209, i32 %204, i32 1
  %211 = insertelement <4 x i32> %210, i32 %205, i32 2
  %212 = insertelement <4 x i32> %211, i32 %208, i32 3
  %213 = add nsw <4 x i32> %212, %207
  %214 = bitcast i32* %arrayidx4.4.i.i.i to <4 x i32>*
  store <4 x i32> %213, <4 x i32>* %214, align 16, !tbaa !7
  %215 = load i32, i32* %arrayidx87.i.i, align 8, !tbaa !7
  %216 = load i32, i32* %arrayidx.8.i.pre-phi, align 4, !tbaa !7
  %add.8.i.i.i = add nsw i32 %216, %215
  %arrayidx4.8.i.i.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 0, i32 0, i64 8
  store i32 %add.8.i.i.i, i32* %arrayidx4.8.i.i.i, align 16, !tbaa !7
  %217 = load i32, i32* %arrayidx89.i.i, align 4, !tbaa !7
  %218 = load i32, i32* %arrayidx.9.i.pre-phi, align 4, !tbaa !7
  %add.9.i.i.i = add nsw i32 %218, %217
  %arrayidx4.9.i.i.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 0, i32 0, i64 9
  store i32 %add.9.i.i.i, i32* %arrayidx4.9.i.i.i, align 4, !tbaa !7
  %arraydecay3.i.155.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 0, i32 1, i64 0
  %219 = sub nsw <4 x i32> %195, %200
  %220 = bitcast i32* %arraydecay3.i.155.i to <4 x i32>*
  store <4 x i32> %219, <4 x i32>* %220, align 8, !tbaa !7
  %221 = extractelement <4 x i32> %207, i32 0
  %sub.4.i.i.72 = sub nsw i32 %221, %203
  %arrayidx4.4.i.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 0, i32 1, i64 4
  store i32 %sub.4.i.i.72, i32* %arrayidx4.4.i.i, align 8, !tbaa !7
  %222 = extractelement <4 x i32> %207, i32 1
  %sub.5.i.i.73 = sub nsw i32 %222, %204
  %arrayidx4.5.i.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 0, i32 1, i64 5
  store i32 %sub.5.i.i.73, i32* %arrayidx4.5.i.i, align 4, !tbaa !7
  %223 = extractelement <4 x i32> %207, i32 2
  %sub.6.i.i.74 = sub nsw i32 %223, %205
  %arrayidx4.6.i.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 0, i32 1, i64 6
  store i32 %sub.6.i.i.74, i32* %arrayidx4.6.i.i, align 8, !tbaa !7
  %224 = extractelement <4 x i32> %207, i32 3
  %sub.7.i.i.75 = sub nsw i32 %224, %208
  %arrayidx4.7.i.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 0, i32 1, i64 7
  store i32 %sub.7.i.i.75, i32* %arrayidx4.7.i.i, align 4, !tbaa !7
  %sub.8.i.i.76 = sub nsw i32 %215, %216
  %arrayidx4.8.i.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 0, i32 1, i64 8
  store i32 %sub.8.i.i.76, i32* %arrayidx4.8.i.i, align 8, !tbaa !7
  %sub.9.i.i.77 = sub nsw i32 %217, %218
  %arrayidx4.9.i.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 0, i32 1, i64 9
  store i32 %sub.9.i.i.77, i32* %arrayidx4.9.i.i, align 4, !tbaa !7
  %arraydecay8.i.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 0, i32 2, i64 0
  %225 = bitcast i32* %arraydecay8.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %225, i8* %22, i64 40, i32 16, i1 false) #1
  %arraydecay11.i.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 0, i32 3, i64 0
  call fastcc void @fe_mul(i32* %arraydecay11.i.i, i32* %arraydecay78.i, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @d2, i64 0, i64 0)) #1
  %226 = bitcast %struct.ge_p2* %q.i.i to i8*
  call void @llvm.lifetime.start(i64 120, i8* %226) #1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %226, i8* %0, i64 40, i32 4, i1 false) #1
  %arraydecay3.i.i.i = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %q.i.i, i64 0, i32 1, i64 0
  %227 = bitcast i32* %arraydecay3.i.i.i to i8*
  %228 = bitcast i32* %arraydecay.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %227, i8* %228, i64 40, i32 4, i1 false) #1
  %arraydecay6.i.i.i = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %q.i.i, i64 0, i32 2, i64 0
  %229 = bitcast i32* %arraydecay6.i.i.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %229, i8* %22, i64 40, i32 4, i1 false) #1
  call fastcc void @ge_p2_dbl(%struct.ge_p1p1* nonnull %t.i, %struct.ge_p2* nonnull %q.i.i) #1
  call void @llvm.lifetime.end(i64 120, i8* %226) #1
  %arraydecay.i.157.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A2.i, i64 0, i32 0, i64 0
  %arraydecay2.i.158.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 0, i64 0
  %arraydecay3.i.159.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 3, i64 0
  call fastcc void @fe_mul(i32* %arraydecay.i.157.i, i32* %arraydecay2.i.158.i, i32* %arraydecay3.i.159.i) #1
  %arraydecay4.i.160.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A2.i, i64 0, i32 1, i64 0
  %arraydecay6.i.161.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 1, i64 0
  %arraydecay7.i.162.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 2, i64 0
  call fastcc void @fe_mul(i32* %arraydecay4.i.160.i, i32* %arraydecay6.i.161.i, i32* %arraydecay7.i.162.i) #1
  %arraydecay9.i.163.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A2.i, i64 0, i32 2, i64 0
  call fastcc void @fe_mul(i32* %arraydecay9.i.163.i, i32* %arraydecay7.i.162.i, i32* %arraydecay3.i.159.i) #1
  %arraydecay15.i.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A2.i, i64 0, i32 3, i64 0
  call fastcc void @fe_mul(i32* %arraydecay15.i.i, i32* %arraydecay2.i.158.i, i32* %arraydecay6.i.161.i) #1
  call fastcc void @ge_add(%struct.ge_p1p1* nonnull %t.i, %struct.ge_p3* nonnull %A2.i, %struct.ge_cached* %arrayidx.i) #1
  %arraydecay.i.164.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %u.i.62, i64 0, i32 0, i64 0
  call fastcc void @fe_mul(i32* %arraydecay.i.164.i, i32* %arraydecay2.i.158.i, i32* %arraydecay3.i.159.i) #1
  %arraydecay4.i.167.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %u.i.62, i64 0, i32 1, i64 0
  call fastcc void @fe_mul(i32* %arraydecay4.i.167.i, i32* %arraydecay6.i.161.i, i32* %arraydecay7.i.162.i) #1
  %arraydecay9.i.170.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %u.i.62, i64 0, i32 2, i64 0
  call fastcc void @fe_mul(i32* %arraydecay9.i.170.i, i32* %arraydecay7.i.162.i, i32* %arraydecay3.i.159.i) #1
  %arraydecay15.i.171.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %u.i.62, i64 0, i32 3, i64 0
  call fastcc void @fe_mul(i32* %arraydecay15.i.171.i, i32* %arraydecay2.i.158.i, i32* %arraydecay6.i.161.i) #1
  %arrayidx3.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 1
  %230 = bitcast i32* %arraydecay4.i.167.i to <4 x i32>*
  %231 = load <4 x i32>, <4 x i32>* %230, align 8, !tbaa !7
  %232 = bitcast %struct.ge_p3* %u.i.62 to <4 x i32>*
  %233 = load <4 x i32>, <4 x i32>* %232, align 16, !tbaa !7
  %234 = add nsw <4 x i32> %233, %231
  %235 = bitcast %struct.ge_cached* %arrayidx3.i to <4 x i32>*
  store <4 x i32> %234, <4 x i32>* %235, align 16, !tbaa !7
  %arrayidx.4.i.i.188.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %u.i.62, i64 0, i32 1, i64 4
  %arrayidx2.4.i.i.189.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %u.i.62, i64 0, i32 0, i64 4
  %arrayidx4.4.i.i.191.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 1, i32 0, i64 4
  %236 = bitcast i32* %arrayidx.4.i.i.188.i to <4 x i32>*
  %237 = load <4 x i32>, <4 x i32>* %236, align 8, !tbaa !7
  %238 = bitcast i32* %arrayidx2.4.i.i.189.i to <4 x i32>*
  %239 = load <4 x i32>, <4 x i32>* %238, align 16, !tbaa !7
  %240 = add nsw <4 x i32> %239, %237
  %241 = bitcast i32* %arrayidx4.4.i.i.191.i to <4 x i32>*
  store <4 x i32> %240, <4 x i32>* %241, align 16, !tbaa !7
  %arrayidx.8.i.i.204.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %u.i.62, i64 0, i32 1, i64 8
  %242 = load i32, i32* %arrayidx.8.i.i.204.i, align 8, !tbaa !7
  %arrayidx2.8.i.i.205.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %u.i.62, i64 0, i32 0, i64 8
  %243 = load i32, i32* %arrayidx2.8.i.i.205.i, align 16, !tbaa !7
  %add.8.i.i.206.i = add nsw i32 %243, %242
  %arrayidx4.8.i.i.207.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 1, i32 0, i64 8
  store i32 %add.8.i.i.206.i, i32* %arrayidx4.8.i.i.207.i, align 16, !tbaa !7
  %arrayidx.9.i.i.208.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %u.i.62, i64 0, i32 1, i64 9
  %244 = load i32, i32* %arrayidx.9.i.i.208.i, align 4, !tbaa !7
  %arrayidx2.9.i.i.209.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %u.i.62, i64 0, i32 0, i64 9
  %245 = load i32, i32* %arrayidx2.9.i.i.209.i, align 4, !tbaa !7
  %add.9.i.i.210.i = add nsw i32 %245, %244
  %arrayidx4.9.i.i.211.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 1, i32 0, i64 9
  store i32 %add.9.i.i.210.i, i32* %arrayidx4.9.i.i.211.i, align 4, !tbaa !7
  %arraydecay3.i.212.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 1, i32 1, i64 0
  %246 = extractelement <4 x i32> %233, i32 0
  %247 = extractelement <4 x i32> %231, i32 0
  %sub.i.217.i = sub nsw i32 %247, %246
  store i32 %sub.i.217.i, i32* %arraydecay3.i.212.i, align 8, !tbaa !7
  %248 = extractelement <4 x i32> %233, i32 1
  %249 = extractelement <4 x i32> %231, i32 1
  %sub.1.i.220.i = sub nsw i32 %249, %248
  %arrayidx4.1.i.221.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 1, i32 1, i64 1
  store i32 %sub.1.i.220.i, i32* %arrayidx4.1.i.221.i, align 4, !tbaa !7
  %250 = extractelement <4 x i32> %233, i32 2
  %251 = extractelement <4 x i32> %231, i32 2
  %sub.2.i.224.i = sub nsw i32 %251, %250
  %arrayidx4.2.i.225.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 1, i32 1, i64 2
  store i32 %sub.2.i.224.i, i32* %arrayidx4.2.i.225.i, align 8, !tbaa !7
  %252 = extractelement <4 x i32> %233, i32 3
  %253 = extractelement <4 x i32> %231, i32 3
  %sub.3.i.228.i = sub nsw i32 %253, %252
  %arrayidx4.3.i.229.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 1, i32 1, i64 3
  store i32 %sub.3.i.228.i, i32* %arrayidx4.3.i.229.i, align 4, !tbaa !7
  %arrayidx4.4.i.233.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 1, i32 1, i64 4
  %254 = sub nsw <4 x i32> %237, %239
  %255 = bitcast i32* %arrayidx4.4.i.233.i to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %255, align 8, !tbaa !7
  %sub.8.i.248.i = sub nsw i32 %242, %243
  %arrayidx4.8.i.249.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 1, i32 1, i64 8
  store i32 %sub.8.i.248.i, i32* %arrayidx4.8.i.249.i, align 8, !tbaa !7
  %sub.9.i.252.i = sub nsw i32 %244, %245
  %arrayidx4.9.i.253.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 1, i32 1, i64 9
  store i32 %sub.9.i.252.i, i32* %arrayidx4.9.i.253.i, align 4, !tbaa !7
  %arraydecay8.i.213.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 1, i32 2, i64 0
  %256 = bitcast i32* %arraydecay8.i.213.i to i8*
  %257 = bitcast i32* %arraydecay9.i.170.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %256, i8* %257, i64 40, i32 16, i1 false) #1
  %arraydecay11.i.215.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 1, i32 3, i64 0
  call fastcc void @fe_mul(i32* %arraydecay11.i.215.i, i32* %arraydecay15.i.171.i, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @d2, i64 0, i64 0)) #1
  call fastcc void @ge_add(%struct.ge_p1p1* nonnull %t.i, %struct.ge_p3* nonnull %A2.i, %struct.ge_cached* %arrayidx3.i) #1
  call fastcc void @fe_mul(i32* %arraydecay.i.164.i, i32* %arraydecay2.i.158.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay4.i.167.i, i32* %arraydecay6.i.161.i, i32* %arraydecay7.i.162.i) #1
  call fastcc void @fe_mul(i32* %arraydecay9.i.170.i, i32* %arraydecay7.i.162.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay15.i.171.i, i32* %arraydecay2.i.158.i, i32* %arraydecay6.i.161.i) #1
  %arrayidx5.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 2
  %258 = bitcast i32* %arraydecay4.i.167.i to <4 x i32>*
  %259 = load <4 x i32>, <4 x i32>* %258, align 8, !tbaa !7
  %260 = bitcast %struct.ge_p3* %u.i.62 to <4 x i32>*
  %261 = load <4 x i32>, <4 x i32>* %260, align 16, !tbaa !7
  %262 = add nsw <4 x i32> %261, %259
  %263 = bitcast %struct.ge_cached* %arrayidx5.i to <4 x i32>*
  store <4 x i32> %262, <4 x i32>* %263, align 16, !tbaa !7
  %arrayidx4.4.i.i.281.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 2, i32 0, i64 4
  %264 = bitcast i32* %arrayidx.4.i.i.188.i to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 8, !tbaa !7
  %266 = bitcast i32* %arrayidx2.4.i.i.189.i to <4 x i32>*
  %267 = load <4 x i32>, <4 x i32>* %266, align 16, !tbaa !7
  %268 = add nsw <4 x i32> %267, %265
  %269 = bitcast i32* %arrayidx4.4.i.i.281.i to <4 x i32>*
  store <4 x i32> %268, <4 x i32>* %269, align 16, !tbaa !7
  %270 = load i32, i32* %arrayidx.8.i.i.204.i, align 8, !tbaa !7
  %271 = load i32, i32* %arrayidx2.8.i.i.205.i, align 16, !tbaa !7
  %add.8.i.i.296.i = add nsw i32 %271, %270
  %arrayidx4.8.i.i.297.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 2, i32 0, i64 8
  store i32 %add.8.i.i.296.i, i32* %arrayidx4.8.i.i.297.i, align 16, !tbaa !7
  %272 = load i32, i32* %arrayidx.9.i.i.208.i, align 4, !tbaa !7
  %273 = load i32, i32* %arrayidx2.9.i.i.209.i, align 4, !tbaa !7
  %add.9.i.i.300.i = add nsw i32 %273, %272
  %arrayidx4.9.i.i.301.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 2, i32 0, i64 9
  store i32 %add.9.i.i.300.i, i32* %arrayidx4.9.i.i.301.i, align 4, !tbaa !7
  %arraydecay3.i.302.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 2, i32 1, i64 0
  %274 = sub nsw <4 x i32> %259, %261
  %275 = bitcast i32* %arraydecay3.i.302.i to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %275, align 8, !tbaa !7
  %arrayidx4.4.i.323.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 2, i32 1, i64 4
  %276 = sub nsw <4 x i32> %265, %267
  %277 = bitcast i32* %arrayidx4.4.i.323.i to <4 x i32>*
  store <4 x i32> %276, <4 x i32>* %277, align 8, !tbaa !7
  %sub.8.i.338.i = sub nsw i32 %270, %271
  %arrayidx4.8.i.339.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 2, i32 1, i64 8
  store i32 %sub.8.i.338.i, i32* %arrayidx4.8.i.339.i, align 8, !tbaa !7
  %sub.9.i.342.i = sub nsw i32 %272, %273
  %arrayidx4.9.i.343.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 2, i32 1, i64 9
  store i32 %sub.9.i.342.i, i32* %arrayidx4.9.i.343.i, align 4, !tbaa !7
  %arraydecay8.i.303.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 2, i32 2, i64 0
  %278 = bitcast i32* %arraydecay8.i.303.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %278, i8* %257, i64 40, i32 16, i1 false) #1
  %arraydecay11.i.305.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 2, i32 3, i64 0
  call fastcc void @fe_mul(i32* %arraydecay11.i.305.i, i32* %arraydecay15.i.171.i, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @d2, i64 0, i64 0)) #1
  call fastcc void @ge_add(%struct.ge_p1p1* nonnull %t.i, %struct.ge_p3* nonnull %A2.i, %struct.ge_cached* %arrayidx5.i) #1
  call fastcc void @fe_mul(i32* %arraydecay.i.164.i, i32* %arraydecay2.i.158.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay4.i.167.i, i32* %arraydecay6.i.161.i, i32* %arraydecay7.i.162.i) #1
  call fastcc void @fe_mul(i32* %arraydecay9.i.170.i, i32* %arraydecay7.i.162.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay15.i.171.i, i32* %arraydecay2.i.158.i, i32* %arraydecay6.i.161.i) #1
  %arrayidx7.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 3
  %279 = bitcast i32* %arraydecay4.i.167.i to <4 x i32>*
  %280 = load <4 x i32>, <4 x i32>* %279, align 8, !tbaa !7
  %281 = bitcast %struct.ge_p3* %u.i.62 to <4 x i32>*
  %282 = load <4 x i32>, <4 x i32>* %281, align 16, !tbaa !7
  %283 = add nsw <4 x i32> %282, %280
  %284 = bitcast %struct.ge_cached* %arrayidx7.i to <4 x i32>*
  store <4 x i32> %283, <4 x i32>* %284, align 16, !tbaa !7
  %arrayidx4.4.i.i.371.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 3, i32 0, i64 4
  %285 = bitcast i32* %arrayidx.4.i.i.188.i to <4 x i32>*
  %286 = load <4 x i32>, <4 x i32>* %285, align 8, !tbaa !7
  %287 = bitcast i32* %arrayidx2.4.i.i.189.i to <4 x i32>*
  %288 = load <4 x i32>, <4 x i32>* %287, align 16, !tbaa !7
  %289 = add nsw <4 x i32> %288, %286
  %290 = bitcast i32* %arrayidx4.4.i.i.371.i to <4 x i32>*
  store <4 x i32> %289, <4 x i32>* %290, align 16, !tbaa !7
  %291 = load i32, i32* %arrayidx.8.i.i.204.i, align 8, !tbaa !7
  %292 = load i32, i32* %arrayidx2.8.i.i.205.i, align 16, !tbaa !7
  %add.8.i.i.386.i = add nsw i32 %292, %291
  %arrayidx4.8.i.i.387.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 3, i32 0, i64 8
  store i32 %add.8.i.i.386.i, i32* %arrayidx4.8.i.i.387.i, align 16, !tbaa !7
  %293 = load i32, i32* %arrayidx.9.i.i.208.i, align 4, !tbaa !7
  %294 = load i32, i32* %arrayidx2.9.i.i.209.i, align 4, !tbaa !7
  %add.9.i.i.390.i = add nsw i32 %294, %293
  %arrayidx4.9.i.i.391.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 3, i32 0, i64 9
  store i32 %add.9.i.i.390.i, i32* %arrayidx4.9.i.i.391.i, align 4, !tbaa !7
  %arraydecay3.i.392.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 3, i32 1, i64 0
  %295 = sub nsw <4 x i32> %280, %282
  %296 = bitcast i32* %arraydecay3.i.392.i to <4 x i32>*
  store <4 x i32> %295, <4 x i32>* %296, align 8, !tbaa !7
  %arrayidx4.4.i.413.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 3, i32 1, i64 4
  %297 = sub nsw <4 x i32> %286, %288
  %298 = bitcast i32* %arrayidx4.4.i.413.i to <4 x i32>*
  store <4 x i32> %297, <4 x i32>* %298, align 8, !tbaa !7
  %sub.8.i.428.i = sub nsw i32 %291, %292
  %arrayidx4.8.i.429.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 3, i32 1, i64 8
  store i32 %sub.8.i.428.i, i32* %arrayidx4.8.i.429.i, align 8, !tbaa !7
  %sub.9.i.432.i = sub nsw i32 %293, %294
  %arrayidx4.9.i.433.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 3, i32 1, i64 9
  store i32 %sub.9.i.432.i, i32* %arrayidx4.9.i.433.i, align 4, !tbaa !7
  %arraydecay8.i.393.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 3, i32 2, i64 0
  %299 = bitcast i32* %arraydecay8.i.393.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %299, i8* %257, i64 40, i32 16, i1 false) #1
  %arraydecay11.i.395.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 3, i32 3, i64 0
  call fastcc void @fe_mul(i32* %arraydecay11.i.395.i, i32* %arraydecay15.i.171.i, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @d2, i64 0, i64 0)) #1
  call fastcc void @ge_add(%struct.ge_p1p1* nonnull %t.i, %struct.ge_p3* nonnull %A2.i, %struct.ge_cached* %arrayidx7.i) #1
  call fastcc void @fe_mul(i32* %arraydecay.i.164.i, i32* %arraydecay2.i.158.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay4.i.167.i, i32* %arraydecay6.i.161.i, i32* %arraydecay7.i.162.i) #1
  call fastcc void @fe_mul(i32* %arraydecay9.i.170.i, i32* %arraydecay7.i.162.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay15.i.171.i, i32* %arraydecay2.i.158.i, i32* %arraydecay6.i.161.i) #1
  %arrayidx9.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 4
  %300 = bitcast i32* %arraydecay4.i.167.i to <4 x i32>*
  %301 = load <4 x i32>, <4 x i32>* %300, align 8, !tbaa !7
  %302 = bitcast %struct.ge_p3* %u.i.62 to <4 x i32>*
  %303 = load <4 x i32>, <4 x i32>* %302, align 16, !tbaa !7
  %304 = add nsw <4 x i32> %303, %301
  %305 = bitcast %struct.ge_cached* %arrayidx9.i to <4 x i32>*
  store <4 x i32> %304, <4 x i32>* %305, align 16, !tbaa !7
  %arrayidx4.4.i.i.461.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 4, i32 0, i64 4
  %306 = bitcast i32* %arrayidx.4.i.i.188.i to <4 x i32>*
  %307 = load <4 x i32>, <4 x i32>* %306, align 8, !tbaa !7
  %308 = bitcast i32* %arrayidx2.4.i.i.189.i to <4 x i32>*
  %309 = load <4 x i32>, <4 x i32>* %308, align 16, !tbaa !7
  %310 = add nsw <4 x i32> %309, %307
  %311 = bitcast i32* %arrayidx4.4.i.i.461.i to <4 x i32>*
  store <4 x i32> %310, <4 x i32>* %311, align 16, !tbaa !7
  %312 = load i32, i32* %arrayidx.8.i.i.204.i, align 8, !tbaa !7
  %313 = load i32, i32* %arrayidx2.8.i.i.205.i, align 16, !tbaa !7
  %add.8.i.i.476.i = add nsw i32 %313, %312
  %arrayidx4.8.i.i.477.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 4, i32 0, i64 8
  store i32 %add.8.i.i.476.i, i32* %arrayidx4.8.i.i.477.i, align 16, !tbaa !7
  %314 = load i32, i32* %arrayidx.9.i.i.208.i, align 4, !tbaa !7
  %315 = load i32, i32* %arrayidx2.9.i.i.209.i, align 4, !tbaa !7
  %add.9.i.i.480.i = add nsw i32 %315, %314
  %arrayidx4.9.i.i.481.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 4, i32 0, i64 9
  store i32 %add.9.i.i.480.i, i32* %arrayidx4.9.i.i.481.i, align 4, !tbaa !7
  %arraydecay3.i.482.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 4, i32 1, i64 0
  %316 = sub nsw <4 x i32> %301, %303
  %317 = bitcast i32* %arraydecay3.i.482.i to <4 x i32>*
  store <4 x i32> %316, <4 x i32>* %317, align 8, !tbaa !7
  %318 = extractelement <4 x i32> %309, i32 0
  %319 = extractelement <4 x i32> %307, i32 0
  %sub.4.i.502.i = sub nsw i32 %319, %318
  %arrayidx4.4.i.503.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 4, i32 1, i64 4
  store i32 %sub.4.i.502.i, i32* %arrayidx4.4.i.503.i, align 8, !tbaa !7
  %320 = extractelement <4 x i32> %309, i32 1
  %321 = extractelement <4 x i32> %307, i32 1
  %sub.5.i.506.i = sub nsw i32 %321, %320
  %arrayidx4.5.i.507.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 4, i32 1, i64 5
  store i32 %sub.5.i.506.i, i32* %arrayidx4.5.i.507.i, align 4, !tbaa !7
  %322 = extractelement <4 x i32> %309, i32 2
  %323 = extractelement <4 x i32> %307, i32 2
  %sub.6.i.510.i = sub nsw i32 %323, %322
  %arrayidx4.6.i.511.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 4, i32 1, i64 6
  store i32 %sub.6.i.510.i, i32* %arrayidx4.6.i.511.i, align 8, !tbaa !7
  %324 = extractelement <4 x i32> %309, i32 3
  %325 = extractelement <4 x i32> %307, i32 3
  %sub.7.i.514.i = sub nsw i32 %325, %324
  %arrayidx4.7.i.515.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 4, i32 1, i64 7
  store i32 %sub.7.i.514.i, i32* %arrayidx4.7.i.515.i, align 4, !tbaa !7
  %sub.8.i.518.i = sub nsw i32 %312, %313
  %arrayidx4.8.i.519.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 4, i32 1, i64 8
  store i32 %sub.8.i.518.i, i32* %arrayidx4.8.i.519.i, align 8, !tbaa !7
  %sub.9.i.522.i = sub nsw i32 %314, %315
  %arrayidx4.9.i.523.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 4, i32 1, i64 9
  store i32 %sub.9.i.522.i, i32* %arrayidx4.9.i.523.i, align 4, !tbaa !7
  %arraydecay8.i.483.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 4, i32 2, i64 0
  %326 = bitcast i32* %arraydecay8.i.483.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %326, i8* %257, i64 40, i32 16, i1 false) #1
  %arraydecay11.i.485.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 4, i32 3, i64 0
  call fastcc void @fe_mul(i32* %arraydecay11.i.485.i, i32* %arraydecay15.i.171.i, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @d2, i64 0, i64 0)) #1
  call fastcc void @ge_add(%struct.ge_p1p1* nonnull %t.i, %struct.ge_p3* nonnull %A2.i, %struct.ge_cached* %arrayidx9.i) #1
  call fastcc void @fe_mul(i32* %arraydecay.i.164.i, i32* %arraydecay2.i.158.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay4.i.167.i, i32* %arraydecay6.i.161.i, i32* %arraydecay7.i.162.i) #1
  call fastcc void @fe_mul(i32* %arraydecay9.i.170.i, i32* %arraydecay7.i.162.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay15.i.171.i, i32* %arraydecay2.i.158.i, i32* %arraydecay6.i.161.i) #1
  %arrayidx11.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 5
  %327 = bitcast i32* %arraydecay4.i.167.i to <4 x i32>*
  %328 = load <4 x i32>, <4 x i32>* %327, align 8, !tbaa !7
  %329 = bitcast %struct.ge_p3* %u.i.62 to <4 x i32>*
  %330 = load <4 x i32>, <4 x i32>* %329, align 16, !tbaa !7
  %331 = add nsw <4 x i32> %330, %328
  %332 = bitcast %struct.ge_cached* %arrayidx11.i to <4 x i32>*
  store <4 x i32> %331, <4 x i32>* %332, align 16, !tbaa !7
  %arrayidx4.4.i.i.551.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 5, i32 0, i64 4
  %333 = bitcast i32* %arrayidx.4.i.i.188.i to <4 x i32>*
  %334 = load <4 x i32>, <4 x i32>* %333, align 8, !tbaa !7
  %335 = bitcast i32* %arrayidx2.4.i.i.189.i to <4 x i32>*
  %336 = load <4 x i32>, <4 x i32>* %335, align 16, !tbaa !7
  %337 = add nsw <4 x i32> %336, %334
  %338 = bitcast i32* %arrayidx4.4.i.i.551.i to <4 x i32>*
  store <4 x i32> %337, <4 x i32>* %338, align 16, !tbaa !7
  %339 = load i32, i32* %arrayidx.8.i.i.204.i, align 8, !tbaa !7
  %340 = load i32, i32* %arrayidx2.8.i.i.205.i, align 16, !tbaa !7
  %add.8.i.i.566.i = add nsw i32 %340, %339
  %arrayidx4.8.i.i.567.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 5, i32 0, i64 8
  store i32 %add.8.i.i.566.i, i32* %arrayidx4.8.i.i.567.i, align 16, !tbaa !7
  %341 = load i32, i32* %arrayidx.9.i.i.208.i, align 4, !tbaa !7
  %342 = load i32, i32* %arrayidx2.9.i.i.209.i, align 4, !tbaa !7
  %add.9.i.i.570.i = add nsw i32 %342, %341
  %arrayidx4.9.i.i.571.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 5, i32 0, i64 9
  store i32 %add.9.i.i.570.i, i32* %arrayidx4.9.i.i.571.i, align 4, !tbaa !7
  %arraydecay3.i.572.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 5, i32 1, i64 0
  %343 = extractelement <4 x i32> %330, i32 0
  %344 = extractelement <4 x i32> %328, i32 0
  %sub.i.577.i = sub nsw i32 %344, %343
  store i32 %sub.i.577.i, i32* %arraydecay3.i.572.i, align 8, !tbaa !7
  %345 = extractelement <4 x i32> %330, i32 1
  %346 = extractelement <4 x i32> %328, i32 1
  %sub.1.i.580.i = sub nsw i32 %346, %345
  %arrayidx4.1.i.581.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 5, i32 1, i64 1
  store i32 %sub.1.i.580.i, i32* %arrayidx4.1.i.581.i, align 4, !tbaa !7
  %347 = extractelement <4 x i32> %330, i32 2
  %348 = extractelement <4 x i32> %328, i32 2
  %sub.2.i.584.i = sub nsw i32 %348, %347
  %arrayidx4.2.i.585.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 5, i32 1, i64 2
  store i32 %sub.2.i.584.i, i32* %arrayidx4.2.i.585.i, align 8, !tbaa !7
  %349 = extractelement <4 x i32> %330, i32 3
  %350 = extractelement <4 x i32> %328, i32 3
  %sub.3.i.588.i = sub nsw i32 %350, %349
  %arrayidx4.3.i.589.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 5, i32 1, i64 3
  store i32 %sub.3.i.588.i, i32* %arrayidx4.3.i.589.i, align 4, !tbaa !7
  %arrayidx4.4.i.593.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 5, i32 1, i64 4
  %351 = sub nsw <4 x i32> %334, %336
  %352 = bitcast i32* %arrayidx4.4.i.593.i to <4 x i32>*
  store <4 x i32> %351, <4 x i32>* %352, align 8, !tbaa !7
  %sub.8.i.608.i = sub nsw i32 %339, %340
  %arrayidx4.8.i.609.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 5, i32 1, i64 8
  store i32 %sub.8.i.608.i, i32* %arrayidx4.8.i.609.i, align 8, !tbaa !7
  %sub.9.i.612.i = sub nsw i32 %341, %342
  %arrayidx4.9.i.613.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 5, i32 1, i64 9
  store i32 %sub.9.i.612.i, i32* %arrayidx4.9.i.613.i, align 4, !tbaa !7
  %arraydecay8.i.573.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 5, i32 2, i64 0
  %353 = bitcast i32* %arraydecay8.i.573.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %353, i8* %257, i64 40, i32 16, i1 false) #1
  %arraydecay11.i.575.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 5, i32 3, i64 0
  call fastcc void @fe_mul(i32* %arraydecay11.i.575.i, i32* %arraydecay15.i.171.i, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @d2, i64 0, i64 0)) #1
  call fastcc void @ge_add(%struct.ge_p1p1* nonnull %t.i, %struct.ge_p3* nonnull %A2.i, %struct.ge_cached* %arrayidx11.i) #1
  call fastcc void @fe_mul(i32* %arraydecay.i.164.i, i32* %arraydecay2.i.158.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay4.i.167.i, i32* %arraydecay6.i.161.i, i32* %arraydecay7.i.162.i) #1
  call fastcc void @fe_mul(i32* %arraydecay9.i.170.i, i32* %arraydecay7.i.162.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay15.i.171.i, i32* %arraydecay2.i.158.i, i32* %arraydecay6.i.161.i) #1
  %arrayidx13.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 6
  %354 = bitcast i32* %arraydecay4.i.167.i to <4 x i32>*
  %355 = load <4 x i32>, <4 x i32>* %354, align 8, !tbaa !7
  %356 = bitcast %struct.ge_p3* %u.i.62 to <4 x i32>*
  %357 = load <4 x i32>, <4 x i32>* %356, align 16, !tbaa !7
  %358 = add nsw <4 x i32> %357, %355
  %359 = bitcast %struct.ge_cached* %arrayidx13.i to <4 x i32>*
  store <4 x i32> %358, <4 x i32>* %359, align 16, !tbaa !7
  %arrayidx4.4.i.i.641.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 6, i32 0, i64 4
  %360 = bitcast i32* %arrayidx.4.i.i.188.i to <4 x i32>*
  %361 = load <4 x i32>, <4 x i32>* %360, align 8, !tbaa !7
  %362 = bitcast i32* %arrayidx2.4.i.i.189.i to <4 x i32>*
  %363 = load <4 x i32>, <4 x i32>* %362, align 16, !tbaa !7
  %364 = add nsw <4 x i32> %363, %361
  %365 = bitcast i32* %arrayidx4.4.i.i.641.i to <4 x i32>*
  store <4 x i32> %364, <4 x i32>* %365, align 16, !tbaa !7
  %366 = load i32, i32* %arrayidx.8.i.i.204.i, align 8, !tbaa !7
  %367 = load i32, i32* %arrayidx2.8.i.i.205.i, align 16, !tbaa !7
  %add.8.i.i.656.i = add nsw i32 %367, %366
  %arrayidx4.8.i.i.657.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 6, i32 0, i64 8
  store i32 %add.8.i.i.656.i, i32* %arrayidx4.8.i.i.657.i, align 16, !tbaa !7
  %368 = load i32, i32* %arrayidx.9.i.i.208.i, align 4, !tbaa !7
  %369 = load i32, i32* %arrayidx2.9.i.i.209.i, align 4, !tbaa !7
  %add.9.i.i.660.i = add nsw i32 %369, %368
  %arrayidx4.9.i.i.661.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 6, i32 0, i64 9
  store i32 %add.9.i.i.660.i, i32* %arrayidx4.9.i.i.661.i, align 4, !tbaa !7
  %arraydecay3.i.662.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 6, i32 1, i64 0
  %370 = sub nsw <4 x i32> %355, %357
  %371 = bitcast i32* %arraydecay3.i.662.i to <4 x i32>*
  store <4 x i32> %370, <4 x i32>* %371, align 8, !tbaa !7
  %arrayidx4.4.i.683.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 6, i32 1, i64 4
  %372 = sub nsw <4 x i32> %361, %363
  %373 = bitcast i32* %arrayidx4.4.i.683.i to <4 x i32>*
  store <4 x i32> %372, <4 x i32>* %373, align 8, !tbaa !7
  %sub.8.i.698.i = sub nsw i32 %366, %367
  %arrayidx4.8.i.699.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 6, i32 1, i64 8
  store i32 %sub.8.i.698.i, i32* %arrayidx4.8.i.699.i, align 8, !tbaa !7
  %sub.9.i.702.i = sub nsw i32 %368, %369
  %arrayidx4.9.i.703.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 6, i32 1, i64 9
  store i32 %sub.9.i.702.i, i32* %arrayidx4.9.i.703.i, align 4, !tbaa !7
  %arraydecay8.i.663.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 6, i32 2, i64 0
  %374 = bitcast i32* %arraydecay8.i.663.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %374, i8* %257, i64 40, i32 16, i1 false) #1
  %arraydecay11.i.665.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 6, i32 3, i64 0
  call fastcc void @fe_mul(i32* %arraydecay11.i.665.i, i32* %arraydecay15.i.171.i, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @d2, i64 0, i64 0)) #1
  call fastcc void @ge_add(%struct.ge_p1p1* nonnull %t.i, %struct.ge_p3* nonnull %A2.i, %struct.ge_cached* %arrayidx13.i) #1
  call fastcc void @fe_mul(i32* %arraydecay.i.164.i, i32* %arraydecay2.i.158.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay4.i.167.i, i32* %arraydecay6.i.161.i, i32* %arraydecay7.i.162.i) #1
  call fastcc void @fe_mul(i32* %arraydecay9.i.170.i, i32* %arraydecay7.i.162.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay15.i.171.i, i32* %arraydecay2.i.158.i, i32* %arraydecay6.i.161.i) #1
  %arraydecay.i.712.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 7, i32 0, i64 0
  %375 = bitcast i32* %arraydecay4.i.167.i to <4 x i32>*
  %376 = load <4 x i32>, <4 x i32>* %375, align 8, !tbaa !7
  %377 = bitcast %struct.ge_p3* %u.i.62 to <4 x i32>*
  %378 = load <4 x i32>, <4 x i32>* %377, align 16, !tbaa !7
  %379 = add nsw <4 x i32> %378, %376
  %380 = bitcast i32* %arraydecay.i.712.i to <4 x i32>*
  store <4 x i32> %379, <4 x i32>* %380, align 16, !tbaa !7
  %arrayidx4.4.i.i.731.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 7, i32 0, i64 4
  %381 = bitcast i32* %arrayidx.4.i.i.188.i to <4 x i32>*
  %382 = load <4 x i32>, <4 x i32>* %381, align 8, !tbaa !7
  %383 = bitcast i32* %arrayidx2.4.i.i.189.i to <4 x i32>*
  %384 = load <4 x i32>, <4 x i32>* %383, align 16, !tbaa !7
  %385 = add nsw <4 x i32> %384, %382
  %386 = bitcast i32* %arrayidx4.4.i.i.731.i to <4 x i32>*
  store <4 x i32> %385, <4 x i32>* %386, align 16, !tbaa !7
  %387 = load i32, i32* %arrayidx.8.i.i.204.i, align 8, !tbaa !7
  %388 = load i32, i32* %arrayidx2.8.i.i.205.i, align 16, !tbaa !7
  %add.8.i.i.746.i = add nsw i32 %388, %387
  %arrayidx4.8.i.i.747.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 7, i32 0, i64 8
  store i32 %add.8.i.i.746.i, i32* %arrayidx4.8.i.i.747.i, align 16, !tbaa !7
  %389 = load i32, i32* %arrayidx.9.i.i.208.i, align 4, !tbaa !7
  %390 = load i32, i32* %arrayidx2.9.i.i.209.i, align 4, !tbaa !7
  %add.9.i.i.750.i = add nsw i32 %390, %389
  %arrayidx4.9.i.i.751.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 7, i32 0, i64 9
  store i32 %add.9.i.i.750.i, i32* %arrayidx4.9.i.i.751.i, align 4, !tbaa !7
  %arraydecay3.i.752.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 7, i32 1, i64 0
  %391 = sub nsw <4 x i32> %376, %378
  %392 = bitcast i32* %arraydecay3.i.752.i to <4 x i32>*
  store <4 x i32> %391, <4 x i32>* %392, align 8, !tbaa !7
  %arrayidx4.4.i.773.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 7, i32 1, i64 4
  %393 = sub nsw <4 x i32> %382, %384
  %394 = bitcast i32* %arrayidx4.4.i.773.i to <4 x i32>*
  store <4 x i32> %393, <4 x i32>* %394, align 8, !tbaa !7
  %sub.8.i.788.i = sub nsw i32 %387, %388
  %arrayidx4.8.i.789.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 7, i32 1, i64 8
  store i32 %sub.8.i.788.i, i32* %arrayidx4.8.i.789.i, align 8, !tbaa !7
  %sub.9.i.792.i = sub nsw i32 %389, %390
  %arrayidx4.9.i.793.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 7, i32 1, i64 9
  store i32 %sub.9.i.792.i, i32* %arrayidx4.9.i.793.i, align 4, !tbaa !7
  %arraydecay8.i.753.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 7, i32 2, i64 0
  %395 = bitcast i32* %arraydecay8.i.753.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %395, i8* %257, i64 40, i32 16, i1 false) #1
  %arraydecay11.i.755.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 7, i32 3, i64 0
  call fastcc void @fe_mul(i32* %arraydecay11.i.755.i, i32* %arraydecay15.i.171.i, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @d2, i64 0, i64 0)) #1
  %arraydecay1.i.794.i = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %R, i64 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 80, i32 4, i1 false) #1
  store i32 1, i32* %arraydecay1.i.794.i, align 4, !tbaa !7
  %arraydecay2.i.795.i = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %R, i64 0, i32 2, i64 0
  %396 = bitcast i32* %arraydecay2.i.795.i to i8*
  call void @llvm.memset.p0i8.i64(i8* %396, i8 0, i64 40, i32 4, i1 false) #1
  store i32 1, i32* %arraydecay2.i.795.i, align 4, !tbaa !7
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.1, %slide.exit152.i
  %indvars.iv933.i = phi i64 [ 255, %slide.exit152.i ], [ %indvars.iv.next934.i.1, %for.inc.i.1 ]
  %i.0930.i = phi i32 [ 255, %slide.exit152.i ], [ %dec.i.1, %for.inc.i.1 ]
  %arrayidx16.i = getelementptr inbounds [256 x i8], [256 x i8]* %aslide.i, i64 0, i64 %indvars.iv933.i
  %397 = load i8, i8* %arrayidx16.i, align 1, !tbaa !2
  %tobool.i = icmp eq i8 %397, 0
  %398 = trunc i64 %indvars.iv933.i to i32
  br i1 %tobool.i, label %lor.lhs.false.i, label %for.cond.21.preheader.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %arrayidx18.i = getelementptr inbounds [256 x i8], [256 x i8]* %bslide.i, i64 0, i64 %indvars.iv933.i
  %399 = load i8, i8* %arrayidx18.i, align 1, !tbaa !2
  %tobool20.i = icmp eq i8 %399, 0
  br i1 %tobool20.i, label %for.inc.i, label %for.cond.21.preheader.i

for.cond.21.preheader.i:                          ; preds = %for.inc.i.1, %lor.lhs.false.i.1, %for.inc.i, %lor.lhs.false.i, %for.body.i
  %i.0.lcssa.i = phi i32 [ %398, %for.body.i ], [ %398, %lor.lhs.false.i ], [ %446, %for.inc.i ], [ %446, %lor.lhs.false.i.1 ], [ %dec.i.1, %for.inc.i.1 ]
  %cmp22.928.i = icmp sgt i32 %i.0.lcssa.i, -1
  %arraydecay.i.i.78 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %R, i64 0, i32 0, i64 0
  br i1 %cmp22.928.i, label %for.body.24.lr.ph.i, label %ge_double_scalarmult_vartime.exit

for.body.24.lr.ph.i:                              ; preds = %for.cond.21.preheader.i
  %arrayidx4.4.i.i.888.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 0, i64 4
  %arrayidx4.8.i.i.904.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 0, i64 8
  %arrayidx4.9.i.i.908.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 0, i64 9
  %arrayidx4.1.i.253.i.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 1, i64 1
  %arrayidx4.2.i.257.i.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 1, i64 2
  %arrayidx4.3.i.261.i.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 1, i64 3
  %arrayidx4.4.i.265.i.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 1, i64 4
  %arrayidx4.5.i.269.i.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 1, i64 5
  %arrayidx4.6.i.273.i.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 1, i64 6
  %arrayidx4.7.i.277.i.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 1, i64 7
  %arrayidx4.8.i.281.i.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 1, i64 8
  %arrayidx4.9.i.285.i.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 1, i64 9
  %arrayidx.4.i.225.i.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %u.i.62, i64 0, i32 2, i64 4
  %arrayidx.8.i.241.i.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %u.i.62, i64 0, i32 2, i64 8
  %arrayidx.9.i.245.i.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %u.i.62, i64 0, i32 2, i64 9
  %arrayidx.4.i.188.i.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 2, i64 4
  %arrayidx.8.i.204.i.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 2, i64 8
  %arrayidx.9.i.208.i.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 2, i64 9
  %arrayidx2.4.i.121.i.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 3, i64 4
  %arrayidx2.8.i.133.i.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 3, i64 8
  %arrayidx2.9.i.136.i.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %t.i, i64 0, i32 3, i64 9
  %400 = sext i32 %i.0.lcssa.i to i64
  %401 = bitcast i32* %arraydecay4.i.167.i to <4 x i32>*
  %402 = bitcast %struct.ge_p3* %u.i.62 to <4 x i32>*
  %403 = bitcast %struct.ge_p1p1* %t.i to <4 x i32>*
  %404 = bitcast i32* %arrayidx.4.i.i.188.i to <4 x i32>*
  %405 = bitcast i32* %arrayidx2.4.i.i.189.i to <4 x i32>*
  %406 = bitcast i32* %arrayidx4.4.i.i.888.i to <4 x i32>*
  %407 = bitcast i32* %arraydecay6.i.161.i to <4 x i32>*
  %408 = bitcast i32* %arraydecay9.i.170.i to <4 x i32>*
  %409 = bitcast i32* %arrayidx.4.i.225.i.i to <4 x i32>*
  %410 = bitcast i32* %arraydecay7.i.162.i to <4 x i32>*
  %411 = bitcast i32* %arraydecay6.i.161.i to <4 x i32>*
  %412 = bitcast %struct.ge_p1p1* %t.i to <4 x i32>*
  %413 = bitcast i32* %arrayidx.4.i.188.i.i to <4 x i32>*
  %414 = bitcast i32* %arrayidx4.4.i.265.i.i to <4 x i32>*
  %415 = bitcast i32* %arrayidx4.4.i.i.888.i to <4 x i32>*
  %416 = bitcast i32* %arrayidx4.4.i.265.i.i to <4 x i32>*
  %417 = bitcast i32* %arraydecay3.i.159.i to <4 x i32>*
  %418 = bitcast i32* %arraydecay7.i.162.i to <4 x i32>*
  %419 = bitcast i32* %arrayidx2.4.i.121.i.i to <4 x i32>*
  %420 = bitcast i32* %arrayidx.4.i.188.i.i to <4 x i32>*
  %421 = bitcast i32* %arraydecay3.i.159.i to <4 x i32>*
  %422 = bitcast i32* %arrayidx2.4.i.121.i.i to <4 x i32>*
  %423 = bitcast i32* %arraydecay4.i.167.i to <4 x i32>*
  %424 = bitcast %struct.ge_p3* %u.i.62 to <4 x i32>*
  %425 = bitcast %struct.ge_p1p1* %t.i to <4 x i32>*
  %426 = bitcast i32* %arrayidx.4.i.i.188.i to <4 x i32>*
  %427 = bitcast i32* %arrayidx2.4.i.i.189.i to <4 x i32>*
  %428 = bitcast i32* %arrayidx4.4.i.i.888.i to <4 x i32>*
  %429 = bitcast i32* %arraydecay6.i.161.i to <4 x i32>*
  %430 = bitcast %struct.ge_p1p1* %t.i to <4 x i32>*
  %431 = bitcast i32* %arrayidx4.4.i.i.888.i to <4 x i32>*
  %432 = bitcast i32* %arraydecay7.i.162.i to <4 x i32>*
  %433 = bitcast i32* %arraydecay6.i.161.i to <4 x i32>*
  %434 = bitcast %struct.ge_p1p1* %t.i to <4 x i32>*
  %435 = bitcast i32* %arrayidx.4.i.188.i.i to <4 x i32>*
  %436 = bitcast i32* %arrayidx4.4.i.265.i.i to <4 x i32>*
  %437 = bitcast i32* %arrayidx4.4.i.i.888.i to <4 x i32>*
  %438 = bitcast i32* %arrayidx4.4.i.265.i.i to <4 x i32>*
  %439 = bitcast i32* %arraydecay3.i.159.i to <4 x i32>*
  %440 = bitcast i32* %arraydecay7.i.162.i to <4 x i32>*
  %441 = bitcast i32* %arrayidx2.4.i.121.i.i to <4 x i32>*
  %442 = bitcast i32* %arrayidx.4.i.188.i.i to <4 x i32>*
  %443 = bitcast i32* %arraydecay3.i.159.i to <4 x i32>*
  %444 = bitcast i32* %arrayidx2.4.i.121.i.i to <4 x i32>*
  br label %for.body.24.i

for.inc.i:                                        ; preds = %lor.lhs.false.i
  %indvars.iv.next934.i = add nsw i64 %indvars.iv933.i, -1
  %arrayidx16.i.1 = getelementptr inbounds [256 x i8], [256 x i8]* %aslide.i, i64 0, i64 %indvars.iv.next934.i
  %445 = load i8, i8* %arrayidx16.i.1, align 1, !tbaa !2
  %tobool.i.1 = icmp eq i8 %445, 0
  %446 = trunc i64 %indvars.iv.next934.i to i32
  br i1 %tobool.i.1, label %lor.lhs.false.i.1, label %for.cond.21.preheader.i

for.body.24.i:                                    ; preds = %if.end.77.i.80, %for.body.24.lr.ph.i
  %indvars.iv.i = phi i64 [ %400, %for.body.24.lr.ph.i ], [ %indvars.iv.next.i, %if.end.77.i.80 ]
  call fastcc void @ge_p2_dbl(%struct.ge_p1p1* nonnull %t.i, %struct.ge_p2* nonnull %R) #1
  %arrayidx26.i = getelementptr inbounds [256 x i8], [256 x i8]* %aslide.i, i64 0, i64 %indvars.iv.i
  %447 = load i8, i8* %arrayidx26.i, align 1, !tbaa !2
  %cmp28.i = icmp sgt i8 %447, 0
  br i1 %cmp28.i, label %if.then.30.i, label %if.else.i

if.then.30.i:                                     ; preds = %for.body.24.i
  call fastcc void @fe_mul(i32* %arraydecay.i.164.i, i32* %arraydecay2.i.158.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay4.i.167.i, i32* %arraydecay6.i.161.i, i32* %arraydecay7.i.162.i) #1
  call fastcc void @fe_mul(i32* %arraydecay9.i.170.i, i32* %arraydecay7.i.162.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay15.i.171.i, i32* %arraydecay2.i.158.i, i32* %arraydecay6.i.161.i) #1
  %conv33.i = sext i8 %447 to i32
  %div.i = sdiv i32 %conv33.i, 2
  %idxprom34.i = sext i32 %div.i to i64
  %arrayidx35.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 %idxprom34.i
  call fastcc void @ge_add(%struct.ge_p1p1* nonnull %t.i, %struct.ge_p3* nonnull %u.i.62, %struct.ge_cached* %arrayidx35.i) #1
  br label %if.end.49.i

if.else.i:                                        ; preds = %for.body.24.i
  %cmp39.i = icmp slt i8 %447, 0
  br i1 %cmp39.i, label %if.then.41.i, label %if.end.49.i

if.then.41.i:                                     ; preds = %if.else.i
  call fastcc void @fe_mul(i32* %arraydecay.i.164.i, i32* %arraydecay2.i.158.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay4.i.167.i, i32* %arraydecay6.i.161.i, i32* %arraydecay7.i.162.i) #1
  call fastcc void @fe_mul(i32* %arraydecay9.i.170.i, i32* %arraydecay7.i.162.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay15.i.171.i, i32* %arraydecay2.i.158.i, i32* %arraydecay6.i.161.i) #1
  %conv44.i = sext i8 %447 to i32
  %div45.i = sdiv i32 %conv44.i, -2
  %idxprom46.i = sext i32 %div45.i to i64
  %448 = load <4 x i32>, <4 x i32>* %423, align 8, !tbaa !7
  %449 = load <4 x i32>, <4 x i32>* %424, align 16, !tbaa !7
  %450 = add nsw <4 x i32> %449, %448
  store <4 x i32> %450, <4 x i32>* %425, align 16, !tbaa !7
  %451 = load <4 x i32>, <4 x i32>* %426, align 8, !tbaa !7
  %452 = load <4 x i32>, <4 x i32>* %427, align 16, !tbaa !7
  %453 = add nsw <4 x i32> %452, %451
  store <4 x i32> %453, <4 x i32>* %428, align 16, !tbaa !7
  %454 = load i32, i32* %arrayidx.8.i.i.204.i, align 8, !tbaa !7
  %455 = load i32, i32* %arrayidx2.8.i.i.205.i, align 16, !tbaa !7
  %add.8.i.i.846.i = add nsw i32 %455, %454
  store i32 %add.8.i.i.846.i, i32* %arrayidx4.8.i.i.904.i, align 16, !tbaa !7
  %456 = load i32, i32* %arrayidx.9.i.i.208.i, align 4, !tbaa !7
  %457 = load i32, i32* %arrayidx2.9.i.i.209.i, align 4, !tbaa !7
  %add.9.i.i.850.i = add nsw i32 %457, %456
  store i32 %add.9.i.i.850.i, i32* %arrayidx4.9.i.i.908.i, align 4, !tbaa !7
  %458 = sub nsw <4 x i32> %448, %449
  store <4 x i32> %458, <4 x i32>* %429, align 8, !tbaa !7
  %459 = extractelement <4 x i32> %452, i32 0
  %460 = extractelement <4 x i32> %451, i32 0
  %sub.4.i.273.i.i = sub nsw i32 %460, %459
  store i32 %sub.4.i.273.i.i, i32* %arrayidx4.4.i.265.i.i, align 8, !tbaa !7
  %461 = extractelement <4 x i32> %452, i32 1
  %462 = extractelement <4 x i32> %451, i32 1
  %sub.5.i.277.i.i = sub nsw i32 %462, %461
  store i32 %sub.5.i.277.i.i, i32* %arrayidx4.5.i.269.i.i, align 4, !tbaa !7
  %463 = extractelement <4 x i32> %452, i32 2
  %464 = extractelement <4 x i32> %451, i32 2
  %sub.6.i.281.i.i = sub nsw i32 %464, %463
  store i32 %sub.6.i.281.i.i, i32* %arrayidx4.6.i.273.i.i, align 8, !tbaa !7
  %465 = extractelement <4 x i32> %452, i32 3
  %466 = extractelement <4 x i32> %451, i32 3
  %sub.7.i.285.i.i = sub nsw i32 %466, %465
  store i32 %sub.7.i.285.i.i, i32* %arrayidx4.7.i.277.i.i, align 4, !tbaa !7
  %sub.8.i.289.i.i = sub nsw i32 %454, %455
  store i32 %sub.8.i.289.i.i, i32* %arrayidx4.8.i.281.i.i, align 8, !tbaa !7
  %sub.9.i.293.i.i = sub nsw i32 %456, %457
  store i32 %sub.9.i.293.i.i, i32* %arrayidx4.9.i.285.i.i, align 4, !tbaa !7
  %arraydecay13.i.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 %idxprom46.i, i32 1, i64 0
  call fastcc void @fe_mul(i32* %arraydecay7.i.162.i, i32* %arraydecay2.i.158.i, i32* %arraydecay13.i.i) #1
  %arraydecay18.i.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 %idxprom46.i, i32 0, i64 0
  call fastcc void @fe_mul(i32* %arraydecay6.i.161.i, i32* %arraydecay6.i.161.i, i32* %arraydecay18.i.i) #1
  %arraydecay20.i.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 %idxprom46.i, i32 3, i64 0
  call fastcc void @fe_mul(i32* %arraydecay3.i.159.i, i32* %arraydecay20.i.i, i32* %arraydecay15.i.171.i) #1
  %arraydecay28.i.i = getelementptr inbounds [8 x %struct.ge_cached], [8 x %struct.ge_cached]* %Ai.i, i64 0, i64 %idxprom46.i, i32 2, i64 0
  call fastcc void @fe_mul(i32* %arraydecay2.i.158.i, i32* %arraydecay9.i.170.i, i32* %arraydecay28.i.i) #1
  %467 = load <4 x i32>, <4 x i32>* %430, align 16, !tbaa !7
  %468 = shl nsw <4 x i32> %467, <i32 1, i32 1, i32 1, i32 1>
  %469 = load <4 x i32>, <4 x i32>* %431, align 16, !tbaa !7
  %470 = shl nsw <4 x i32> %469, <i32 1, i32 1, i32 1, i32 1>
  %471 = load i32, i32* %arrayidx4.8.i.i.904.i, align 16, !tbaa !7
  %add.8.i.252.i.i = shl nsw i32 %471, 1
  %472 = load i32, i32* %arrayidx4.9.i.i.908.i, align 4, !tbaa !7
  %add.9.i.256.i.i = shl nsw i32 %472, 1
  %473 = load <4 x i32>, <4 x i32>* %432, align 16, !tbaa !7
  %474 = load <4 x i32>, <4 x i32>* %433, align 8, !tbaa !7
  %475 = sub nsw <4 x i32> %473, %474
  store <4 x i32> %475, <4 x i32>* %434, align 16, !tbaa !7
  %476 = load <4 x i32>, <4 x i32>* %435, align 16, !tbaa !7
  %477 = load <4 x i32>, <4 x i32>* %436, align 8, !tbaa !7
  %478 = sub nsw <4 x i32> %476, %477
  store <4 x i32> %478, <4 x i32>* %437, align 16, !tbaa !7
  %479 = load i32, i32* %arrayidx.8.i.204.i.i, align 16, !tbaa !7
  %480 = load i32, i32* %arrayidx4.8.i.281.i.i, align 8, !tbaa !7
  %sub.8.i.215.i.i = sub nsw i32 %479, %480
  store i32 %sub.8.i.215.i.i, i32* %arrayidx4.8.i.i.904.i, align 16, !tbaa !7
  %481 = load i32, i32* %arrayidx.9.i.208.i.i, align 4, !tbaa !7
  %482 = load i32, i32* %arrayidx4.9.i.285.i.i, align 4, !tbaa !7
  %sub.9.i.219.i.i = sub nsw i32 %481, %482
  store i32 %sub.9.i.219.i.i, i32* %arrayidx4.9.i.i.908.i, align 4, !tbaa !7
  %483 = extractelement <4 x i32> %473, i32 0
  %484 = extractelement <4 x i32> %474, i32 0
  %add.i.147.i.i = add nsw i32 %484, %483
  store i32 %add.i.147.i.i, i32* %arraydecay6.i.161.i, align 8, !tbaa !7
  %485 = extractelement <4 x i32> %473, i32 1
  %486 = extractelement <4 x i32> %474, i32 1
  %add.1.i.150.i.i = add nsw i32 %486, %485
  store i32 %add.1.i.150.i.i, i32* %arrayidx4.1.i.253.i.i, align 4, !tbaa !7
  %487 = extractelement <4 x i32> %473, i32 2
  %488 = extractelement <4 x i32> %474, i32 2
  %add.2.i.154.i.i = add nsw i32 %488, %487
  store i32 %add.2.i.154.i.i, i32* %arrayidx4.2.i.257.i.i, align 8, !tbaa !7
  %489 = extractelement <4 x i32> %473, i32 3
  %490 = extractelement <4 x i32> %474, i32 3
  %add.3.i.158.i.i = add nsw i32 %490, %489
  store i32 %add.3.i.158.i.i, i32* %arrayidx4.3.i.261.i.i, align 4, !tbaa !7
  %491 = add nsw <4 x i32> %477, %476
  store <4 x i32> %491, <4 x i32>* %438, align 8, !tbaa !7
  %add.8.i.178.i.i = add nsw i32 %480, %479
  store i32 %add.8.i.178.i.i, i32* %arrayidx4.8.i.281.i.i, align 8, !tbaa !7
  %add.9.i.182.i.i = add nsw i32 %482, %481
  store i32 %add.9.i.182.i.i, i32* %arrayidx4.9.i.285.i.i, align 4, !tbaa !7
  %492 = load <4 x i32>, <4 x i32>* %439, align 8, !tbaa !7
  %493 = sub nsw <4 x i32> %468, %492
  store <4 x i32> %493, <4 x i32>* %440, align 16, !tbaa !7
  %494 = load <4 x i32>, <4 x i32>* %441, align 8, !tbaa !7
  %495 = sub nsw <4 x i32> %470, %494
  store <4 x i32> %495, <4 x i32>* %442, align 16, !tbaa !7
  %496 = load i32, i32* %arrayidx2.8.i.133.i.i, align 8, !tbaa !7
  %sub.8.i.i.i = sub nsw i32 %add.8.i.252.i.i, %496
  store i32 %sub.8.i.i.i, i32* %arrayidx.8.i.204.i.i, align 16, !tbaa !7
  %497 = load i32, i32* %arrayidx2.9.i.136.i.i, align 4, !tbaa !7
  %sub.9.i.i.i = sub nsw i32 %add.9.i.256.i.i, %497
  store i32 %sub.9.i.i.i, i32* %arrayidx.9.i.208.i.i, align 4, !tbaa !7
  %498 = add nsw <4 x i32> %492, %468
  store <4 x i32> %498, <4 x i32>* %443, align 8, !tbaa !7
  %499 = add nsw <4 x i32> %494, %470
  store <4 x i32> %499, <4 x i32>* %444, align 8, !tbaa !7
  %add.8.i.114.i.i = add nsw i32 %496, %add.8.i.252.i.i
  store i32 %add.8.i.114.i.i, i32* %arrayidx2.8.i.133.i.i, align 8, !tbaa !7
  %add.9.i.118.i.i = add nsw i32 %497, %add.9.i.256.i.i
  store i32 %add.9.i.118.i.i, i32* %arrayidx2.9.i.136.i.i, align 4, !tbaa !7
  br label %if.end.49.i

if.end.49.i:                                      ; preds = %if.then.41.i, %if.else.i, %if.then.30.i
  %arrayidx51.i = getelementptr inbounds [256 x i8], [256 x i8]* %bslide.i, i64 0, i64 %indvars.iv.i
  %500 = load i8, i8* %arrayidx51.i, align 1, !tbaa !2
  %cmp53.i = icmp sgt i8 %500, 0
  br i1 %cmp53.i, label %if.then.55.i, label %if.else.62.i

if.then.55.i:                                     ; preds = %if.end.49.i
  call fastcc void @fe_mul(i32* %arraydecay.i.164.i, i32* %arraydecay2.i.158.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay4.i.167.i, i32* %arraydecay6.i.161.i, i32* %arraydecay7.i.162.i) #1
  call fastcc void @fe_mul(i32* %arraydecay9.i.170.i, i32* %arraydecay7.i.162.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay15.i.171.i, i32* %arraydecay2.i.158.i, i32* %arraydecay6.i.161.i) #1
  %conv58.i = sext i8 %500 to i32
  %div59.i = sdiv i32 %conv58.i, 2
  %idxprom60.i = sext i32 %div59.i to i64
  %arrayidx61.i = getelementptr inbounds [8 x %struct.ge_precomp], [8 x %struct.ge_precomp]* @Bi, i64 0, i64 %idxprom60.i
  call fastcc void @ge_madd(%struct.ge_p1p1* nonnull %t.i, %struct.ge_p3* nonnull %u.i.62, %struct.ge_precomp* %arrayidx61.i) #1
  br label %if.end.77.i.80

if.else.62.i:                                     ; preds = %if.end.49.i
  %cmp66.i = icmp slt i8 %500, 0
  br i1 %cmp66.i, label %if.then.68.i, label %if.end.77.i.80

if.then.68.i:                                     ; preds = %if.else.62.i
  call fastcc void @fe_mul(i32* %arraydecay.i.164.i, i32* %arraydecay2.i.158.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay4.i.167.i, i32* %arraydecay6.i.161.i, i32* %arraydecay7.i.162.i) #1
  call fastcc void @fe_mul(i32* %arraydecay9.i.170.i, i32* %arraydecay7.i.162.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay15.i.171.i, i32* %arraydecay2.i.158.i, i32* %arraydecay6.i.161.i) #1
  %conv71.i = sext i8 %500 to i32
  %div73.i = sdiv i32 %conv71.i, -2
  %idxprom74.i = sext i32 %div73.i to i64
  %501 = load <4 x i32>, <4 x i32>* %401, align 8, !tbaa !7
  %502 = load <4 x i32>, <4 x i32>* %402, align 16, !tbaa !7
  %503 = add nsw <4 x i32> %502, %501
  store <4 x i32> %503, <4 x i32>* %403, align 16, !tbaa !7
  %504 = load <4 x i32>, <4 x i32>* %404, align 8, !tbaa !7
  %505 = load <4 x i32>, <4 x i32>* %405, align 16, !tbaa !7
  %506 = add nsw <4 x i32> %505, %504
  store <4 x i32> %506, <4 x i32>* %406, align 16, !tbaa !7
  %507 = load i32, i32* %arrayidx.8.i.i.204.i, align 8, !tbaa !7
  %508 = load i32, i32* %arrayidx2.8.i.i.205.i, align 16, !tbaa !7
  %add.8.i.i.903.i = add nsw i32 %508, %507
  store i32 %add.8.i.i.903.i, i32* %arrayidx4.8.i.i.904.i, align 16, !tbaa !7
  %509 = load i32, i32* %arrayidx.9.i.i.208.i, align 4, !tbaa !7
  %510 = load i32, i32* %arrayidx2.9.i.i.209.i, align 4, !tbaa !7
  %add.9.i.i.907.i = add nsw i32 %510, %509
  store i32 %add.9.i.i.907.i, i32* %arrayidx4.9.i.i.908.i, align 4, !tbaa !7
  %511 = sub nsw <4 x i32> %501, %502
  store <4 x i32> %511, <4 x i32>* %407, align 8, !tbaa !7
  %512 = extractelement <4 x i32> %505, i32 0
  %513 = extractelement <4 x i32> %504, i32 0
  %sub.4.i.264.i.i = sub nsw i32 %513, %512
  store i32 %sub.4.i.264.i.i, i32* %arrayidx4.4.i.265.i.i, align 8, !tbaa !7
  %514 = extractelement <4 x i32> %505, i32 1
  %515 = extractelement <4 x i32> %504, i32 1
  %sub.5.i.268.i.i = sub nsw i32 %515, %514
  store i32 %sub.5.i.268.i.i, i32* %arrayidx4.5.i.269.i.i, align 4, !tbaa !7
  %516 = extractelement <4 x i32> %505, i32 2
  %517 = extractelement <4 x i32> %504, i32 2
  %sub.6.i.272.i.i = sub nsw i32 %517, %516
  store i32 %sub.6.i.272.i.i, i32* %arrayidx4.6.i.273.i.i, align 8, !tbaa !7
  %518 = extractelement <4 x i32> %505, i32 3
  %519 = extractelement <4 x i32> %504, i32 3
  %sub.7.i.276.i.i = sub nsw i32 %519, %518
  store i32 %sub.7.i.276.i.i, i32* %arrayidx4.7.i.277.i.i, align 4, !tbaa !7
  %sub.8.i.280.i.i = sub nsw i32 %507, %508
  store i32 %sub.8.i.280.i.i, i32* %arrayidx4.8.i.281.i.i, align 8, !tbaa !7
  %sub.9.i.284.i.i = sub nsw i32 %509, %510
  store i32 %sub.9.i.284.i.i, i32* %arrayidx4.9.i.285.i.i, align 4, !tbaa !7
  %arraydecay13.i.911.i = getelementptr inbounds [8 x %struct.ge_precomp], [8 x %struct.ge_precomp]* @Bi, i64 0, i64 %idxprom74.i, i32 1, i64 0
  call fastcc void @fe_mul(i32* %arraydecay7.i.162.i, i32* %arraydecay2.i.158.i, i32* %arraydecay13.i.911.i) #1
  %arraydecay18.i.912.i = getelementptr inbounds [8 x %struct.ge_precomp], [8 x %struct.ge_precomp]* @Bi, i64 0, i64 %idxprom74.i, i32 0, i64 0
  call fastcc void @fe_mul(i32* %arraydecay6.i.161.i, i32* %arraydecay6.i.161.i, i32* %arraydecay18.i.912.i) #1
  %arraydecay20.i.914.i = getelementptr inbounds [8 x %struct.ge_precomp], [8 x %struct.ge_precomp]* @Bi, i64 0, i64 %idxprom74.i, i32 2, i64 0
  call fastcc void @fe_mul(i32* %arraydecay3.i.159.i, i32* %arraydecay20.i.914.i, i32* %arraydecay15.i.171.i) #1
  %520 = load <4 x i32>, <4 x i32>* %408, align 16, !tbaa !7
  %521 = shl nsw <4 x i32> %520, <i32 1, i32 1, i32 1, i32 1>
  %522 = load <4 x i32>, <4 x i32>* %409, align 16, !tbaa !7
  %523 = shl nsw <4 x i32> %522, <i32 1, i32 1, i32 1, i32 1>
  %524 = load i32, i32* %arrayidx.8.i.241.i.i, align 16, !tbaa !7
  %add.8.i.243.i.i = shl nsw i32 %524, 1
  %525 = load i32, i32* %arrayidx.9.i.245.i.i, align 4, !tbaa !7
  %add.9.i.247.i.i = shl nsw i32 %525, 1
  %526 = load <4 x i32>, <4 x i32>* %410, align 16, !tbaa !7
  %527 = load <4 x i32>, <4 x i32>* %411, align 8, !tbaa !7
  %528 = sub nsw <4 x i32> %526, %527
  store <4 x i32> %528, <4 x i32>* %412, align 16, !tbaa !7
  %529 = load <4 x i32>, <4 x i32>* %413, align 16, !tbaa !7
  %530 = load <4 x i32>, <4 x i32>* %414, align 8, !tbaa !7
  %531 = sub nsw <4 x i32> %529, %530
  store <4 x i32> %531, <4 x i32>* %415, align 16, !tbaa !7
  %532 = load i32, i32* %arrayidx.8.i.204.i.i, align 16, !tbaa !7
  %533 = load i32, i32* %arrayidx4.8.i.281.i.i, align 8, !tbaa !7
  %sub.8.i.206.i.i = sub nsw i32 %532, %533
  store i32 %sub.8.i.206.i.i, i32* %arrayidx4.8.i.i.904.i, align 16, !tbaa !7
  %534 = load i32, i32* %arrayidx.9.i.208.i.i, align 4, !tbaa !7
  %535 = load i32, i32* %arrayidx4.9.i.285.i.i, align 4, !tbaa !7
  %sub.9.i.210.i.i = sub nsw i32 %534, %535
  store i32 %sub.9.i.210.i.i, i32* %arrayidx4.9.i.i.908.i, align 4, !tbaa !7
  %536 = extractelement <4 x i32> %526, i32 0
  %537 = extractelement <4 x i32> %527, i32 0
  %add.i.138.i.i = add nsw i32 %537, %536
  store i32 %add.i.138.i.i, i32* %arraydecay6.i.161.i, align 8, !tbaa !7
  %538 = extractelement <4 x i32> %526, i32 1
  %539 = extractelement <4 x i32> %527, i32 1
  %add.1.i.141.i.i = add nsw i32 %539, %538
  store i32 %add.1.i.141.i.i, i32* %arrayidx4.1.i.253.i.i, align 4, !tbaa !7
  %540 = extractelement <4 x i32> %526, i32 2
  %541 = extractelement <4 x i32> %527, i32 2
  %add.2.i.145.i.i = add nsw i32 %541, %540
  store i32 %add.2.i.145.i.i, i32* %arrayidx4.2.i.257.i.i, align 8, !tbaa !7
  %542 = extractelement <4 x i32> %526, i32 3
  %543 = extractelement <4 x i32> %527, i32 3
  %add.3.i.149.i.i = add nsw i32 %543, %542
  store i32 %add.3.i.149.i.i, i32* %arrayidx4.3.i.261.i.i, align 4, !tbaa !7
  %544 = add nsw <4 x i32> %530, %529
  store <4 x i32> %544, <4 x i32>* %416, align 8, !tbaa !7
  %add.8.i.169.i.i = add nsw i32 %533, %532
  store i32 %add.8.i.169.i.i, i32* %arrayidx4.8.i.281.i.i, align 8, !tbaa !7
  %add.9.i.173.i.i = add nsw i32 %535, %534
  store i32 %add.9.i.173.i.i, i32* %arrayidx4.9.i.285.i.i, align 4, !tbaa !7
  %545 = load <4 x i32>, <4 x i32>* %417, align 8, !tbaa !7
  %546 = sub nsw <4 x i32> %521, %545
  store <4 x i32> %546, <4 x i32>* %418, align 16, !tbaa !7
  %547 = load <4 x i32>, <4 x i32>* %419, align 8, !tbaa !7
  %548 = sub nsw <4 x i32> %523, %547
  store <4 x i32> %548, <4 x i32>* %420, align 16, !tbaa !7
  %549 = load i32, i32* %arrayidx2.8.i.133.i.i, align 8, !tbaa !7
  %sub.8.i.i.924.i = sub nsw i32 %add.8.i.243.i.i, %549
  store i32 %sub.8.i.i.924.i, i32* %arrayidx.8.i.204.i.i, align 16, !tbaa !7
  %550 = load i32, i32* %arrayidx2.9.i.136.i.i, align 4, !tbaa !7
  %sub.9.i.i.925.i = sub nsw i32 %add.9.i.247.i.i, %550
  store i32 %sub.9.i.i.925.i, i32* %arrayidx.9.i.208.i.i, align 4, !tbaa !7
  %551 = add nsw <4 x i32> %545, %521
  store <4 x i32> %551, <4 x i32>* %421, align 8, !tbaa !7
  %552 = add nsw <4 x i32> %547, %523
  store <4 x i32> %552, <4 x i32>* %422, align 8, !tbaa !7
  %add.8.i.105.i.i = add nsw i32 %549, %add.8.i.243.i.i
  store i32 %add.8.i.105.i.i, i32* %arrayidx2.8.i.133.i.i, align 8, !tbaa !7
  %add.9.i.109.i.i = add nsw i32 %550, %add.9.i.247.i.i
  store i32 %add.9.i.109.i.i, i32* %arrayidx2.9.i.136.i.i, align 4, !tbaa !7
  br label %if.end.77.i.80

if.end.77.i.80:                                   ; preds = %if.then.68.i, %if.else.62.i, %if.then.55.i
  call fastcc void @fe_mul(i32* %arraydecay.i.i.78, i32* %arraydecay2.i.158.i, i32* %arraydecay3.i.159.i) #1
  call fastcc void @fe_mul(i32* %arraydecay1.i.794.i, i32* %arraydecay6.i.161.i, i32* %arraydecay7.i.162.i) #1
  call fastcc void @fe_mul(i32* %arraydecay2.i.795.i, i32* %arraydecay7.i.162.i, i32* %arraydecay3.i.159.i) #1
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %cmp22.i = icmp sgt i64 %indvars.iv.i, 0
  br i1 %cmp22.i, label %for.body.24.i, label %ge_double_scalarmult_vartime.exit.loopexit

ge_double_scalarmult_vartime.exit.loopexit:       ; preds = %if.end.77.i.80
  br label %ge_double_scalarmult_vartime.exit

ge_double_scalarmult_vartime.exit:                ; preds = %ge_double_scalarmult_vartime.exit.loopexit, %for.cond.21.preheader.i
  call void @llvm.lifetime.end(i64 160, i8* %170) #1
  call void @llvm.lifetime.end(i64 160, i8* %169) #1
  call void @llvm.lifetime.end(i64 160, i8* %168) #1
  call void @llvm.lifetime.end(i64 1280, i8* %167) #1
  call void @llvm.lifetime.end(i64 256, i8* %166) #1
  call void @llvm.lifetime.end(i64 256, i8* %165) #1
  call void @llvm.lifetime.start(i64 40, i8* %83) #1
  call void @llvm.lifetime.start(i64 40, i8* %84) #1
  call void @llvm.lifetime.start(i64 40, i8* %85) #1
  call fastcc void @fe_invert(i32* %arraydecay.i.i, i32* %arraydecay2.i.795.i) #1
  call fastcc void @fe_mul(i32* %arraydecay1.i.i, i32* %arraydecay.i.i.78, i32* %arraydecay.i.i) #1
  call fastcc void @fe_mul(i32* %arraydecay41.i.i, i32* %arraydecay1.i.794.i, i32* %arraydecay.i.i) #1
  call fastcc void @fe_tobytes(i8* %5, i32* %arraydecay41.i.i) #1
  call void @llvm.lifetime.start(i64 32, i8* %131) #1
  call fastcc void @fe_tobytes(i8* %131, i32* %arraydecay1.i.i) #1
  %553 = load i8, i8* %131, align 16, !tbaa !2
  call void @llvm.lifetime.end(i64 32, i8* %131) #1
  %and.i.i.86 = shl i8 %553, 7
  %arrayidx.i.87 = getelementptr inbounds [32 x i8], [32 x i8]* %rcheck, i64 0, i64 31
  %554 = load i8, i8* %arrayidx.i.87, align 1, !tbaa !2
  %xor.i = xor i8 %554, %and.i.i.86
  store i8 %xor.i, i8* %arrayidx.i.87, align 1, !tbaa !2
  call void @llvm.lifetime.end(i64 40, i8* %85) #1
  call void @llvm.lifetime.end(i64 40, i8* %84) #1
  call void @llvm.lifetime.end(i64 40, i8* %83) #1
  %call21 = call i32 @CRYPTO_memcmp(i8* %5, i8* %1, i64 32) #1
  %cmp22 = icmp eq i32 %call21, 0
  %conv23 = zext i1 %cmp22 to i32
  br label %cleanup

cleanup:                                          ; preds = %ge_frombytes_vartime.exit, %entry, %ge_double_scalarmult_vartime.exit
  %retval.0 = phi i32 [ %conv23, %ge_double_scalarmult_vartime.exit ], [ 0, %ge_frombytes_vartime.exit ], [ 0, %entry ]
  call void @llvm.lifetime.end(i64 64, i8* %6) #1
  call void @llvm.lifetime.end(i64 32, i8* %5) #1
  call void @llvm.lifetime.end(i64 120, i8* %4) #1
  call void @llvm.lifetime.end(i64 216, i8* %3) #1
  call void @llvm.lifetime.end(i64 32, i8* %2) #1
  call void @llvm.lifetime.end(i64 32, i8* %1) #1
  call void @llvm.lifetime.end(i64 160, i8* %0) #1
  ret i32 %retval.0

lor.lhs.false.i.1:                                ; preds = %for.inc.i
  %arrayidx18.i.1 = getelementptr inbounds [256 x i8], [256 x i8]* %bslide.i, i64 0, i64 %indvars.iv.next934.i
  %555 = load i8, i8* %arrayidx18.i.1, align 1, !tbaa !2
  %tobool20.i.1 = icmp eq i8 %555, 0
  br i1 %tobool20.i.1, label %for.inc.i.1, label %for.cond.21.preheader.i

for.inc.i.1:                                      ; preds = %lor.lhs.false.i.1
  %indvars.iv.next934.i.1 = add nsw i64 %indvars.iv933.i, -2
  %dec.i.1 = add nsw i32 %i.0930.i, -2
  %cmp.i.79.1 = icmp sgt i64 %indvars.iv933.i, 1
  br i1 %cmp.i.79.1, label %for.body.i, label %for.cond.21.preheader.i
}

declare i32 @CRYPTO_memcmp(i8*, i8*, i64) #2

; Function Attrs: nounwind uwtable
define void @ED25519_public_from_private(i8* %out_public_key, i8* %private_key) #0 {
entry:
  %s.i.i = alloca [32 x i8], align 16
  %recip.i = alloca [10 x i32], align 16
  %x.i = alloca [10 x i32], align 16
  %y.i = alloca [10 x i32], align 16
  %az = alloca [64 x i8], align 16
  %A = alloca %struct.ge_p3, align 4
  %0 = getelementptr inbounds [64 x i8], [64 x i8]* %az, i64 0, i64 0
  call void @llvm.lifetime.start(i64 64, i8* %0) #1
  %1 = bitcast %struct.ge_p3* %A to i8*
  call void @llvm.lifetime.start(i64 160, i8* %1) #1
  %call = call i8* @SHA512(i8* %private_key, i64 32, i8* %0) #1
  %2 = load i8, i8* %0, align 16, !tbaa !2
  %and = and i8 %2, -8
  store i8 %and, i8* %0, align 16, !tbaa !2
  %arrayidx2 = getelementptr inbounds [64 x i8], [64 x i8]* %az, i64 0, i64 31
  %3 = load i8, i8* %arrayidx2, align 1, !tbaa !2
  %and4 = and i8 %3, 63
  %or = or i8 %and4, 64
  store i8 %or, i8* %arrayidx2, align 1, !tbaa !2
  call fastcc void @ge_scalarmult_base(%struct.ge_p3* nonnull %A, i8* %0)
  %4 = bitcast [10 x i32]* %recip.i to i8*
  call void @llvm.lifetime.start(i64 40, i8* %4) #1
  %5 = bitcast [10 x i32]* %x.i to i8*
  call void @llvm.lifetime.start(i64 40, i8* %5) #1
  %6 = bitcast [10 x i32]* %y.i to i8*
  call void @llvm.lifetime.start(i64 40, i8* %6) #1
  %arraydecay.i = getelementptr inbounds [10 x i32], [10 x i32]* %recip.i, i64 0, i64 0
  %arraydecay1.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 2, i64 0
  call fastcc void @fe_invert(i32* %arraydecay.i, i32* %arraydecay1.i) #1
  %arraydecay2.i = getelementptr inbounds [10 x i32], [10 x i32]* %x.i, i64 0, i64 0
  %arraydecay3.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 0, i64 0
  call fastcc void @fe_mul(i32* %arraydecay2.i, i32* %arraydecay3.i, i32* %arraydecay.i) #1
  %arraydecay5.i = getelementptr inbounds [10 x i32], [10 x i32]* %y.i, i64 0, i64 0
  %arraydecay6.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 1, i64 0
  call fastcc void @fe_mul(i32* %arraydecay5.i, i32* %arraydecay6.i, i32* %arraydecay.i) #1
  call fastcc void @fe_tobytes(i8* %out_public_key, i32* %arraydecay5.i) #1
  %7 = getelementptr inbounds [32 x i8], [32 x i8]* %s.i.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 32, i8* %7) #1
  call fastcc void @fe_tobytes(i8* %7, i32* %arraydecay2.i) #1
  %8 = load i8, i8* %7, align 16, !tbaa !2
  call void @llvm.lifetime.end(i64 32, i8* %7) #1
  %and.i.i = shl i8 %8, 7
  %arrayidx.i = getelementptr inbounds i8, i8* %out_public_key, i64 31
  %9 = load i8, i8* %arrayidx.i, align 1, !tbaa !2
  %xor.i = xor i8 %9, %and.i.i
  store i8 %xor.i, i8* %arrayidx.i, align 1, !tbaa !2
  call void @llvm.lifetime.end(i64 40, i8* %6) #1
  call void @llvm.lifetime.end(i64 40, i8* %5) #1
  call void @llvm.lifetime.end(i64 40, i8* %4) #1
  call void @OPENSSL_cleanse(i8* %0, i64 64) #1
  call void @llvm.lifetime.end(i64 160, i8* %1) #1
  call void @llvm.lifetime.end(i64 64, i8* %0) #1
  ret void
}

declare i8* @SHA512(i8*, i64, i8*) #2

; Function Attrs: nounwind uwtable
define i32 @X25519(i8* %out_shared_key, i8* nocapture readonly %private_key, i8* %peer_public_value) #0 {
entry:
  tail call void @x25519_scalar_mult(i8* %out_shared_key, i8* %private_key, i8* %peer_public_value)
  %call = tail call i32 @CRYPTO_memcmp(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @X25519.kZeros, i64 0, i64 0), i8* %out_shared_key, i64 32) #1
  %cmp = icmp ne i32 %call, 0
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define void @X25519_public_from_private(i8* %out_public_value, i8* nocapture readonly %private_key) #0 {
entry:
  %e = alloca [32 x i8], align 16
  %A = alloca %struct.ge_p3, align 4
  %zplusy = alloca [10 x i32], align 16
  %zminusy = alloca [10 x i32], align 16
  %zminusy_inv = alloca [10 x i32], align 16
  %0 = getelementptr inbounds [32 x i8], [32 x i8]* %e, i64 0, i64 0
  call void @llvm.lifetime.start(i64 32, i8* %0) #1
  %1 = bitcast %struct.ge_p3* %A to i8*
  call void @llvm.lifetime.start(i64 160, i8* %1) #1
  %2 = bitcast [10 x i32]* %zplusy to i8*
  call void @llvm.lifetime.start(i64 40, i8* %2) #1
  %3 = bitcast [10 x i32]* %zminusy to i8*
  call void @llvm.lifetime.start(i64 40, i8* %3) #1
  %4 = bitcast [10 x i32]* %zminusy_inv to i8*
  call void @llvm.lifetime.start(i64 40, i8* %4) #1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %private_key, i64 32, i32 1, i1 false)
  %5 = load i8, i8* %0, align 16, !tbaa !2
  %and = and i8 %5, -8
  store i8 %and, i8* %0, align 16, !tbaa !2
  %arrayidx2 = getelementptr inbounds [32 x i8], [32 x i8]* %e, i64 0, i64 31
  %6 = load i8, i8* %arrayidx2, align 1, !tbaa !2
  %and4 = and i8 %6, 63
  %or = or i8 %and4, 64
  store i8 %or, i8* %arrayidx2, align 1, !tbaa !2
  call fastcc void @ge_scalarmult_base(%struct.ge_p3* nonnull %A, i8* %0)
  %arraydecay9 = getelementptr inbounds [10 x i32], [10 x i32]* %zplusy, i64 0, i64 0
  %arraydecay10 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 2, i64 0
  %arraydecay11 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 1, i64 0
  %7 = bitcast i32* %arraydecay10 to <4 x i32>*
  %8 = load <4 x i32>, <4 x i32>* %7, align 4, !tbaa !7
  %9 = bitcast i32* %arraydecay11 to <4 x i32>*
  %10 = load <4 x i32>, <4 x i32>* %9, align 4, !tbaa !7
  %11 = add nsw <4 x i32> %10, %8
  %12 = bitcast [10 x i32]* %zplusy to <4 x i32>*
  store <4 x i32> %11, <4 x i32>* %12, align 16, !tbaa !7
  %arrayidx.4.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 2, i64 4
  %arrayidx2.4.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 1, i64 4
  %arrayidx4.4.i = getelementptr inbounds [10 x i32], [10 x i32]* %zplusy, i64 0, i64 4
  %13 = bitcast i32* %arrayidx.4.i to <4 x i32>*
  %14 = load <4 x i32>, <4 x i32>* %13, align 4, !tbaa !7
  %15 = bitcast i32* %arrayidx2.4.i to <4 x i32>*
  %16 = load <4 x i32>, <4 x i32>* %15, align 4, !tbaa !7
  %17 = add nsw <4 x i32> %16, %14
  %18 = bitcast i32* %arrayidx4.4.i to <4 x i32>*
  store <4 x i32> %17, <4 x i32>* %18, align 16, !tbaa !7
  %arrayidx.8.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 2, i64 8
  %19 = load i32, i32* %arrayidx.8.i, align 4, !tbaa !7
  %arrayidx2.8.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 1, i64 8
  %20 = load i32, i32* %arrayidx2.8.i, align 4, !tbaa !7
  %add.8.i = add nsw i32 %20, %19
  %arrayidx4.8.i = getelementptr inbounds [10 x i32], [10 x i32]* %zplusy, i64 0, i64 8
  store i32 %add.8.i, i32* %arrayidx4.8.i, align 16, !tbaa !7
  %arrayidx.9.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 2, i64 9
  %21 = load i32, i32* %arrayidx.9.i, align 4, !tbaa !7
  %arrayidx2.9.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %A, i64 0, i32 1, i64 9
  %22 = load i32, i32* %arrayidx2.9.i, align 4, !tbaa !7
  %add.9.i = add nsw i32 %22, %21
  %arrayidx4.9.i = getelementptr inbounds [10 x i32], [10 x i32]* %zplusy, i64 0, i64 9
  store i32 %add.9.i, i32* %arrayidx4.9.i, align 4, !tbaa !7
  %arraydecay12 = getelementptr inbounds [10 x i32], [10 x i32]* %zminusy, i64 0, i64 0
  %23 = sub nsw <4 x i32> %8, %10
  %24 = bitcast [10 x i32]* %zminusy to <4 x i32>*
  store <4 x i32> %23, <4 x i32>* %24, align 16, !tbaa !7
  %arrayidx4.4.i.35 = getelementptr inbounds [10 x i32], [10 x i32]* %zminusy, i64 0, i64 4
  %25 = sub nsw <4 x i32> %14, %16
  %26 = bitcast i32* %arrayidx4.4.i.35 to <4 x i32>*
  store <4 x i32> %25, <4 x i32>* %26, align 16, !tbaa !7
  %sub.8.i = sub nsw i32 %19, %20
  %arrayidx4.8.i.47 = getelementptr inbounds [10 x i32], [10 x i32]* %zminusy, i64 0, i64 8
  store i32 %sub.8.i, i32* %arrayidx4.8.i.47, align 16, !tbaa !7
  %sub.9.i = sub nsw i32 %21, %22
  %arrayidx4.9.i.50 = getelementptr inbounds [10 x i32], [10 x i32]* %zminusy, i64 0, i64 9
  store i32 %sub.9.i, i32* %arrayidx4.9.i.50, align 4, !tbaa !7
  %arraydecay17 = getelementptr inbounds [10 x i32], [10 x i32]* %zminusy_inv, i64 0, i64 0
  call fastcc void @fe_invert(i32* %arraydecay17, i32* %arraydecay12)
  call fastcc void @fe_mul(i32* %arraydecay9, i32* %arraydecay9, i32* %arraydecay17)
  call fastcc void @fe_tobytes(i8* %out_public_value, i32* %arraydecay9)
  call void @OPENSSL_cleanse(i8* %0, i64 32) #1
  call void @llvm.lifetime.end(i64 40, i8* %4) #1
  call void @llvm.lifetime.end(i64 40, i8* %3) #1
  call void @llvm.lifetime.end(i64 40, i8* %2) #1
  call void @llvm.lifetime.end(i64 160, i8* %1) #1
  call void @llvm.lifetime.end(i64 32, i8* %0) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @fe_invert(i32* nocapture %out, i32* nocapture readonly %z) #0 {
entry:
  %t0 = alloca [10 x i32], align 16
  %t1 = alloca [10 x i32], align 16
  %t2 = alloca [10 x i32], align 16
  %t3 = alloca [10 x i32], align 16
  %0 = bitcast [10 x i32]* %t0 to i8*
  call void @llvm.lifetime.start(i64 40, i8* %0) #1
  %1 = bitcast [10 x i32]* %t1 to i8*
  call void @llvm.lifetime.start(i64 40, i8* %1) #1
  %2 = bitcast [10 x i32]* %t2 to i8*
  call void @llvm.lifetime.start(i64 40, i8* %2) #1
  %3 = bitcast [10 x i32]* %t3 to i8*
  call void @llvm.lifetime.start(i64 40, i8* %3) #1
  %arraydecay = getelementptr inbounds [10 x i32], [10 x i32]* %t0, i64 0, i64 0
  call fastcc void @fe_sq(i32* %arraydecay, i32* %z)
  %arraydecay1 = getelementptr inbounds [10 x i32], [10 x i32]* %t1, i64 0, i64 0
  call fastcc void @fe_sq(i32* %arraydecay1, i32* %arraydecay)
  call fastcc void @fe_sq(i32* %arraydecay1, i32* %arraydecay1)
  call fastcc void @fe_mul(i32* %arraydecay1, i32* %z, i32* %arraydecay1)
  call fastcc void @fe_mul(i32* %arraydecay, i32* %arraydecay, i32* %arraydecay1)
  %arraydecay10 = getelementptr inbounds [10 x i32], [10 x i32]* %t2, i64 0, i64 0
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay)
  call fastcc void @fe_mul(i32* %arraydecay1, i32* %arraydecay1, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay1)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_mul(i32* %arraydecay1, i32* %arraydecay10, i32* %arraydecay1)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay1)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_mul(i32* %arraydecay10, i32* %arraydecay10, i32* %arraydecay1)
  %arraydecay35 = getelementptr inbounds [10 x i32], [10 x i32]* %t3, i64 0, i64 0
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay35)
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay35)
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay35)
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay35)
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay35)
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay35)
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay35)
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay35)
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay35)
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay35)
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay35)
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay35)
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay35)
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay35)
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay35)
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay35)
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay35)
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay35)
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay35)
  call fastcc void @fe_mul(i32* %arraydecay10, i32* %arraydecay35, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  call fastcc void @fe_mul(i32* %arraydecay1, i32* %arraydecay10, i32* %arraydecay1)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay1)
  br label %for.body.63

for.body.63:                                      ; preds = %for.body.63, %entry
  %i.4130 = phi i32 [ 1, %entry ], [ %inc67, %for.body.63 ]
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  %inc67 = add nuw nsw i32 %i.4130, 1
  %exitcond136 = icmp eq i32 %inc67, 50
  br i1 %exitcond136, label %for.end.68, label %for.body.63

for.end.68:                                       ; preds = %for.body.63
  call fastcc void @fe_mul(i32* %arraydecay10, i32* %arraydecay10, i32* %arraydecay1)
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay10)
  br label %for.body.76

for.body.76:                                      ; preds = %for.body.76, %for.end.68
  %i.5129 = phi i32 [ 1, %for.end.68 ], [ %inc80, %for.body.76 ]
  call fastcc void @fe_sq(i32* %arraydecay35, i32* %arraydecay35)
  %inc80 = add nuw nsw i32 %i.5129, 1
  %exitcond135 = icmp eq i32 %inc80, 100
  br i1 %exitcond135, label %for.end.81, label %for.body.76

for.end.81:                                       ; preds = %for.body.76
  call fastcc void @fe_mul(i32* %arraydecay10, i32* %arraydecay35, i32* %arraydecay10)
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  br label %for.body.89

for.body.89:                                      ; preds = %for.body.89, %for.end.81
  %i.6128 = phi i32 [ 1, %for.end.81 ], [ %inc93, %for.body.89 ]
  call fastcc void @fe_sq(i32* %arraydecay10, i32* %arraydecay10)
  %inc93 = add nuw nsw i32 %i.6128, 1
  %exitcond = icmp eq i32 %inc93, 50
  br i1 %exitcond, label %for.end.94, label %for.body.89

for.end.94:                                       ; preds = %for.body.89
  call fastcc void @fe_mul(i32* %arraydecay1, i32* %arraydecay10, i32* %arraydecay1)
  call fastcc void @fe_sq(i32* %arraydecay1, i32* %arraydecay1)
  call fastcc void @fe_sq(i32* %arraydecay1, i32* %arraydecay1)
  call fastcc void @fe_sq(i32* %arraydecay1, i32* %arraydecay1)
  call fastcc void @fe_sq(i32* %arraydecay1, i32* %arraydecay1)
  call fastcc void @fe_sq(i32* %arraydecay1, i32* %arraydecay1)
  call fastcc void @fe_mul(i32* %out, i32* %arraydecay1, i32* %arraydecay)
  call void @llvm.lifetime.end(i64 40, i8* %3) #1
  call void @llvm.lifetime.end(i64 40, i8* %2) #1
  call void @llvm.lifetime.end(i64 40, i8* %1) #1
  call void @llvm.lifetime.end(i64 40, i8* %0) #1
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @fe_mul(i32* nocapture %h, i32* nocapture readonly %f, i32* nocapture readonly %g) #0 {
entry:
  %0 = load i32, i32* %f, align 4, !tbaa !7
  %arrayidx1 = getelementptr inbounds i32, i32* %f, i64 1
  %1 = load i32, i32* %arrayidx1, align 4, !tbaa !7
  %arrayidx2 = getelementptr inbounds i32, i32* %f, i64 2
  %2 = load i32, i32* %arrayidx2, align 4, !tbaa !7
  %arrayidx3 = getelementptr inbounds i32, i32* %f, i64 3
  %3 = load i32, i32* %arrayidx3, align 4, !tbaa !7
  %arrayidx4 = getelementptr inbounds i32, i32* %f, i64 4
  %4 = load i32, i32* %arrayidx4, align 4, !tbaa !7
  %arrayidx5 = getelementptr inbounds i32, i32* %f, i64 5
  %5 = load i32, i32* %arrayidx5, align 4, !tbaa !7
  %arrayidx6 = getelementptr inbounds i32, i32* %f, i64 6
  %6 = load i32, i32* %arrayidx6, align 4, !tbaa !7
  %arrayidx7 = getelementptr inbounds i32, i32* %f, i64 7
  %7 = load i32, i32* %arrayidx7, align 4, !tbaa !7
  %arrayidx8 = getelementptr inbounds i32, i32* %f, i64 8
  %8 = load i32, i32* %arrayidx8, align 4, !tbaa !7
  %arrayidx9 = getelementptr inbounds i32, i32* %f, i64 9
  %9 = load i32, i32* %arrayidx9, align 4, !tbaa !7
  %10 = load i32, i32* %g, align 4, !tbaa !7
  %arrayidx11 = getelementptr inbounds i32, i32* %g, i64 1
  %11 = load i32, i32* %arrayidx11, align 4, !tbaa !7
  %arrayidx12 = getelementptr inbounds i32, i32* %g, i64 2
  %12 = load i32, i32* %arrayidx12, align 4, !tbaa !7
  %arrayidx13 = getelementptr inbounds i32, i32* %g, i64 3
  %13 = load i32, i32* %arrayidx13, align 4, !tbaa !7
  %arrayidx14 = getelementptr inbounds i32, i32* %g, i64 4
  %14 = load i32, i32* %arrayidx14, align 4, !tbaa !7
  %arrayidx15 = getelementptr inbounds i32, i32* %g, i64 5
  %15 = load i32, i32* %arrayidx15, align 4, !tbaa !7
  %arrayidx16 = getelementptr inbounds i32, i32* %g, i64 6
  %16 = load i32, i32* %arrayidx16, align 4, !tbaa !7
  %arrayidx17 = getelementptr inbounds i32, i32* %g, i64 7
  %17 = load i32, i32* %arrayidx17, align 4, !tbaa !7
  %arrayidx18 = getelementptr inbounds i32, i32* %g, i64 8
  %18 = load i32, i32* %arrayidx18, align 4, !tbaa !7
  %arrayidx19 = getelementptr inbounds i32, i32* %g, i64 9
  %19 = load i32, i32* %arrayidx19, align 4, !tbaa !7
  %mul = mul nsw i32 %11, 19
  %mul20 = mul nsw i32 %12, 19
  %mul21 = mul nsw i32 %13, 19
  %mul22 = mul nsw i32 %14, 19
  %mul23 = mul nsw i32 %15, 19
  %mul24 = mul nsw i32 %16, 19
  %mul25 = mul nsw i32 %17, 19
  %mul26 = mul nsw i32 %18, 19
  %mul27 = mul nsw i32 %19, 19
  %mul28 = shl nsw i32 %1, 1
  %mul29 = shl nsw i32 %3, 1
  %mul30 = shl nsw i32 %5, 1
  %mul31 = shl nsw i32 %7, 1
  %mul32 = shl nsw i32 %9, 1
  %conv = sext i32 %0 to i64
  %conv33 = sext i32 %10 to i64
  %mul34 = mul nsw i64 %conv33, %conv
  %conv36 = sext i32 %11 to i64
  %mul37 = mul nsw i64 %conv36, %conv
  %conv39 = sext i32 %12 to i64
  %mul40 = mul nsw i64 %conv39, %conv
  %conv42 = sext i32 %13 to i64
  %mul43 = mul nsw i64 %conv42, %conv
  %conv45 = sext i32 %14 to i64
  %mul46 = mul nsw i64 %conv45, %conv
  %conv48 = sext i32 %15 to i64
  %mul49 = mul nsw i64 %conv48, %conv
  %conv51 = sext i32 %16 to i64
  %mul52 = mul nsw i64 %conv51, %conv
  %conv54 = sext i32 %17 to i64
  %mul55 = mul nsw i64 %conv54, %conv
  %conv57 = sext i32 %18 to i64
  %mul58 = mul nsw i64 %conv57, %conv
  %conv60 = sext i32 %19 to i64
  %mul61 = mul nsw i64 %conv60, %conv
  %conv62 = sext i32 %1 to i64
  %mul64 = mul nsw i64 %conv33, %conv62
  %conv65 = sext i32 %mul28 to i64
  %mul67 = mul nsw i64 %conv36, %conv65
  %mul70 = mul nsw i64 %conv39, %conv62
  %mul73 = mul nsw i64 %conv42, %conv65
  %mul76 = mul nsw i64 %conv45, %conv62
  %mul79 = mul nsw i64 %conv48, %conv65
  %mul82 = mul nsw i64 %conv51, %conv62
  %mul85 = mul nsw i64 %conv54, %conv65
  %mul88 = mul nsw i64 %conv57, %conv62
  %conv90 = sext i32 %mul27 to i64
  %mul91 = mul nsw i64 %conv90, %conv65
  %conv92 = sext i32 %2 to i64
  %mul94 = mul nsw i64 %conv33, %conv92
  %mul97 = mul nsw i64 %conv36, %conv92
  %mul100 = mul nsw i64 %conv39, %conv92
  %mul103 = mul nsw i64 %conv42, %conv92
  %mul106 = mul nsw i64 %conv45, %conv92
  %mul109 = mul nsw i64 %conv48, %conv92
  %mul112 = mul nsw i64 %conv51, %conv92
  %mul115 = mul nsw i64 %conv54, %conv92
  %conv117 = sext i32 %mul26 to i64
  %mul118 = mul nsw i64 %conv117, %conv92
  %mul121 = mul nsw i64 %conv90, %conv92
  %conv122 = sext i32 %3 to i64
  %mul124 = mul nsw i64 %conv33, %conv122
  %conv125 = sext i32 %mul29 to i64
  %mul127 = mul nsw i64 %conv36, %conv125
  %mul130 = mul nsw i64 %conv39, %conv122
  %mul133 = mul nsw i64 %conv42, %conv125
  %mul136 = mul nsw i64 %conv45, %conv122
  %mul139 = mul nsw i64 %conv48, %conv125
  %mul142 = mul nsw i64 %conv51, %conv122
  %conv144 = sext i32 %mul25 to i64
  %mul145 = mul nsw i64 %conv144, %conv125
  %mul148 = mul nsw i64 %conv117, %conv122
  %mul151 = mul nsw i64 %conv90, %conv125
  %conv152 = sext i32 %4 to i64
  %mul154 = mul nsw i64 %conv33, %conv152
  %mul157 = mul nsw i64 %conv36, %conv152
  %mul160 = mul nsw i64 %conv39, %conv152
  %mul163 = mul nsw i64 %conv42, %conv152
  %mul166 = mul nsw i64 %conv45, %conv152
  %mul169 = mul nsw i64 %conv48, %conv152
  %conv171 = sext i32 %mul24 to i64
  %mul172 = mul nsw i64 %conv171, %conv152
  %mul175 = mul nsw i64 %conv144, %conv152
  %mul178 = mul nsw i64 %conv117, %conv152
  %mul181 = mul nsw i64 %conv90, %conv152
  %conv182 = sext i32 %5 to i64
  %mul184 = mul nsw i64 %conv33, %conv182
  %conv185 = sext i32 %mul30 to i64
  %mul187 = mul nsw i64 %conv36, %conv185
  %mul190 = mul nsw i64 %conv39, %conv182
  %mul193 = mul nsw i64 %conv42, %conv185
  %mul196 = mul nsw i64 %conv45, %conv182
  %conv198 = sext i32 %mul23 to i64
  %mul199 = mul nsw i64 %conv198, %conv185
  %mul202 = mul nsw i64 %conv171, %conv182
  %mul205 = mul nsw i64 %conv144, %conv185
  %mul208 = mul nsw i64 %conv117, %conv182
  %mul211 = mul nsw i64 %conv90, %conv185
  %conv212 = sext i32 %6 to i64
  %mul214 = mul nsw i64 %conv33, %conv212
  %mul217 = mul nsw i64 %conv36, %conv212
  %mul220 = mul nsw i64 %conv39, %conv212
  %mul223 = mul nsw i64 %conv42, %conv212
  %conv225 = sext i32 %mul22 to i64
  %mul226 = mul nsw i64 %conv225, %conv212
  %mul229 = mul nsw i64 %conv198, %conv212
  %mul232 = mul nsw i64 %conv171, %conv212
  %mul235 = mul nsw i64 %conv144, %conv212
  %mul238 = mul nsw i64 %conv117, %conv212
  %mul241 = mul nsw i64 %conv90, %conv212
  %conv242 = sext i32 %7 to i64
  %mul244 = mul nsw i64 %conv33, %conv242
  %conv245 = sext i32 %mul31 to i64
  %mul247 = mul nsw i64 %conv36, %conv245
  %mul250 = mul nsw i64 %conv39, %conv242
  %conv252 = sext i32 %mul21 to i64
  %mul253 = mul nsw i64 %conv252, %conv245
  %mul256 = mul nsw i64 %conv225, %conv242
  %mul259 = mul nsw i64 %conv198, %conv245
  %mul262 = mul nsw i64 %conv171, %conv242
  %mul265 = mul nsw i64 %conv144, %conv245
  %mul268 = mul nsw i64 %conv117, %conv242
  %mul271 = mul nsw i64 %conv90, %conv245
  %conv272 = sext i32 %8 to i64
  %mul274 = mul nsw i64 %conv33, %conv272
  %mul277 = mul nsw i64 %conv36, %conv272
  %conv279 = sext i32 %mul20 to i64
  %mul280 = mul nsw i64 %conv279, %conv272
  %mul283 = mul nsw i64 %conv252, %conv272
  %mul286 = mul nsw i64 %conv225, %conv272
  %mul289 = mul nsw i64 %conv198, %conv272
  %mul292 = mul nsw i64 %conv171, %conv272
  %mul295 = mul nsw i64 %conv144, %conv272
  %mul298 = mul nsw i64 %conv117, %conv272
  %mul301 = mul nsw i64 %conv90, %conv272
  %conv302 = sext i32 %9 to i64
  %mul304 = mul nsw i64 %conv33, %conv302
  %conv305 = sext i32 %mul32 to i64
  %conv306 = sext i32 %mul to i64
  %mul307 = mul nsw i64 %conv306, %conv305
  %mul310 = mul nsw i64 %conv279, %conv302
  %mul313 = mul nsw i64 %conv252, %conv305
  %mul316 = mul nsw i64 %conv225, %conv302
  %mul319 = mul nsw i64 %conv198, %conv305
  %mul322 = mul nsw i64 %conv171, %conv302
  %mul325 = mul nsw i64 %conv144, %conv305
  %mul328 = mul nsw i64 %conv117, %conv302
  %mul331 = mul nsw i64 %conv90, %conv305
  %add = add i64 %mul307, %mul34
  %add332 = add i64 %add, %mul280
  %add333 = add i64 %add332, %mul253
  %add334 = add i64 %add333, %mul226
  %add335 = add i64 %add334, %mul199
  %add336 = add i64 %add335, %mul172
  %add337 = add i64 %add336, %mul145
  %add338 = add i64 %add337, %mul118
  %add339 = add i64 %add338, %mul91
  %add340 = add nsw i64 %mul37, %mul64
  %add367 = add i64 %mul127, %mul154
  %add368 = add i64 %add367, %mul100
  %add369 = add i64 %add368, %mul73
  %add370 = add i64 %add369, %mul46
  %add371 = add i64 %add370, %mul319
  %add372 = add i64 %add371, %mul292
  %add373 = add i64 %add372, %mul265
  %add374 = add i64 %add373, %mul238
  %add375 = add i64 %add374, %mul211
  %add421 = add nsw i64 %add339, 33554432
  %shr = ashr i64 %add421, 26
  %add341 = add i64 %add340, %mul310
  %add342 = add i64 %add341, %mul283
  %add343 = add i64 %add342, %mul256
  %add344 = add i64 %add343, %mul229
  %add345 = add i64 %add344, %mul202
  %add346 = add i64 %add345, %mul175
  %add347 = add i64 %add346, %mul148
  %add348 = add i64 %add347, %mul121
  %add422 = add i64 %add348, %shr
  %and = and i64 %add421, -67108864
  %sub = sub nsw i64 %add339, %and
  %add423 = add nsw i64 %add375, 33554432
  %shr424 = ashr i64 %add423, 26
  %add376 = add i64 %mul157, %mul184
  %add377 = add i64 %add376, %mul130
  %add378 = add i64 %add377, %mul103
  %add379 = add i64 %add378, %mul76
  %add380 = add i64 %add379, %mul49
  %add381 = add i64 %add380, %mul322
  %add382 = add i64 %add381, %mul295
  %add383 = add i64 %add382, %mul268
  %add384 = add i64 %add383, %mul241
  %add425 = add i64 %add384, %shr424
  %and426 = and i64 %add423, -67108864
  %sub427 = sub nsw i64 %add375, %and426
  %add428 = add nsw i64 %add422, 16777216
  %shr429 = ashr i64 %add428, 25
  %add349 = add i64 %mul67, %mul94
  %add350 = add i64 %add349, %mul40
  %add351 = add i64 %add350, %mul313
  %add352 = add i64 %add351, %mul286
  %add353 = add i64 %add352, %mul259
  %add354 = add i64 %add353, %mul232
  %add355 = add i64 %add354, %mul205
  %add356 = add i64 %add355, %mul178
  %add357 = add i64 %add356, %mul151
  %add430 = add i64 %add357, %shr429
  %and431 = and i64 %add428, 4261412864
  %sub432 = sub i64 %add422, %and431
  %add433 = add nsw i64 %add425, 16777216
  %shr434 = ashr i64 %add433, 25
  %add385 = add i64 %mul187, %mul214
  %add386 = add i64 %add385, %mul160
  %add387 = add i64 %add386, %mul133
  %add388 = add i64 %add387, %mul106
  %add389 = add i64 %add388, %mul79
  %add390 = add i64 %add389, %mul52
  %add391 = add i64 %add390, %mul325
  %add392 = add i64 %add391, %mul298
  %add393 = add i64 %add392, %mul271
  %add435 = add i64 %add393, %shr434
  %and436 = and i64 %add433, 4261412864
  %sub437 = sub i64 %add425, %and436
  %add438 = add nsw i64 %add430, 33554432
  %shr439 = ashr i64 %add438, 26
  %add358 = add i64 %mul97, %mul124
  %add359 = add i64 %add358, %mul70
  %add360 = add i64 %add359, %mul43
  %add361 = add i64 %add360, %mul316
  %add362 = add i64 %add361, %mul289
  %add363 = add i64 %add362, %mul262
  %add364 = add i64 %add363, %mul235
  %add365 = add i64 %add364, %mul208
  %add366 = add i64 %add365, %mul181
  %add440 = add i64 %add366, %shr439
  %and441 = and i64 %add438, 4227858432
  %sub442 = sub i64 %add430, %and441
  %add443 = add nsw i64 %add435, 33554432
  %shr444 = ashr i64 %add443, 26
  %add394 = add i64 %mul217, %mul244
  %add395 = add i64 %add394, %mul190
  %add396 = add i64 %add395, %mul163
  %add397 = add i64 %add396, %mul136
  %add398 = add i64 %add397, %mul109
  %add399 = add i64 %add398, %mul82
  %add400 = add i64 %add399, %mul55
  %add401 = add i64 %add400, %mul328
  %add402 = add i64 %add401, %mul301
  %add445 = add i64 %add402, %shr444
  %and446 = and i64 %add443, 4227858432
  %sub447 = sub i64 %add435, %and446
  %add448 = add nsw i64 %add440, 16777216
  %shr449 = ashr i64 %add448, 25
  %add450 = add nsw i64 %shr449, %sub427
  %and451 = and i64 %add448, 4261412864
  %sub452 = sub i64 %add440, %and451
  %add453 = add nsw i64 %add445, 16777216
  %shr454 = ashr i64 %add453, 25
  %add403 = add i64 %mul247, %mul274
  %add404 = add i64 %add403, %mul220
  %add405 = add i64 %add404, %mul193
  %add406 = add i64 %add405, %mul166
  %add407 = add i64 %add406, %mul139
  %add408 = add i64 %add407, %mul112
  %add409 = add i64 %add408, %mul85
  %add410 = add i64 %add409, %mul58
  %add411 = add i64 %add410, %mul331
  %add455 = add i64 %add411, %shr454
  %and456 = and i64 %add453, 4261412864
  %sub457 = sub i64 %add445, %and456
  %add458 = add nsw i64 %add450, 33554432
  %shr459.911 = lshr i64 %add458, 26
  %add460 = add i64 %sub437, %shr459.911
  %and461 = and i64 %add458, 4227858432
  %sub462 = sub i64 %add450, %and461
  %add463 = add nsw i64 %add455, 33554432
  %shr464 = ashr i64 %add463, 26
  %add412 = add i64 %mul277, %mul304
  %add413 = add i64 %add412, %mul250
  %add414 = add i64 %add413, %mul223
  %add415 = add i64 %add414, %mul196
  %add416 = add i64 %add415, %mul169
  %add417 = add i64 %add416, %mul142
  %add418 = add i64 %add417, %mul115
  %add419 = add i64 %add418, %mul88
  %add420 = add i64 %add419, %mul61
  %add465 = add i64 %add420, %shr464
  %and466 = and i64 %add463, 4227858432
  %sub467 = sub i64 %add455, %and466
  %add468 = add nsw i64 %add465, 16777216
  %shr469 = ashr i64 %add468, 25
  %mul470 = mul nsw i64 %shr469, 19
  %add471 = add nsw i64 %mul470, %sub
  %and472 = and i64 %add468, 4261412864
  %sub473 = sub i64 %add465, %and472
  %add474 = add nsw i64 %add471, 33554432
  %shr475.910 = lshr i64 %add474, 26
  %add476 = add i64 %sub432, %shr475.910
  %and477 = and i64 %add474, 4227858432
  %sub478 = sub i64 %add471, %and477
  %conv479 = trunc i64 %sub478 to i32
  store i32 %conv479, i32* %h, align 4, !tbaa !7
  %conv481 = trunc i64 %add476 to i32
  %arrayidx482 = getelementptr inbounds i32, i32* %h, i64 1
  store i32 %conv481, i32* %arrayidx482, align 4, !tbaa !7
  %conv483 = trunc i64 %sub442 to i32
  %arrayidx484 = getelementptr inbounds i32, i32* %h, i64 2
  store i32 %conv483, i32* %arrayidx484, align 4, !tbaa !7
  %conv485 = trunc i64 %sub452 to i32
  %arrayidx486 = getelementptr inbounds i32, i32* %h, i64 3
  store i32 %conv485, i32* %arrayidx486, align 4, !tbaa !7
  %conv487 = trunc i64 %sub462 to i32
  %arrayidx488 = getelementptr inbounds i32, i32* %h, i64 4
  store i32 %conv487, i32* %arrayidx488, align 4, !tbaa !7
  %conv489 = trunc i64 %add460 to i32
  %arrayidx490 = getelementptr inbounds i32, i32* %h, i64 5
  store i32 %conv489, i32* %arrayidx490, align 4, !tbaa !7
  %conv491 = trunc i64 %sub447 to i32
  %arrayidx492 = getelementptr inbounds i32, i32* %h, i64 6
  store i32 %conv491, i32* %arrayidx492, align 4, !tbaa !7
  %conv493 = trunc i64 %sub457 to i32
  %arrayidx494 = getelementptr inbounds i32, i32* %h, i64 7
  store i32 %conv493, i32* %arrayidx494, align 4, !tbaa !7
  %conv495 = trunc i64 %sub467 to i32
  %arrayidx496 = getelementptr inbounds i32, i32* %h, i64 8
  store i32 %conv495, i32* %arrayidx496, align 4, !tbaa !7
  %conv497 = trunc i64 %sub473 to i32
  %arrayidx498 = getelementptr inbounds i32, i32* %h, i64 9
  store i32 %conv497, i32* %arrayidx498, align 4, !tbaa !7
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @fe_tobytes(i8* %s, i32* nocapture readonly %h) #0 {
entry:
  %0 = load i32, i32* %h, align 4, !tbaa !7
  %arrayidx1 = getelementptr inbounds i32, i32* %h, i64 1
  %1 = load i32, i32* %arrayidx1, align 4, !tbaa !7
  %arrayidx2 = getelementptr inbounds i32, i32* %h, i64 2
  %2 = load i32, i32* %arrayidx2, align 4, !tbaa !7
  %arrayidx3 = getelementptr inbounds i32, i32* %h, i64 3
  %3 = load i32, i32* %arrayidx3, align 4, !tbaa !7
  %arrayidx4 = getelementptr inbounds i32, i32* %h, i64 4
  %4 = load i32, i32* %arrayidx4, align 4, !tbaa !7
  %arrayidx5 = getelementptr inbounds i32, i32* %h, i64 5
  %5 = load i32, i32* %arrayidx5, align 4, !tbaa !7
  %arrayidx6 = getelementptr inbounds i32, i32* %h, i64 6
  %6 = load i32, i32* %arrayidx6, align 4, !tbaa !7
  %arrayidx7 = getelementptr inbounds i32, i32* %h, i64 7
  %7 = load i32, i32* %arrayidx7, align 4, !tbaa !7
  %arrayidx8 = getelementptr inbounds i32, i32* %h, i64 8
  %8 = load i32, i32* %arrayidx8, align 4, !tbaa !7
  %arrayidx9 = getelementptr inbounds i32, i32* %h, i64 9
  %9 = load i32, i32* %arrayidx9, align 4, !tbaa !7
  %mul = mul nsw i32 %9, 19
  %add = add nsw i32 %mul, 16777216
  %shr = ashr i32 %add, 25
  %add10 = add nsw i32 %shr, %0
  %shr11 = ashr i32 %add10, 26
  %add12 = add nsw i32 %shr11, %1
  %shr13 = ashr i32 %add12, 25
  %add14 = add nsw i32 %shr13, %2
  %shr15 = ashr i32 %add14, 26
  %add16 = add nsw i32 %shr15, %3
  %shr17 = ashr i32 %add16, 25
  %add18 = add nsw i32 %shr17, %4
  %shr19 = ashr i32 %add18, 26
  %add20 = add nsw i32 %shr19, %5
  %shr21 = ashr i32 %add20, 25
  %add22 = add nsw i32 %shr21, %6
  %shr23 = ashr i32 %add22, 26
  %add24 = add nsw i32 %shr23, %7
  %shr25 = ashr i32 %add24, 25
  %add26 = add nsw i32 %shr25, %8
  %shr27 = ashr i32 %add26, 26
  %add28 = add nsw i32 %shr27, %9
  %shr29 = ashr i32 %add28, 25
  %mul30 = mul nsw i32 %shr29, 19
  %add31 = add nsw i32 %mul30, %0
  %shr32 = ashr i32 %add31, 26
  %add33 = add nsw i32 %shr32, %1
  %shr35 = ashr i32 %add33, 25
  %add36 = add nsw i32 %shr35, %2
  %and38 = and i32 %add33, 33554431
  %shr40 = ashr i32 %add36, 26
  %add41 = add nsw i32 %shr40, %3
  %and43 = and i32 %add36, 67108863
  %shr45 = ashr i32 %add41, 25
  %add46 = add nsw i32 %shr45, %4
  %and48 = and i32 %add41, 33554431
  %shr50 = ashr i32 %add46, 26
  %add51 = add nsw i32 %shr50, %5
  %shr55 = ashr i32 %add51, 25
  %add56 = add nsw i32 %shr55, %6
  %shr60 = ashr i32 %add56, 26
  %add61 = add nsw i32 %shr60, %7
  %and63 = and i32 %add56, 67108863
  %shr65 = ashr i32 %add61, 25
  %add66 = add nsw i32 %shr65, %8
  %and68 = and i32 %add61, 33554431
  %shr70 = ashr i32 %add66, 26
  %add71 = add nsw i32 %shr70, %9
  %and73 = and i32 %add66, 67108863
  %and76 = and i32 %add71, 33554431
  %conv79 = trunc i32 %add31 to i8
  store i8 %conv79, i8* %s, align 1, !tbaa !2
  %shr81.329 = lshr i32 %add31, 8
  %conv82 = trunc i32 %shr81.329 to i8
  %arrayidx83 = getelementptr inbounds i8, i8* %s, i64 1
  store i8 %conv82, i8* %arrayidx83, align 1, !tbaa !2
  %shr84.330 = lshr i32 %add31, 16
  %conv85 = trunc i32 %shr84.330 to i8
  %arrayidx86 = getelementptr inbounds i8, i8* %s, i64 2
  store i8 %conv85, i8* %arrayidx86, align 1, !tbaa !2
  %and = lshr i32 %add31, 24
  %shr87.331 = and i32 %and, 3
  %shl = shl nuw nsw i32 %and38, 2
  %or = or i32 %shl, %shr87.331
  %conv88 = trunc i32 %or to i8
  %arrayidx89 = getelementptr inbounds i8, i8* %s, i64 3
  store i8 %conv88, i8* %arrayidx89, align 1, !tbaa !2
  %shr90.332 = lshr i32 %add33, 6
  %conv91 = trunc i32 %shr90.332 to i8
  %arrayidx92 = getelementptr inbounds i8, i8* %s, i64 4
  store i8 %conv91, i8* %arrayidx92, align 1, !tbaa !2
  %shr93.333 = lshr i32 %add33, 14
  %conv94 = trunc i32 %shr93.333 to i8
  %arrayidx95 = getelementptr inbounds i8, i8* %s, i64 5
  store i8 %conv94, i8* %arrayidx95, align 1, !tbaa !2
  %shr96.334 = lshr i32 %and38, 22
  %shl97 = shl nuw nsw i32 %and43, 3
  %or98 = or i32 %shl97, %shr96.334
  %conv99 = trunc i32 %or98 to i8
  %arrayidx100 = getelementptr inbounds i8, i8* %s, i64 6
  store i8 %conv99, i8* %arrayidx100, align 1, !tbaa !2
  %shr101.335 = lshr i32 %add36, 5
  %conv102 = trunc i32 %shr101.335 to i8
  %arrayidx103 = getelementptr inbounds i8, i8* %s, i64 7
  store i8 %conv102, i8* %arrayidx103, align 1, !tbaa !2
  %shr104.336 = lshr i32 %add36, 13
  %conv105 = trunc i32 %shr104.336 to i8
  %arrayidx106 = getelementptr inbounds i8, i8* %s, i64 8
  store i8 %conv105, i8* %arrayidx106, align 1, !tbaa !2
  %shr107.337 = lshr i32 %and43, 21
  %shl108 = shl nuw nsw i32 %and48, 5
  %or109 = or i32 %shl108, %shr107.337
  %conv110 = trunc i32 %or109 to i8
  %arrayidx111 = getelementptr inbounds i8, i8* %s, i64 9
  store i8 %conv110, i8* %arrayidx111, align 1, !tbaa !2
  %shr112.338 = lshr i32 %add41, 3
  %conv113 = trunc i32 %shr112.338 to i8
  %arrayidx114 = getelementptr inbounds i8, i8* %s, i64 10
  store i8 %conv113, i8* %arrayidx114, align 1, !tbaa !2
  %shr115.339 = lshr i32 %add41, 11
  %conv116 = trunc i32 %shr115.339 to i8
  %arrayidx117 = getelementptr inbounds i8, i8* %s, i64 11
  store i8 %conv116, i8* %arrayidx117, align 1, !tbaa !2
  %shr118.340 = lshr i32 %and48, 19
  %shl119 = shl i32 %add46, 6
  %or120 = or i32 %shl119, %shr118.340
  %conv121 = trunc i32 %or120 to i8
  %arrayidx122 = getelementptr inbounds i8, i8* %s, i64 12
  store i8 %conv121, i8* %arrayidx122, align 1, !tbaa !2
  %shr123.341 = lshr i32 %add46, 2
  %conv124 = trunc i32 %shr123.341 to i8
  %arrayidx125 = getelementptr inbounds i8, i8* %s, i64 13
  store i8 %conv124, i8* %arrayidx125, align 1, !tbaa !2
  %shr126.342 = lshr i32 %add46, 10
  %conv127 = trunc i32 %shr126.342 to i8
  %arrayidx128 = getelementptr inbounds i8, i8* %s, i64 14
  store i8 %conv127, i8* %arrayidx128, align 1, !tbaa !2
  %and53 = lshr i32 %add46, 18
  %conv130 = trunc i32 %and53 to i8
  %arrayidx131 = getelementptr inbounds i8, i8* %s, i64 15
  store i8 %conv130, i8* %arrayidx131, align 1, !tbaa !2
  %conv133 = trunc i32 %add51 to i8
  %arrayidx134 = getelementptr inbounds i8, i8* %s, i64 16
  store i8 %conv133, i8* %arrayidx134, align 1, !tbaa !2
  %shr135.344 = lshr i32 %add51, 8
  %conv136 = trunc i32 %shr135.344 to i8
  %arrayidx137 = getelementptr inbounds i8, i8* %s, i64 17
  store i8 %conv136, i8* %arrayidx137, align 1, !tbaa !2
  %shr138.345 = lshr i32 %add51, 16
  %conv139 = trunc i32 %shr138.345 to i8
  %arrayidx140 = getelementptr inbounds i8, i8* %s, i64 18
  store i8 %conv139, i8* %arrayidx140, align 1, !tbaa !2
  %and58 = lshr i32 %add51, 24
  %shr141.346 = and i32 %and58, 1
  %shl142 = shl nuw nsw i32 %and63, 1
  %or143 = or i32 %shl142, %shr141.346
  %conv144 = trunc i32 %or143 to i8
  %arrayidx145 = getelementptr inbounds i8, i8* %s, i64 19
  store i8 %conv144, i8* %arrayidx145, align 1, !tbaa !2
  %shr146.347 = lshr i32 %add56, 7
  %conv147 = trunc i32 %shr146.347 to i8
  %arrayidx148 = getelementptr inbounds i8, i8* %s, i64 20
  store i8 %conv147, i8* %arrayidx148, align 1, !tbaa !2
  %shr149.348 = lshr i32 %add56, 15
  %conv150 = trunc i32 %shr149.348 to i8
  %arrayidx151 = getelementptr inbounds i8, i8* %s, i64 21
  store i8 %conv150, i8* %arrayidx151, align 1, !tbaa !2
  %shr152.349 = lshr i32 %and63, 23
  %shl153 = shl nuw nsw i32 %and68, 3
  %or154 = or i32 %shl153, %shr152.349
  %conv155 = trunc i32 %or154 to i8
  %arrayidx156 = getelementptr inbounds i8, i8* %s, i64 22
  store i8 %conv155, i8* %arrayidx156, align 1, !tbaa !2
  %shr157.350 = lshr i32 %add61, 5
  %conv158 = trunc i32 %shr157.350 to i8
  %arrayidx159 = getelementptr inbounds i8, i8* %s, i64 23
  store i8 %conv158, i8* %arrayidx159, align 1, !tbaa !2
  %shr160.351 = lshr i32 %add61, 13
  %conv161 = trunc i32 %shr160.351 to i8
  %arrayidx162 = getelementptr inbounds i8, i8* %s, i64 24
  store i8 %conv161, i8* %arrayidx162, align 1, !tbaa !2
  %shr163.352 = lshr i32 %and68, 21
  %shl164 = shl nuw nsw i32 %and73, 4
  %or165 = or i32 %shl164, %shr163.352
  %conv166 = trunc i32 %or165 to i8
  %arrayidx167 = getelementptr inbounds i8, i8* %s, i64 25
  store i8 %conv166, i8* %arrayidx167, align 1, !tbaa !2
  %shr168.353 = lshr i32 %add66, 4
  %conv169 = trunc i32 %shr168.353 to i8
  %arrayidx170 = getelementptr inbounds i8, i8* %s, i64 26
  store i8 %conv169, i8* %arrayidx170, align 1, !tbaa !2
  %shr171.354 = lshr i32 %add66, 12
  %conv172 = trunc i32 %shr171.354 to i8
  %arrayidx173 = getelementptr inbounds i8, i8* %s, i64 27
  store i8 %conv172, i8* %arrayidx173, align 1, !tbaa !2
  %shr174.355 = lshr i32 %and73, 20
  %shl175 = shl nuw nsw i32 %and76, 6
  %or176 = or i32 %shl175, %shr174.355
  %conv177 = trunc i32 %or176 to i8
  %arrayidx178 = getelementptr inbounds i8, i8* %s, i64 28
  store i8 %conv177, i8* %arrayidx178, align 1, !tbaa !2
  %shr179.356 = lshr i32 %add71, 2
  %conv180 = trunc i32 %shr179.356 to i8
  %arrayidx181 = getelementptr inbounds i8, i8* %s, i64 29
  store i8 %conv180, i8* %arrayidx181, align 1, !tbaa !2
  %shr182.357 = lshr i32 %add71, 10
  %conv183 = trunc i32 %shr182.357 to i8
  %arrayidx184 = getelementptr inbounds i8, i8* %s, i64 30
  store i8 %conv183, i8* %arrayidx184, align 1, !tbaa !2
  %shr185.358 = lshr i32 %and76, 18
  %conv186 = trunc i32 %shr185.358 to i8
  %arrayidx187 = getelementptr inbounds i8, i8* %s, i64 31
  store i8 %conv186, i8* %arrayidx187, align 1, !tbaa !2
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @table_select(%struct.ge_precomp* %t, i32 %pos, i8 signext %b) #0 {
entry:
  %conv.i = sext i8 %b to i32
  %shr.i = lshr i32 %conv.i, 31
  %conv1.i = trunc i32 %shr.i to i8
  %sub = sub nsw i8 0, %conv1.i
  %and = and i8 %sub, %b
  %shl = shl i8 %and, 1
  %sub5 = sub i8 %b, %shl
  %arraydecay.i.1404 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 0, i64 0
  %0 = bitcast %struct.ge_precomp* %t to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 36, i32 4, i1 false) #1
  %arraydecay1.i = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 1, i64 0
  %1 = bitcast i32* %arraydecay1.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 40, i32 4, i1 false) #1
  %arraydecay2.i.1405 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 2, i64 0
  %2 = bitcast i32* %arraydecay2.i.1405 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 40, i32 4, i1 false) #1
  %idxprom = sext i32 %pos to i64
  %xor8.i.1399 = xor i8 %sub5, 1
  %conv3.i.1400 = zext i8 %xor8.i.1399 to i32
  %sub.i.1401 = add nsw i32 %conv3.i.1400, -1
  %arraydecay2.i.1246 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 0, i64 0
  %sub.i.i.1248 = ashr i32 %sub.i.1401, 31
  %3 = load i32, i32* %arraydecay2.i.1246, align 16, !tbaa !7
  %xor.i.i.1249 = xor i32 %3, 1
  %and.i.i.1250 = and i32 %xor.i.i.1249, %sub.i.i.1248
  %xor3.i.i.1251 = xor i32 %and.i.i.1250, 1
  store i32 %xor3.i.i.1251, i32* %arraydecay.i.1404, align 4, !tbaa !7
  %arrayidx.1.i.i.1252 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 0, i64 1
  %arrayidx1.1.i.i.1253 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 0, i64 1
  %4 = load i32, i32* %arrayidx1.1.i.i.1253, align 4, !tbaa !7
  %and.1.i.i.1255 = and i32 %4, %sub.i.i.1248
  store i32 %and.1.i.i.1255, i32* %arrayidx.1.i.i.1252, align 4, !tbaa !7
  %arrayidx.2.i.i.1257 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 0, i64 2
  %arrayidx1.2.i.i.1258 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 0, i64 2
  %5 = load i32, i32* %arrayidx1.2.i.i.1258, align 8, !tbaa !7
  %and.2.i.i.1260 = and i32 %5, %sub.i.i.1248
  store i32 %and.2.i.i.1260, i32* %arrayidx.2.i.i.1257, align 4, !tbaa !7
  %arrayidx.3.i.i.1262 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 0, i64 3
  %arrayidx1.3.i.i.1263 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 0, i64 3
  %6 = load i32, i32* %arrayidx1.3.i.i.1263, align 4, !tbaa !7
  %and.3.i.i.1265 = and i32 %6, %sub.i.i.1248
  store i32 %and.3.i.i.1265, i32* %arrayidx.3.i.i.1262, align 4, !tbaa !7
  %arrayidx.4.i.i.1267 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 0, i64 4
  %arrayidx1.4.i.i.1268 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 0, i64 4
  %7 = load i32, i32* %arrayidx1.4.i.i.1268, align 16, !tbaa !7
  %and.4.i.i.1270 = and i32 %7, %sub.i.i.1248
  store i32 %and.4.i.i.1270, i32* %arrayidx.4.i.i.1267, align 4, !tbaa !7
  %arrayidx.5.i.i.1272 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 0, i64 5
  %arrayidx1.5.i.i.1273 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 0, i64 5
  %8 = load i32, i32* %arrayidx1.5.i.i.1273, align 4, !tbaa !7
  %and.5.i.i.1275 = and i32 %8, %sub.i.i.1248
  store i32 %and.5.i.i.1275, i32* %arrayidx.5.i.i.1272, align 4, !tbaa !7
  %arrayidx.6.i.i.1277 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 0, i64 6
  %arrayidx1.6.i.i.1278 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 0, i64 6
  %9 = load i32, i32* %arrayidx1.6.i.i.1278, align 8, !tbaa !7
  %and.6.i.i.1280 = and i32 %9, %sub.i.i.1248
  store i32 %and.6.i.i.1280, i32* %arrayidx.6.i.i.1277, align 4, !tbaa !7
  %arrayidx.7.i.i.1282 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 0, i64 7
  %arrayidx1.7.i.i.1283 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 0, i64 7
  %10 = load i32, i32* %arrayidx1.7.i.i.1283, align 4, !tbaa !7
  %and.7.i.i.1285 = and i32 %10, %sub.i.i.1248
  store i32 %and.7.i.i.1285, i32* %arrayidx.7.i.i.1282, align 4, !tbaa !7
  %arrayidx.8.i.i.1287 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 0, i64 8
  %arrayidx1.8.i.i.1288 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 0, i64 8
  %11 = load i32, i32* %arrayidx1.8.i.i.1288, align 16, !tbaa !7
  %and.8.i.i.1290 = and i32 %11, %sub.i.i.1248
  store i32 %and.8.i.i.1290, i32* %arrayidx.8.i.i.1287, align 4, !tbaa !7
  %arrayidx.9.i.i.1292 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 0, i64 9
  %arrayidx1.9.i.i.1293 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 0, i64 9
  %12 = load i32, i32* %arrayidx1.9.i.i.1293, align 4, !tbaa !7
  %and.9.i.i.1295 = and i32 %12, %sub.i.i.1248
  store i32 %and.9.i.i.1295, i32* %arrayidx.9.i.i.1292, align 4, !tbaa !7
  %arraydecay5.i.1298 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 1, i64 0
  %13 = load i32, i32* %arraydecay5.i.1298, align 8, !tbaa !7
  %xor.i.1302 = xor i32 %13, 1
  %and.i.1303 = and i32 %xor.i.1302, %sub.i.i.1248
  %xor3.i.1304 = xor i32 %and.i.1303, 1
  store i32 %xor3.i.1304, i32* %arraydecay1.i, align 4, !tbaa !7
  %arrayidx.1.i.1305 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 1, i64 1
  %arrayidx1.1.i.1306 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 1, i64 1
  %14 = load i32, i32* %arrayidx1.1.i.1306, align 4, !tbaa !7
  %and.1.i.1308 = and i32 %14, %sub.i.i.1248
  store i32 %and.1.i.1308, i32* %arrayidx.1.i.1305, align 4, !tbaa !7
  %arrayidx.2.i.1310 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 1, i64 2
  %arrayidx1.2.i.1311 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 1, i64 2
  %15 = load i32, i32* %arrayidx1.2.i.1311, align 8, !tbaa !7
  %and.2.i.1313 = and i32 %15, %sub.i.i.1248
  store i32 %and.2.i.1313, i32* %arrayidx.2.i.1310, align 4, !tbaa !7
  %arrayidx.3.i.1315 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 1, i64 3
  %arrayidx1.3.i.1316 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 1, i64 3
  %16 = load i32, i32* %arrayidx1.3.i.1316, align 4, !tbaa !7
  %and.3.i.1318 = and i32 %16, %sub.i.i.1248
  store i32 %and.3.i.1318, i32* %arrayidx.3.i.1315, align 4, !tbaa !7
  %arrayidx.4.i.1320 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 1, i64 4
  %arrayidx1.4.i.1321 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 1, i64 4
  %17 = load i32, i32* %arrayidx1.4.i.1321, align 8, !tbaa !7
  %and.4.i.1323 = and i32 %17, %sub.i.i.1248
  store i32 %and.4.i.1323, i32* %arrayidx.4.i.1320, align 4, !tbaa !7
  %arrayidx.5.i.1325 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 1, i64 5
  %arrayidx1.5.i.1326 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 1, i64 5
  %18 = load i32, i32* %arrayidx1.5.i.1326, align 4, !tbaa !7
  %and.5.i.1328 = and i32 %18, %sub.i.i.1248
  store i32 %and.5.i.1328, i32* %arrayidx.5.i.1325, align 4, !tbaa !7
  %arrayidx.6.i.1330 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 1, i64 6
  %arrayidx1.6.i.1331 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 1, i64 6
  %19 = load i32, i32* %arrayidx1.6.i.1331, align 8, !tbaa !7
  %and.6.i.1333 = and i32 %19, %sub.i.i.1248
  store i32 %and.6.i.1333, i32* %arrayidx.6.i.1330, align 4, !tbaa !7
  %arrayidx.7.i.1335 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 1, i64 7
  %arrayidx1.7.i.1336 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 1, i64 7
  %20 = load i32, i32* %arrayidx1.7.i.1336, align 4, !tbaa !7
  %and.7.i.1338 = and i32 %20, %sub.i.i.1248
  store i32 %and.7.i.1338, i32* %arrayidx.7.i.1335, align 4, !tbaa !7
  %arrayidx.8.i.1340 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 1, i64 8
  %21 = load i32, i32* %arrayidx.8.i.1340, align 4, !tbaa !7
  %arrayidx1.8.i.1341 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 1, i64 8
  %22 = load i32, i32* %arrayidx1.8.i.1341, align 8, !tbaa !7
  %xor.8.i.1342 = xor i32 %22, %21
  %and.8.i.1343 = and i32 %xor.8.i.1342, %sub.i.i.1248
  %xor3.8.i.1344 = xor i32 %and.8.i.1343, %21
  store i32 %xor3.8.i.1344, i32* %arrayidx.8.i.1340, align 4, !tbaa !7
  %arrayidx.9.i.1345 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 1, i64 9
  %23 = load i32, i32* %arrayidx.9.i.1345, align 4, !tbaa !7
  %arrayidx1.9.i.1346 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 1, i64 9
  %24 = load i32, i32* %arrayidx1.9.i.1346, align 4, !tbaa !7
  %xor.9.i.1347 = xor i32 %24, %23
  %and.9.i.1348 = and i32 %xor.9.i.1347, %sub.i.i.1248
  %xor3.9.i.1349 = xor i32 %and.9.i.1348, %23
  store i32 %xor3.9.i.1349, i32* %arrayidx.9.i.1345, align 4, !tbaa !7
  %arraydecay9.i.1300 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 2, i64 0
  %25 = load i32, i32* %arraydecay2.i.1405, align 4, !tbaa !7
  %26 = load i32, i32* %arraydecay9.i.1300, align 16, !tbaa !7
  %xor.i.1351 = xor i32 %26, %25
  %and.i.1352 = and i32 %xor.i.1351, %sub.i.i.1248
  %xor3.i.1353 = xor i32 %and.i.1352, %25
  store i32 %xor3.i.1353, i32* %arraydecay2.i.1405, align 4, !tbaa !7
  %arrayidx.1.i.1354 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 2, i64 1
  %27 = load i32, i32* %arrayidx.1.i.1354, align 4, !tbaa !7
  %arrayidx1.1.i.1355 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 2, i64 1
  %28 = load i32, i32* %arrayidx1.1.i.1355, align 4, !tbaa !7
  %xor.1.i.1356 = xor i32 %28, %27
  %and.1.i.1357 = and i32 %xor.1.i.1356, %sub.i.i.1248
  %xor3.1.i.1358 = xor i32 %and.1.i.1357, %27
  store i32 %xor3.1.i.1358, i32* %arrayidx.1.i.1354, align 4, !tbaa !7
  %arrayidx.2.i.1359 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 2, i64 2
  %29 = load i32, i32* %arrayidx.2.i.1359, align 4, !tbaa !7
  %arrayidx1.2.i.1360 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 2, i64 2
  %30 = load i32, i32* %arrayidx1.2.i.1360, align 8, !tbaa !7
  %xor.2.i.1361 = xor i32 %30, %29
  %and.2.i.1362 = and i32 %xor.2.i.1361, %sub.i.i.1248
  %xor3.2.i.1363 = xor i32 %and.2.i.1362, %29
  store i32 %xor3.2.i.1363, i32* %arrayidx.2.i.1359, align 4, !tbaa !7
  %arrayidx.3.i.1364 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 2, i64 3
  %31 = load i32, i32* %arrayidx.3.i.1364, align 4, !tbaa !7
  %arrayidx1.3.i.1365 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 2, i64 3
  %32 = load i32, i32* %arrayidx1.3.i.1365, align 4, !tbaa !7
  %xor.3.i.1366 = xor i32 %32, %31
  %and.3.i.1367 = and i32 %xor.3.i.1366, %sub.i.i.1248
  %xor3.3.i.1368 = xor i32 %and.3.i.1367, %31
  store i32 %xor3.3.i.1368, i32* %arrayidx.3.i.1364, align 4, !tbaa !7
  %arrayidx.4.i.1369 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 2, i64 4
  %33 = load i32, i32* %arrayidx.4.i.1369, align 4, !tbaa !7
  %arrayidx1.4.i.1370 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 2, i64 4
  %34 = load i32, i32* %arrayidx1.4.i.1370, align 16, !tbaa !7
  %xor.4.i.1371 = xor i32 %34, %33
  %and.4.i.1372 = and i32 %xor.4.i.1371, %sub.i.i.1248
  %xor3.4.i.1373 = xor i32 %and.4.i.1372, %33
  store i32 %xor3.4.i.1373, i32* %arrayidx.4.i.1369, align 4, !tbaa !7
  %arrayidx.5.i.1374 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 2, i64 5
  %35 = load i32, i32* %arrayidx.5.i.1374, align 4, !tbaa !7
  %arrayidx1.5.i.1375 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 2, i64 5
  %36 = load i32, i32* %arrayidx1.5.i.1375, align 4, !tbaa !7
  %xor.5.i.1376 = xor i32 %36, %35
  %and.5.i.1377 = and i32 %xor.5.i.1376, %sub.i.i.1248
  %xor3.5.i.1378 = xor i32 %and.5.i.1377, %35
  store i32 %xor3.5.i.1378, i32* %arrayidx.5.i.1374, align 4, !tbaa !7
  %arrayidx.6.i.1379 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 2, i64 6
  %37 = load i32, i32* %arrayidx.6.i.1379, align 4, !tbaa !7
  %arrayidx1.6.i.1380 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 2, i64 6
  %38 = load i32, i32* %arrayidx1.6.i.1380, align 8, !tbaa !7
  %xor.6.i.1381 = xor i32 %38, %37
  %and.6.i.1382 = and i32 %xor.6.i.1381, %sub.i.i.1248
  %xor3.6.i.1383 = xor i32 %and.6.i.1382, %37
  store i32 %xor3.6.i.1383, i32* %arrayidx.6.i.1379, align 4, !tbaa !7
  %arrayidx.7.i.1384 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 2, i64 7
  %39 = load i32, i32* %arrayidx.7.i.1384, align 4, !tbaa !7
  %arrayidx1.7.i.1385 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 2, i64 7
  %40 = load i32, i32* %arrayidx1.7.i.1385, align 4, !tbaa !7
  %xor.7.i.1386 = xor i32 %40, %39
  %and.7.i.1387 = and i32 %xor.7.i.1386, %sub.i.i.1248
  %xor3.7.i.1388 = xor i32 %and.7.i.1387, %39
  store i32 %xor3.7.i.1388, i32* %arrayidx.7.i.1384, align 4, !tbaa !7
  %arrayidx.8.i.1389 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 2, i64 8
  %41 = load i32, i32* %arrayidx.8.i.1389, align 4, !tbaa !7
  %arrayidx1.8.i.1390 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 2, i64 8
  %42 = load i32, i32* %arrayidx1.8.i.1390, align 16, !tbaa !7
  %xor.8.i.1391 = xor i32 %42, %41
  %and.8.i.1392 = and i32 %xor.8.i.1391, %sub.i.i.1248
  %xor3.8.i.1393 = xor i32 %and.8.i.1392, %41
  store i32 %xor3.8.i.1393, i32* %arrayidx.8.i.1389, align 4, !tbaa !7
  %arrayidx.9.i.1394 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %t, i64 0, i32 2, i64 9
  %43 = load i32, i32* %arrayidx.9.i.1394, align 4, !tbaa !7
  %arrayidx1.9.i.1395 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 0, i32 2, i64 9
  %44 = load i32, i32* %arrayidx1.9.i.1395, align 4, !tbaa !7
  %xor.9.i.1396 = xor i32 %44, %43
  %and.9.i.1397 = and i32 %xor.9.i.1396, %sub.i.i.1248
  %xor3.9.i.1398 = xor i32 %and.9.i.1397, %43
  store i32 %xor3.9.i.1398, i32* %arrayidx.9.i.1394, align 4, !tbaa !7
  %xor8.i.1240 = xor i8 %sub5, 2
  %conv3.i.1241 = zext i8 %xor8.i.1240 to i32
  %sub.i.1242 = add nsw i32 %conv3.i.1241, -1
  %arraydecay2.i.1087 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 0, i64 0
  %sub.i.i.1089 = ashr i32 %sub.i.1242, 31
  %45 = load i32, i32* %arraydecay.i.1404, align 4, !tbaa !7
  %46 = load i32, i32* %arraydecay2.i.1087, align 8, !tbaa !7
  %xor.i.i.1090 = xor i32 %46, %45
  %and.i.i.1091 = and i32 %xor.i.i.1090, %sub.i.i.1089
  %xor3.i.i.1092 = xor i32 %and.i.i.1091, %45
  store i32 %xor3.i.i.1092, i32* %arraydecay.i.1404, align 4, !tbaa !7
  %47 = load i32, i32* %arrayidx.1.i.i.1252, align 4, !tbaa !7
  %arrayidx1.1.i.i.1094 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 0, i64 1
  %48 = load i32, i32* %arrayidx1.1.i.i.1094, align 4, !tbaa !7
  %xor.1.i.i.1095 = xor i32 %48, %47
  %and.1.i.i.1096 = and i32 %xor.1.i.i.1095, %sub.i.i.1089
  %xor3.1.i.i.1097 = xor i32 %and.1.i.i.1096, %47
  store i32 %xor3.1.i.i.1097, i32* %arrayidx.1.i.i.1252, align 4, !tbaa !7
  %49 = load i32, i32* %arrayidx.2.i.i.1257, align 4, !tbaa !7
  %arrayidx1.2.i.i.1099 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 0, i64 2
  %50 = load i32, i32* %arrayidx1.2.i.i.1099, align 8, !tbaa !7
  %xor.2.i.i.1100 = xor i32 %50, %49
  %and.2.i.i.1101 = and i32 %xor.2.i.i.1100, %sub.i.i.1089
  %xor3.2.i.i.1102 = xor i32 %and.2.i.i.1101, %49
  store i32 %xor3.2.i.i.1102, i32* %arrayidx.2.i.i.1257, align 4, !tbaa !7
  %51 = load i32, i32* %arrayidx.3.i.i.1262, align 4, !tbaa !7
  %arrayidx1.3.i.i.1104 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 0, i64 3
  %52 = load i32, i32* %arrayidx1.3.i.i.1104, align 4, !tbaa !7
  %xor.3.i.i.1105 = xor i32 %52, %51
  %and.3.i.i.1106 = and i32 %xor.3.i.i.1105, %sub.i.i.1089
  %xor3.3.i.i.1107 = xor i32 %and.3.i.i.1106, %51
  store i32 %xor3.3.i.i.1107, i32* %arrayidx.3.i.i.1262, align 4, !tbaa !7
  %53 = load i32, i32* %arrayidx.4.i.i.1267, align 4, !tbaa !7
  %arrayidx1.4.i.i.1109 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 0, i64 4
  %54 = load i32, i32* %arrayidx1.4.i.i.1109, align 8, !tbaa !7
  %xor.4.i.i.1110 = xor i32 %54, %53
  %and.4.i.i.1111 = and i32 %xor.4.i.i.1110, %sub.i.i.1089
  %xor3.4.i.i.1112 = xor i32 %and.4.i.i.1111, %53
  store i32 %xor3.4.i.i.1112, i32* %arrayidx.4.i.i.1267, align 4, !tbaa !7
  %55 = load i32, i32* %arrayidx.5.i.i.1272, align 4, !tbaa !7
  %arrayidx1.5.i.i.1114 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 0, i64 5
  %56 = load i32, i32* %arrayidx1.5.i.i.1114, align 4, !tbaa !7
  %xor.5.i.i.1115 = xor i32 %56, %55
  %and.5.i.i.1116 = and i32 %xor.5.i.i.1115, %sub.i.i.1089
  %xor3.5.i.i.1117 = xor i32 %and.5.i.i.1116, %55
  store i32 %xor3.5.i.i.1117, i32* %arrayidx.5.i.i.1272, align 4, !tbaa !7
  %57 = load i32, i32* %arrayidx.6.i.i.1277, align 4, !tbaa !7
  %arrayidx1.6.i.i.1119 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 0, i64 6
  %58 = load i32, i32* %arrayidx1.6.i.i.1119, align 8, !tbaa !7
  %xor.6.i.i.1120 = xor i32 %58, %57
  %and.6.i.i.1121 = and i32 %xor.6.i.i.1120, %sub.i.i.1089
  %xor3.6.i.i.1122 = xor i32 %and.6.i.i.1121, %57
  store i32 %xor3.6.i.i.1122, i32* %arrayidx.6.i.i.1277, align 4, !tbaa !7
  %59 = load i32, i32* %arrayidx.7.i.i.1282, align 4, !tbaa !7
  %arrayidx1.7.i.i.1124 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 0, i64 7
  %60 = load i32, i32* %arrayidx1.7.i.i.1124, align 4, !tbaa !7
  %xor.7.i.i.1125 = xor i32 %60, %59
  %and.7.i.i.1126 = and i32 %xor.7.i.i.1125, %sub.i.i.1089
  %xor3.7.i.i.1127 = xor i32 %and.7.i.i.1126, %59
  store i32 %xor3.7.i.i.1127, i32* %arrayidx.7.i.i.1282, align 4, !tbaa !7
  %61 = load i32, i32* %arrayidx.8.i.i.1287, align 4, !tbaa !7
  %arrayidx1.8.i.i.1129 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 0, i64 8
  %62 = load i32, i32* %arrayidx1.8.i.i.1129, align 8, !tbaa !7
  %xor.8.i.i.1130 = xor i32 %62, %61
  %and.8.i.i.1131 = and i32 %xor.8.i.i.1130, %sub.i.i.1089
  %xor3.8.i.i.1132 = xor i32 %and.8.i.i.1131, %61
  store i32 %xor3.8.i.i.1132, i32* %arrayidx.8.i.i.1287, align 4, !tbaa !7
  %63 = load i32, i32* %arrayidx.9.i.i.1292, align 4, !tbaa !7
  %arrayidx1.9.i.i.1134 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 0, i64 9
  %64 = load i32, i32* %arrayidx1.9.i.i.1134, align 4, !tbaa !7
  %xor.9.i.i.1135 = xor i32 %64, %63
  %and.9.i.i.1136 = and i32 %xor.9.i.i.1135, %sub.i.i.1089
  %xor3.9.i.i.1137 = xor i32 %and.9.i.i.1136, %63
  store i32 %xor3.9.i.i.1137, i32* %arrayidx.9.i.i.1292, align 4, !tbaa !7
  %arraydecay5.i.1139 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 1, i64 0
  %65 = load i32, i32* %arraydecay1.i, align 4, !tbaa !7
  %66 = load i32, i32* %arraydecay5.i.1139, align 8, !tbaa !7
  %xor.i.1143 = xor i32 %66, %65
  %and.i.1144 = and i32 %xor.i.1143, %sub.i.i.1089
  %xor3.i.1145 = xor i32 %and.i.1144, %65
  store i32 %xor3.i.1145, i32* %arraydecay1.i, align 4, !tbaa !7
  %67 = load i32, i32* %arrayidx.1.i.1305, align 4, !tbaa !7
  %arrayidx1.1.i.1147 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 1, i64 1
  %68 = load i32, i32* %arrayidx1.1.i.1147, align 4, !tbaa !7
  %xor.1.i.1148 = xor i32 %68, %67
  %and.1.i.1149 = and i32 %xor.1.i.1148, %sub.i.i.1089
  %xor3.1.i.1150 = xor i32 %and.1.i.1149, %67
  store i32 %xor3.1.i.1150, i32* %arrayidx.1.i.1305, align 4, !tbaa !7
  %69 = load i32, i32* %arrayidx.2.i.1310, align 4, !tbaa !7
  %arrayidx1.2.i.1152 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 1, i64 2
  %70 = load i32, i32* %arrayidx1.2.i.1152, align 8, !tbaa !7
  %xor.2.i.1153 = xor i32 %70, %69
  %and.2.i.1154 = and i32 %xor.2.i.1153, %sub.i.i.1089
  %xor3.2.i.1155 = xor i32 %and.2.i.1154, %69
  store i32 %xor3.2.i.1155, i32* %arrayidx.2.i.1310, align 4, !tbaa !7
  %71 = load i32, i32* %arrayidx.3.i.1315, align 4, !tbaa !7
  %arrayidx1.3.i.1157 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 1, i64 3
  %72 = load i32, i32* %arrayidx1.3.i.1157, align 4, !tbaa !7
  %xor.3.i.1158 = xor i32 %72, %71
  %and.3.i.1159 = and i32 %xor.3.i.1158, %sub.i.i.1089
  %xor3.3.i.1160 = xor i32 %and.3.i.1159, %71
  store i32 %xor3.3.i.1160, i32* %arrayidx.3.i.1315, align 4, !tbaa !7
  %73 = load i32, i32* %arrayidx.4.i.1320, align 4, !tbaa !7
  %arrayidx1.4.i.1162 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 1, i64 4
  %74 = load i32, i32* %arrayidx1.4.i.1162, align 8, !tbaa !7
  %xor.4.i.1163 = xor i32 %74, %73
  %and.4.i.1164 = and i32 %xor.4.i.1163, %sub.i.i.1089
  %xor3.4.i.1165 = xor i32 %and.4.i.1164, %73
  store i32 %xor3.4.i.1165, i32* %arrayidx.4.i.1320, align 4, !tbaa !7
  %75 = load i32, i32* %arrayidx.5.i.1325, align 4, !tbaa !7
  %arrayidx1.5.i.1167 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 1, i64 5
  %76 = load i32, i32* %arrayidx1.5.i.1167, align 4, !tbaa !7
  %xor.5.i.1168 = xor i32 %76, %75
  %and.5.i.1169 = and i32 %xor.5.i.1168, %sub.i.i.1089
  %xor3.5.i.1170 = xor i32 %and.5.i.1169, %75
  store i32 %xor3.5.i.1170, i32* %arrayidx.5.i.1325, align 4, !tbaa !7
  %77 = load i32, i32* %arrayidx.6.i.1330, align 4, !tbaa !7
  %arrayidx1.6.i.1172 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 1, i64 6
  %78 = load i32, i32* %arrayidx1.6.i.1172, align 8, !tbaa !7
  %xor.6.i.1173 = xor i32 %78, %77
  %and.6.i.1174 = and i32 %xor.6.i.1173, %sub.i.i.1089
  %xor3.6.i.1175 = xor i32 %and.6.i.1174, %77
  store i32 %xor3.6.i.1175, i32* %arrayidx.6.i.1330, align 4, !tbaa !7
  %79 = load i32, i32* %arrayidx.7.i.1335, align 4, !tbaa !7
  %arrayidx1.7.i.1177 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 1, i64 7
  %80 = load i32, i32* %arrayidx1.7.i.1177, align 4, !tbaa !7
  %xor.7.i.1178 = xor i32 %80, %79
  %and.7.i.1179 = and i32 %xor.7.i.1178, %sub.i.i.1089
  %xor3.7.i.1180 = xor i32 %and.7.i.1179, %79
  store i32 %xor3.7.i.1180, i32* %arrayidx.7.i.1335, align 4, !tbaa !7
  %81 = load i32, i32* %arrayidx.8.i.1340, align 4, !tbaa !7
  %arrayidx1.8.i.1182 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 1, i64 8
  %82 = load i32, i32* %arrayidx1.8.i.1182, align 8, !tbaa !7
  %xor.8.i.1183 = xor i32 %82, %81
  %and.8.i.1184 = and i32 %xor.8.i.1183, %sub.i.i.1089
  %xor3.8.i.1185 = xor i32 %and.8.i.1184, %81
  store i32 %xor3.8.i.1185, i32* %arrayidx.8.i.1340, align 4, !tbaa !7
  %83 = load i32, i32* %arrayidx.9.i.1345, align 4, !tbaa !7
  %arrayidx1.9.i.1187 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 1, i64 9
  %84 = load i32, i32* %arrayidx1.9.i.1187, align 4, !tbaa !7
  %xor.9.i.1188 = xor i32 %84, %83
  %and.9.i.1189 = and i32 %xor.9.i.1188, %sub.i.i.1089
  %xor3.9.i.1190 = xor i32 %and.9.i.1189, %83
  store i32 %xor3.9.i.1190, i32* %arrayidx.9.i.1345, align 4, !tbaa !7
  %arraydecay9.i.1141 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 2, i64 0
  %85 = load i32, i32* %arraydecay2.i.1405, align 4, !tbaa !7
  %86 = load i32, i32* %arraydecay9.i.1141, align 8, !tbaa !7
  %xor.i.1192 = xor i32 %86, %85
  %and.i.1193 = and i32 %xor.i.1192, %sub.i.i.1089
  %xor3.i.1194 = xor i32 %and.i.1193, %85
  store i32 %xor3.i.1194, i32* %arraydecay2.i.1405, align 4, !tbaa !7
  %87 = load i32, i32* %arrayidx.1.i.1354, align 4, !tbaa !7
  %arrayidx1.1.i.1196 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 2, i64 1
  %88 = load i32, i32* %arrayidx1.1.i.1196, align 4, !tbaa !7
  %xor.1.i.1197 = xor i32 %88, %87
  %and.1.i.1198 = and i32 %xor.1.i.1197, %sub.i.i.1089
  %xor3.1.i.1199 = xor i32 %and.1.i.1198, %87
  store i32 %xor3.1.i.1199, i32* %arrayidx.1.i.1354, align 4, !tbaa !7
  %89 = load i32, i32* %arrayidx.2.i.1359, align 4, !tbaa !7
  %arrayidx1.2.i.1201 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 2, i64 2
  %90 = load i32, i32* %arrayidx1.2.i.1201, align 8, !tbaa !7
  %xor.2.i.1202 = xor i32 %90, %89
  %and.2.i.1203 = and i32 %xor.2.i.1202, %sub.i.i.1089
  %xor3.2.i.1204 = xor i32 %and.2.i.1203, %89
  store i32 %xor3.2.i.1204, i32* %arrayidx.2.i.1359, align 4, !tbaa !7
  %91 = load i32, i32* %arrayidx.3.i.1364, align 4, !tbaa !7
  %arrayidx1.3.i.1206 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 2, i64 3
  %92 = load i32, i32* %arrayidx1.3.i.1206, align 4, !tbaa !7
  %xor.3.i.1207 = xor i32 %92, %91
  %and.3.i.1208 = and i32 %xor.3.i.1207, %sub.i.i.1089
  %xor3.3.i.1209 = xor i32 %and.3.i.1208, %91
  store i32 %xor3.3.i.1209, i32* %arrayidx.3.i.1364, align 4, !tbaa !7
  %93 = load i32, i32* %arrayidx.4.i.1369, align 4, !tbaa !7
  %arrayidx1.4.i.1211 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 2, i64 4
  %94 = load i32, i32* %arrayidx1.4.i.1211, align 8, !tbaa !7
  %xor.4.i.1212 = xor i32 %94, %93
  %and.4.i.1213 = and i32 %xor.4.i.1212, %sub.i.i.1089
  %xor3.4.i.1214 = xor i32 %and.4.i.1213, %93
  store i32 %xor3.4.i.1214, i32* %arrayidx.4.i.1369, align 4, !tbaa !7
  %95 = load i32, i32* %arrayidx.5.i.1374, align 4, !tbaa !7
  %arrayidx1.5.i.1216 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 2, i64 5
  %96 = load i32, i32* %arrayidx1.5.i.1216, align 4, !tbaa !7
  %xor.5.i.1217 = xor i32 %96, %95
  %and.5.i.1218 = and i32 %xor.5.i.1217, %sub.i.i.1089
  %xor3.5.i.1219 = xor i32 %and.5.i.1218, %95
  store i32 %xor3.5.i.1219, i32* %arrayidx.5.i.1374, align 4, !tbaa !7
  %97 = load i32, i32* %arrayidx.6.i.1379, align 4, !tbaa !7
  %arrayidx1.6.i.1221 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 2, i64 6
  %98 = load i32, i32* %arrayidx1.6.i.1221, align 8, !tbaa !7
  %xor.6.i.1222 = xor i32 %98, %97
  %and.6.i.1223 = and i32 %xor.6.i.1222, %sub.i.i.1089
  %xor3.6.i.1224 = xor i32 %and.6.i.1223, %97
  store i32 %xor3.6.i.1224, i32* %arrayidx.6.i.1379, align 4, !tbaa !7
  %99 = load i32, i32* %arrayidx.7.i.1384, align 4, !tbaa !7
  %arrayidx1.7.i.1226 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 2, i64 7
  %100 = load i32, i32* %arrayidx1.7.i.1226, align 4, !tbaa !7
  %xor.7.i.1227 = xor i32 %100, %99
  %and.7.i.1228 = and i32 %xor.7.i.1227, %sub.i.i.1089
  %xor3.7.i.1229 = xor i32 %and.7.i.1228, %99
  store i32 %xor3.7.i.1229, i32* %arrayidx.7.i.1384, align 4, !tbaa !7
  %101 = load i32, i32* %arrayidx.8.i.1389, align 4, !tbaa !7
  %arrayidx1.8.i.1231 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 2, i64 8
  %102 = load i32, i32* %arrayidx1.8.i.1231, align 8, !tbaa !7
  %xor.8.i.1232 = xor i32 %102, %101
  %and.8.i.1233 = and i32 %xor.8.i.1232, %sub.i.i.1089
  %xor3.8.i.1234 = xor i32 %and.8.i.1233, %101
  store i32 %xor3.8.i.1234, i32* %arrayidx.8.i.1389, align 4, !tbaa !7
  %103 = load i32, i32* %arrayidx.9.i.1394, align 4, !tbaa !7
  %arrayidx1.9.i.1236 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 1, i32 2, i64 9
  %104 = load i32, i32* %arrayidx1.9.i.1236, align 4, !tbaa !7
  %xor.9.i.1237 = xor i32 %104, %103
  %and.9.i.1238 = and i32 %xor.9.i.1237, %sub.i.i.1089
  %xor3.9.i.1239 = xor i32 %and.9.i.1238, %103
  store i32 %xor3.9.i.1239, i32* %arrayidx.9.i.1394, align 4, !tbaa !7
  %xor8.i.1081 = xor i8 %sub5, 3
  %conv3.i.1082 = zext i8 %xor8.i.1081 to i32
  %sub.i.1083 = add nsw i32 %conv3.i.1082, -1
  %arraydecay2.i.928 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 0, i64 0
  %sub.i.i.930 = ashr i32 %sub.i.1083, 31
  %105 = load i32, i32* %arraydecay.i.1404, align 4, !tbaa !7
  %106 = load i32, i32* %arraydecay2.i.928, align 16, !tbaa !7
  %xor.i.i.931 = xor i32 %106, %105
  %and.i.i.932 = and i32 %xor.i.i.931, %sub.i.i.930
  %xor3.i.i.933 = xor i32 %and.i.i.932, %105
  store i32 %xor3.i.i.933, i32* %arraydecay.i.1404, align 4, !tbaa !7
  %107 = load i32, i32* %arrayidx.1.i.i.1252, align 4, !tbaa !7
  %arrayidx1.1.i.i.935 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 0, i64 1
  %108 = load i32, i32* %arrayidx1.1.i.i.935, align 4, !tbaa !7
  %xor.1.i.i.936 = xor i32 %108, %107
  %and.1.i.i.937 = and i32 %xor.1.i.i.936, %sub.i.i.930
  %xor3.1.i.i.938 = xor i32 %and.1.i.i.937, %107
  store i32 %xor3.1.i.i.938, i32* %arrayidx.1.i.i.1252, align 4, !tbaa !7
  %109 = load i32, i32* %arrayidx.2.i.i.1257, align 4, !tbaa !7
  %arrayidx1.2.i.i.940 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 0, i64 2
  %110 = load i32, i32* %arrayidx1.2.i.i.940, align 8, !tbaa !7
  %xor.2.i.i.941 = xor i32 %110, %109
  %and.2.i.i.942 = and i32 %xor.2.i.i.941, %sub.i.i.930
  %xor3.2.i.i.943 = xor i32 %and.2.i.i.942, %109
  store i32 %xor3.2.i.i.943, i32* %arrayidx.2.i.i.1257, align 4, !tbaa !7
  %111 = load i32, i32* %arrayidx.3.i.i.1262, align 4, !tbaa !7
  %arrayidx1.3.i.i.945 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 0, i64 3
  %112 = load i32, i32* %arrayidx1.3.i.i.945, align 4, !tbaa !7
  %xor.3.i.i.946 = xor i32 %112, %111
  %and.3.i.i.947 = and i32 %xor.3.i.i.946, %sub.i.i.930
  %xor3.3.i.i.948 = xor i32 %and.3.i.i.947, %111
  store i32 %xor3.3.i.i.948, i32* %arrayidx.3.i.i.1262, align 4, !tbaa !7
  %113 = load i32, i32* %arrayidx.4.i.i.1267, align 4, !tbaa !7
  %arrayidx1.4.i.i.950 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 0, i64 4
  %114 = load i32, i32* %arrayidx1.4.i.i.950, align 16, !tbaa !7
  %xor.4.i.i.951 = xor i32 %114, %113
  %and.4.i.i.952 = and i32 %xor.4.i.i.951, %sub.i.i.930
  %xor3.4.i.i.953 = xor i32 %and.4.i.i.952, %113
  store i32 %xor3.4.i.i.953, i32* %arrayidx.4.i.i.1267, align 4, !tbaa !7
  %115 = load i32, i32* %arrayidx.5.i.i.1272, align 4, !tbaa !7
  %arrayidx1.5.i.i.955 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 0, i64 5
  %116 = load i32, i32* %arrayidx1.5.i.i.955, align 4, !tbaa !7
  %xor.5.i.i.956 = xor i32 %116, %115
  %and.5.i.i.957 = and i32 %xor.5.i.i.956, %sub.i.i.930
  %xor3.5.i.i.958 = xor i32 %and.5.i.i.957, %115
  store i32 %xor3.5.i.i.958, i32* %arrayidx.5.i.i.1272, align 4, !tbaa !7
  %117 = load i32, i32* %arrayidx.6.i.i.1277, align 4, !tbaa !7
  %arrayidx1.6.i.i.960 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 0, i64 6
  %118 = load i32, i32* %arrayidx1.6.i.i.960, align 8, !tbaa !7
  %xor.6.i.i.961 = xor i32 %118, %117
  %and.6.i.i.962 = and i32 %xor.6.i.i.961, %sub.i.i.930
  %xor3.6.i.i.963 = xor i32 %and.6.i.i.962, %117
  store i32 %xor3.6.i.i.963, i32* %arrayidx.6.i.i.1277, align 4, !tbaa !7
  %119 = load i32, i32* %arrayidx.7.i.i.1282, align 4, !tbaa !7
  %arrayidx1.7.i.i.965 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 0, i64 7
  %120 = load i32, i32* %arrayidx1.7.i.i.965, align 4, !tbaa !7
  %xor.7.i.i.966 = xor i32 %120, %119
  %and.7.i.i.967 = and i32 %xor.7.i.i.966, %sub.i.i.930
  %xor3.7.i.i.968 = xor i32 %and.7.i.i.967, %119
  store i32 %xor3.7.i.i.968, i32* %arrayidx.7.i.i.1282, align 4, !tbaa !7
  %121 = load i32, i32* %arrayidx.8.i.i.1287, align 4, !tbaa !7
  %arrayidx1.8.i.i.970 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 0, i64 8
  %122 = load i32, i32* %arrayidx1.8.i.i.970, align 16, !tbaa !7
  %xor.8.i.i.971 = xor i32 %122, %121
  %and.8.i.i.972 = and i32 %xor.8.i.i.971, %sub.i.i.930
  %xor3.8.i.i.973 = xor i32 %and.8.i.i.972, %121
  store i32 %xor3.8.i.i.973, i32* %arrayidx.8.i.i.1287, align 4, !tbaa !7
  %123 = load i32, i32* %arrayidx.9.i.i.1292, align 4, !tbaa !7
  %arrayidx1.9.i.i.975 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 0, i64 9
  %124 = load i32, i32* %arrayidx1.9.i.i.975, align 4, !tbaa !7
  %xor.9.i.i.976 = xor i32 %124, %123
  %and.9.i.i.977 = and i32 %xor.9.i.i.976, %sub.i.i.930
  %xor3.9.i.i.978 = xor i32 %and.9.i.i.977, %123
  store i32 %xor3.9.i.i.978, i32* %arrayidx.9.i.i.1292, align 4, !tbaa !7
  %arraydecay5.i.980 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 1, i64 0
  %125 = load i32, i32* %arraydecay1.i, align 4, !tbaa !7
  %126 = load i32, i32* %arraydecay5.i.980, align 8, !tbaa !7
  %xor.i.984 = xor i32 %126, %125
  %and.i.985 = and i32 %xor.i.984, %sub.i.i.930
  %xor3.i.986 = xor i32 %and.i.985, %125
  store i32 %xor3.i.986, i32* %arraydecay1.i, align 4, !tbaa !7
  %127 = load i32, i32* %arrayidx.1.i.1305, align 4, !tbaa !7
  %arrayidx1.1.i.988 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 1, i64 1
  %128 = load i32, i32* %arrayidx1.1.i.988, align 4, !tbaa !7
  %xor.1.i.989 = xor i32 %128, %127
  %and.1.i.990 = and i32 %xor.1.i.989, %sub.i.i.930
  %xor3.1.i.991 = xor i32 %and.1.i.990, %127
  store i32 %xor3.1.i.991, i32* %arrayidx.1.i.1305, align 4, !tbaa !7
  %129 = load i32, i32* %arrayidx.2.i.1310, align 4, !tbaa !7
  %arrayidx1.2.i.993 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 1, i64 2
  %130 = load i32, i32* %arrayidx1.2.i.993, align 8, !tbaa !7
  %xor.2.i.994 = xor i32 %130, %129
  %and.2.i.995 = and i32 %xor.2.i.994, %sub.i.i.930
  %xor3.2.i.996 = xor i32 %and.2.i.995, %129
  store i32 %xor3.2.i.996, i32* %arrayidx.2.i.1310, align 4, !tbaa !7
  %131 = load i32, i32* %arrayidx.3.i.1315, align 4, !tbaa !7
  %arrayidx1.3.i.998 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 1, i64 3
  %132 = load i32, i32* %arrayidx1.3.i.998, align 4, !tbaa !7
  %xor.3.i.999 = xor i32 %132, %131
  %and.3.i.1000 = and i32 %xor.3.i.999, %sub.i.i.930
  %xor3.3.i.1001 = xor i32 %and.3.i.1000, %131
  store i32 %xor3.3.i.1001, i32* %arrayidx.3.i.1315, align 4, !tbaa !7
  %133 = load i32, i32* %arrayidx.4.i.1320, align 4, !tbaa !7
  %arrayidx1.4.i.1003 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 1, i64 4
  %134 = load i32, i32* %arrayidx1.4.i.1003, align 8, !tbaa !7
  %xor.4.i.1004 = xor i32 %134, %133
  %and.4.i.1005 = and i32 %xor.4.i.1004, %sub.i.i.930
  %xor3.4.i.1006 = xor i32 %and.4.i.1005, %133
  store i32 %xor3.4.i.1006, i32* %arrayidx.4.i.1320, align 4, !tbaa !7
  %135 = load i32, i32* %arrayidx.5.i.1325, align 4, !tbaa !7
  %arrayidx1.5.i.1008 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 1, i64 5
  %136 = load i32, i32* %arrayidx1.5.i.1008, align 4, !tbaa !7
  %xor.5.i.1009 = xor i32 %136, %135
  %and.5.i.1010 = and i32 %xor.5.i.1009, %sub.i.i.930
  %xor3.5.i.1011 = xor i32 %and.5.i.1010, %135
  store i32 %xor3.5.i.1011, i32* %arrayidx.5.i.1325, align 4, !tbaa !7
  %137 = load i32, i32* %arrayidx.6.i.1330, align 4, !tbaa !7
  %arrayidx1.6.i.1013 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 1, i64 6
  %138 = load i32, i32* %arrayidx1.6.i.1013, align 8, !tbaa !7
  %xor.6.i.1014 = xor i32 %138, %137
  %and.6.i.1015 = and i32 %xor.6.i.1014, %sub.i.i.930
  %xor3.6.i.1016 = xor i32 %and.6.i.1015, %137
  store i32 %xor3.6.i.1016, i32* %arrayidx.6.i.1330, align 4, !tbaa !7
  %139 = load i32, i32* %arrayidx.7.i.1335, align 4, !tbaa !7
  %arrayidx1.7.i.1018 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 1, i64 7
  %140 = load i32, i32* %arrayidx1.7.i.1018, align 4, !tbaa !7
  %xor.7.i.1019 = xor i32 %140, %139
  %and.7.i.1020 = and i32 %xor.7.i.1019, %sub.i.i.930
  %xor3.7.i.1021 = xor i32 %and.7.i.1020, %139
  store i32 %xor3.7.i.1021, i32* %arrayidx.7.i.1335, align 4, !tbaa !7
  %141 = load i32, i32* %arrayidx.8.i.1340, align 4, !tbaa !7
  %arrayidx1.8.i.1023 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 1, i64 8
  %142 = load i32, i32* %arrayidx1.8.i.1023, align 8, !tbaa !7
  %xor.8.i.1024 = xor i32 %142, %141
  %and.8.i.1025 = and i32 %xor.8.i.1024, %sub.i.i.930
  %xor3.8.i.1026 = xor i32 %and.8.i.1025, %141
  store i32 %xor3.8.i.1026, i32* %arrayidx.8.i.1340, align 4, !tbaa !7
  %143 = load i32, i32* %arrayidx.9.i.1345, align 4, !tbaa !7
  %arrayidx1.9.i.1028 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 1, i64 9
  %144 = load i32, i32* %arrayidx1.9.i.1028, align 4, !tbaa !7
  %xor.9.i.1029 = xor i32 %144, %143
  %and.9.i.1030 = and i32 %xor.9.i.1029, %sub.i.i.930
  %xor3.9.i.1031 = xor i32 %and.9.i.1030, %143
  store i32 %xor3.9.i.1031, i32* %arrayidx.9.i.1345, align 4, !tbaa !7
  %arraydecay9.i.982 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 2, i64 0
  %145 = load i32, i32* %arraydecay2.i.1405, align 4, !tbaa !7
  %146 = load i32, i32* %arraydecay9.i.982, align 16, !tbaa !7
  %xor.i.1033 = xor i32 %146, %145
  %and.i.1034 = and i32 %xor.i.1033, %sub.i.i.930
  %xor3.i.1035 = xor i32 %and.i.1034, %145
  store i32 %xor3.i.1035, i32* %arraydecay2.i.1405, align 4, !tbaa !7
  %147 = load i32, i32* %arrayidx.1.i.1354, align 4, !tbaa !7
  %arrayidx1.1.i.1037 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 2, i64 1
  %148 = load i32, i32* %arrayidx1.1.i.1037, align 4, !tbaa !7
  %xor.1.i.1038 = xor i32 %148, %147
  %and.1.i.1039 = and i32 %xor.1.i.1038, %sub.i.i.930
  %xor3.1.i.1040 = xor i32 %and.1.i.1039, %147
  store i32 %xor3.1.i.1040, i32* %arrayidx.1.i.1354, align 4, !tbaa !7
  %149 = load i32, i32* %arrayidx.2.i.1359, align 4, !tbaa !7
  %arrayidx1.2.i.1042 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 2, i64 2
  %150 = load i32, i32* %arrayidx1.2.i.1042, align 8, !tbaa !7
  %xor.2.i.1043 = xor i32 %150, %149
  %and.2.i.1044 = and i32 %xor.2.i.1043, %sub.i.i.930
  %xor3.2.i.1045 = xor i32 %and.2.i.1044, %149
  store i32 %xor3.2.i.1045, i32* %arrayidx.2.i.1359, align 4, !tbaa !7
  %151 = load i32, i32* %arrayidx.3.i.1364, align 4, !tbaa !7
  %arrayidx1.3.i.1047 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 2, i64 3
  %152 = load i32, i32* %arrayidx1.3.i.1047, align 4, !tbaa !7
  %xor.3.i.1048 = xor i32 %152, %151
  %and.3.i.1049 = and i32 %xor.3.i.1048, %sub.i.i.930
  %xor3.3.i.1050 = xor i32 %and.3.i.1049, %151
  store i32 %xor3.3.i.1050, i32* %arrayidx.3.i.1364, align 4, !tbaa !7
  %153 = load i32, i32* %arrayidx.4.i.1369, align 4, !tbaa !7
  %arrayidx1.4.i.1052 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 2, i64 4
  %154 = load i32, i32* %arrayidx1.4.i.1052, align 16, !tbaa !7
  %xor.4.i.1053 = xor i32 %154, %153
  %and.4.i.1054 = and i32 %xor.4.i.1053, %sub.i.i.930
  %xor3.4.i.1055 = xor i32 %and.4.i.1054, %153
  store i32 %xor3.4.i.1055, i32* %arrayidx.4.i.1369, align 4, !tbaa !7
  %155 = load i32, i32* %arrayidx.5.i.1374, align 4, !tbaa !7
  %arrayidx1.5.i.1057 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 2, i64 5
  %156 = load i32, i32* %arrayidx1.5.i.1057, align 4, !tbaa !7
  %xor.5.i.1058 = xor i32 %156, %155
  %and.5.i.1059 = and i32 %xor.5.i.1058, %sub.i.i.930
  %xor3.5.i.1060 = xor i32 %and.5.i.1059, %155
  store i32 %xor3.5.i.1060, i32* %arrayidx.5.i.1374, align 4, !tbaa !7
  %157 = load i32, i32* %arrayidx.6.i.1379, align 4, !tbaa !7
  %arrayidx1.6.i.1062 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 2, i64 6
  %158 = load i32, i32* %arrayidx1.6.i.1062, align 8, !tbaa !7
  %xor.6.i.1063 = xor i32 %158, %157
  %and.6.i.1064 = and i32 %xor.6.i.1063, %sub.i.i.930
  %xor3.6.i.1065 = xor i32 %and.6.i.1064, %157
  store i32 %xor3.6.i.1065, i32* %arrayidx.6.i.1379, align 4, !tbaa !7
  %159 = load i32, i32* %arrayidx.7.i.1384, align 4, !tbaa !7
  %arrayidx1.7.i.1067 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 2, i64 7
  %160 = load i32, i32* %arrayidx1.7.i.1067, align 4, !tbaa !7
  %xor.7.i.1068 = xor i32 %160, %159
  %and.7.i.1069 = and i32 %xor.7.i.1068, %sub.i.i.930
  %xor3.7.i.1070 = xor i32 %and.7.i.1069, %159
  store i32 %xor3.7.i.1070, i32* %arrayidx.7.i.1384, align 4, !tbaa !7
  %161 = load i32, i32* %arrayidx.8.i.1389, align 4, !tbaa !7
  %arrayidx1.8.i.1072 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 2, i64 8
  %162 = load i32, i32* %arrayidx1.8.i.1072, align 16, !tbaa !7
  %xor.8.i.1073 = xor i32 %162, %161
  %and.8.i.1074 = and i32 %xor.8.i.1073, %sub.i.i.930
  %xor3.8.i.1075 = xor i32 %and.8.i.1074, %161
  store i32 %xor3.8.i.1075, i32* %arrayidx.8.i.1389, align 4, !tbaa !7
  %163 = load i32, i32* %arrayidx.9.i.1394, align 4, !tbaa !7
  %arrayidx1.9.i.1077 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 2, i32 2, i64 9
  %164 = load i32, i32* %arrayidx1.9.i.1077, align 4, !tbaa !7
  %xor.9.i.1078 = xor i32 %164, %163
  %and.9.i.1079 = and i32 %xor.9.i.1078, %sub.i.i.930
  %xor3.9.i.1080 = xor i32 %and.9.i.1079, %163
  store i32 %xor3.9.i.1080, i32* %arrayidx.9.i.1394, align 4, !tbaa !7
  %xor8.i.922 = xor i8 %sub5, 4
  %conv3.i.923 = zext i8 %xor8.i.922 to i32
  %sub.i.924 = add nsw i32 %conv3.i.923, -1
  %arraydecay2.i.769 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 0, i64 0
  %sub.i.i.771 = ashr i32 %sub.i.924, 31
  %165 = load i32, i32* %arraydecay.i.1404, align 4, !tbaa !7
  %166 = load i32, i32* %arraydecay2.i.769, align 8, !tbaa !7
  %xor.i.i.772 = xor i32 %166, %165
  %and.i.i.773 = and i32 %xor.i.i.772, %sub.i.i.771
  %xor3.i.i.774 = xor i32 %and.i.i.773, %165
  store i32 %xor3.i.i.774, i32* %arraydecay.i.1404, align 4, !tbaa !7
  %167 = load i32, i32* %arrayidx.1.i.i.1252, align 4, !tbaa !7
  %arrayidx1.1.i.i.776 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 0, i64 1
  %168 = load i32, i32* %arrayidx1.1.i.i.776, align 4, !tbaa !7
  %xor.1.i.i.777 = xor i32 %168, %167
  %and.1.i.i.778 = and i32 %xor.1.i.i.777, %sub.i.i.771
  %xor3.1.i.i.779 = xor i32 %and.1.i.i.778, %167
  store i32 %xor3.1.i.i.779, i32* %arrayidx.1.i.i.1252, align 4, !tbaa !7
  %169 = load i32, i32* %arrayidx.2.i.i.1257, align 4, !tbaa !7
  %arrayidx1.2.i.i.781 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 0, i64 2
  %170 = load i32, i32* %arrayidx1.2.i.i.781, align 8, !tbaa !7
  %xor.2.i.i.782 = xor i32 %170, %169
  %and.2.i.i.783 = and i32 %xor.2.i.i.782, %sub.i.i.771
  %xor3.2.i.i.784 = xor i32 %and.2.i.i.783, %169
  store i32 %xor3.2.i.i.784, i32* %arrayidx.2.i.i.1257, align 4, !tbaa !7
  %171 = load i32, i32* %arrayidx.3.i.i.1262, align 4, !tbaa !7
  %arrayidx1.3.i.i.786 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 0, i64 3
  %172 = load i32, i32* %arrayidx1.3.i.i.786, align 4, !tbaa !7
  %xor.3.i.i.787 = xor i32 %172, %171
  %and.3.i.i.788 = and i32 %xor.3.i.i.787, %sub.i.i.771
  %xor3.3.i.i.789 = xor i32 %and.3.i.i.788, %171
  store i32 %xor3.3.i.i.789, i32* %arrayidx.3.i.i.1262, align 4, !tbaa !7
  %173 = load i32, i32* %arrayidx.4.i.i.1267, align 4, !tbaa !7
  %arrayidx1.4.i.i.791 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 0, i64 4
  %174 = load i32, i32* %arrayidx1.4.i.i.791, align 8, !tbaa !7
  %xor.4.i.i.792 = xor i32 %174, %173
  %and.4.i.i.793 = and i32 %xor.4.i.i.792, %sub.i.i.771
  %xor3.4.i.i.794 = xor i32 %and.4.i.i.793, %173
  store i32 %xor3.4.i.i.794, i32* %arrayidx.4.i.i.1267, align 4, !tbaa !7
  %175 = load i32, i32* %arrayidx.5.i.i.1272, align 4, !tbaa !7
  %arrayidx1.5.i.i.796 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 0, i64 5
  %176 = load i32, i32* %arrayidx1.5.i.i.796, align 4, !tbaa !7
  %xor.5.i.i.797 = xor i32 %176, %175
  %and.5.i.i.798 = and i32 %xor.5.i.i.797, %sub.i.i.771
  %xor3.5.i.i.799 = xor i32 %and.5.i.i.798, %175
  store i32 %xor3.5.i.i.799, i32* %arrayidx.5.i.i.1272, align 4, !tbaa !7
  %177 = load i32, i32* %arrayidx.6.i.i.1277, align 4, !tbaa !7
  %arrayidx1.6.i.i.801 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 0, i64 6
  %178 = load i32, i32* %arrayidx1.6.i.i.801, align 8, !tbaa !7
  %xor.6.i.i.802 = xor i32 %178, %177
  %and.6.i.i.803 = and i32 %xor.6.i.i.802, %sub.i.i.771
  %xor3.6.i.i.804 = xor i32 %and.6.i.i.803, %177
  store i32 %xor3.6.i.i.804, i32* %arrayidx.6.i.i.1277, align 4, !tbaa !7
  %179 = load i32, i32* %arrayidx.7.i.i.1282, align 4, !tbaa !7
  %arrayidx1.7.i.i.806 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 0, i64 7
  %180 = load i32, i32* %arrayidx1.7.i.i.806, align 4, !tbaa !7
  %xor.7.i.i.807 = xor i32 %180, %179
  %and.7.i.i.808 = and i32 %xor.7.i.i.807, %sub.i.i.771
  %xor3.7.i.i.809 = xor i32 %and.7.i.i.808, %179
  store i32 %xor3.7.i.i.809, i32* %arrayidx.7.i.i.1282, align 4, !tbaa !7
  %181 = load i32, i32* %arrayidx.8.i.i.1287, align 4, !tbaa !7
  %arrayidx1.8.i.i.811 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 0, i64 8
  %182 = load i32, i32* %arrayidx1.8.i.i.811, align 8, !tbaa !7
  %xor.8.i.i.812 = xor i32 %182, %181
  %and.8.i.i.813 = and i32 %xor.8.i.i.812, %sub.i.i.771
  %xor3.8.i.i.814 = xor i32 %and.8.i.i.813, %181
  store i32 %xor3.8.i.i.814, i32* %arrayidx.8.i.i.1287, align 4, !tbaa !7
  %183 = load i32, i32* %arrayidx.9.i.i.1292, align 4, !tbaa !7
  %arrayidx1.9.i.i.816 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 0, i64 9
  %184 = load i32, i32* %arrayidx1.9.i.i.816, align 4, !tbaa !7
  %xor.9.i.i.817 = xor i32 %184, %183
  %and.9.i.i.818 = and i32 %xor.9.i.i.817, %sub.i.i.771
  %xor3.9.i.i.819 = xor i32 %and.9.i.i.818, %183
  store i32 %xor3.9.i.i.819, i32* %arrayidx.9.i.i.1292, align 4, !tbaa !7
  %arraydecay5.i.821 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 1, i64 0
  %185 = load i32, i32* %arraydecay1.i, align 4, !tbaa !7
  %186 = load i32, i32* %arraydecay5.i.821, align 8, !tbaa !7
  %xor.i.825 = xor i32 %186, %185
  %and.i.826 = and i32 %xor.i.825, %sub.i.i.771
  %xor3.i.827 = xor i32 %and.i.826, %185
  store i32 %xor3.i.827, i32* %arraydecay1.i, align 4, !tbaa !7
  %187 = load i32, i32* %arrayidx.1.i.1305, align 4, !tbaa !7
  %arrayidx1.1.i.829 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 1, i64 1
  %188 = load i32, i32* %arrayidx1.1.i.829, align 4, !tbaa !7
  %xor.1.i.830 = xor i32 %188, %187
  %and.1.i.831 = and i32 %xor.1.i.830, %sub.i.i.771
  %xor3.1.i.832 = xor i32 %and.1.i.831, %187
  store i32 %xor3.1.i.832, i32* %arrayidx.1.i.1305, align 4, !tbaa !7
  %189 = load i32, i32* %arrayidx.2.i.1310, align 4, !tbaa !7
  %arrayidx1.2.i.834 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 1, i64 2
  %190 = load i32, i32* %arrayidx1.2.i.834, align 8, !tbaa !7
  %xor.2.i.835 = xor i32 %190, %189
  %and.2.i.836 = and i32 %xor.2.i.835, %sub.i.i.771
  %xor3.2.i.837 = xor i32 %and.2.i.836, %189
  store i32 %xor3.2.i.837, i32* %arrayidx.2.i.1310, align 4, !tbaa !7
  %191 = load i32, i32* %arrayidx.3.i.1315, align 4, !tbaa !7
  %arrayidx1.3.i.839 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 1, i64 3
  %192 = load i32, i32* %arrayidx1.3.i.839, align 4, !tbaa !7
  %xor.3.i.840 = xor i32 %192, %191
  %and.3.i.841 = and i32 %xor.3.i.840, %sub.i.i.771
  %xor3.3.i.842 = xor i32 %and.3.i.841, %191
  store i32 %xor3.3.i.842, i32* %arrayidx.3.i.1315, align 4, !tbaa !7
  %193 = load i32, i32* %arrayidx.4.i.1320, align 4, !tbaa !7
  %arrayidx1.4.i.844 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 1, i64 4
  %194 = load i32, i32* %arrayidx1.4.i.844, align 8, !tbaa !7
  %xor.4.i.845 = xor i32 %194, %193
  %and.4.i.846 = and i32 %xor.4.i.845, %sub.i.i.771
  %xor3.4.i.847 = xor i32 %and.4.i.846, %193
  store i32 %xor3.4.i.847, i32* %arrayidx.4.i.1320, align 4, !tbaa !7
  %195 = load i32, i32* %arrayidx.5.i.1325, align 4, !tbaa !7
  %arrayidx1.5.i.849 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 1, i64 5
  %196 = load i32, i32* %arrayidx1.5.i.849, align 4, !tbaa !7
  %xor.5.i.850 = xor i32 %196, %195
  %and.5.i.851 = and i32 %xor.5.i.850, %sub.i.i.771
  %xor3.5.i.852 = xor i32 %and.5.i.851, %195
  store i32 %xor3.5.i.852, i32* %arrayidx.5.i.1325, align 4, !tbaa !7
  %197 = load i32, i32* %arrayidx.6.i.1330, align 4, !tbaa !7
  %arrayidx1.6.i.854 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 1, i64 6
  %198 = load i32, i32* %arrayidx1.6.i.854, align 8, !tbaa !7
  %xor.6.i.855 = xor i32 %198, %197
  %and.6.i.856 = and i32 %xor.6.i.855, %sub.i.i.771
  %xor3.6.i.857 = xor i32 %and.6.i.856, %197
  store i32 %xor3.6.i.857, i32* %arrayidx.6.i.1330, align 4, !tbaa !7
  %199 = load i32, i32* %arrayidx.7.i.1335, align 4, !tbaa !7
  %arrayidx1.7.i.859 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 1, i64 7
  %200 = load i32, i32* %arrayidx1.7.i.859, align 4, !tbaa !7
  %xor.7.i.860 = xor i32 %200, %199
  %and.7.i.861 = and i32 %xor.7.i.860, %sub.i.i.771
  %xor3.7.i.862 = xor i32 %and.7.i.861, %199
  store i32 %xor3.7.i.862, i32* %arrayidx.7.i.1335, align 4, !tbaa !7
  %201 = load i32, i32* %arrayidx.8.i.1340, align 4, !tbaa !7
  %arrayidx1.8.i.864 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 1, i64 8
  %202 = load i32, i32* %arrayidx1.8.i.864, align 8, !tbaa !7
  %xor.8.i.865 = xor i32 %202, %201
  %and.8.i.866 = and i32 %xor.8.i.865, %sub.i.i.771
  %xor3.8.i.867 = xor i32 %and.8.i.866, %201
  store i32 %xor3.8.i.867, i32* %arrayidx.8.i.1340, align 4, !tbaa !7
  %203 = load i32, i32* %arrayidx.9.i.1345, align 4, !tbaa !7
  %arrayidx1.9.i.869 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 1, i64 9
  %204 = load i32, i32* %arrayidx1.9.i.869, align 4, !tbaa !7
  %xor.9.i.870 = xor i32 %204, %203
  %and.9.i.871 = and i32 %xor.9.i.870, %sub.i.i.771
  %xor3.9.i.872 = xor i32 %and.9.i.871, %203
  store i32 %xor3.9.i.872, i32* %arrayidx.9.i.1345, align 4, !tbaa !7
  %arraydecay9.i.823 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 2, i64 0
  %205 = load i32, i32* %arraydecay2.i.1405, align 4, !tbaa !7
  %206 = load i32, i32* %arraydecay9.i.823, align 8, !tbaa !7
  %xor.i.874 = xor i32 %206, %205
  %and.i.875 = and i32 %xor.i.874, %sub.i.i.771
  %xor3.i.876 = xor i32 %and.i.875, %205
  store i32 %xor3.i.876, i32* %arraydecay2.i.1405, align 4, !tbaa !7
  %207 = load i32, i32* %arrayidx.1.i.1354, align 4, !tbaa !7
  %arrayidx1.1.i.878 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 2, i64 1
  %208 = load i32, i32* %arrayidx1.1.i.878, align 4, !tbaa !7
  %xor.1.i.879 = xor i32 %208, %207
  %and.1.i.880 = and i32 %xor.1.i.879, %sub.i.i.771
  %xor3.1.i.881 = xor i32 %and.1.i.880, %207
  store i32 %xor3.1.i.881, i32* %arrayidx.1.i.1354, align 4, !tbaa !7
  %209 = load i32, i32* %arrayidx.2.i.1359, align 4, !tbaa !7
  %arrayidx1.2.i.883 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 2, i64 2
  %210 = load i32, i32* %arrayidx1.2.i.883, align 8, !tbaa !7
  %xor.2.i.884 = xor i32 %210, %209
  %and.2.i.885 = and i32 %xor.2.i.884, %sub.i.i.771
  %xor3.2.i.886 = xor i32 %and.2.i.885, %209
  store i32 %xor3.2.i.886, i32* %arrayidx.2.i.1359, align 4, !tbaa !7
  %211 = load i32, i32* %arrayidx.3.i.1364, align 4, !tbaa !7
  %arrayidx1.3.i.888 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 2, i64 3
  %212 = load i32, i32* %arrayidx1.3.i.888, align 4, !tbaa !7
  %xor.3.i.889 = xor i32 %212, %211
  %and.3.i.890 = and i32 %xor.3.i.889, %sub.i.i.771
  %xor3.3.i.891 = xor i32 %and.3.i.890, %211
  store i32 %xor3.3.i.891, i32* %arrayidx.3.i.1364, align 4, !tbaa !7
  %213 = load i32, i32* %arrayidx.4.i.1369, align 4, !tbaa !7
  %arrayidx1.4.i.893 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 2, i64 4
  %214 = load i32, i32* %arrayidx1.4.i.893, align 8, !tbaa !7
  %xor.4.i.894 = xor i32 %214, %213
  %and.4.i.895 = and i32 %xor.4.i.894, %sub.i.i.771
  %xor3.4.i.896 = xor i32 %and.4.i.895, %213
  store i32 %xor3.4.i.896, i32* %arrayidx.4.i.1369, align 4, !tbaa !7
  %215 = load i32, i32* %arrayidx.5.i.1374, align 4, !tbaa !7
  %arrayidx1.5.i.898 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 2, i64 5
  %216 = load i32, i32* %arrayidx1.5.i.898, align 4, !tbaa !7
  %xor.5.i.899 = xor i32 %216, %215
  %and.5.i.900 = and i32 %xor.5.i.899, %sub.i.i.771
  %xor3.5.i.901 = xor i32 %and.5.i.900, %215
  store i32 %xor3.5.i.901, i32* %arrayidx.5.i.1374, align 4, !tbaa !7
  %217 = load i32, i32* %arrayidx.6.i.1379, align 4, !tbaa !7
  %arrayidx1.6.i.903 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 2, i64 6
  %218 = load i32, i32* %arrayidx1.6.i.903, align 8, !tbaa !7
  %xor.6.i.904 = xor i32 %218, %217
  %and.6.i.905 = and i32 %xor.6.i.904, %sub.i.i.771
  %xor3.6.i.906 = xor i32 %and.6.i.905, %217
  store i32 %xor3.6.i.906, i32* %arrayidx.6.i.1379, align 4, !tbaa !7
  %219 = load i32, i32* %arrayidx.7.i.1384, align 4, !tbaa !7
  %arrayidx1.7.i.908 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 2, i64 7
  %220 = load i32, i32* %arrayidx1.7.i.908, align 4, !tbaa !7
  %xor.7.i.909 = xor i32 %220, %219
  %and.7.i.910 = and i32 %xor.7.i.909, %sub.i.i.771
  %xor3.7.i.911 = xor i32 %and.7.i.910, %219
  store i32 %xor3.7.i.911, i32* %arrayidx.7.i.1384, align 4, !tbaa !7
  %221 = load i32, i32* %arrayidx.8.i.1389, align 4, !tbaa !7
  %arrayidx1.8.i.913 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 2, i64 8
  %222 = load i32, i32* %arrayidx1.8.i.913, align 8, !tbaa !7
  %xor.8.i.914 = xor i32 %222, %221
  %and.8.i.915 = and i32 %xor.8.i.914, %sub.i.i.771
  %xor3.8.i.916 = xor i32 %and.8.i.915, %221
  store i32 %xor3.8.i.916, i32* %arrayidx.8.i.1389, align 4, !tbaa !7
  %223 = load i32, i32* %arrayidx.9.i.1394, align 4, !tbaa !7
  %arrayidx1.9.i.918 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 3, i32 2, i64 9
  %224 = load i32, i32* %arrayidx1.9.i.918, align 4, !tbaa !7
  %xor.9.i.919 = xor i32 %224, %223
  %and.9.i.920 = and i32 %xor.9.i.919, %sub.i.i.771
  %xor3.9.i.921 = xor i32 %and.9.i.920, %223
  store i32 %xor3.9.i.921, i32* %arrayidx.9.i.1394, align 4, !tbaa !7
  %xor8.i.763 = xor i8 %sub5, 5
  %conv3.i.764 = zext i8 %xor8.i.763 to i32
  %sub.i.765 = add nsw i32 %conv3.i.764, -1
  %arraydecay2.i.610 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 0, i64 0
  %sub.i.i.612 = ashr i32 %sub.i.765, 31
  %225 = load i32, i32* %arraydecay.i.1404, align 4, !tbaa !7
  %226 = load i32, i32* %arraydecay2.i.610, align 16, !tbaa !7
  %xor.i.i.613 = xor i32 %226, %225
  %and.i.i.614 = and i32 %xor.i.i.613, %sub.i.i.612
  %xor3.i.i.615 = xor i32 %and.i.i.614, %225
  store i32 %xor3.i.i.615, i32* %arraydecay.i.1404, align 4, !tbaa !7
  %227 = load i32, i32* %arrayidx.1.i.i.1252, align 4, !tbaa !7
  %arrayidx1.1.i.i.617 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 0, i64 1
  %228 = load i32, i32* %arrayidx1.1.i.i.617, align 4, !tbaa !7
  %xor.1.i.i.618 = xor i32 %228, %227
  %and.1.i.i.619 = and i32 %xor.1.i.i.618, %sub.i.i.612
  %xor3.1.i.i.620 = xor i32 %and.1.i.i.619, %227
  store i32 %xor3.1.i.i.620, i32* %arrayidx.1.i.i.1252, align 4, !tbaa !7
  %229 = load i32, i32* %arrayidx.2.i.i.1257, align 4, !tbaa !7
  %arrayidx1.2.i.i.622 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 0, i64 2
  %230 = load i32, i32* %arrayidx1.2.i.i.622, align 8, !tbaa !7
  %xor.2.i.i.623 = xor i32 %230, %229
  %and.2.i.i.624 = and i32 %xor.2.i.i.623, %sub.i.i.612
  %xor3.2.i.i.625 = xor i32 %and.2.i.i.624, %229
  store i32 %xor3.2.i.i.625, i32* %arrayidx.2.i.i.1257, align 4, !tbaa !7
  %231 = load i32, i32* %arrayidx.3.i.i.1262, align 4, !tbaa !7
  %arrayidx1.3.i.i.627 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 0, i64 3
  %232 = load i32, i32* %arrayidx1.3.i.i.627, align 4, !tbaa !7
  %xor.3.i.i.628 = xor i32 %232, %231
  %and.3.i.i.629 = and i32 %xor.3.i.i.628, %sub.i.i.612
  %xor3.3.i.i.630 = xor i32 %and.3.i.i.629, %231
  store i32 %xor3.3.i.i.630, i32* %arrayidx.3.i.i.1262, align 4, !tbaa !7
  %233 = load i32, i32* %arrayidx.4.i.i.1267, align 4, !tbaa !7
  %arrayidx1.4.i.i.632 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 0, i64 4
  %234 = load i32, i32* %arrayidx1.4.i.i.632, align 16, !tbaa !7
  %xor.4.i.i.633 = xor i32 %234, %233
  %and.4.i.i.634 = and i32 %xor.4.i.i.633, %sub.i.i.612
  %xor3.4.i.i.635 = xor i32 %and.4.i.i.634, %233
  store i32 %xor3.4.i.i.635, i32* %arrayidx.4.i.i.1267, align 4, !tbaa !7
  %235 = load i32, i32* %arrayidx.5.i.i.1272, align 4, !tbaa !7
  %arrayidx1.5.i.i.637 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 0, i64 5
  %236 = load i32, i32* %arrayidx1.5.i.i.637, align 4, !tbaa !7
  %xor.5.i.i.638 = xor i32 %236, %235
  %and.5.i.i.639 = and i32 %xor.5.i.i.638, %sub.i.i.612
  %xor3.5.i.i.640 = xor i32 %and.5.i.i.639, %235
  store i32 %xor3.5.i.i.640, i32* %arrayidx.5.i.i.1272, align 4, !tbaa !7
  %237 = load i32, i32* %arrayidx.6.i.i.1277, align 4, !tbaa !7
  %arrayidx1.6.i.i.642 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 0, i64 6
  %238 = load i32, i32* %arrayidx1.6.i.i.642, align 8, !tbaa !7
  %xor.6.i.i.643 = xor i32 %238, %237
  %and.6.i.i.644 = and i32 %xor.6.i.i.643, %sub.i.i.612
  %xor3.6.i.i.645 = xor i32 %and.6.i.i.644, %237
  store i32 %xor3.6.i.i.645, i32* %arrayidx.6.i.i.1277, align 4, !tbaa !7
  %239 = load i32, i32* %arrayidx.7.i.i.1282, align 4, !tbaa !7
  %arrayidx1.7.i.i.647 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 0, i64 7
  %240 = load i32, i32* %arrayidx1.7.i.i.647, align 4, !tbaa !7
  %xor.7.i.i.648 = xor i32 %240, %239
  %and.7.i.i.649 = and i32 %xor.7.i.i.648, %sub.i.i.612
  %xor3.7.i.i.650 = xor i32 %and.7.i.i.649, %239
  store i32 %xor3.7.i.i.650, i32* %arrayidx.7.i.i.1282, align 4, !tbaa !7
  %241 = load i32, i32* %arrayidx.8.i.i.1287, align 4, !tbaa !7
  %arrayidx1.8.i.i.652 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 0, i64 8
  %242 = load i32, i32* %arrayidx1.8.i.i.652, align 16, !tbaa !7
  %xor.8.i.i.653 = xor i32 %242, %241
  %and.8.i.i.654 = and i32 %xor.8.i.i.653, %sub.i.i.612
  %xor3.8.i.i.655 = xor i32 %and.8.i.i.654, %241
  store i32 %xor3.8.i.i.655, i32* %arrayidx.8.i.i.1287, align 4, !tbaa !7
  %243 = load i32, i32* %arrayidx.9.i.i.1292, align 4, !tbaa !7
  %arrayidx1.9.i.i.657 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 0, i64 9
  %244 = load i32, i32* %arrayidx1.9.i.i.657, align 4, !tbaa !7
  %xor.9.i.i.658 = xor i32 %244, %243
  %and.9.i.i.659 = and i32 %xor.9.i.i.658, %sub.i.i.612
  %xor3.9.i.i.660 = xor i32 %and.9.i.i.659, %243
  store i32 %xor3.9.i.i.660, i32* %arrayidx.9.i.i.1292, align 4, !tbaa !7
  %arraydecay5.i.662 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 1, i64 0
  %245 = load i32, i32* %arraydecay1.i, align 4, !tbaa !7
  %246 = load i32, i32* %arraydecay5.i.662, align 8, !tbaa !7
  %xor.i.666 = xor i32 %246, %245
  %and.i.667 = and i32 %xor.i.666, %sub.i.i.612
  %xor3.i.668 = xor i32 %and.i.667, %245
  store i32 %xor3.i.668, i32* %arraydecay1.i, align 4, !tbaa !7
  %247 = load i32, i32* %arrayidx.1.i.1305, align 4, !tbaa !7
  %arrayidx1.1.i.670 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 1, i64 1
  %248 = load i32, i32* %arrayidx1.1.i.670, align 4, !tbaa !7
  %xor.1.i.671 = xor i32 %248, %247
  %and.1.i.672 = and i32 %xor.1.i.671, %sub.i.i.612
  %xor3.1.i.673 = xor i32 %and.1.i.672, %247
  store i32 %xor3.1.i.673, i32* %arrayidx.1.i.1305, align 4, !tbaa !7
  %249 = load i32, i32* %arrayidx.2.i.1310, align 4, !tbaa !7
  %arrayidx1.2.i.675 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 1, i64 2
  %250 = load i32, i32* %arrayidx1.2.i.675, align 8, !tbaa !7
  %xor.2.i.676 = xor i32 %250, %249
  %and.2.i.677 = and i32 %xor.2.i.676, %sub.i.i.612
  %xor3.2.i.678 = xor i32 %and.2.i.677, %249
  store i32 %xor3.2.i.678, i32* %arrayidx.2.i.1310, align 4, !tbaa !7
  %251 = load i32, i32* %arrayidx.3.i.1315, align 4, !tbaa !7
  %arrayidx1.3.i.680 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 1, i64 3
  %252 = load i32, i32* %arrayidx1.3.i.680, align 4, !tbaa !7
  %xor.3.i.681 = xor i32 %252, %251
  %and.3.i.682 = and i32 %xor.3.i.681, %sub.i.i.612
  %xor3.3.i.683 = xor i32 %and.3.i.682, %251
  store i32 %xor3.3.i.683, i32* %arrayidx.3.i.1315, align 4, !tbaa !7
  %253 = load i32, i32* %arrayidx.4.i.1320, align 4, !tbaa !7
  %arrayidx1.4.i.685 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 1, i64 4
  %254 = load i32, i32* %arrayidx1.4.i.685, align 8, !tbaa !7
  %xor.4.i.686 = xor i32 %254, %253
  %and.4.i.687 = and i32 %xor.4.i.686, %sub.i.i.612
  %xor3.4.i.688 = xor i32 %and.4.i.687, %253
  store i32 %xor3.4.i.688, i32* %arrayidx.4.i.1320, align 4, !tbaa !7
  %255 = load i32, i32* %arrayidx.5.i.1325, align 4, !tbaa !7
  %arrayidx1.5.i.690 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 1, i64 5
  %256 = load i32, i32* %arrayidx1.5.i.690, align 4, !tbaa !7
  %xor.5.i.691 = xor i32 %256, %255
  %and.5.i.692 = and i32 %xor.5.i.691, %sub.i.i.612
  %xor3.5.i.693 = xor i32 %and.5.i.692, %255
  store i32 %xor3.5.i.693, i32* %arrayidx.5.i.1325, align 4, !tbaa !7
  %257 = load i32, i32* %arrayidx.6.i.1330, align 4, !tbaa !7
  %arrayidx1.6.i.695 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 1, i64 6
  %258 = load i32, i32* %arrayidx1.6.i.695, align 8, !tbaa !7
  %xor.6.i.696 = xor i32 %258, %257
  %and.6.i.697 = and i32 %xor.6.i.696, %sub.i.i.612
  %xor3.6.i.698 = xor i32 %and.6.i.697, %257
  store i32 %xor3.6.i.698, i32* %arrayidx.6.i.1330, align 4, !tbaa !7
  %259 = load i32, i32* %arrayidx.7.i.1335, align 4, !tbaa !7
  %arrayidx1.7.i.700 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 1, i64 7
  %260 = load i32, i32* %arrayidx1.7.i.700, align 4, !tbaa !7
  %xor.7.i.701 = xor i32 %260, %259
  %and.7.i.702 = and i32 %xor.7.i.701, %sub.i.i.612
  %xor3.7.i.703 = xor i32 %and.7.i.702, %259
  store i32 %xor3.7.i.703, i32* %arrayidx.7.i.1335, align 4, !tbaa !7
  %261 = load i32, i32* %arrayidx.8.i.1340, align 4, !tbaa !7
  %arrayidx1.8.i.705 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 1, i64 8
  %262 = load i32, i32* %arrayidx1.8.i.705, align 8, !tbaa !7
  %xor.8.i.706 = xor i32 %262, %261
  %and.8.i.707 = and i32 %xor.8.i.706, %sub.i.i.612
  %xor3.8.i.708 = xor i32 %and.8.i.707, %261
  store i32 %xor3.8.i.708, i32* %arrayidx.8.i.1340, align 4, !tbaa !7
  %263 = load i32, i32* %arrayidx.9.i.1345, align 4, !tbaa !7
  %arrayidx1.9.i.710 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 1, i64 9
  %264 = load i32, i32* %arrayidx1.9.i.710, align 4, !tbaa !7
  %xor.9.i.711 = xor i32 %264, %263
  %and.9.i.712 = and i32 %xor.9.i.711, %sub.i.i.612
  %xor3.9.i.713 = xor i32 %and.9.i.712, %263
  store i32 %xor3.9.i.713, i32* %arrayidx.9.i.1345, align 4, !tbaa !7
  %arraydecay9.i.664 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 2, i64 0
  %265 = load i32, i32* %arraydecay2.i.1405, align 4, !tbaa !7
  %266 = load i32, i32* %arraydecay9.i.664, align 16, !tbaa !7
  %xor.i.715 = xor i32 %266, %265
  %and.i.716 = and i32 %xor.i.715, %sub.i.i.612
  %xor3.i.717 = xor i32 %and.i.716, %265
  store i32 %xor3.i.717, i32* %arraydecay2.i.1405, align 4, !tbaa !7
  %267 = load i32, i32* %arrayidx.1.i.1354, align 4, !tbaa !7
  %arrayidx1.1.i.719 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 2, i64 1
  %268 = load i32, i32* %arrayidx1.1.i.719, align 4, !tbaa !7
  %xor.1.i.720 = xor i32 %268, %267
  %and.1.i.721 = and i32 %xor.1.i.720, %sub.i.i.612
  %xor3.1.i.722 = xor i32 %and.1.i.721, %267
  store i32 %xor3.1.i.722, i32* %arrayidx.1.i.1354, align 4, !tbaa !7
  %269 = load i32, i32* %arrayidx.2.i.1359, align 4, !tbaa !7
  %arrayidx1.2.i.724 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 2, i64 2
  %270 = load i32, i32* %arrayidx1.2.i.724, align 8, !tbaa !7
  %xor.2.i.725 = xor i32 %270, %269
  %and.2.i.726 = and i32 %xor.2.i.725, %sub.i.i.612
  %xor3.2.i.727 = xor i32 %and.2.i.726, %269
  store i32 %xor3.2.i.727, i32* %arrayidx.2.i.1359, align 4, !tbaa !7
  %271 = load i32, i32* %arrayidx.3.i.1364, align 4, !tbaa !7
  %arrayidx1.3.i.729 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 2, i64 3
  %272 = load i32, i32* %arrayidx1.3.i.729, align 4, !tbaa !7
  %xor.3.i.730 = xor i32 %272, %271
  %and.3.i.731 = and i32 %xor.3.i.730, %sub.i.i.612
  %xor3.3.i.732 = xor i32 %and.3.i.731, %271
  store i32 %xor3.3.i.732, i32* %arrayidx.3.i.1364, align 4, !tbaa !7
  %273 = load i32, i32* %arrayidx.4.i.1369, align 4, !tbaa !7
  %arrayidx1.4.i.734 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 2, i64 4
  %274 = load i32, i32* %arrayidx1.4.i.734, align 16, !tbaa !7
  %xor.4.i.735 = xor i32 %274, %273
  %and.4.i.736 = and i32 %xor.4.i.735, %sub.i.i.612
  %xor3.4.i.737 = xor i32 %and.4.i.736, %273
  store i32 %xor3.4.i.737, i32* %arrayidx.4.i.1369, align 4, !tbaa !7
  %275 = load i32, i32* %arrayidx.5.i.1374, align 4, !tbaa !7
  %arrayidx1.5.i.739 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 2, i64 5
  %276 = load i32, i32* %arrayidx1.5.i.739, align 4, !tbaa !7
  %xor.5.i.740 = xor i32 %276, %275
  %and.5.i.741 = and i32 %xor.5.i.740, %sub.i.i.612
  %xor3.5.i.742 = xor i32 %and.5.i.741, %275
  store i32 %xor3.5.i.742, i32* %arrayidx.5.i.1374, align 4, !tbaa !7
  %277 = load i32, i32* %arrayidx.6.i.1379, align 4, !tbaa !7
  %arrayidx1.6.i.744 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 2, i64 6
  %278 = load i32, i32* %arrayidx1.6.i.744, align 8, !tbaa !7
  %xor.6.i.745 = xor i32 %278, %277
  %and.6.i.746 = and i32 %xor.6.i.745, %sub.i.i.612
  %xor3.6.i.747 = xor i32 %and.6.i.746, %277
  store i32 %xor3.6.i.747, i32* %arrayidx.6.i.1379, align 4, !tbaa !7
  %279 = load i32, i32* %arrayidx.7.i.1384, align 4, !tbaa !7
  %arrayidx1.7.i.749 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 2, i64 7
  %280 = load i32, i32* %arrayidx1.7.i.749, align 4, !tbaa !7
  %xor.7.i.750 = xor i32 %280, %279
  %and.7.i.751 = and i32 %xor.7.i.750, %sub.i.i.612
  %xor3.7.i.752 = xor i32 %and.7.i.751, %279
  store i32 %xor3.7.i.752, i32* %arrayidx.7.i.1384, align 4, !tbaa !7
  %281 = load i32, i32* %arrayidx.8.i.1389, align 4, !tbaa !7
  %arrayidx1.8.i.754 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 2, i64 8
  %282 = load i32, i32* %arrayidx1.8.i.754, align 16, !tbaa !7
  %xor.8.i.755 = xor i32 %282, %281
  %and.8.i.756 = and i32 %xor.8.i.755, %sub.i.i.612
  %xor3.8.i.757 = xor i32 %and.8.i.756, %281
  store i32 %xor3.8.i.757, i32* %arrayidx.8.i.1389, align 4, !tbaa !7
  %283 = load i32, i32* %arrayidx.9.i.1394, align 4, !tbaa !7
  %arrayidx1.9.i.759 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 4, i32 2, i64 9
  %284 = load i32, i32* %arrayidx1.9.i.759, align 4, !tbaa !7
  %xor.9.i.760 = xor i32 %284, %283
  %and.9.i.761 = and i32 %xor.9.i.760, %sub.i.i.612
  %xor3.9.i.762 = xor i32 %and.9.i.761, %283
  store i32 %xor3.9.i.762, i32* %arrayidx.9.i.1394, align 4, !tbaa !7
  %xor8.i.604 = xor i8 %sub5, 6
  %conv3.i.605 = zext i8 %xor8.i.604 to i32
  %sub.i.606 = add nsw i32 %conv3.i.605, -1
  %arraydecay2.i.451 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 0, i64 0
  %sub.i.i.453 = ashr i32 %sub.i.606, 31
  %285 = load i32, i32* %arraydecay.i.1404, align 4, !tbaa !7
  %286 = load i32, i32* %arraydecay2.i.451, align 8, !tbaa !7
  %xor.i.i.454 = xor i32 %286, %285
  %and.i.i.455 = and i32 %xor.i.i.454, %sub.i.i.453
  %xor3.i.i.456 = xor i32 %and.i.i.455, %285
  store i32 %xor3.i.i.456, i32* %arraydecay.i.1404, align 4, !tbaa !7
  %287 = load i32, i32* %arrayidx.1.i.i.1252, align 4, !tbaa !7
  %arrayidx1.1.i.i.458 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 0, i64 1
  %288 = load i32, i32* %arrayidx1.1.i.i.458, align 4, !tbaa !7
  %xor.1.i.i.459 = xor i32 %288, %287
  %and.1.i.i.460 = and i32 %xor.1.i.i.459, %sub.i.i.453
  %xor3.1.i.i.461 = xor i32 %and.1.i.i.460, %287
  store i32 %xor3.1.i.i.461, i32* %arrayidx.1.i.i.1252, align 4, !tbaa !7
  %289 = load i32, i32* %arrayidx.2.i.i.1257, align 4, !tbaa !7
  %arrayidx1.2.i.i.463 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 0, i64 2
  %290 = load i32, i32* %arrayidx1.2.i.i.463, align 8, !tbaa !7
  %xor.2.i.i.464 = xor i32 %290, %289
  %and.2.i.i.465 = and i32 %xor.2.i.i.464, %sub.i.i.453
  %xor3.2.i.i.466 = xor i32 %and.2.i.i.465, %289
  store i32 %xor3.2.i.i.466, i32* %arrayidx.2.i.i.1257, align 4, !tbaa !7
  %291 = load i32, i32* %arrayidx.3.i.i.1262, align 4, !tbaa !7
  %arrayidx1.3.i.i.468 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 0, i64 3
  %292 = load i32, i32* %arrayidx1.3.i.i.468, align 4, !tbaa !7
  %xor.3.i.i.469 = xor i32 %292, %291
  %and.3.i.i.470 = and i32 %xor.3.i.i.469, %sub.i.i.453
  %xor3.3.i.i.471 = xor i32 %and.3.i.i.470, %291
  store i32 %xor3.3.i.i.471, i32* %arrayidx.3.i.i.1262, align 4, !tbaa !7
  %293 = load i32, i32* %arrayidx.4.i.i.1267, align 4, !tbaa !7
  %arrayidx1.4.i.i.473 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 0, i64 4
  %294 = load i32, i32* %arrayidx1.4.i.i.473, align 8, !tbaa !7
  %xor.4.i.i.474 = xor i32 %294, %293
  %and.4.i.i.475 = and i32 %xor.4.i.i.474, %sub.i.i.453
  %xor3.4.i.i.476 = xor i32 %and.4.i.i.475, %293
  store i32 %xor3.4.i.i.476, i32* %arrayidx.4.i.i.1267, align 4, !tbaa !7
  %295 = load i32, i32* %arrayidx.5.i.i.1272, align 4, !tbaa !7
  %arrayidx1.5.i.i.478 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 0, i64 5
  %296 = load i32, i32* %arrayidx1.5.i.i.478, align 4, !tbaa !7
  %xor.5.i.i.479 = xor i32 %296, %295
  %and.5.i.i.480 = and i32 %xor.5.i.i.479, %sub.i.i.453
  %xor3.5.i.i.481 = xor i32 %and.5.i.i.480, %295
  store i32 %xor3.5.i.i.481, i32* %arrayidx.5.i.i.1272, align 4, !tbaa !7
  %297 = load i32, i32* %arrayidx.6.i.i.1277, align 4, !tbaa !7
  %arrayidx1.6.i.i.483 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 0, i64 6
  %298 = load i32, i32* %arrayidx1.6.i.i.483, align 8, !tbaa !7
  %xor.6.i.i.484 = xor i32 %298, %297
  %and.6.i.i.485 = and i32 %xor.6.i.i.484, %sub.i.i.453
  %xor3.6.i.i.486 = xor i32 %and.6.i.i.485, %297
  store i32 %xor3.6.i.i.486, i32* %arrayidx.6.i.i.1277, align 4, !tbaa !7
  %299 = load i32, i32* %arrayidx.7.i.i.1282, align 4, !tbaa !7
  %arrayidx1.7.i.i.488 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 0, i64 7
  %300 = load i32, i32* %arrayidx1.7.i.i.488, align 4, !tbaa !7
  %xor.7.i.i.489 = xor i32 %300, %299
  %and.7.i.i.490 = and i32 %xor.7.i.i.489, %sub.i.i.453
  %xor3.7.i.i.491 = xor i32 %and.7.i.i.490, %299
  store i32 %xor3.7.i.i.491, i32* %arrayidx.7.i.i.1282, align 4, !tbaa !7
  %301 = load i32, i32* %arrayidx.8.i.i.1287, align 4, !tbaa !7
  %arrayidx1.8.i.i.493 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 0, i64 8
  %302 = load i32, i32* %arrayidx1.8.i.i.493, align 8, !tbaa !7
  %xor.8.i.i.494 = xor i32 %302, %301
  %and.8.i.i.495 = and i32 %xor.8.i.i.494, %sub.i.i.453
  %xor3.8.i.i.496 = xor i32 %and.8.i.i.495, %301
  store i32 %xor3.8.i.i.496, i32* %arrayidx.8.i.i.1287, align 4, !tbaa !7
  %303 = load i32, i32* %arrayidx.9.i.i.1292, align 4, !tbaa !7
  %arrayidx1.9.i.i.498 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 0, i64 9
  %304 = load i32, i32* %arrayidx1.9.i.i.498, align 4, !tbaa !7
  %xor.9.i.i.499 = xor i32 %304, %303
  %and.9.i.i.500 = and i32 %xor.9.i.i.499, %sub.i.i.453
  %xor3.9.i.i.501 = xor i32 %and.9.i.i.500, %303
  store i32 %xor3.9.i.i.501, i32* %arrayidx.9.i.i.1292, align 4, !tbaa !7
  %arraydecay5.i.503 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 1, i64 0
  %305 = load i32, i32* %arraydecay1.i, align 4, !tbaa !7
  %306 = load i32, i32* %arraydecay5.i.503, align 8, !tbaa !7
  %xor.i.507 = xor i32 %306, %305
  %and.i.508 = and i32 %xor.i.507, %sub.i.i.453
  %xor3.i.509 = xor i32 %and.i.508, %305
  store i32 %xor3.i.509, i32* %arraydecay1.i, align 4, !tbaa !7
  %307 = load i32, i32* %arrayidx.1.i.1305, align 4, !tbaa !7
  %arrayidx1.1.i.511 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 1, i64 1
  %308 = load i32, i32* %arrayidx1.1.i.511, align 4, !tbaa !7
  %xor.1.i.512 = xor i32 %308, %307
  %and.1.i.513 = and i32 %xor.1.i.512, %sub.i.i.453
  %xor3.1.i.514 = xor i32 %and.1.i.513, %307
  store i32 %xor3.1.i.514, i32* %arrayidx.1.i.1305, align 4, !tbaa !7
  %309 = load i32, i32* %arrayidx.2.i.1310, align 4, !tbaa !7
  %arrayidx1.2.i.516 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 1, i64 2
  %310 = load i32, i32* %arrayidx1.2.i.516, align 8, !tbaa !7
  %xor.2.i.517 = xor i32 %310, %309
  %and.2.i.518 = and i32 %xor.2.i.517, %sub.i.i.453
  %xor3.2.i.519 = xor i32 %and.2.i.518, %309
  store i32 %xor3.2.i.519, i32* %arrayidx.2.i.1310, align 4, !tbaa !7
  %311 = load i32, i32* %arrayidx.3.i.1315, align 4, !tbaa !7
  %arrayidx1.3.i.521 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 1, i64 3
  %312 = load i32, i32* %arrayidx1.3.i.521, align 4, !tbaa !7
  %xor.3.i.522 = xor i32 %312, %311
  %and.3.i.523 = and i32 %xor.3.i.522, %sub.i.i.453
  %xor3.3.i.524 = xor i32 %and.3.i.523, %311
  store i32 %xor3.3.i.524, i32* %arrayidx.3.i.1315, align 4, !tbaa !7
  %313 = load i32, i32* %arrayidx.4.i.1320, align 4, !tbaa !7
  %arrayidx1.4.i.526 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 1, i64 4
  %314 = load i32, i32* %arrayidx1.4.i.526, align 8, !tbaa !7
  %xor.4.i.527 = xor i32 %314, %313
  %and.4.i.528 = and i32 %xor.4.i.527, %sub.i.i.453
  %xor3.4.i.529 = xor i32 %and.4.i.528, %313
  store i32 %xor3.4.i.529, i32* %arrayidx.4.i.1320, align 4, !tbaa !7
  %315 = load i32, i32* %arrayidx.5.i.1325, align 4, !tbaa !7
  %arrayidx1.5.i.531 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 1, i64 5
  %316 = load i32, i32* %arrayidx1.5.i.531, align 4, !tbaa !7
  %xor.5.i.532 = xor i32 %316, %315
  %and.5.i.533 = and i32 %xor.5.i.532, %sub.i.i.453
  %xor3.5.i.534 = xor i32 %and.5.i.533, %315
  store i32 %xor3.5.i.534, i32* %arrayidx.5.i.1325, align 4, !tbaa !7
  %317 = load i32, i32* %arrayidx.6.i.1330, align 4, !tbaa !7
  %arrayidx1.6.i.536 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 1, i64 6
  %318 = load i32, i32* %arrayidx1.6.i.536, align 8, !tbaa !7
  %xor.6.i.537 = xor i32 %318, %317
  %and.6.i.538 = and i32 %xor.6.i.537, %sub.i.i.453
  %xor3.6.i.539 = xor i32 %and.6.i.538, %317
  store i32 %xor3.6.i.539, i32* %arrayidx.6.i.1330, align 4, !tbaa !7
  %319 = load i32, i32* %arrayidx.7.i.1335, align 4, !tbaa !7
  %arrayidx1.7.i.541 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 1, i64 7
  %320 = load i32, i32* %arrayidx1.7.i.541, align 4, !tbaa !7
  %xor.7.i.542 = xor i32 %320, %319
  %and.7.i.543 = and i32 %xor.7.i.542, %sub.i.i.453
  %xor3.7.i.544 = xor i32 %and.7.i.543, %319
  store i32 %xor3.7.i.544, i32* %arrayidx.7.i.1335, align 4, !tbaa !7
  %321 = load i32, i32* %arrayidx.8.i.1340, align 4, !tbaa !7
  %arrayidx1.8.i.546 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 1, i64 8
  %322 = load i32, i32* %arrayidx1.8.i.546, align 8, !tbaa !7
  %xor.8.i.547 = xor i32 %322, %321
  %and.8.i.548 = and i32 %xor.8.i.547, %sub.i.i.453
  %xor3.8.i.549 = xor i32 %and.8.i.548, %321
  store i32 %xor3.8.i.549, i32* %arrayidx.8.i.1340, align 4, !tbaa !7
  %323 = load i32, i32* %arrayidx.9.i.1345, align 4, !tbaa !7
  %arrayidx1.9.i.551 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 1, i64 9
  %324 = load i32, i32* %arrayidx1.9.i.551, align 4, !tbaa !7
  %xor.9.i.552 = xor i32 %324, %323
  %and.9.i.553 = and i32 %xor.9.i.552, %sub.i.i.453
  %xor3.9.i.554 = xor i32 %and.9.i.553, %323
  store i32 %xor3.9.i.554, i32* %arrayidx.9.i.1345, align 4, !tbaa !7
  %arraydecay9.i.505 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 2, i64 0
  %325 = load i32, i32* %arraydecay2.i.1405, align 4, !tbaa !7
  %326 = load i32, i32* %arraydecay9.i.505, align 8, !tbaa !7
  %xor.i.556 = xor i32 %326, %325
  %and.i.557 = and i32 %xor.i.556, %sub.i.i.453
  %xor3.i.558 = xor i32 %and.i.557, %325
  store i32 %xor3.i.558, i32* %arraydecay2.i.1405, align 4, !tbaa !7
  %327 = load i32, i32* %arrayidx.1.i.1354, align 4, !tbaa !7
  %arrayidx1.1.i.560 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 2, i64 1
  %328 = load i32, i32* %arrayidx1.1.i.560, align 4, !tbaa !7
  %xor.1.i.561 = xor i32 %328, %327
  %and.1.i.562 = and i32 %xor.1.i.561, %sub.i.i.453
  %xor3.1.i.563 = xor i32 %and.1.i.562, %327
  store i32 %xor3.1.i.563, i32* %arrayidx.1.i.1354, align 4, !tbaa !7
  %329 = load i32, i32* %arrayidx.2.i.1359, align 4, !tbaa !7
  %arrayidx1.2.i.565 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 2, i64 2
  %330 = load i32, i32* %arrayidx1.2.i.565, align 8, !tbaa !7
  %xor.2.i.566 = xor i32 %330, %329
  %and.2.i.567 = and i32 %xor.2.i.566, %sub.i.i.453
  %xor3.2.i.568 = xor i32 %and.2.i.567, %329
  store i32 %xor3.2.i.568, i32* %arrayidx.2.i.1359, align 4, !tbaa !7
  %331 = load i32, i32* %arrayidx.3.i.1364, align 4, !tbaa !7
  %arrayidx1.3.i.570 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 2, i64 3
  %332 = load i32, i32* %arrayidx1.3.i.570, align 4, !tbaa !7
  %xor.3.i.571 = xor i32 %332, %331
  %and.3.i.572 = and i32 %xor.3.i.571, %sub.i.i.453
  %xor3.3.i.573 = xor i32 %and.3.i.572, %331
  store i32 %xor3.3.i.573, i32* %arrayidx.3.i.1364, align 4, !tbaa !7
  %333 = load i32, i32* %arrayidx.4.i.1369, align 4, !tbaa !7
  %arrayidx1.4.i.575 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 2, i64 4
  %334 = load i32, i32* %arrayidx1.4.i.575, align 8, !tbaa !7
  %xor.4.i.576 = xor i32 %334, %333
  %and.4.i.577 = and i32 %xor.4.i.576, %sub.i.i.453
  %xor3.4.i.578 = xor i32 %and.4.i.577, %333
  store i32 %xor3.4.i.578, i32* %arrayidx.4.i.1369, align 4, !tbaa !7
  %335 = load i32, i32* %arrayidx.5.i.1374, align 4, !tbaa !7
  %arrayidx1.5.i.580 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 2, i64 5
  %336 = load i32, i32* %arrayidx1.5.i.580, align 4, !tbaa !7
  %xor.5.i.581 = xor i32 %336, %335
  %and.5.i.582 = and i32 %xor.5.i.581, %sub.i.i.453
  %xor3.5.i.583 = xor i32 %and.5.i.582, %335
  store i32 %xor3.5.i.583, i32* %arrayidx.5.i.1374, align 4, !tbaa !7
  %337 = load i32, i32* %arrayidx.6.i.1379, align 4, !tbaa !7
  %arrayidx1.6.i.585 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 2, i64 6
  %338 = load i32, i32* %arrayidx1.6.i.585, align 8, !tbaa !7
  %xor.6.i.586 = xor i32 %338, %337
  %and.6.i.587 = and i32 %xor.6.i.586, %sub.i.i.453
  %xor3.6.i.588 = xor i32 %and.6.i.587, %337
  store i32 %xor3.6.i.588, i32* %arrayidx.6.i.1379, align 4, !tbaa !7
  %339 = load i32, i32* %arrayidx.7.i.1384, align 4, !tbaa !7
  %arrayidx1.7.i.590 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 2, i64 7
  %340 = load i32, i32* %arrayidx1.7.i.590, align 4, !tbaa !7
  %xor.7.i.591 = xor i32 %340, %339
  %and.7.i.592 = and i32 %xor.7.i.591, %sub.i.i.453
  %xor3.7.i.593 = xor i32 %and.7.i.592, %339
  store i32 %xor3.7.i.593, i32* %arrayidx.7.i.1384, align 4, !tbaa !7
  %341 = load i32, i32* %arrayidx.8.i.1389, align 4, !tbaa !7
  %arrayidx1.8.i.595 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 2, i64 8
  %342 = load i32, i32* %arrayidx1.8.i.595, align 8, !tbaa !7
  %xor.8.i.596 = xor i32 %342, %341
  %and.8.i.597 = and i32 %xor.8.i.596, %sub.i.i.453
  %xor3.8.i.598 = xor i32 %and.8.i.597, %341
  store i32 %xor3.8.i.598, i32* %arrayidx.8.i.1389, align 4, !tbaa !7
  %343 = load i32, i32* %arrayidx.9.i.1394, align 4, !tbaa !7
  %arrayidx1.9.i.600 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 5, i32 2, i64 9
  %344 = load i32, i32* %arrayidx1.9.i.600, align 4, !tbaa !7
  %xor.9.i.601 = xor i32 %344, %343
  %and.9.i.602 = and i32 %xor.9.i.601, %sub.i.i.453
  %xor3.9.i.603 = xor i32 %and.9.i.602, %343
  store i32 %xor3.9.i.603, i32* %arrayidx.9.i.1394, align 4, !tbaa !7
  %xor8.i.445 = xor i8 %sub5, 7
  %conv3.i.446 = zext i8 %xor8.i.445 to i32
  %sub.i.447 = add nsw i32 %conv3.i.446, -1
  %arraydecay2.i.292 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 0, i64 0
  %sub.i.i.294 = ashr i32 %sub.i.447, 31
  %345 = load i32, i32* %arraydecay.i.1404, align 4, !tbaa !7
  %346 = load i32, i32* %arraydecay2.i.292, align 16, !tbaa !7
  %xor.i.i.295 = xor i32 %346, %345
  %and.i.i.296 = and i32 %xor.i.i.295, %sub.i.i.294
  %xor3.i.i.297 = xor i32 %and.i.i.296, %345
  store i32 %xor3.i.i.297, i32* %arraydecay.i.1404, align 4, !tbaa !7
  %347 = load i32, i32* %arrayidx.1.i.i.1252, align 4, !tbaa !7
  %arrayidx1.1.i.i.299 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 0, i64 1
  %348 = load i32, i32* %arrayidx1.1.i.i.299, align 4, !tbaa !7
  %xor.1.i.i.300 = xor i32 %348, %347
  %and.1.i.i.301 = and i32 %xor.1.i.i.300, %sub.i.i.294
  %xor3.1.i.i.302 = xor i32 %and.1.i.i.301, %347
  store i32 %xor3.1.i.i.302, i32* %arrayidx.1.i.i.1252, align 4, !tbaa !7
  %349 = load i32, i32* %arrayidx.2.i.i.1257, align 4, !tbaa !7
  %arrayidx1.2.i.i.304 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 0, i64 2
  %350 = load i32, i32* %arrayidx1.2.i.i.304, align 8, !tbaa !7
  %xor.2.i.i.305 = xor i32 %350, %349
  %and.2.i.i.306 = and i32 %xor.2.i.i.305, %sub.i.i.294
  %xor3.2.i.i.307 = xor i32 %and.2.i.i.306, %349
  store i32 %xor3.2.i.i.307, i32* %arrayidx.2.i.i.1257, align 4, !tbaa !7
  %351 = load i32, i32* %arrayidx.3.i.i.1262, align 4, !tbaa !7
  %arrayidx1.3.i.i.309 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 0, i64 3
  %352 = load i32, i32* %arrayidx1.3.i.i.309, align 4, !tbaa !7
  %xor.3.i.i.310 = xor i32 %352, %351
  %and.3.i.i.311 = and i32 %xor.3.i.i.310, %sub.i.i.294
  %xor3.3.i.i.312 = xor i32 %and.3.i.i.311, %351
  store i32 %xor3.3.i.i.312, i32* %arrayidx.3.i.i.1262, align 4, !tbaa !7
  %353 = load i32, i32* %arrayidx.4.i.i.1267, align 4, !tbaa !7
  %arrayidx1.4.i.i.314 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 0, i64 4
  %354 = load i32, i32* %arrayidx1.4.i.i.314, align 16, !tbaa !7
  %xor.4.i.i.315 = xor i32 %354, %353
  %and.4.i.i.316 = and i32 %xor.4.i.i.315, %sub.i.i.294
  %xor3.4.i.i.317 = xor i32 %and.4.i.i.316, %353
  store i32 %xor3.4.i.i.317, i32* %arrayidx.4.i.i.1267, align 4, !tbaa !7
  %355 = load i32, i32* %arrayidx.5.i.i.1272, align 4, !tbaa !7
  %arrayidx1.5.i.i.319 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 0, i64 5
  %356 = load i32, i32* %arrayidx1.5.i.i.319, align 4, !tbaa !7
  %xor.5.i.i.320 = xor i32 %356, %355
  %and.5.i.i.321 = and i32 %xor.5.i.i.320, %sub.i.i.294
  %xor3.5.i.i.322 = xor i32 %and.5.i.i.321, %355
  store i32 %xor3.5.i.i.322, i32* %arrayidx.5.i.i.1272, align 4, !tbaa !7
  %357 = load i32, i32* %arrayidx.6.i.i.1277, align 4, !tbaa !7
  %arrayidx1.6.i.i.324 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 0, i64 6
  %358 = load i32, i32* %arrayidx1.6.i.i.324, align 8, !tbaa !7
  %xor.6.i.i.325 = xor i32 %358, %357
  %and.6.i.i.326 = and i32 %xor.6.i.i.325, %sub.i.i.294
  %xor3.6.i.i.327 = xor i32 %and.6.i.i.326, %357
  store i32 %xor3.6.i.i.327, i32* %arrayidx.6.i.i.1277, align 4, !tbaa !7
  %359 = load i32, i32* %arrayidx.7.i.i.1282, align 4, !tbaa !7
  %arrayidx1.7.i.i.329 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 0, i64 7
  %360 = load i32, i32* %arrayidx1.7.i.i.329, align 4, !tbaa !7
  %xor.7.i.i.330 = xor i32 %360, %359
  %and.7.i.i.331 = and i32 %xor.7.i.i.330, %sub.i.i.294
  %xor3.7.i.i.332 = xor i32 %and.7.i.i.331, %359
  store i32 %xor3.7.i.i.332, i32* %arrayidx.7.i.i.1282, align 4, !tbaa !7
  %361 = load i32, i32* %arrayidx.8.i.i.1287, align 4, !tbaa !7
  %arrayidx1.8.i.i.334 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 0, i64 8
  %362 = load i32, i32* %arrayidx1.8.i.i.334, align 16, !tbaa !7
  %xor.8.i.i.335 = xor i32 %362, %361
  %and.8.i.i.336 = and i32 %xor.8.i.i.335, %sub.i.i.294
  %xor3.8.i.i.337 = xor i32 %and.8.i.i.336, %361
  store i32 %xor3.8.i.i.337, i32* %arrayidx.8.i.i.1287, align 4, !tbaa !7
  %363 = load i32, i32* %arrayidx.9.i.i.1292, align 4, !tbaa !7
  %arrayidx1.9.i.i.339 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 0, i64 9
  %364 = load i32, i32* %arrayidx1.9.i.i.339, align 4, !tbaa !7
  %xor.9.i.i.340 = xor i32 %364, %363
  %and.9.i.i.341 = and i32 %xor.9.i.i.340, %sub.i.i.294
  %xor3.9.i.i.342 = xor i32 %and.9.i.i.341, %363
  store i32 %xor3.9.i.i.342, i32* %arrayidx.9.i.i.1292, align 4, !tbaa !7
  %arraydecay5.i.344 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 1, i64 0
  %365 = load i32, i32* %arraydecay1.i, align 4, !tbaa !7
  %366 = load i32, i32* %arraydecay5.i.344, align 8, !tbaa !7
  %xor.i.348 = xor i32 %366, %365
  %and.i.349 = and i32 %xor.i.348, %sub.i.i.294
  %xor3.i.350 = xor i32 %and.i.349, %365
  store i32 %xor3.i.350, i32* %arraydecay1.i, align 4, !tbaa !7
  %367 = load i32, i32* %arrayidx.1.i.1305, align 4, !tbaa !7
  %arrayidx1.1.i.352 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 1, i64 1
  %368 = load i32, i32* %arrayidx1.1.i.352, align 4, !tbaa !7
  %xor.1.i.353 = xor i32 %368, %367
  %and.1.i.354 = and i32 %xor.1.i.353, %sub.i.i.294
  %xor3.1.i.355 = xor i32 %and.1.i.354, %367
  store i32 %xor3.1.i.355, i32* %arrayidx.1.i.1305, align 4, !tbaa !7
  %369 = load i32, i32* %arrayidx.2.i.1310, align 4, !tbaa !7
  %arrayidx1.2.i.357 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 1, i64 2
  %370 = load i32, i32* %arrayidx1.2.i.357, align 8, !tbaa !7
  %xor.2.i.358 = xor i32 %370, %369
  %and.2.i.359 = and i32 %xor.2.i.358, %sub.i.i.294
  %xor3.2.i.360 = xor i32 %and.2.i.359, %369
  store i32 %xor3.2.i.360, i32* %arrayidx.2.i.1310, align 4, !tbaa !7
  %371 = load i32, i32* %arrayidx.3.i.1315, align 4, !tbaa !7
  %arrayidx1.3.i.362 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 1, i64 3
  %372 = load i32, i32* %arrayidx1.3.i.362, align 4, !tbaa !7
  %xor.3.i.363 = xor i32 %372, %371
  %and.3.i.364 = and i32 %xor.3.i.363, %sub.i.i.294
  %xor3.3.i.365 = xor i32 %and.3.i.364, %371
  store i32 %xor3.3.i.365, i32* %arrayidx.3.i.1315, align 4, !tbaa !7
  %373 = load i32, i32* %arrayidx.4.i.1320, align 4, !tbaa !7
  %arrayidx1.4.i.367 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 1, i64 4
  %374 = load i32, i32* %arrayidx1.4.i.367, align 8, !tbaa !7
  %xor.4.i.368 = xor i32 %374, %373
  %and.4.i.369 = and i32 %xor.4.i.368, %sub.i.i.294
  %xor3.4.i.370 = xor i32 %and.4.i.369, %373
  store i32 %xor3.4.i.370, i32* %arrayidx.4.i.1320, align 4, !tbaa !7
  %375 = load i32, i32* %arrayidx.5.i.1325, align 4, !tbaa !7
  %arrayidx1.5.i.372 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 1, i64 5
  %376 = load i32, i32* %arrayidx1.5.i.372, align 4, !tbaa !7
  %xor.5.i.373 = xor i32 %376, %375
  %and.5.i.374 = and i32 %xor.5.i.373, %sub.i.i.294
  %xor3.5.i.375 = xor i32 %and.5.i.374, %375
  store i32 %xor3.5.i.375, i32* %arrayidx.5.i.1325, align 4, !tbaa !7
  %377 = load i32, i32* %arrayidx.6.i.1330, align 4, !tbaa !7
  %arrayidx1.6.i.377 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 1, i64 6
  %378 = load i32, i32* %arrayidx1.6.i.377, align 8, !tbaa !7
  %xor.6.i.378 = xor i32 %378, %377
  %and.6.i.379 = and i32 %xor.6.i.378, %sub.i.i.294
  %xor3.6.i.380 = xor i32 %and.6.i.379, %377
  store i32 %xor3.6.i.380, i32* %arrayidx.6.i.1330, align 4, !tbaa !7
  %379 = load i32, i32* %arrayidx.7.i.1335, align 4, !tbaa !7
  %arrayidx1.7.i.382 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 1, i64 7
  %380 = load i32, i32* %arrayidx1.7.i.382, align 4, !tbaa !7
  %xor.7.i.383 = xor i32 %380, %379
  %and.7.i.384 = and i32 %xor.7.i.383, %sub.i.i.294
  %xor3.7.i.385 = xor i32 %and.7.i.384, %379
  store i32 %xor3.7.i.385, i32* %arrayidx.7.i.1335, align 4, !tbaa !7
  %381 = load i32, i32* %arrayidx.8.i.1340, align 4, !tbaa !7
  %arrayidx1.8.i.387 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 1, i64 8
  %382 = load i32, i32* %arrayidx1.8.i.387, align 8, !tbaa !7
  %xor.8.i.388 = xor i32 %382, %381
  %and.8.i.389 = and i32 %xor.8.i.388, %sub.i.i.294
  %xor3.8.i.390 = xor i32 %and.8.i.389, %381
  store i32 %xor3.8.i.390, i32* %arrayidx.8.i.1340, align 4, !tbaa !7
  %383 = load i32, i32* %arrayidx.9.i.1345, align 4, !tbaa !7
  %arrayidx1.9.i.392 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 1, i64 9
  %384 = load i32, i32* %arrayidx1.9.i.392, align 4, !tbaa !7
  %xor.9.i.393 = xor i32 %384, %383
  %and.9.i.394 = and i32 %xor.9.i.393, %sub.i.i.294
  %xor3.9.i.395 = xor i32 %and.9.i.394, %383
  store i32 %xor3.9.i.395, i32* %arrayidx.9.i.1345, align 4, !tbaa !7
  %arraydecay9.i.346 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 2, i64 0
  %385 = load i32, i32* %arraydecay2.i.1405, align 4, !tbaa !7
  %386 = load i32, i32* %arraydecay9.i.346, align 16, !tbaa !7
  %xor.i.397 = xor i32 %386, %385
  %and.i.398 = and i32 %xor.i.397, %sub.i.i.294
  %xor3.i.399 = xor i32 %and.i.398, %385
  store i32 %xor3.i.399, i32* %arraydecay2.i.1405, align 4, !tbaa !7
  %387 = load i32, i32* %arrayidx.1.i.1354, align 4, !tbaa !7
  %arrayidx1.1.i.401 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 2, i64 1
  %388 = load i32, i32* %arrayidx1.1.i.401, align 4, !tbaa !7
  %xor.1.i.402 = xor i32 %388, %387
  %and.1.i.403 = and i32 %xor.1.i.402, %sub.i.i.294
  %xor3.1.i.404 = xor i32 %and.1.i.403, %387
  store i32 %xor3.1.i.404, i32* %arrayidx.1.i.1354, align 4, !tbaa !7
  %389 = load i32, i32* %arrayidx.2.i.1359, align 4, !tbaa !7
  %arrayidx1.2.i.406 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 2, i64 2
  %390 = load i32, i32* %arrayidx1.2.i.406, align 8, !tbaa !7
  %xor.2.i.407 = xor i32 %390, %389
  %and.2.i.408 = and i32 %xor.2.i.407, %sub.i.i.294
  %xor3.2.i.409 = xor i32 %and.2.i.408, %389
  store i32 %xor3.2.i.409, i32* %arrayidx.2.i.1359, align 4, !tbaa !7
  %391 = load i32, i32* %arrayidx.3.i.1364, align 4, !tbaa !7
  %arrayidx1.3.i.411 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 2, i64 3
  %392 = load i32, i32* %arrayidx1.3.i.411, align 4, !tbaa !7
  %xor.3.i.412 = xor i32 %392, %391
  %and.3.i.413 = and i32 %xor.3.i.412, %sub.i.i.294
  %xor3.3.i.414 = xor i32 %and.3.i.413, %391
  store i32 %xor3.3.i.414, i32* %arrayidx.3.i.1364, align 4, !tbaa !7
  %393 = load i32, i32* %arrayidx.4.i.1369, align 4, !tbaa !7
  %arrayidx1.4.i.416 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 2, i64 4
  %394 = load i32, i32* %arrayidx1.4.i.416, align 16, !tbaa !7
  %xor.4.i.417 = xor i32 %394, %393
  %and.4.i.418 = and i32 %xor.4.i.417, %sub.i.i.294
  %xor3.4.i.419 = xor i32 %and.4.i.418, %393
  store i32 %xor3.4.i.419, i32* %arrayidx.4.i.1369, align 4, !tbaa !7
  %395 = load i32, i32* %arrayidx.5.i.1374, align 4, !tbaa !7
  %arrayidx1.5.i.421 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 2, i64 5
  %396 = load i32, i32* %arrayidx1.5.i.421, align 4, !tbaa !7
  %xor.5.i.422 = xor i32 %396, %395
  %and.5.i.423 = and i32 %xor.5.i.422, %sub.i.i.294
  %xor3.5.i.424 = xor i32 %and.5.i.423, %395
  store i32 %xor3.5.i.424, i32* %arrayidx.5.i.1374, align 4, !tbaa !7
  %397 = load i32, i32* %arrayidx.6.i.1379, align 4, !tbaa !7
  %arrayidx1.6.i.426 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 2, i64 6
  %398 = load i32, i32* %arrayidx1.6.i.426, align 8, !tbaa !7
  %xor.6.i.427 = xor i32 %398, %397
  %and.6.i.428 = and i32 %xor.6.i.427, %sub.i.i.294
  %xor3.6.i.429 = xor i32 %and.6.i.428, %397
  store i32 %xor3.6.i.429, i32* %arrayidx.6.i.1379, align 4, !tbaa !7
  %399 = load i32, i32* %arrayidx.7.i.1384, align 4, !tbaa !7
  %arrayidx1.7.i.431 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 2, i64 7
  %400 = load i32, i32* %arrayidx1.7.i.431, align 4, !tbaa !7
  %xor.7.i.432 = xor i32 %400, %399
  %and.7.i.433 = and i32 %xor.7.i.432, %sub.i.i.294
  %xor3.7.i.434 = xor i32 %and.7.i.433, %399
  store i32 %xor3.7.i.434, i32* %arrayidx.7.i.1384, align 4, !tbaa !7
  %401 = load i32, i32* %arrayidx.8.i.1389, align 4, !tbaa !7
  %arrayidx1.8.i.436 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 2, i64 8
  %402 = load i32, i32* %arrayidx1.8.i.436, align 16, !tbaa !7
  %xor.8.i.437 = xor i32 %402, %401
  %and.8.i.438 = and i32 %xor.8.i.437, %sub.i.i.294
  %xor3.8.i.439 = xor i32 %and.8.i.438, %401
  store i32 %xor3.8.i.439, i32* %arrayidx.8.i.1389, align 4, !tbaa !7
  %403 = load i32, i32* %arrayidx.9.i.1394, align 4, !tbaa !7
  %arrayidx1.9.i.441 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 6, i32 2, i64 9
  %404 = load i32, i32* %arrayidx1.9.i.441, align 4, !tbaa !7
  %xor.9.i.442 = xor i32 %404, %403
  %and.9.i.443 = and i32 %xor.9.i.442, %sub.i.i.294
  %xor3.9.i.444 = xor i32 %and.9.i.443, %403
  store i32 %xor3.9.i.444, i32* %arrayidx.9.i.1394, align 4, !tbaa !7
  %xor8.i = xor i8 %sub5, 8
  %conv3.i = zext i8 %xor8.i to i32
  %sub.i.289 = add nsw i32 %conv3.i, -1
  %arraydecay2.i.136 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 0, i64 0
  %sub.i.i.138 = ashr i32 %sub.i.289, 31
  %405 = load i32, i32* %arraydecay.i.1404, align 4, !tbaa !7
  %406 = load i32, i32* %arraydecay2.i.136, align 8, !tbaa !7
  %xor.i.i.139 = xor i32 %406, %405
  %and.i.i.140 = and i32 %xor.i.i.139, %sub.i.i.138
  %xor3.i.i.141 = xor i32 %and.i.i.140, %405
  store i32 %xor3.i.i.141, i32* %arraydecay.i.1404, align 4, !tbaa !7
  %407 = load i32, i32* %arrayidx.1.i.i.1252, align 4, !tbaa !7
  %arrayidx1.1.i.i.143 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 0, i64 1
  %408 = load i32, i32* %arrayidx1.1.i.i.143, align 4, !tbaa !7
  %xor.1.i.i.144 = xor i32 %408, %407
  %and.1.i.i.145 = and i32 %xor.1.i.i.144, %sub.i.i.138
  %xor3.1.i.i.146 = xor i32 %and.1.i.i.145, %407
  store i32 %xor3.1.i.i.146, i32* %arrayidx.1.i.i.1252, align 4, !tbaa !7
  %409 = load i32, i32* %arrayidx.2.i.i.1257, align 4, !tbaa !7
  %arrayidx1.2.i.i.148 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 0, i64 2
  %410 = load i32, i32* %arrayidx1.2.i.i.148, align 8, !tbaa !7
  %xor.2.i.i.149 = xor i32 %410, %409
  %and.2.i.i.150 = and i32 %xor.2.i.i.149, %sub.i.i.138
  %xor3.2.i.i.151 = xor i32 %and.2.i.i.150, %409
  store i32 %xor3.2.i.i.151, i32* %arrayidx.2.i.i.1257, align 4, !tbaa !7
  %411 = load i32, i32* %arrayidx.3.i.i.1262, align 4, !tbaa !7
  %arrayidx1.3.i.i.153 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 0, i64 3
  %412 = load i32, i32* %arrayidx1.3.i.i.153, align 4, !tbaa !7
  %xor.3.i.i.154 = xor i32 %412, %411
  %and.3.i.i.155 = and i32 %xor.3.i.i.154, %sub.i.i.138
  %xor3.3.i.i.156 = xor i32 %and.3.i.i.155, %411
  store i32 %xor3.3.i.i.156, i32* %arrayidx.3.i.i.1262, align 4, !tbaa !7
  %413 = load i32, i32* %arrayidx.4.i.i.1267, align 4, !tbaa !7
  %arrayidx1.4.i.i.158 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 0, i64 4
  %414 = load i32, i32* %arrayidx1.4.i.i.158, align 8, !tbaa !7
  %xor.4.i.i.159 = xor i32 %414, %413
  %and.4.i.i.160 = and i32 %xor.4.i.i.159, %sub.i.i.138
  %xor3.4.i.i.161 = xor i32 %and.4.i.i.160, %413
  store i32 %xor3.4.i.i.161, i32* %arrayidx.4.i.i.1267, align 4, !tbaa !7
  %415 = load i32, i32* %arrayidx.5.i.i.1272, align 4, !tbaa !7
  %arrayidx1.5.i.i.163 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 0, i64 5
  %416 = load i32, i32* %arrayidx1.5.i.i.163, align 4, !tbaa !7
  %xor.5.i.i.164 = xor i32 %416, %415
  %and.5.i.i.165 = and i32 %xor.5.i.i.164, %sub.i.i.138
  %xor3.5.i.i.166 = xor i32 %and.5.i.i.165, %415
  store i32 %xor3.5.i.i.166, i32* %arrayidx.5.i.i.1272, align 4, !tbaa !7
  %417 = load i32, i32* %arrayidx.6.i.i.1277, align 4, !tbaa !7
  %arrayidx1.6.i.i.168 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 0, i64 6
  %418 = load i32, i32* %arrayidx1.6.i.i.168, align 8, !tbaa !7
  %xor.6.i.i.169 = xor i32 %418, %417
  %and.6.i.i.170 = and i32 %xor.6.i.i.169, %sub.i.i.138
  %xor3.6.i.i.171 = xor i32 %and.6.i.i.170, %417
  store i32 %xor3.6.i.i.171, i32* %arrayidx.6.i.i.1277, align 4, !tbaa !7
  %419 = load i32, i32* %arrayidx.7.i.i.1282, align 4, !tbaa !7
  %arrayidx1.7.i.i.173 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 0, i64 7
  %420 = load i32, i32* %arrayidx1.7.i.i.173, align 4, !tbaa !7
  %xor.7.i.i.174 = xor i32 %420, %419
  %and.7.i.i.175 = and i32 %xor.7.i.i.174, %sub.i.i.138
  %xor3.7.i.i.176 = xor i32 %and.7.i.i.175, %419
  store i32 %xor3.7.i.i.176, i32* %arrayidx.7.i.i.1282, align 4, !tbaa !7
  %421 = load i32, i32* %arrayidx.8.i.i.1287, align 4, !tbaa !7
  %arrayidx1.8.i.i.178 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 0, i64 8
  %422 = load i32, i32* %arrayidx1.8.i.i.178, align 8, !tbaa !7
  %xor.8.i.i.179 = xor i32 %422, %421
  %and.8.i.i.180 = and i32 %xor.8.i.i.179, %sub.i.i.138
  %xor3.8.i.i.181 = xor i32 %and.8.i.i.180, %421
  store i32 %xor3.8.i.i.181, i32* %arrayidx.8.i.i.1287, align 4, !tbaa !7
  %423 = load i32, i32* %arrayidx.9.i.i.1292, align 4, !tbaa !7
  %arrayidx1.9.i.i.183 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 0, i64 9
  %424 = load i32, i32* %arrayidx1.9.i.i.183, align 4, !tbaa !7
  %xor.9.i.i.184 = xor i32 %424, %423
  %and.9.i.i.185 = and i32 %xor.9.i.i.184, %sub.i.i.138
  %xor3.9.i.i.186 = xor i32 %and.9.i.i.185, %423
  store i32 %xor3.9.i.i.186, i32* %arrayidx.9.i.i.1292, align 4, !tbaa !7
  %arraydecay5.i.188 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 1, i64 0
  %425 = load i32, i32* %arraydecay1.i, align 4, !tbaa !7
  %426 = load i32, i32* %arraydecay5.i.188, align 8, !tbaa !7
  %xor.i.192 = xor i32 %426, %425
  %and.i.193 = and i32 %xor.i.192, %sub.i.i.138
  %xor3.i.194 = xor i32 %and.i.193, %425
  store i32 %xor3.i.194, i32* %arraydecay1.i, align 4, !tbaa !7
  %427 = load i32, i32* %arrayidx.1.i.1305, align 4, !tbaa !7
  %arrayidx1.1.i.196 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 1, i64 1
  %428 = load i32, i32* %arrayidx1.1.i.196, align 4, !tbaa !7
  %xor.1.i.197 = xor i32 %428, %427
  %and.1.i.198 = and i32 %xor.1.i.197, %sub.i.i.138
  %xor3.1.i.199 = xor i32 %and.1.i.198, %427
  store i32 %xor3.1.i.199, i32* %arrayidx.1.i.1305, align 4, !tbaa !7
  %429 = load i32, i32* %arrayidx.2.i.1310, align 4, !tbaa !7
  %arrayidx1.2.i.201 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 1, i64 2
  %430 = load i32, i32* %arrayidx1.2.i.201, align 8, !tbaa !7
  %xor.2.i.202 = xor i32 %430, %429
  %and.2.i.203 = and i32 %xor.2.i.202, %sub.i.i.138
  %xor3.2.i.204 = xor i32 %and.2.i.203, %429
  store i32 %xor3.2.i.204, i32* %arrayidx.2.i.1310, align 4, !tbaa !7
  %431 = load i32, i32* %arrayidx.3.i.1315, align 4, !tbaa !7
  %arrayidx1.3.i.206 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 1, i64 3
  %432 = load i32, i32* %arrayidx1.3.i.206, align 4, !tbaa !7
  %xor.3.i.207 = xor i32 %432, %431
  %and.3.i.208 = and i32 %xor.3.i.207, %sub.i.i.138
  %xor3.3.i.209 = xor i32 %and.3.i.208, %431
  store i32 %xor3.3.i.209, i32* %arrayidx.3.i.1315, align 4, !tbaa !7
  %433 = load i32, i32* %arrayidx.4.i.1320, align 4, !tbaa !7
  %arrayidx1.4.i.211 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 1, i64 4
  %434 = load i32, i32* %arrayidx1.4.i.211, align 8, !tbaa !7
  %xor.4.i.212 = xor i32 %434, %433
  %and.4.i.213 = and i32 %xor.4.i.212, %sub.i.i.138
  %xor3.4.i.214 = xor i32 %and.4.i.213, %433
  store i32 %xor3.4.i.214, i32* %arrayidx.4.i.1320, align 4, !tbaa !7
  %435 = load i32, i32* %arrayidx.5.i.1325, align 4, !tbaa !7
  %arrayidx1.5.i.216 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 1, i64 5
  %436 = load i32, i32* %arrayidx1.5.i.216, align 4, !tbaa !7
  %xor.5.i.217 = xor i32 %436, %435
  %and.5.i.218 = and i32 %xor.5.i.217, %sub.i.i.138
  %xor3.5.i.219 = xor i32 %and.5.i.218, %435
  store i32 %xor3.5.i.219, i32* %arrayidx.5.i.1325, align 4, !tbaa !7
  %437 = load i32, i32* %arrayidx.6.i.1330, align 4, !tbaa !7
  %arrayidx1.6.i.221 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 1, i64 6
  %438 = load i32, i32* %arrayidx1.6.i.221, align 8, !tbaa !7
  %xor.6.i.222 = xor i32 %438, %437
  %and.6.i.223 = and i32 %xor.6.i.222, %sub.i.i.138
  %xor3.6.i.224 = xor i32 %and.6.i.223, %437
  store i32 %xor3.6.i.224, i32* %arrayidx.6.i.1330, align 4, !tbaa !7
  %439 = load i32, i32* %arrayidx.7.i.1335, align 4, !tbaa !7
  %arrayidx1.7.i.226 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 1, i64 7
  %440 = load i32, i32* %arrayidx1.7.i.226, align 4, !tbaa !7
  %xor.7.i.227 = xor i32 %440, %439
  %and.7.i.228 = and i32 %xor.7.i.227, %sub.i.i.138
  %xor3.7.i.229 = xor i32 %and.7.i.228, %439
  store i32 %xor3.7.i.229, i32* %arrayidx.7.i.1335, align 4, !tbaa !7
  %441 = load i32, i32* %arrayidx.8.i.1340, align 4, !tbaa !7
  %arrayidx1.8.i.231 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 1, i64 8
  %442 = load i32, i32* %arrayidx1.8.i.231, align 8, !tbaa !7
  %xor.8.i.232 = xor i32 %442, %441
  %and.8.i.233 = and i32 %xor.8.i.232, %sub.i.i.138
  %xor3.8.i.234 = xor i32 %and.8.i.233, %441
  store i32 %xor3.8.i.234, i32* %arrayidx.8.i.1340, align 4, !tbaa !7
  %443 = load i32, i32* %arrayidx.9.i.1345, align 4, !tbaa !7
  %arrayidx1.9.i.236 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 1, i64 9
  %444 = load i32, i32* %arrayidx1.9.i.236, align 4, !tbaa !7
  %xor.9.i.237 = xor i32 %444, %443
  %and.9.i.238 = and i32 %xor.9.i.237, %sub.i.i.138
  %xor3.9.i.239 = xor i32 %and.9.i.238, %443
  store i32 %xor3.9.i.239, i32* %arrayidx.9.i.1345, align 4, !tbaa !7
  %arraydecay9.i.190 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 2, i64 0
  %445 = load i32, i32* %arraydecay2.i.1405, align 4, !tbaa !7
  %446 = load i32, i32* %arraydecay9.i.190, align 8, !tbaa !7
  %xor.i.241 = xor i32 %446, %445
  %and.i.242 = and i32 %xor.i.241, %sub.i.i.138
  %xor3.i.243 = xor i32 %and.i.242, %445
  store i32 %xor3.i.243, i32* %arraydecay2.i.1405, align 4, !tbaa !7
  %447 = load i32, i32* %arrayidx.1.i.1354, align 4, !tbaa !7
  %arrayidx1.1.i.245 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 2, i64 1
  %448 = load i32, i32* %arrayidx1.1.i.245, align 4, !tbaa !7
  %xor.1.i.246 = xor i32 %448, %447
  %and.1.i.247 = and i32 %xor.1.i.246, %sub.i.i.138
  %xor3.1.i.248 = xor i32 %and.1.i.247, %447
  store i32 %xor3.1.i.248, i32* %arrayidx.1.i.1354, align 4, !tbaa !7
  %449 = load i32, i32* %arrayidx.2.i.1359, align 4, !tbaa !7
  %arrayidx1.2.i.250 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 2, i64 2
  %450 = load i32, i32* %arrayidx1.2.i.250, align 8, !tbaa !7
  %xor.2.i.251 = xor i32 %450, %449
  %and.2.i.252 = and i32 %xor.2.i.251, %sub.i.i.138
  %xor3.2.i.253 = xor i32 %and.2.i.252, %449
  store i32 %xor3.2.i.253, i32* %arrayidx.2.i.1359, align 4, !tbaa !7
  %451 = load i32, i32* %arrayidx.3.i.1364, align 4, !tbaa !7
  %arrayidx1.3.i.255 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 2, i64 3
  %452 = load i32, i32* %arrayidx1.3.i.255, align 4, !tbaa !7
  %xor.3.i.256 = xor i32 %452, %451
  %and.3.i.257 = and i32 %xor.3.i.256, %sub.i.i.138
  %xor3.3.i.258 = xor i32 %and.3.i.257, %451
  store i32 %xor3.3.i.258, i32* %arrayidx.3.i.1364, align 4, !tbaa !7
  %453 = load i32, i32* %arrayidx.4.i.1369, align 4, !tbaa !7
  %arrayidx1.4.i.260 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 2, i64 4
  %454 = load i32, i32* %arrayidx1.4.i.260, align 8, !tbaa !7
  %xor.4.i.261 = xor i32 %454, %453
  %and.4.i.262 = and i32 %xor.4.i.261, %sub.i.i.138
  %xor3.4.i.263 = xor i32 %and.4.i.262, %453
  store i32 %xor3.4.i.263, i32* %arrayidx.4.i.1369, align 4, !tbaa !7
  %455 = load i32, i32* %arrayidx.5.i.1374, align 4, !tbaa !7
  %arrayidx1.5.i.265 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 2, i64 5
  %456 = load i32, i32* %arrayidx1.5.i.265, align 4, !tbaa !7
  %xor.5.i.266 = xor i32 %456, %455
  %and.5.i.267 = and i32 %xor.5.i.266, %sub.i.i.138
  %xor3.5.i.268 = xor i32 %and.5.i.267, %455
  store i32 %xor3.5.i.268, i32* %arrayidx.5.i.1374, align 4, !tbaa !7
  %457 = load i32, i32* %arrayidx.6.i.1379, align 4, !tbaa !7
  %arrayidx1.6.i.270 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 2, i64 6
  %458 = load i32, i32* %arrayidx1.6.i.270, align 8, !tbaa !7
  %xor.6.i.271 = xor i32 %458, %457
  %and.6.i.272 = and i32 %xor.6.i.271, %sub.i.i.138
  %xor3.6.i.273 = xor i32 %and.6.i.272, %457
  store i32 %xor3.6.i.273, i32* %arrayidx.6.i.1379, align 4, !tbaa !7
  %459 = load i32, i32* %arrayidx.7.i.1384, align 4, !tbaa !7
  %arrayidx1.7.i.275 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 2, i64 7
  %460 = load i32, i32* %arrayidx1.7.i.275, align 4, !tbaa !7
  %xor.7.i.276 = xor i32 %460, %459
  %and.7.i.277 = and i32 %xor.7.i.276, %sub.i.i.138
  %xor3.7.i.278 = xor i32 %and.7.i.277, %459
  store i32 %xor3.7.i.278, i32* %arrayidx.7.i.1384, align 4, !tbaa !7
  %461 = load i32, i32* %arrayidx.8.i.1389, align 4, !tbaa !7
  %arrayidx1.8.i.280 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 2, i64 8
  %462 = load i32, i32* %arrayidx1.8.i.280, align 8, !tbaa !7
  %xor.8.i.281 = xor i32 %462, %461
  %and.8.i.282 = and i32 %xor.8.i.281, %sub.i.i.138
  %xor3.8.i.283 = xor i32 %and.8.i.282, %461
  store i32 %xor3.8.i.283, i32* %arrayidx.8.i.1389, align 4, !tbaa !7
  %463 = load i32, i32* %arrayidx.9.i.1394, align 4, !tbaa !7
  %arrayidx1.9.i.285 = getelementptr inbounds [32 x [8 x %struct.ge_precomp]], [32 x [8 x %struct.ge_precomp]]* @k25519Precomp, i64 0, i64 %idxprom, i64 7, i32 2, i64 9
  %464 = load i32, i32* %arrayidx1.9.i.285, align 4, !tbaa !7
  %xor.9.i.286 = xor i32 %464, %463
  %and.9.i.287 = and i32 %xor.9.i.286, %sub.i.i.138
  %xor3.9.i.288 = xor i32 %and.9.i.287, %463
  store i32 %xor3.9.i.288, i32* %arrayidx.9.i.1394, align 4, !tbaa !7
  %465 = bitcast i32* %arraydecay1.i to <4 x i32>*
  %466 = load <4 x i32>, <4 x i32>* %465, align 4
  %minust.sroa.7.0.copyload = load i32, i32* %arrayidx.4.i.1320, align 4
  %minust.sroa.8.0.copyload = load i32, i32* %arrayidx.5.i.1325, align 4
  %467 = bitcast %struct.ge_precomp* %t to <4 x i32>*
  %468 = load <4 x i32>, <4 x i32>* %467, align 4
  %469 = bitcast i32* %arrayidx.4.i.i.1267 to <4 x i32>*
  %470 = load <4 x i32>, <4 x i32>* %469, align 4
  %minust.sroa.22.40.copyload = load i32, i32* %arrayidx.8.i.i.1287, align 4
  %minust.sroa.23.40.copyload = load i32, i32* %arrayidx.9.i.i.1292, align 4
  %471 = insertelement <4 x i32> undef, i32 %xor3.i.243, i32 0
  %472 = insertelement <4 x i32> %471, i32 %xor3.1.i.248, i32 1
  %473 = insertelement <4 x i32> %472, i32 %xor3.2.i.253, i32 2
  %474 = insertelement <4 x i32> %473, i32 %xor3.3.i.258, i32 3
  %475 = sub nsw <4 x i32> zeroinitializer, %474
  %476 = insertelement <4 x i32> undef, i32 %xor3.4.i.263, i32 0
  %477 = insertelement <4 x i32> %476, i32 %xor3.5.i.268, i32 1
  %478 = insertelement <4 x i32> %477, i32 %xor3.6.i.273, i32 2
  %479 = insertelement <4 x i32> %478, i32 %xor3.7.i.278, i32 3
  %480 = sub nsw <4 x i32> zeroinitializer, %479
  %sub.8.i = sub nsw i32 0, %xor3.8.i.283
  %sub.9.i = sub nsw i32 0, %xor3.9.i.288
  %sub.i.i = ashr i32 %conv.i, 31
  %481 = xor <4 x i32> %468, %466
  %482 = insertelement <4 x i32> undef, i32 %sub.i.i, i32 0
  %483 = insertelement <4 x i32> %482, i32 %sub.i.i, i32 1
  %484 = insertelement <4 x i32> %483, i32 %sub.i.i, i32 2
  %485 = insertelement <4 x i32> %484, i32 %sub.i.i, i32 3
  %486 = and <4 x i32> %485, %481
  %487 = xor <4 x i32> %486, %468
  %488 = bitcast %struct.ge_precomp* %t to <4 x i32>*
  store <4 x i32> %487, <4 x i32>* %488, align 4, !tbaa !7
  %489 = insertelement <4 x i32> undef, i32 %minust.sroa.7.0.copyload, i32 0
  %490 = insertelement <4 x i32> %489, i32 %minust.sroa.8.0.copyload, i32 1
  %491 = insertelement <4 x i32> %490, i32 %xor3.6.i.224, i32 2
  %492 = insertelement <4 x i32> %491, i32 %xor3.7.i.229, i32 3
  %493 = xor <4 x i32> %470, %492
  %494 = and <4 x i32> %485, %493
  %495 = xor <4 x i32> %494, %470
  %496 = bitcast i32* %arrayidx.4.i.i.1267 to <4 x i32>*
  store <4 x i32> %495, <4 x i32>* %496, align 4, !tbaa !7
  %xor.8.i.i = xor i32 %minust.sroa.22.40.copyload, %xor3.8.i.234
  %and.8.i.i = and i32 %xor.8.i.i, %sub.i.i
  %xor3.8.i.i = xor i32 %and.8.i.i, %minust.sroa.22.40.copyload
  store i32 %xor3.8.i.i, i32* %arrayidx.8.i.i.1287, align 4, !tbaa !7
  %xor.9.i.i = xor i32 %minust.sroa.23.40.copyload, %xor3.9.i.239
  %and.9.i.i = and i32 %xor.9.i.i, %sub.i.i
  %xor3.9.i.i = xor i32 %and.9.i.i, %minust.sroa.23.40.copyload
  store i32 %xor3.9.i.i, i32* %arrayidx.9.i.i.1292, align 4, !tbaa !7
  %497 = xor <4 x i32> %486, %466
  %498 = bitcast i32* %arraydecay1.i to <4 x i32>*
  store <4 x i32> %497, <4 x i32>* %498, align 4, !tbaa !7
  %499 = extractelement <4 x i32> %494, i32 0
  %xor3.4.i = xor i32 %499, %minust.sroa.7.0.copyload
  store i32 %xor3.4.i, i32* %arrayidx.4.i.1320, align 4, !tbaa !7
  %500 = extractelement <4 x i32> %494, i32 1
  %xor3.5.i = xor i32 %500, %minust.sroa.8.0.copyload
  store i32 %xor3.5.i, i32* %arrayidx.5.i.1325, align 4, !tbaa !7
  %501 = extractelement <4 x i32> %470, i32 2
  %502 = extractelement <4 x i32> %470, i32 3
  %503 = bitcast i32* %arrayidx.6.i.1330 to <4 x i32>*
  %504 = load <4 x i32>, <4 x i32>* %503, align 4, !tbaa !7
  %505 = insertelement <4 x i32> undef, i32 %501, i32 0
  %506 = insertelement <4 x i32> %505, i32 %502, i32 1
  %507 = insertelement <4 x i32> %506, i32 %minust.sroa.22.40.copyload, i32 2
  %508 = insertelement <4 x i32> %507, i32 %minust.sroa.23.40.copyload, i32 3
  %509 = xor <4 x i32> %504, %508
  %510 = and <4 x i32> %485, %509
  %511 = xor <4 x i32> %510, %504
  %512 = bitcast i32* %arrayidx.6.i.1330 to <4 x i32>*
  store <4 x i32> %511, <4 x i32>* %512, align 4, !tbaa !7
  %513 = bitcast i32* %arraydecay2.i.1405 to <4 x i32>*
  %514 = load <4 x i32>, <4 x i32>* %513, align 4, !tbaa !7
  %515 = xor <4 x i32> %514, %475
  %516 = and <4 x i32> %485, %515
  %517 = xor <4 x i32> %516, %514
  %518 = bitcast i32* %arraydecay2.i.1405 to <4 x i32>*
  store <4 x i32> %517, <4 x i32>* %518, align 4, !tbaa !7
  %519 = bitcast i32* %arrayidx.4.i.1369 to <4 x i32>*
  %520 = load <4 x i32>, <4 x i32>* %519, align 4, !tbaa !7
  %521 = xor <4 x i32> %520, %480
  %522 = and <4 x i32> %485, %521
  %523 = xor <4 x i32> %522, %520
  %524 = bitcast i32* %arrayidx.4.i.1369 to <4 x i32>*
  store <4 x i32> %523, <4 x i32>* %524, align 4, !tbaa !7
  %525 = load i32, i32* %arrayidx.8.i.1389, align 4, !tbaa !7
  %xor.8.i.117 = xor i32 %525, %sub.8.i
  %and.8.i.118 = and i32 %xor.8.i.117, %sub.i.i
  %xor3.8.i.119 = xor i32 %and.8.i.118, %525
  store i32 %xor3.8.i.119, i32* %arrayidx.8.i.1389, align 4, !tbaa !7
  %526 = load i32, i32* %arrayidx.9.i.1394, align 4, !tbaa !7
  %xor.9.i.122 = xor i32 %526, %sub.9.i
  %and.9.i.123 = and i32 %xor.9.i.122, %sub.i.i
  %xor3.9.i.124 = xor i32 %and.9.i.123, %526
  store i32 %xor3.9.i.124, i32* %arrayidx.9.i.1394, align 4, !tbaa !7
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ge_madd(%struct.ge_p1p1* %r, %struct.ge_p3* nocapture readonly %p, %struct.ge_precomp* nocapture readonly %q) #0 {
entry:
  %arraydecay = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 0
  %arraydecay1 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 0
  %arraydecay3 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 0
  %0 = load i32, i32* %arraydecay1, align 4, !tbaa !7
  %1 = load i32, i32* %arraydecay3, align 4, !tbaa !7
  %add.i = add nsw i32 %1, %0
  store i32 %add.i, i32* %arraydecay, align 4, !tbaa !7
  %arrayidx.1.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 1
  %2 = load i32, i32* %arrayidx.1.i, align 4, !tbaa !7
  %arrayidx2.1.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 1
  %3 = load i32, i32* %arrayidx2.1.i, align 4, !tbaa !7
  %add.1.i = add nsw i32 %3, %2
  %arrayidx4.1.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 1
  store i32 %add.1.i, i32* %arrayidx4.1.i, align 4, !tbaa !7
  %arrayidx.2.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 2
  %4 = load i32, i32* %arrayidx.2.i, align 4, !tbaa !7
  %arrayidx2.2.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 2
  %5 = load i32, i32* %arrayidx2.2.i, align 4, !tbaa !7
  %add.2.i = add nsw i32 %5, %4
  %arrayidx4.2.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 2
  store i32 %add.2.i, i32* %arrayidx4.2.i, align 4, !tbaa !7
  %arrayidx.3.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 3
  %6 = load i32, i32* %arrayidx.3.i, align 4, !tbaa !7
  %arrayidx2.3.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 3
  %7 = load i32, i32* %arrayidx2.3.i, align 4, !tbaa !7
  %add.3.i = add nsw i32 %7, %6
  %arrayidx4.3.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 3
  store i32 %add.3.i, i32* %arrayidx4.3.i, align 4, !tbaa !7
  %arrayidx.4.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 4
  %8 = load i32, i32* %arrayidx.4.i, align 4, !tbaa !7
  %arrayidx2.4.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 4
  %9 = load i32, i32* %arrayidx2.4.i, align 4, !tbaa !7
  %add.4.i = add nsw i32 %9, %8
  %arrayidx4.4.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 4
  store i32 %add.4.i, i32* %arrayidx4.4.i, align 4, !tbaa !7
  %arrayidx.5.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 5
  %10 = load i32, i32* %arrayidx.5.i, align 4, !tbaa !7
  %arrayidx2.5.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 5
  %11 = load i32, i32* %arrayidx2.5.i, align 4, !tbaa !7
  %add.5.i = add nsw i32 %11, %10
  %arrayidx4.5.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 5
  store i32 %add.5.i, i32* %arrayidx4.5.i, align 4, !tbaa !7
  %arrayidx.6.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 6
  %12 = load i32, i32* %arrayidx.6.i, align 4, !tbaa !7
  %arrayidx2.6.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 6
  %13 = load i32, i32* %arrayidx2.6.i, align 4, !tbaa !7
  %add.6.i = add nsw i32 %13, %12
  %arrayidx4.6.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 6
  store i32 %add.6.i, i32* %arrayidx4.6.i, align 4, !tbaa !7
  %arrayidx.7.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 7
  %14 = load i32, i32* %arrayidx.7.i, align 4, !tbaa !7
  %arrayidx2.7.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 7
  %15 = load i32, i32* %arrayidx2.7.i, align 4, !tbaa !7
  %add.7.i = add nsw i32 %15, %14
  %arrayidx4.7.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 7
  store i32 %add.7.i, i32* %arrayidx4.7.i, align 4, !tbaa !7
  %arrayidx.8.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 8
  %16 = load i32, i32* %arrayidx.8.i, align 4, !tbaa !7
  %arrayidx2.8.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 8
  %17 = load i32, i32* %arrayidx2.8.i, align 4, !tbaa !7
  %add.8.i = add nsw i32 %17, %16
  %arrayidx4.8.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 8
  store i32 %add.8.i, i32* %arrayidx4.8.i, align 4, !tbaa !7
  %arrayidx.9.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 9
  %18 = load i32, i32* %arrayidx.9.i, align 4, !tbaa !7
  %arrayidx2.9.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 9
  %19 = load i32, i32* %arrayidx2.9.i, align 4, !tbaa !7
  %add.9.i = add nsw i32 %19, %18
  %arrayidx4.9.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 9
  store i32 %add.9.i, i32* %arrayidx4.9.i, align 4, !tbaa !7
  %arraydecay5 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 0
  %20 = load i32, i32* %arraydecay1, align 4, !tbaa !7
  %21 = load i32, i32* %arraydecay3, align 4, !tbaa !7
  %sub.i.249 = sub nsw i32 %20, %21
  store i32 %sub.i.249, i32* %arraydecay5, align 4, !tbaa !7
  %22 = load i32, i32* %arrayidx.1.i, align 4, !tbaa !7
  %23 = load i32, i32* %arrayidx2.1.i, align 4, !tbaa !7
  %sub.1.i.252 = sub nsw i32 %22, %23
  %arrayidx4.1.i.253 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 1
  store i32 %sub.1.i.252, i32* %arrayidx4.1.i.253, align 4, !tbaa !7
  %24 = load i32, i32* %arrayidx.2.i, align 4, !tbaa !7
  %25 = load i32, i32* %arrayidx2.2.i, align 4, !tbaa !7
  %sub.2.i.256 = sub nsw i32 %24, %25
  %arrayidx4.2.i.257 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 2
  store i32 %sub.2.i.256, i32* %arrayidx4.2.i.257, align 4, !tbaa !7
  %26 = load i32, i32* %arrayidx.3.i, align 4, !tbaa !7
  %27 = load i32, i32* %arrayidx2.3.i, align 4, !tbaa !7
  %sub.3.i.260 = sub nsw i32 %26, %27
  %arrayidx4.3.i.261 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 3
  store i32 %sub.3.i.260, i32* %arrayidx4.3.i.261, align 4, !tbaa !7
  %28 = load i32, i32* %arrayidx.4.i, align 4, !tbaa !7
  %29 = load i32, i32* %arrayidx2.4.i, align 4, !tbaa !7
  %sub.4.i.264 = sub nsw i32 %28, %29
  %arrayidx4.4.i.265 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 4
  store i32 %sub.4.i.264, i32* %arrayidx4.4.i.265, align 4, !tbaa !7
  %30 = load i32, i32* %arrayidx.5.i, align 4, !tbaa !7
  %31 = load i32, i32* %arrayidx2.5.i, align 4, !tbaa !7
  %sub.5.i.268 = sub nsw i32 %30, %31
  %arrayidx4.5.i.269 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 5
  store i32 %sub.5.i.268, i32* %arrayidx4.5.i.269, align 4, !tbaa !7
  %32 = load i32, i32* %arrayidx.6.i, align 4, !tbaa !7
  %33 = load i32, i32* %arrayidx2.6.i, align 4, !tbaa !7
  %sub.6.i.272 = sub nsw i32 %32, %33
  %arrayidx4.6.i.273 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 6
  store i32 %sub.6.i.272, i32* %arrayidx4.6.i.273, align 4, !tbaa !7
  %34 = load i32, i32* %arrayidx.7.i, align 4, !tbaa !7
  %35 = load i32, i32* %arrayidx2.7.i, align 4, !tbaa !7
  %sub.7.i.276 = sub nsw i32 %34, %35
  %arrayidx4.7.i.277 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 7
  store i32 %sub.7.i.276, i32* %arrayidx4.7.i.277, align 4, !tbaa !7
  %36 = load i32, i32* %arrayidx.8.i, align 4, !tbaa !7
  %37 = load i32, i32* %arrayidx2.8.i, align 4, !tbaa !7
  %sub.8.i.280 = sub nsw i32 %36, %37
  %arrayidx4.8.i.281 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 8
  store i32 %sub.8.i.280, i32* %arrayidx4.8.i.281, align 4, !tbaa !7
  %38 = load i32, i32* %arrayidx.9.i, align 4, !tbaa !7
  %39 = load i32, i32* %arrayidx2.9.i, align 4, !tbaa !7
  %sub.9.i.284 = sub nsw i32 %38, %39
  %arrayidx4.9.i.285 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 9
  store i32 %sub.9.i.284, i32* %arrayidx4.9.i.285, align 4, !tbaa !7
  %arraydecay10 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 0
  %arraydecay13 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %q, i64 0, i32 0, i64 0
  tail call fastcc void @fe_mul(i32* %arraydecay10, i32* %arraydecay, i32* %arraydecay13)
  %arraydecay18 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %q, i64 0, i32 1, i64 0
  tail call fastcc void @fe_mul(i32* %arraydecay5, i32* %arraydecay5, i32* %arraydecay18)
  %arraydecay19 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 0
  %arraydecay20 = getelementptr inbounds %struct.ge_precomp, %struct.ge_precomp* %q, i64 0, i32 2, i64 0
  %arraydecay22 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 3, i64 0
  tail call fastcc void @fe_mul(i32* %arraydecay19, i32* %arraydecay20, i32* %arraydecay22)
  %arraydecay25 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 2, i64 0
  %40 = load i32, i32* %arraydecay25, align 4, !tbaa !7
  %add.i.212 = shl nsw i32 %40, 1
  %arrayidx.1.i.213 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 2, i64 1
  %41 = load i32, i32* %arrayidx.1.i.213, align 4, !tbaa !7
  %add.1.i.215 = shl nsw i32 %41, 1
  %arrayidx.2.i.217 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 2, i64 2
  %42 = bitcast i32* %arrayidx.2.i.217 to <4 x i32>*
  %43 = load <4 x i32>, <4 x i32>* %42, align 4, !tbaa !7
  %44 = shl nsw <4 x i32> %43, <i32 1, i32 1, i32 1, i32 1>
  %arrayidx.6.i.233 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 2, i64 6
  %45 = bitcast i32* %arrayidx.6.i.233 to <4 x i32>*
  %46 = load <4 x i32>, <4 x i32>* %45, align 4, !tbaa !7
  %47 = shl nsw <4 x i32> %46, <i32 1, i32 1, i32 1, i32 1>
  %arrayidx.2.i.180 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 2
  %48 = bitcast i32* %arraydecay10 to <4 x i32>*
  %49 = load <4 x i32>, <4 x i32>* %48, align 4, !tbaa !7
  %50 = bitcast i32* %arraydecay5 to <4 x i32>*
  %51 = load <4 x i32>, <4 x i32>* %50, align 4, !tbaa !7
  %52 = sub nsw <4 x i32> %49, %51
  %53 = bitcast %struct.ge_p1p1* %r to <4 x i32>*
  store <4 x i32> %52, <4 x i32>* %53, align 4, !tbaa !7
  %arrayidx.4.i.188 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 4
  %arrayidx.6.i.196 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 6
  %arrayidx.7.i.200 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 7
  %54 = bitcast i32* %arrayidx.4.i.188 to <4 x i32>*
  %55 = load <4 x i32>, <4 x i32>* %54, align 4, !tbaa !7
  %56 = bitcast i32* %arrayidx4.4.i.265 to <4 x i32>*
  %57 = load <4 x i32>, <4 x i32>* %56, align 4, !tbaa !7
  %58 = sub nsw <4 x i32> %55, %57
  %59 = bitcast i32* %arrayidx4.4.i to <4 x i32>*
  store <4 x i32> %58, <4 x i32>* %59, align 4, !tbaa !7
  %arrayidx.8.i.204 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 8
  %60 = load i32, i32* %arrayidx4.8.i.281, align 4, !tbaa !7
  %arrayidx.9.i.208 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 9
  %arrayidx2.1.i.103 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 1
  %61 = bitcast i32* %arrayidx.8.i.204 to <4 x i32>*
  %62 = load <4 x i32>, <4 x i32>* %61, align 4, !tbaa !7
  %63 = extractelement <4 x i32> %62, i32 0
  %sub.8.i.206 = sub nsw i32 %63, %60
  store i32 %sub.8.i.206, i32* %arrayidx4.8.i, align 4, !tbaa !7
  %64 = load i32, i32* %arrayidx4.9.i.285, align 4, !tbaa !7
  %65 = extractelement <4 x i32> %62, i32 1
  %sub.9.i.210 = sub nsw i32 %65, %64
  store i32 %sub.9.i.210, i32* %arrayidx4.9.i, align 4, !tbaa !7
  %66 = extractelement <4 x i32> %49, i32 0
  %67 = extractelement <4 x i32> %51, i32 0
  %add.i.138 = add nsw i32 %67, %66
  store i32 %add.i.138, i32* %arraydecay5, align 4, !tbaa !7
  %68 = extractelement <4 x i32> %49, i32 1
  %69 = extractelement <4 x i32> %51, i32 1
  %add.1.i.141 = add nsw i32 %69, %68
  store i32 %add.1.i.141, i32* %arrayidx4.1.i.253, align 4, !tbaa !7
  %70 = extractelement <4 x i32> %49, i32 2
  %71 = extractelement <4 x i32> %51, i32 2
  %add.2.i.145 = add nsw i32 %71, %70
  store i32 %add.2.i.145, i32* %arrayidx4.2.i.257, align 4, !tbaa !7
  %72 = extractelement <4 x i32> %49, i32 3
  %73 = extractelement <4 x i32> %51, i32 3
  %add.3.i.149 = add nsw i32 %73, %72
  store i32 %add.3.i.149, i32* %arrayidx4.3.i.261, align 4, !tbaa !7
  %74 = add nsw <4 x i32> %57, %55
  %75 = bitcast i32* %arrayidx4.4.i.265 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %75, align 4, !tbaa !7
  %76 = insertelement <4 x i32> undef, i32 %60, i32 0
  %77 = insertelement <4 x i32> %76, i32 %64, i32 1
  %78 = insertelement <4 x i32> %77, i32 %add.i.212, i32 2
  %79 = insertelement <4 x i32> %78, i32 %add.1.i.215, i32 3
  %80 = add nsw <4 x i32> %79, %62
  %81 = bitcast i32* %arrayidx4.8.i.281 to <4 x i32>*
  store <4 x i32> %80, <4 x i32>* %81, align 4, !tbaa !7
  %arrayidx2.2.i.107 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 2
  %82 = bitcast i32* %arrayidx2.2.i.107 to <4 x i32>*
  %83 = load <4 x i32>, <4 x i32>* %82, align 4, !tbaa !7
  %84 = add nsw <4 x i32> %83, %44
  %85 = bitcast i32* %arrayidx.2.i.180 to <4 x i32>*
  store <4 x i32> %84, <4 x i32>* %85, align 4, !tbaa !7
  %arrayidx2.6.i.123 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 6
  %86 = bitcast i32* %arrayidx2.6.i.123 to <4 x i32>*
  %87 = load <4 x i32>, <4 x i32>* %86, align 4, !tbaa !7
  %88 = extractelement <4 x i32> %47, i32 0
  %89 = extractelement <4 x i32> %87, i32 0
  %add.6.i.124 = add nsw i32 %89, %88
  store i32 %add.6.i.124, i32* %arrayidx.6.i.196, align 4, !tbaa !7
  %90 = extractelement <4 x i32> %47, i32 1
  %91 = extractelement <4 x i32> %87, i32 1
  %add.7.i.128 = add nsw i32 %91, %90
  store i32 %add.7.i.128, i32* %arrayidx.7.i.200, align 4, !tbaa !7
  %92 = extractelement <4 x i32> %47, i32 2
  %93 = extractelement <4 x i32> %87, i32 2
  %add.8.i.132 = add nsw i32 %93, %92
  store i32 %add.8.i.132, i32* %arrayidx.8.i.204, align 4, !tbaa !7
  %94 = extractelement <4 x i32> %47, i32 3
  %95 = extractelement <4 x i32> %87, i32 3
  %add.9.i.136 = add nsw i32 %95, %94
  store i32 %add.9.i.136, i32* %arrayidx.9.i.208, align 4, !tbaa !7
  %96 = extractelement <4 x i32> %62, i32 2
  %sub.i = sub nsw i32 %add.i.212, %96
  store i32 %sub.i, i32* %arraydecay19, align 4, !tbaa !7
  %97 = extractelement <4 x i32> %62, i32 3
  %sub.1.i = sub nsw i32 %add.1.i.215, %97
  store i32 %sub.1.i, i32* %arrayidx2.1.i.103, align 4, !tbaa !7
  %98 = sub nsw <4 x i32> %44, %83
  %99 = bitcast i32* %arrayidx2.2.i.107 to <4 x i32>*
  store <4 x i32> %98, <4 x i32>* %99, align 4, !tbaa !7
  %100 = sub nsw <4 x i32> %47, %87
  %101 = bitcast i32* %arrayidx2.6.i.123 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %101, align 4, !tbaa !7
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ge_p2_dbl(%struct.ge_p1p1* %r, %struct.ge_p2* nocapture readonly %p) #0 {
entry:
  %t0 = alloca [10 x i32], align 16
  %0 = bitcast [10 x i32]* %t0 to i8*
  call void @llvm.lifetime.start(i64 40, i8* %0) #1
  %arraydecay = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 0
  %arraydecay2 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 0, i64 0
  tail call fastcc void @fe_sq(i32* %arraydecay, i32* %arraydecay2)
  %arraydecay3 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 0
  %arraydecay4 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 1, i64 0
  tail call fastcc void @fe_sq(i32* %arraydecay3, i32* %arraydecay4)
  %arraydecay5 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 0
  %arraydecay7 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 2, i64 0
  %1 = load i32, i32* %arraydecay7, align 4, !tbaa !7
  %arrayidx1.i = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 2, i64 1
  %2 = load i32, i32* %arrayidx1.i, align 4, !tbaa !7
  %arrayidx2.i = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 2, i64 2
  %3 = load i32, i32* %arrayidx2.i, align 4, !tbaa !7
  %arrayidx3.i = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 2, i64 3
  %4 = load i32, i32* %arrayidx3.i, align 4, !tbaa !7
  %arrayidx4.i = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 2, i64 4
  %5 = load i32, i32* %arrayidx4.i, align 4, !tbaa !7
  %arrayidx5.i = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 2, i64 5
  %6 = load i32, i32* %arrayidx5.i, align 4, !tbaa !7
  %arrayidx6.i = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 2, i64 6
  %7 = load i32, i32* %arrayidx6.i, align 4, !tbaa !7
  %arrayidx7.i = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 2, i64 7
  %8 = load i32, i32* %arrayidx7.i, align 4, !tbaa !7
  %arrayidx8.i = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 2, i64 8
  %9 = load i32, i32* %arrayidx8.i, align 4, !tbaa !7
  %arrayidx9.i = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 2, i64 9
  %10 = load i32, i32* %arrayidx9.i, align 4, !tbaa !7
  %mul.i = shl nsw i32 %1, 1
  %mul10.i = shl nsw i32 %2, 1
  %mul11.i = shl nsw i32 %3, 1
  %mul12.i = shl nsw i32 %4, 1
  %mul13.i = shl nsw i32 %5, 1
  %mul14.i = shl nsw i32 %6, 1
  %mul15.i = shl nsw i32 %7, 1
  %mul16.i = shl nsw i32 %8, 1
  %mul17.i = mul nsw i32 %6, 38
  %mul18.i = mul nsw i32 %7, 19
  %mul19.i = mul nsw i32 %8, 38
  %mul20.i = mul nsw i32 %9, 19
  %mul21.i = mul nsw i32 %10, 38
  %conv.i = sext i32 %1 to i64
  %mul23.i = mul nsw i64 %conv.i, %conv.i
  %conv24.i = sext i32 %mul.i to i64
  %conv25.i = sext i32 %2 to i64
  %mul26.i = mul nsw i64 %conv24.i, %conv25.i
  %conv28.i = sext i32 %3 to i64
  %mul29.i = mul nsw i64 %conv28.i, %conv24.i
  %conv31.i = sext i32 %4 to i64
  %mul32.i = mul nsw i64 %conv31.i, %conv24.i
  %conv34.i = sext i32 %5 to i64
  %mul35.i = mul nsw i64 %conv34.i, %conv24.i
  %conv37.i = sext i32 %6 to i64
  %mul38.i = mul nsw i64 %conv37.i, %conv24.i
  %conv40.i = sext i32 %7 to i64
  %mul41.i = mul nsw i64 %conv40.i, %conv24.i
  %conv43.i = sext i32 %8 to i64
  %mul44.i = mul nsw i64 %conv43.i, %conv24.i
  %conv46.i = sext i32 %9 to i64
  %mul47.i = mul nsw i64 %conv46.i, %conv24.i
  %conv49.i = sext i32 %10 to i64
  %mul50.i = mul nsw i64 %conv49.i, %conv24.i
  %conv51.i = sext i32 %mul10.i to i64
  %mul53.i = mul nsw i64 %conv51.i, %conv25.i
  %mul56.i = mul nsw i64 %conv51.i, %conv28.i
  %conv58.i = sext i32 %mul12.i to i64
  %mul59.i = mul nsw i64 %conv58.i, %conv51.i
  %mul62.i = mul nsw i64 %conv34.i, %conv51.i
  %conv64.i = sext i32 %mul14.i to i64
  %mul65.i = mul nsw i64 %conv64.i, %conv51.i
  %mul68.i = mul nsw i64 %conv40.i, %conv51.i
  %conv70.i = sext i32 %mul16.i to i64
  %mul71.i = mul nsw i64 %conv70.i, %conv51.i
  %mul74.i = mul nsw i64 %conv46.i, %conv51.i
  %conv76.i = sext i32 %mul21.i to i64
  %mul77.i = mul nsw i64 %conv76.i, %conv51.i
  %mul80.i = mul nsw i64 %conv28.i, %conv28.i
  %conv81.i = sext i32 %mul11.i to i64
  %mul83.i = mul nsw i64 %conv81.i, %conv31.i
  %mul86.i = mul nsw i64 %conv34.i, %conv81.i
  %mul89.i = mul nsw i64 %conv37.i, %conv81.i
  %mul92.i = mul nsw i64 %conv40.i, %conv81.i
  %mul95.i = mul nsw i64 %conv43.i, %conv81.i
  %conv97.i = sext i32 %mul20.i to i64
  %mul98.i = mul nsw i64 %conv97.i, %conv81.i
  %mul101.i = mul nsw i64 %conv76.i, %conv28.i
  %mul104.i = mul nsw i64 %conv58.i, %conv31.i
  %mul107.i = mul nsw i64 %conv58.i, %conv34.i
  %mul110.i = mul nsw i64 %conv64.i, %conv58.i
  %mul113.i = mul nsw i64 %conv40.i, %conv58.i
  %conv115.i = sext i32 %mul19.i to i64
  %mul116.i = mul nsw i64 %conv115.i, %conv58.i
  %mul119.i = mul nsw i64 %conv97.i, %conv58.i
  %mul122.i = mul nsw i64 %conv76.i, %conv58.i
  %mul125.i = mul nsw i64 %conv34.i, %conv34.i
  %conv126.i = sext i32 %mul13.i to i64
  %mul128.i = mul nsw i64 %conv126.i, %conv37.i
  %conv130.i = sext i32 %mul18.i to i64
  %mul131.i = mul nsw i64 %conv130.i, %conv126.i
  %mul134.i = mul nsw i64 %conv115.i, %conv34.i
  %mul137.i = mul nsw i64 %conv97.i, %conv126.i
  %mul140.i = mul nsw i64 %conv76.i, %conv34.i
  %conv142.i = sext i32 %mul17.i to i64
  %mul143.i = mul nsw i64 %conv142.i, %conv37.i
  %mul146.i = mul nsw i64 %conv130.i, %conv64.i
  %mul149.i = mul nsw i64 %conv115.i, %conv64.i
  %mul152.i = mul nsw i64 %conv97.i, %conv64.i
  %mul155.i = mul nsw i64 %conv76.i, %conv64.i
  %mul158.i = mul nsw i64 %conv130.i, %conv40.i
  %mul161.i = mul nsw i64 %conv115.i, %conv40.i
  %conv162.i = sext i32 %mul15.i to i64
  %mul164.i = mul nsw i64 %conv97.i, %conv162.i
  %mul167.i = mul nsw i64 %conv76.i, %conv40.i
  %mul170.i = mul nsw i64 %conv115.i, %conv43.i
  %mul173.i = mul nsw i64 %conv97.i, %conv70.i
  %mul176.i = mul nsw i64 %conv76.i, %conv70.i
  %mul179.i = mul nsw i64 %conv97.i, %conv46.i
  %mul182.i = mul nsw i64 %conv76.i, %conv46.i
  %mul185.i = mul nsw i64 %conv76.i, %conv49.i
  %add.i = add i64 %mul143.i, %mul23.i
  %add186.i = add i64 %add.i, %mul131.i
  %add187.i = add i64 %add186.i, %mul116.i
  %add188.i = add i64 %add187.i, %mul98.i
  %add189.i = add i64 %add188.i, %mul77.i
  %add190.i = add i64 %mul146.i, %mul26.i
  %add191.i = add i64 %add190.i, %mul134.i
  %add192.i = add i64 %add191.i, %mul119.i
  %add193.i = add i64 %add192.i, %mul101.i
  %add194.i = add nsw i64 %mul29.i, %mul53.i
  %add195.i = add i64 %add194.i, %mul158.i
  %add196.i = add i64 %add195.i, %mul149.i
  %add197.i = add i64 %add196.i, %mul137.i
  %add198.i = add i64 %add197.i, %mul122.i
  %add199.i = add nsw i64 %mul32.i, %mul56.i
  %add200.i = add i64 %add199.i, %mul161.i
  %add201.i = add i64 %add200.i, %mul152.i
  %add202.i = add i64 %add201.i, %mul140.i
  %add203.i = add i64 %mul59.i, %mul80.i
  %add204.i = add i64 %add203.i, %mul35.i
  %add205.i = add i64 %add204.i, %mul170.i
  %add206.i = add i64 %add205.i, %mul164.i
  %add207.i = add i64 %add206.i, %mul155.i
  %add208.i = add i64 %mul62.i, %mul83.i
  %add209.i = add i64 %add208.i, %mul38.i
  %add210.i = add i64 %add209.i, %mul173.i
  %add211.i = add i64 %add210.i, %mul167.i
  %add212.i = add i64 %mul104.i, %mul86.i
  %add213.i = add i64 %add212.i, %mul65.i
  %add214.i = add i64 %add213.i, %mul41.i
  %add215.i = add i64 %add214.i, %mul179.i
  %add216.i = add i64 %add215.i, %mul176.i
  %add217.i = add i64 %mul89.i, %mul107.i
  %add218.i = add i64 %add217.i, %mul68.i
  %add219.i = add i64 %add218.i, %mul44.i
  %add220.i = add i64 %add219.i, %mul182.i
  %add221.i = add i64 %mul92.i, %mul125.i
  %add222.i = add i64 %add221.i, %mul110.i
  %add223.i = add i64 %add222.i, %mul71.i
  %add224.i = add i64 %add223.i, %mul47.i
  %add225.i = add i64 %add224.i, %mul185.i
  %add226.i = add i64 %mul113.i, %mul128.i
  %add227.i = add i64 %add226.i, %mul95.i
  %add228.i = add i64 %add227.i, %mul74.i
  %add229.i = add i64 %add228.i, %mul50.i
  %add230.i = shl nsw i64 %add189.i, 1
  %add231.i = shl nsw i64 %add193.i, 1
  %add232.i = shl nsw i64 %add198.i, 1
  %add233.i = shl nsw i64 %add202.i, 1
  %add234.i = shl nsw i64 %add207.i, 1
  %add235.i = shl nsw i64 %add211.i, 1
  %add236.i = shl nsw i64 %add216.i, 1
  %add237.i = shl nsw i64 %add220.i, 1
  %add238.i = shl nsw i64 %add225.i, 1
  %add239.i = shl nsw i64 %add229.i, 1
  %add240.i = add nsw i64 %add230.i, 33554432
  %shr.i = ashr i64 %add240.i, 26
  %add241.i = add nsw i64 %shr.i, %add231.i
  %and.i = and i64 %add240.i, -67108864
  %sub.i = sub nsw i64 %add230.i, %and.i
  %add242.i = add nsw i64 %add234.i, 33554432
  %shr243.i = ashr i64 %add242.i, 26
  %add244.i = add nsw i64 %shr243.i, %add235.i
  %and245.i = and i64 %add242.i, -67108864
  %sub246.i = sub nsw i64 %add234.i, %and245.i
  %add247.i = add nsw i64 %add241.i, 16777216
  %shr248.i = ashr i64 %add247.i, 25
  %add249.i = add nsw i64 %shr248.i, %add232.i
  %and250.i = and i64 %add247.i, 4261412864
  %sub251.i = sub i64 %add241.i, %and250.i
  %add252.i = add nsw i64 %add244.i, 16777216
  %shr253.i = ashr i64 %add252.i, 25
  %add254.i = add nsw i64 %shr253.i, %add236.i
  %and255.i = and i64 %add252.i, 4261412864
  %sub256.i = sub i64 %add244.i, %and255.i
  %add257.i = add nsw i64 %add249.i, 33554432
  %shr258.i = ashr i64 %add257.i, 26
  %add259.i = add nsw i64 %shr258.i, %add233.i
  %and260.i = and i64 %add257.i, 4227858432
  %sub261.i = sub i64 %add249.i, %and260.i
  %add262.i = add nsw i64 %add254.i, 33554432
  %shr263.i = ashr i64 %add262.i, 26
  %add264.i = add nsw i64 %shr263.i, %add237.i
  %and265.i = and i64 %add262.i, 4227858432
  %sub266.i = sub i64 %add254.i, %and265.i
  %add267.i = add nsw i64 %add259.i, 16777216
  %shr268.i = ashr i64 %add267.i, 25
  %add269.i = add nsw i64 %shr268.i, %sub246.i
  %and270.i = and i64 %add267.i, 4261412864
  %sub271.i = sub i64 %add259.i, %and270.i
  %add272.i = add nsw i64 %add264.i, 16777216
  %shr273.i = ashr i64 %add272.i, 25
  %add274.i = add nsw i64 %shr273.i, %add238.i
  %and275.i = and i64 %add272.i, 4261412864
  %sub276.i = sub i64 %add264.i, %and275.i
  %add277.i = add nsw i64 %add269.i, 33554432
  %shr278.605.i = lshr i64 %add277.i, 26
  %add279.i = add i64 %sub256.i, %shr278.605.i
  %and280.i = and i64 %add277.i, 4227858432
  %sub281.i = sub i64 %add269.i, %and280.i
  %add282.i = add nsw i64 %add274.i, 33554432
  %shr283.i = ashr i64 %add282.i, 26
  %add284.i = add nsw i64 %shr283.i, %add239.i
  %and285.i = and i64 %add282.i, 4227858432
  %sub286.i = sub i64 %add274.i, %and285.i
  %add287.i = add nsw i64 %add284.i, 16777216
  %shr288.i = ashr i64 %add287.i, 25
  %mul289.i = mul nsw i64 %shr288.i, 19
  %add290.i = add nsw i64 %mul289.i, %sub.i
  %and291.i = and i64 %add287.i, 4261412864
  %sub292.i = sub i64 %add284.i, %and291.i
  %add293.i = add nsw i64 %add290.i, 33554432
  %shr294.604.i = lshr i64 %add293.i, 26
  %add295.i = add i64 %sub251.i, %shr294.604.i
  %and296.i = and i64 %add293.i, 4227858432
  %sub297.i = sub i64 %add290.i, %and296.i
  %conv298.i = trunc i64 %sub297.i to i32
  store i32 %conv298.i, i32* %arraydecay5, align 4, !tbaa !7
  %conv300.i = trunc i64 %add295.i to i32
  %arrayidx301.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 1
  store i32 %conv300.i, i32* %arrayidx301.i, align 4, !tbaa !7
  %conv302.i = trunc i64 %sub261.i to i32
  %arrayidx303.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 2
  store i32 %conv302.i, i32* %arrayidx303.i, align 4, !tbaa !7
  %conv304.i = trunc i64 %sub271.i to i32
  %arrayidx305.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 3
  store i32 %conv304.i, i32* %arrayidx305.i, align 4, !tbaa !7
  %conv306.i = trunc i64 %sub281.i to i32
  %arrayidx307.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 4
  store i32 %conv306.i, i32* %arrayidx307.i, align 4, !tbaa !7
  %conv308.i = trunc i64 %add279.i to i32
  %arrayidx309.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 5
  store i32 %conv308.i, i32* %arrayidx309.i, align 4, !tbaa !7
  %conv310.i = trunc i64 %sub266.i to i32
  %arrayidx311.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 6
  store i32 %conv310.i, i32* %arrayidx311.i, align 4, !tbaa !7
  %conv312.i = trunc i64 %sub276.i to i32
  %arrayidx313.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 7
  store i32 %conv312.i, i32* %arrayidx313.i, align 4, !tbaa !7
  %conv314.i = trunc i64 %sub286.i to i32
  %arrayidx315.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 8
  store i32 %conv314.i, i32* %arrayidx315.i, align 4, !tbaa !7
  %conv316.i = trunc i64 %sub292.i to i32
  %arrayidx317.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 9
  store i32 %conv316.i, i32* %arrayidx317.i, align 4, !tbaa !7
  %arraydecay9 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 0
  %11 = load i32, i32* %arraydecay2, align 4, !tbaa !7
  %12 = load i32, i32* %arraydecay4, align 4, !tbaa !7
  %add.i.162 = add nsw i32 %12, %11
  store i32 %add.i.162, i32* %arraydecay9, align 4, !tbaa !7
  %arrayidx.1.i.163 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 0, i64 1
  %13 = load i32, i32* %arrayidx.1.i.163, align 4, !tbaa !7
  %arrayidx2.1.i.164 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 1, i64 1
  %14 = load i32, i32* %arrayidx2.1.i.164, align 4, !tbaa !7
  %add.1.i.165 = add nsw i32 %14, %13
  %arrayidx4.1.i.166 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 1
  store i32 %add.1.i.165, i32* %arrayidx4.1.i.166, align 4, !tbaa !7
  %arrayidx.2.i.167 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 0, i64 2
  %15 = load i32, i32* %arrayidx.2.i.167, align 4, !tbaa !7
  %arrayidx2.2.i.168 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 1, i64 2
  %16 = load i32, i32* %arrayidx2.2.i.168, align 4, !tbaa !7
  %add.2.i.169 = add nsw i32 %16, %15
  %arrayidx4.2.i.170 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 2
  store i32 %add.2.i.169, i32* %arrayidx4.2.i.170, align 4, !tbaa !7
  %arrayidx.3.i.171 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 0, i64 3
  %17 = load i32, i32* %arrayidx.3.i.171, align 4, !tbaa !7
  %arrayidx2.3.i.172 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 1, i64 3
  %18 = load i32, i32* %arrayidx2.3.i.172, align 4, !tbaa !7
  %add.3.i.173 = add nsw i32 %18, %17
  %arrayidx4.3.i.174 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 3
  store i32 %add.3.i.173, i32* %arrayidx4.3.i.174, align 4, !tbaa !7
  %arrayidx.4.i.175 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 0, i64 4
  %19 = load i32, i32* %arrayidx.4.i.175, align 4, !tbaa !7
  %arrayidx2.4.i.176 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 1, i64 4
  %20 = load i32, i32* %arrayidx2.4.i.176, align 4, !tbaa !7
  %add.4.i.177 = add nsw i32 %20, %19
  %arrayidx4.4.i.178 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 4
  store i32 %add.4.i.177, i32* %arrayidx4.4.i.178, align 4, !tbaa !7
  %arrayidx.5.i.179 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 0, i64 5
  %21 = load i32, i32* %arrayidx.5.i.179, align 4, !tbaa !7
  %arrayidx2.5.i.180 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 1, i64 5
  %22 = load i32, i32* %arrayidx2.5.i.180, align 4, !tbaa !7
  %add.5.i.181 = add nsw i32 %22, %21
  %arrayidx4.5.i.182 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 5
  store i32 %add.5.i.181, i32* %arrayidx4.5.i.182, align 4, !tbaa !7
  %arrayidx.6.i.183 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 0, i64 6
  %23 = load i32, i32* %arrayidx.6.i.183, align 4, !tbaa !7
  %arrayidx2.6.i.184 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 1, i64 6
  %24 = load i32, i32* %arrayidx2.6.i.184, align 4, !tbaa !7
  %add.6.i.185 = add nsw i32 %24, %23
  %arrayidx4.6.i.186 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 6
  store i32 %add.6.i.185, i32* %arrayidx4.6.i.186, align 4, !tbaa !7
  %arrayidx.7.i.187 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 0, i64 7
  %25 = load i32, i32* %arrayidx.7.i.187, align 4, !tbaa !7
  %arrayidx2.7.i.188 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 1, i64 7
  %26 = load i32, i32* %arrayidx2.7.i.188, align 4, !tbaa !7
  %add.7.i.189 = add nsw i32 %26, %25
  %arrayidx4.7.i.190 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 7
  store i32 %add.7.i.189, i32* %arrayidx4.7.i.190, align 4, !tbaa !7
  %arrayidx.8.i.191 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 0, i64 8
  %27 = load i32, i32* %arrayidx.8.i.191, align 4, !tbaa !7
  %arrayidx2.8.i.192 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 1, i64 8
  %28 = load i32, i32* %arrayidx2.8.i.192, align 4, !tbaa !7
  %add.8.i.193 = add nsw i32 %28, %27
  %arrayidx4.8.i.194 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 8
  store i32 %add.8.i.193, i32* %arrayidx4.8.i.194, align 4, !tbaa !7
  %arrayidx.9.i.195 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 0, i64 9
  %29 = load i32, i32* %arrayidx.9.i.195, align 4, !tbaa !7
  %arrayidx2.9.i.196 = getelementptr inbounds %struct.ge_p2, %struct.ge_p2* %p, i64 0, i32 1, i64 9
  %30 = load i32, i32* %arrayidx2.9.i.196, align 4, !tbaa !7
  %add.9.i.197 = add nsw i32 %30, %29
  %arrayidx4.9.i.198 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 9
  store i32 %add.9.i.197, i32* %arrayidx4.9.i.198, align 4, !tbaa !7
  %arraydecay14 = getelementptr inbounds [10 x i32], [10 x i32]* %t0, i64 0, i64 0
  call fastcc void @fe_sq(i32* %arraydecay14, i32* %arraydecay9)
  %arrayidx.1.i.135 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 1
  %arrayidx2.1.i.136 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 1
  %arrayidx.2.i.138 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 2
  %arrayidx2.2.i.139 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 2
  %arrayidx.3.i.141 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 3
  %31 = bitcast i32* %arraydecay3 to <4 x i32>*
  %32 = load <4 x i32>, <4 x i32>* %31, align 4, !tbaa !7
  %arrayidx2.3.i.142 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 3
  %33 = bitcast %struct.ge_p1p1* %r to <4 x i32>*
  %34 = load <4 x i32>, <4 x i32>* %33, align 4, !tbaa !7
  %35 = extractelement <4 x i32> %32, i32 0
  %36 = extractelement <4 x i32> %34, i32 0
  %add.i.134 = add nsw i32 %36, %35
  store i32 %add.i.134, i32* %arraydecay9, align 4, !tbaa !7
  %37 = extractelement <4 x i32> %32, i32 1
  %38 = extractelement <4 x i32> %34, i32 1
  %add.1.i = add nsw i32 %38, %37
  store i32 %add.1.i, i32* %arrayidx4.1.i.166, align 4, !tbaa !7
  %39 = extractelement <4 x i32> %32, i32 2
  %40 = extractelement <4 x i32> %34, i32 2
  %add.2.i = add nsw i32 %40, %39
  store i32 %add.2.i, i32* %arrayidx4.2.i.170, align 4, !tbaa !7
  %41 = extractelement <4 x i32> %32, i32 3
  %42 = extractelement <4 x i32> %34, i32 3
  %add.3.i = add nsw i32 %42, %41
  store i32 %add.3.i, i32* %arrayidx4.3.i.174, align 4, !tbaa !7
  %arrayidx.4.i.144 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 4
  %arrayidx2.4.i.145 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 4
  %arrayidx.5.i.147 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 5
  %arrayidx2.5.i.148 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 5
  %arrayidx.6.i.150 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 6
  %arrayidx2.6.i.151 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 6
  %arrayidx.7.i.153 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 7
  %43 = bitcast i32* %arrayidx.4.i.144 to <4 x i32>*
  %44 = load <4 x i32>, <4 x i32>* %43, align 4, !tbaa !7
  %arrayidx2.7.i.154 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 7
  %45 = bitcast i32* %arrayidx2.4.i.145 to <4 x i32>*
  %46 = load <4 x i32>, <4 x i32>* %45, align 4, !tbaa !7
  %47 = extractelement <4 x i32> %44, i32 0
  %48 = extractelement <4 x i32> %46, i32 0
  %add.4.i = add nsw i32 %48, %47
  store i32 %add.4.i, i32* %arrayidx4.4.i.178, align 4, !tbaa !7
  %49 = extractelement <4 x i32> %44, i32 1
  %50 = extractelement <4 x i32> %46, i32 1
  %add.5.i = add nsw i32 %50, %49
  store i32 %add.5.i, i32* %arrayidx4.5.i.182, align 4, !tbaa !7
  %51 = extractelement <4 x i32> %44, i32 2
  %52 = extractelement <4 x i32> %46, i32 2
  %add.6.i = add nsw i32 %52, %51
  store i32 %add.6.i, i32* %arrayidx4.6.i.186, align 4, !tbaa !7
  %53 = extractelement <4 x i32> %44, i32 3
  %54 = extractelement <4 x i32> %46, i32 3
  %add.7.i = add nsw i32 %54, %53
  store i32 %add.7.i, i32* %arrayidx4.7.i.190, align 4, !tbaa !7
  %arrayidx.8.i.156 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 8
  %55 = load i32, i32* %arrayidx.8.i.156, align 4, !tbaa !7
  %arrayidx2.8.i.157 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 8
  %56 = load i32, i32* %arrayidx2.8.i.157, align 4, !tbaa !7
  %add.8.i = add nsw i32 %56, %55
  store i32 %add.8.i, i32* %arrayidx4.8.i.194, align 4, !tbaa !7
  %arrayidx.9.i.159 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 9
  %57 = load i32, i32* %arrayidx.9.i.159, align 4, !tbaa !7
  %arrayidx2.9.i.160 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 9
  %58 = load i32, i32* %arrayidx2.9.i.160, align 4, !tbaa !7
  %add.9.i = add nsw i32 %58, %57
  store i32 %add.9.i, i32* %arrayidx4.9.i.198, align 4, !tbaa !7
  %59 = sub nsw <4 x i32> %32, %34
  %60 = extractelement <4 x i32> %59, i32 0
  store i32 %60, i32* %arraydecay3, align 4, !tbaa !7
  %61 = extractelement <4 x i32> %59, i32 1
  store i32 %61, i32* %arrayidx.1.i.135, align 4, !tbaa !7
  %62 = extractelement <4 x i32> %59, i32 2
  store i32 %62, i32* %arrayidx.2.i.138, align 4, !tbaa !7
  %63 = extractelement <4 x i32> %59, i32 3
  store i32 %63, i32* %arrayidx.3.i.141, align 4, !tbaa !7
  %64 = sub nsw <4 x i32> %44, %46
  %65 = extractelement <4 x i32> %64, i32 0
  store i32 %65, i32* %arrayidx.4.i.144, align 4, !tbaa !7
  %66 = extractelement <4 x i32> %64, i32 1
  store i32 %66, i32* %arrayidx.5.i.147, align 4, !tbaa !7
  %67 = extractelement <4 x i32> %64, i32 2
  store i32 %67, i32* %arrayidx.6.i.150, align 4, !tbaa !7
  %68 = extractelement <4 x i32> %64, i32 3
  store i32 %68, i32* %arrayidx.7.i.153, align 4, !tbaa !7
  %sub.8.i.128 = sub nsw i32 %55, %56
  store i32 %sub.8.i.128, i32* %arrayidx.8.i.156, align 4, !tbaa !7
  %sub.9.i.132 = sub nsw i32 %57, %58
  store i32 %sub.9.i.132, i32* %arrayidx.9.i.159, align 4, !tbaa !7
  %69 = bitcast [10 x i32]* %t0 to i64*
  %70 = load i64, i64* %69, align 16
  %71 = trunc i64 %70 to i32
  %sub.i.60 = sub nsw i32 %71, %add.i.134
  store i32 %sub.i.60, i32* %arraydecay, align 4, !tbaa !7
  %72 = lshr i64 %70, 32
  %73 = trunc i64 %72 to i32
  %sub.1.i.63 = sub nsw i32 %73, %add.1.i
  store i32 %sub.1.i.63, i32* %arrayidx2.1.i.136, align 4, !tbaa !7
  %arrayidx.2.i.65 = getelementptr inbounds [10 x i32], [10 x i32]* %t0, i64 0, i64 2
  %74 = bitcast i32* %arrayidx.2.i.65 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = trunc i64 %75 to i32
  %sub.2.i.67 = sub nsw i32 %76, %add.2.i
  store i32 %sub.2.i.67, i32* %arrayidx2.2.i.139, align 4, !tbaa !7
  %77 = lshr i64 %75, 32
  %78 = trunc i64 %77 to i32
  %sub.3.i.71 = sub nsw i32 %78, %add.3.i
  store i32 %sub.3.i.71, i32* %arrayidx2.3.i.142, align 4, !tbaa !7
  %arrayidx.4.i.73 = getelementptr inbounds [10 x i32], [10 x i32]* %t0, i64 0, i64 4
  %79 = bitcast i32* %arrayidx.4.i.73 to i64*
  %80 = load i64, i64* %79, align 16
  %81 = trunc i64 %80 to i32
  %sub.4.i.75 = sub nsw i32 %81, %add.4.i
  store i32 %sub.4.i.75, i32* %arrayidx2.4.i.145, align 4, !tbaa !7
  %82 = lshr i64 %80, 32
  %83 = trunc i64 %82 to i32
  %sub.5.i.79 = sub nsw i32 %83, %add.5.i
  store i32 %sub.5.i.79, i32* %arrayidx2.5.i.148, align 4, !tbaa !7
  %arrayidx.6.i.81 = getelementptr inbounds [10 x i32], [10 x i32]* %t0, i64 0, i64 6
  %84 = bitcast i32* %arrayidx.6.i.81 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = trunc i64 %85 to i32
  %sub.6.i.83 = sub nsw i32 %86, %add.6.i
  store i32 %sub.6.i.83, i32* %arrayidx2.6.i.151, align 4, !tbaa !7
  %87 = lshr i64 %85, 32
  %88 = trunc i64 %87 to i32
  %sub.7.i.87 = sub nsw i32 %88, %add.7.i
  store i32 %sub.7.i.87, i32* %arrayidx2.7.i.154, align 4, !tbaa !7
  %arrayidx.8.i.89 = getelementptr inbounds [10 x i32], [10 x i32]* %t0, i64 0, i64 8
  %89 = bitcast i32* %arrayidx.8.i.89 to i64*
  %90 = load i64, i64* %89, align 16
  %91 = trunc i64 %90 to i32
  %sub.8.i.91 = sub nsw i32 %91, %add.8.i
  store i32 %sub.8.i.91, i32* %arrayidx2.8.i.157, align 4, !tbaa !7
  %92 = lshr i64 %90, 32
  %93 = trunc i64 %92 to i32
  %sub.9.i.95 = sub nsw i32 %93, %add.9.i
  store i32 %sub.9.i.95, i32* %arrayidx2.9.i.160, align 4, !tbaa !7
  %94 = bitcast i32* %arraydecay5 to <4 x i32>*
  %95 = load <4 x i32>, <4 x i32>* %94, align 4, !tbaa !7
  %96 = sub nsw <4 x i32> %95, %59
  %97 = bitcast i32* %arraydecay5 to <4 x i32>*
  store <4 x i32> %96, <4 x i32>* %97, align 4, !tbaa !7
  %98 = bitcast i32* %arrayidx307.i to <4 x i32>*
  %99 = load <4 x i32>, <4 x i32>* %98, align 4, !tbaa !7
  %100 = sub nsw <4 x i32> %99, %64
  %101 = bitcast i32* %arrayidx307.i to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %101, align 4, !tbaa !7
  %102 = load i32, i32* %arrayidx315.i, align 4, !tbaa !7
  %sub.8.i = sub nsw i32 %102, %sub.8.i.128
  store i32 %sub.8.i, i32* %arrayidx315.i, align 4, !tbaa !7
  %103 = load i32, i32* %arrayidx317.i, align 4, !tbaa !7
  %sub.9.i = sub nsw i32 %103, %sub.9.i.132
  store i32 %sub.9.i, i32* %arrayidx317.i, align 4, !tbaa !7
  call void @llvm.lifetime.end(i64 40, i8* %0) #1
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @fe_sq(i32* nocapture %h, i32* nocapture readonly %f) #0 {
entry:
  %0 = load i32, i32* %f, align 4, !tbaa !7
  %arrayidx1 = getelementptr inbounds i32, i32* %f, i64 1
  %1 = load i32, i32* %arrayidx1, align 4, !tbaa !7
  %arrayidx2 = getelementptr inbounds i32, i32* %f, i64 2
  %2 = load i32, i32* %arrayidx2, align 4, !tbaa !7
  %arrayidx3 = getelementptr inbounds i32, i32* %f, i64 3
  %3 = load i32, i32* %arrayidx3, align 4, !tbaa !7
  %arrayidx4 = getelementptr inbounds i32, i32* %f, i64 4
  %4 = load i32, i32* %arrayidx4, align 4, !tbaa !7
  %arrayidx5 = getelementptr inbounds i32, i32* %f, i64 5
  %5 = load i32, i32* %arrayidx5, align 4, !tbaa !7
  %arrayidx6 = getelementptr inbounds i32, i32* %f, i64 6
  %6 = load i32, i32* %arrayidx6, align 4, !tbaa !7
  %arrayidx7 = getelementptr inbounds i32, i32* %f, i64 7
  %7 = load i32, i32* %arrayidx7, align 4, !tbaa !7
  %arrayidx8 = getelementptr inbounds i32, i32* %f, i64 8
  %8 = load i32, i32* %arrayidx8, align 4, !tbaa !7
  %arrayidx9 = getelementptr inbounds i32, i32* %f, i64 9
  %9 = load i32, i32* %arrayidx9, align 4, !tbaa !7
  %mul = shl nsw i32 %0, 1
  %mul10 = shl nsw i32 %1, 1
  %mul11 = shl nsw i32 %2, 1
  %mul12 = shl nsw i32 %3, 1
  %mul13 = shl nsw i32 %4, 1
  %mul14 = shl nsw i32 %5, 1
  %mul15 = shl nsw i32 %6, 1
  %mul16 = shl nsw i32 %7, 1
  %mul17 = mul nsw i32 %5, 38
  %mul18 = mul nsw i32 %6, 19
  %mul19 = mul nsw i32 %7, 38
  %mul20 = mul nsw i32 %8, 19
  %mul21 = mul nsw i32 %9, 38
  %conv = sext i32 %0 to i64
  %mul23 = mul nsw i64 %conv, %conv
  %conv24 = sext i32 %mul to i64
  %conv25 = sext i32 %1 to i64
  %mul26 = mul nsw i64 %conv24, %conv25
  %conv28 = sext i32 %2 to i64
  %mul29 = mul nsw i64 %conv28, %conv24
  %conv31 = sext i32 %3 to i64
  %mul32 = mul nsw i64 %conv31, %conv24
  %conv34 = sext i32 %4 to i64
  %mul35 = mul nsw i64 %conv34, %conv24
  %conv37 = sext i32 %5 to i64
  %mul38 = mul nsw i64 %conv37, %conv24
  %conv40 = sext i32 %6 to i64
  %mul41 = mul nsw i64 %conv40, %conv24
  %conv43 = sext i32 %7 to i64
  %mul44 = mul nsw i64 %conv43, %conv24
  %conv46 = sext i32 %8 to i64
  %mul47 = mul nsw i64 %conv46, %conv24
  %conv49 = sext i32 %9 to i64
  %mul50 = mul nsw i64 %conv49, %conv24
  %conv51 = sext i32 %mul10 to i64
  %mul53 = mul nsw i64 %conv51, %conv25
  %mul56 = mul nsw i64 %conv51, %conv28
  %conv58 = sext i32 %mul12 to i64
  %mul59 = mul nsw i64 %conv58, %conv51
  %mul62 = mul nsw i64 %conv34, %conv51
  %conv64 = sext i32 %mul14 to i64
  %mul65 = mul nsw i64 %conv64, %conv51
  %mul68 = mul nsw i64 %conv40, %conv51
  %conv70 = sext i32 %mul16 to i64
  %mul71 = mul nsw i64 %conv70, %conv51
  %mul74 = mul nsw i64 %conv46, %conv51
  %conv76 = sext i32 %mul21 to i64
  %mul77 = mul nsw i64 %conv76, %conv51
  %mul80 = mul nsw i64 %conv28, %conv28
  %conv81 = sext i32 %mul11 to i64
  %mul83 = mul nsw i64 %conv81, %conv31
  %mul86 = mul nsw i64 %conv34, %conv81
  %mul89 = mul nsw i64 %conv37, %conv81
  %mul92 = mul nsw i64 %conv40, %conv81
  %mul95 = mul nsw i64 %conv43, %conv81
  %conv97 = sext i32 %mul20 to i64
  %mul98 = mul nsw i64 %conv97, %conv81
  %mul101 = mul nsw i64 %conv76, %conv28
  %mul104 = mul nsw i64 %conv58, %conv31
  %mul107 = mul nsw i64 %conv58, %conv34
  %mul110 = mul nsw i64 %conv64, %conv58
  %mul113 = mul nsw i64 %conv40, %conv58
  %conv115 = sext i32 %mul19 to i64
  %mul116 = mul nsw i64 %conv115, %conv58
  %mul119 = mul nsw i64 %conv97, %conv58
  %mul122 = mul nsw i64 %conv76, %conv58
  %mul125 = mul nsw i64 %conv34, %conv34
  %conv126 = sext i32 %mul13 to i64
  %mul128 = mul nsw i64 %conv126, %conv37
  %conv130 = sext i32 %mul18 to i64
  %mul131 = mul nsw i64 %conv130, %conv126
  %mul134 = mul nsw i64 %conv115, %conv34
  %mul137 = mul nsw i64 %conv97, %conv126
  %mul140 = mul nsw i64 %conv76, %conv34
  %conv142 = sext i32 %mul17 to i64
  %mul143 = mul nsw i64 %conv142, %conv37
  %mul146 = mul nsw i64 %conv130, %conv64
  %mul149 = mul nsw i64 %conv115, %conv64
  %mul152 = mul nsw i64 %conv97, %conv64
  %mul155 = mul nsw i64 %conv76, %conv64
  %mul158 = mul nsw i64 %conv130, %conv40
  %mul161 = mul nsw i64 %conv115, %conv40
  %conv162 = sext i32 %mul15 to i64
  %mul164 = mul nsw i64 %conv97, %conv162
  %mul167 = mul nsw i64 %conv76, %conv40
  %mul170 = mul nsw i64 %conv115, %conv43
  %mul173 = mul nsw i64 %conv97, %conv70
  %mul176 = mul nsw i64 %conv76, %conv70
  %mul179 = mul nsw i64 %conv97, %conv46
  %mul182 = mul nsw i64 %conv76, %conv46
  %mul185 = mul nsw i64 %conv76, %conv49
  %add = add i64 %mul143, %mul23
  %add186 = add i64 %add, %mul131
  %add187 = add i64 %add186, %mul116
  %add188 = add i64 %add187, %mul98
  %add189 = add i64 %add188, %mul77
  %add194 = add nsw i64 %mul29, %mul53
  %add199 = add nsw i64 %mul32, %mul56
  %add203 = add i64 %mul59, %mul80
  %add204 = add i64 %add203, %mul35
  %add205 = add i64 %add204, %mul170
  %add206 = add i64 %add205, %mul164
  %add207 = add i64 %add206, %mul155
  %add230 = add nsw i64 %add189, 33554432
  %shr = ashr i64 %add230, 26
  %add190 = add i64 %mul146, %mul26
  %add191 = add i64 %add190, %mul134
  %add192 = add i64 %add191, %mul119
  %add193 = add i64 %add192, %mul101
  %add231 = add i64 %add193, %shr
  %and = and i64 %add230, -67108864
  %sub = sub nsw i64 %add189, %and
  %add232 = add nsw i64 %add207, 33554432
  %shr233 = ashr i64 %add232, 26
  %add208 = add i64 %mul62, %mul83
  %add209 = add i64 %add208, %mul38
  %add210 = add i64 %add209, %mul173
  %add211 = add i64 %add210, %mul167
  %add234 = add i64 %add211, %shr233
  %and235 = and i64 %add232, -67108864
  %sub236 = sub nsw i64 %add207, %and235
  %add237 = add nsw i64 %add231, 16777216
  %shr238 = ashr i64 %add237, 25
  %add195 = add i64 %add194, %mul158
  %add196 = add i64 %add195, %mul149
  %add197 = add i64 %add196, %mul137
  %add198 = add i64 %add197, %mul122
  %add239 = add i64 %add198, %shr238
  %and240 = and i64 %add237, 4261412864
  %sub241 = sub i64 %add231, %and240
  %add242 = add nsw i64 %add234, 16777216
  %shr243 = ashr i64 %add242, 25
  %add212 = add i64 %mul104, %mul86
  %add213 = add i64 %add212, %mul65
  %add214 = add i64 %add213, %mul41
  %add215 = add i64 %add214, %mul179
  %add216 = add i64 %add215, %mul176
  %add244 = add i64 %add216, %shr243
  %and245 = and i64 %add242, 4261412864
  %sub246 = sub i64 %add234, %and245
  %add247 = add nsw i64 %add239, 33554432
  %shr248 = ashr i64 %add247, 26
  %add200 = add i64 %add199, %mul161
  %add201 = add i64 %add200, %mul152
  %add202 = add i64 %add201, %mul140
  %add249 = add i64 %add202, %shr248
  %and250 = and i64 %add247, 4227858432
  %sub251 = sub i64 %add239, %and250
  %add252 = add nsw i64 %add244, 33554432
  %shr253 = ashr i64 %add252, 26
  %add217 = add i64 %mul89, %mul107
  %add218 = add i64 %add217, %mul68
  %add219 = add i64 %add218, %mul44
  %add220 = add i64 %add219, %mul182
  %add254 = add i64 %add220, %shr253
  %and255 = and i64 %add252, 4227858432
  %sub256 = sub i64 %add244, %and255
  %add257 = add nsw i64 %add249, 16777216
  %shr258 = ashr i64 %add257, 25
  %add259 = add nsw i64 %shr258, %sub236
  %and260 = and i64 %add257, 4261412864
  %sub261 = sub i64 %add249, %and260
  %add262 = add nsw i64 %add254, 16777216
  %shr263 = ashr i64 %add262, 25
  %add221 = add i64 %mul92, %mul125
  %add222 = add i64 %add221, %mul110
  %add223 = add i64 %add222, %mul71
  %add224 = add i64 %add223, %mul47
  %add225 = add i64 %add224, %mul185
  %add264 = add i64 %add225, %shr263
  %and265 = and i64 %add262, 4261412864
  %sub266 = sub i64 %add254, %and265
  %add267 = add nsw i64 %add259, 33554432
  %shr268.575 = lshr i64 %add267, 26
  %add269 = add i64 %sub246, %shr268.575
  %and270 = and i64 %add267, 4227858432
  %sub271 = sub i64 %add259, %and270
  %add272 = add nsw i64 %add264, 33554432
  %shr273 = ashr i64 %add272, 26
  %add226 = add i64 %mul113, %mul128
  %add227 = add i64 %add226, %mul95
  %add228 = add i64 %add227, %mul74
  %add229 = add i64 %add228, %mul50
  %add274 = add i64 %add229, %shr273
  %and275 = and i64 %add272, 4227858432
  %sub276 = sub i64 %add264, %and275
  %add277 = add nsw i64 %add274, 16777216
  %shr278 = ashr i64 %add277, 25
  %mul279 = mul nsw i64 %shr278, 19
  %add280 = add nsw i64 %mul279, %sub
  %and281 = and i64 %add277, 4261412864
  %sub282 = sub i64 %add274, %and281
  %add283 = add nsw i64 %add280, 33554432
  %shr284.574 = lshr i64 %add283, 26
  %add285 = add i64 %sub241, %shr284.574
  %and286 = and i64 %add283, 4227858432
  %sub287 = sub i64 %add280, %and286
  %conv288 = trunc i64 %sub287 to i32
  store i32 %conv288, i32* %h, align 4, !tbaa !7
  %conv290 = trunc i64 %add285 to i32
  %arrayidx291 = getelementptr inbounds i32, i32* %h, i64 1
  store i32 %conv290, i32* %arrayidx291, align 4, !tbaa !7
  %conv292 = trunc i64 %sub251 to i32
  %arrayidx293 = getelementptr inbounds i32, i32* %h, i64 2
  store i32 %conv292, i32* %arrayidx293, align 4, !tbaa !7
  %conv294 = trunc i64 %sub261 to i32
  %arrayidx295 = getelementptr inbounds i32, i32* %h, i64 3
  store i32 %conv294, i32* %arrayidx295, align 4, !tbaa !7
  %conv296 = trunc i64 %sub271 to i32
  %arrayidx297 = getelementptr inbounds i32, i32* %h, i64 4
  store i32 %conv296, i32* %arrayidx297, align 4, !tbaa !7
  %conv298 = trunc i64 %add269 to i32
  %arrayidx299 = getelementptr inbounds i32, i32* %h, i64 5
  store i32 %conv298, i32* %arrayidx299, align 4, !tbaa !7
  %conv300 = trunc i64 %sub256 to i32
  %arrayidx301 = getelementptr inbounds i32, i32* %h, i64 6
  store i32 %conv300, i32* %arrayidx301, align 4, !tbaa !7
  %conv302 = trunc i64 %sub266 to i32
  %arrayidx303 = getelementptr inbounds i32, i32* %h, i64 7
  store i32 %conv302, i32* %arrayidx303, align 4, !tbaa !7
  %conv304 = trunc i64 %sub276 to i32
  %arrayidx305 = getelementptr inbounds i32, i32* %h, i64 8
  store i32 %conv304, i32* %arrayidx305, align 4, !tbaa !7
  %conv306 = trunc i64 %sub282 to i32
  %arrayidx307 = getelementptr inbounds i32, i32* %h, i64 9
  store i32 %conv306, i32* %arrayidx307, align 4, !tbaa !7
  ret void
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ge_add(%struct.ge_p1p1* %r, %struct.ge_p3* nocapture readonly %p, %struct.ge_cached* nocapture readonly %q) #0 {
entry:
  %arraydecay = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 0
  %arraydecay1 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 0
  %arraydecay3 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 0
  %0 = load i32, i32* %arraydecay1, align 4, !tbaa !7
  %1 = load i32, i32* %arraydecay3, align 4, !tbaa !7
  %add.i = add nsw i32 %1, %0
  store i32 %add.i, i32* %arraydecay, align 4, !tbaa !7
  %arrayidx.1.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 1
  %2 = load i32, i32* %arrayidx.1.i, align 4, !tbaa !7
  %arrayidx2.1.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 1
  %3 = load i32, i32* %arrayidx2.1.i, align 4, !tbaa !7
  %add.1.i = add nsw i32 %3, %2
  %arrayidx4.1.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 1
  store i32 %add.1.i, i32* %arrayidx4.1.i, align 4, !tbaa !7
  %arrayidx.2.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 2
  %4 = load i32, i32* %arrayidx.2.i, align 4, !tbaa !7
  %arrayidx2.2.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 2
  %5 = load i32, i32* %arrayidx2.2.i, align 4, !tbaa !7
  %add.2.i = add nsw i32 %5, %4
  %arrayidx4.2.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 2
  store i32 %add.2.i, i32* %arrayidx4.2.i, align 4, !tbaa !7
  %arrayidx.3.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 3
  %6 = load i32, i32* %arrayidx.3.i, align 4, !tbaa !7
  %arrayidx2.3.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 3
  %7 = load i32, i32* %arrayidx2.3.i, align 4, !tbaa !7
  %add.3.i = add nsw i32 %7, %6
  %arrayidx4.3.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 3
  store i32 %add.3.i, i32* %arrayidx4.3.i, align 4, !tbaa !7
  %arrayidx.4.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 4
  %8 = load i32, i32* %arrayidx.4.i, align 4, !tbaa !7
  %arrayidx2.4.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 4
  %9 = load i32, i32* %arrayidx2.4.i, align 4, !tbaa !7
  %add.4.i = add nsw i32 %9, %8
  %arrayidx4.4.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 4
  store i32 %add.4.i, i32* %arrayidx4.4.i, align 4, !tbaa !7
  %arrayidx.5.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 5
  %10 = load i32, i32* %arrayidx.5.i, align 4, !tbaa !7
  %arrayidx2.5.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 5
  %11 = load i32, i32* %arrayidx2.5.i, align 4, !tbaa !7
  %add.5.i = add nsw i32 %11, %10
  %arrayidx4.5.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 5
  store i32 %add.5.i, i32* %arrayidx4.5.i, align 4, !tbaa !7
  %arrayidx.6.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 6
  %12 = load i32, i32* %arrayidx.6.i, align 4, !tbaa !7
  %arrayidx2.6.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 6
  %13 = load i32, i32* %arrayidx2.6.i, align 4, !tbaa !7
  %add.6.i = add nsw i32 %13, %12
  %arrayidx4.6.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 6
  store i32 %add.6.i, i32* %arrayidx4.6.i, align 4, !tbaa !7
  %arrayidx.7.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 7
  %14 = load i32, i32* %arrayidx.7.i, align 4, !tbaa !7
  %arrayidx2.7.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 7
  %15 = load i32, i32* %arrayidx2.7.i, align 4, !tbaa !7
  %add.7.i = add nsw i32 %15, %14
  %arrayidx4.7.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 7
  store i32 %add.7.i, i32* %arrayidx4.7.i, align 4, !tbaa !7
  %arrayidx.8.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 8
  %16 = load i32, i32* %arrayidx.8.i, align 4, !tbaa !7
  %arrayidx2.8.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 8
  %17 = load i32, i32* %arrayidx2.8.i, align 4, !tbaa !7
  %add.8.i = add nsw i32 %17, %16
  %arrayidx4.8.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 8
  store i32 %add.8.i, i32* %arrayidx4.8.i, align 4, !tbaa !7
  %arrayidx.9.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 1, i64 9
  %18 = load i32, i32* %arrayidx.9.i, align 4, !tbaa !7
  %arrayidx2.9.i = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 0, i64 9
  %19 = load i32, i32* %arrayidx2.9.i, align 4, !tbaa !7
  %add.9.i = add nsw i32 %19, %18
  %arrayidx4.9.i = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 0, i64 9
  store i32 %add.9.i, i32* %arrayidx4.9.i, align 4, !tbaa !7
  %arraydecay5 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 0
  %20 = load i32, i32* %arraydecay1, align 4, !tbaa !7
  %21 = load i32, i32* %arraydecay3, align 4, !tbaa !7
  %sub.i.258 = sub nsw i32 %20, %21
  store i32 %sub.i.258, i32* %arraydecay5, align 4, !tbaa !7
  %22 = load i32, i32* %arrayidx.1.i, align 4, !tbaa !7
  %23 = load i32, i32* %arrayidx2.1.i, align 4, !tbaa !7
  %sub.1.i.261 = sub nsw i32 %22, %23
  %arrayidx4.1.i.262 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 1
  store i32 %sub.1.i.261, i32* %arrayidx4.1.i.262, align 4, !tbaa !7
  %24 = load i32, i32* %arrayidx.2.i, align 4, !tbaa !7
  %25 = load i32, i32* %arrayidx2.2.i, align 4, !tbaa !7
  %sub.2.i.265 = sub nsw i32 %24, %25
  %arrayidx4.2.i.266 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 2
  store i32 %sub.2.i.265, i32* %arrayidx4.2.i.266, align 4, !tbaa !7
  %26 = load i32, i32* %arrayidx.3.i, align 4, !tbaa !7
  %27 = load i32, i32* %arrayidx2.3.i, align 4, !tbaa !7
  %sub.3.i.269 = sub nsw i32 %26, %27
  %arrayidx4.3.i.270 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 3
  store i32 %sub.3.i.269, i32* %arrayidx4.3.i.270, align 4, !tbaa !7
  %28 = load i32, i32* %arrayidx.4.i, align 4, !tbaa !7
  %29 = load i32, i32* %arrayidx2.4.i, align 4, !tbaa !7
  %sub.4.i.273 = sub nsw i32 %28, %29
  %arrayidx4.4.i.274 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 4
  store i32 %sub.4.i.273, i32* %arrayidx4.4.i.274, align 4, !tbaa !7
  %30 = load i32, i32* %arrayidx.5.i, align 4, !tbaa !7
  %31 = load i32, i32* %arrayidx2.5.i, align 4, !tbaa !7
  %sub.5.i.277 = sub nsw i32 %30, %31
  %arrayidx4.5.i.278 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 5
  store i32 %sub.5.i.277, i32* %arrayidx4.5.i.278, align 4, !tbaa !7
  %32 = load i32, i32* %arrayidx.6.i, align 4, !tbaa !7
  %33 = load i32, i32* %arrayidx2.6.i, align 4, !tbaa !7
  %sub.6.i.281 = sub nsw i32 %32, %33
  %arrayidx4.6.i.282 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 6
  store i32 %sub.6.i.281, i32* %arrayidx4.6.i.282, align 4, !tbaa !7
  %34 = load i32, i32* %arrayidx.7.i, align 4, !tbaa !7
  %35 = load i32, i32* %arrayidx2.7.i, align 4, !tbaa !7
  %sub.7.i.285 = sub nsw i32 %34, %35
  %arrayidx4.7.i.286 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 7
  store i32 %sub.7.i.285, i32* %arrayidx4.7.i.286, align 4, !tbaa !7
  %36 = load i32, i32* %arrayidx.8.i, align 4, !tbaa !7
  %37 = load i32, i32* %arrayidx2.8.i, align 4, !tbaa !7
  %sub.8.i.289 = sub nsw i32 %36, %37
  %arrayidx4.8.i.290 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 8
  store i32 %sub.8.i.289, i32* %arrayidx4.8.i.290, align 4, !tbaa !7
  %38 = load i32, i32* %arrayidx.9.i, align 4, !tbaa !7
  %39 = load i32, i32* %arrayidx2.9.i, align 4, !tbaa !7
  %sub.9.i.293 = sub nsw i32 %38, %39
  %arrayidx4.9.i.294 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 1, i64 9
  store i32 %sub.9.i.293, i32* %arrayidx4.9.i.294, align 4, !tbaa !7
  %arraydecay10 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 0
  %arraydecay13 = getelementptr inbounds %struct.ge_cached, %struct.ge_cached* %q, i64 0, i32 0, i64 0
  tail call fastcc void @fe_mul(i32* %arraydecay10, i32* %arraydecay, i32* %arraydecay13)
  %arraydecay18 = getelementptr inbounds %struct.ge_cached, %struct.ge_cached* %q, i64 0, i32 1, i64 0
  tail call fastcc void @fe_mul(i32* %arraydecay5, i32* %arraydecay5, i32* %arraydecay18)
  %arraydecay19 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 0
  %arraydecay20 = getelementptr inbounds %struct.ge_cached, %struct.ge_cached* %q, i64 0, i32 3, i64 0
  %arraydecay22 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 3, i64 0
  tail call fastcc void @fe_mul(i32* %arraydecay19, i32* %arraydecay20, i32* %arraydecay22)
  %arraydecay26 = getelementptr inbounds %struct.ge_p3, %struct.ge_p3* %p, i64 0, i32 2, i64 0
  %arraydecay28 = getelementptr inbounds %struct.ge_cached, %struct.ge_cached* %q, i64 0, i32 2, i64 0
  tail call fastcc void @fe_mul(i32* %arraydecay, i32* %arraydecay26, i32* %arraydecay28)
  %40 = load i32, i32* %arraydecay, align 4, !tbaa !7
  %add.i.221 = shl nsw i32 %40, 1
  %41 = load i32, i32* %arrayidx4.1.i, align 4, !tbaa !7
  %add.1.i.224 = shl nsw i32 %41, 1
  %42 = bitcast i32* %arrayidx4.2.i to <4 x i32>*
  %43 = load <4 x i32>, <4 x i32>* %42, align 4, !tbaa !7
  %44 = shl nsw <4 x i32> %43, <i32 1, i32 1, i32 1, i32 1>
  %45 = bitcast i32* %arrayidx4.6.i to <4 x i32>*
  %46 = load <4 x i32>, <4 x i32>* %45, align 4, !tbaa !7
  %47 = shl nsw <4 x i32> %46, <i32 1, i32 1, i32 1, i32 1>
  %arrayidx.2.i.189 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 2
  %48 = bitcast i32* %arraydecay10 to <4 x i32>*
  %49 = load <4 x i32>, <4 x i32>* %48, align 4, !tbaa !7
  %50 = bitcast i32* %arraydecay5 to <4 x i32>*
  %51 = load <4 x i32>, <4 x i32>* %50, align 4, !tbaa !7
  %52 = sub nsw <4 x i32> %49, %51
  %53 = bitcast %struct.ge_p1p1* %r to <4 x i32>*
  store <4 x i32> %52, <4 x i32>* %53, align 4, !tbaa !7
  %arrayidx.4.i.197 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 4
  %arrayidx.6.i.205 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 6
  %arrayidx.7.i.209 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 7
  %54 = bitcast i32* %arrayidx.4.i.197 to <4 x i32>*
  %55 = load <4 x i32>, <4 x i32>* %54, align 4, !tbaa !7
  %56 = bitcast i32* %arrayidx4.4.i.274 to <4 x i32>*
  %57 = load <4 x i32>, <4 x i32>* %56, align 4, !tbaa !7
  %58 = sub nsw <4 x i32> %55, %57
  %59 = bitcast i32* %arrayidx4.4.i to <4 x i32>*
  store <4 x i32> %58, <4 x i32>* %59, align 4, !tbaa !7
  %arrayidx.8.i.213 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 8
  %60 = load i32, i32* %arrayidx4.8.i.290, align 4, !tbaa !7
  %arrayidx.9.i.217 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 2, i64 9
  %arrayidx2.1.i.112 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 1
  %61 = bitcast i32* %arrayidx.8.i.213 to <4 x i32>*
  %62 = load <4 x i32>, <4 x i32>* %61, align 4, !tbaa !7
  %63 = extractelement <4 x i32> %62, i32 0
  %sub.8.i.215 = sub nsw i32 %63, %60
  store i32 %sub.8.i.215, i32* %arrayidx4.8.i, align 4, !tbaa !7
  %64 = load i32, i32* %arrayidx4.9.i.294, align 4, !tbaa !7
  %65 = extractelement <4 x i32> %62, i32 1
  %sub.9.i.219 = sub nsw i32 %65, %64
  store i32 %sub.9.i.219, i32* %arrayidx4.9.i, align 4, !tbaa !7
  %66 = extractelement <4 x i32> %49, i32 0
  %67 = extractelement <4 x i32> %51, i32 0
  %add.i.147 = add nsw i32 %67, %66
  store i32 %add.i.147, i32* %arraydecay5, align 4, !tbaa !7
  %68 = extractelement <4 x i32> %49, i32 1
  %69 = extractelement <4 x i32> %51, i32 1
  %add.1.i.150 = add nsw i32 %69, %68
  store i32 %add.1.i.150, i32* %arrayidx4.1.i.262, align 4, !tbaa !7
  %70 = extractelement <4 x i32> %49, i32 2
  %71 = extractelement <4 x i32> %51, i32 2
  %add.2.i.154 = add nsw i32 %71, %70
  store i32 %add.2.i.154, i32* %arrayidx4.2.i.266, align 4, !tbaa !7
  %72 = extractelement <4 x i32> %49, i32 3
  %73 = extractelement <4 x i32> %51, i32 3
  %add.3.i.158 = add nsw i32 %73, %72
  store i32 %add.3.i.158, i32* %arrayidx4.3.i.270, align 4, !tbaa !7
  %74 = add nsw <4 x i32> %57, %55
  %75 = bitcast i32* %arrayidx4.4.i.274 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %75, align 4, !tbaa !7
  %76 = insertelement <4 x i32> undef, i32 %60, i32 0
  %77 = insertelement <4 x i32> %76, i32 %64, i32 1
  %78 = insertelement <4 x i32> %77, i32 %add.i.221, i32 2
  %79 = insertelement <4 x i32> %78, i32 %add.1.i.224, i32 3
  %80 = add nsw <4 x i32> %79, %62
  %81 = bitcast i32* %arrayidx4.8.i.290 to <4 x i32>*
  store <4 x i32> %80, <4 x i32>* %81, align 4, !tbaa !7
  %arrayidx2.2.i.116 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 2
  %82 = bitcast i32* %arrayidx2.2.i.116 to <4 x i32>*
  %83 = load <4 x i32>, <4 x i32>* %82, align 4, !tbaa !7
  %84 = add nsw <4 x i32> %83, %44
  %85 = bitcast i32* %arrayidx.2.i.189 to <4 x i32>*
  store <4 x i32> %84, <4 x i32>* %85, align 4, !tbaa !7
  %arrayidx2.6.i.132 = getelementptr inbounds %struct.ge_p1p1, %struct.ge_p1p1* %r, i64 0, i32 3, i64 6
  %86 = bitcast i32* %arrayidx2.6.i.132 to <4 x i32>*
  %87 = load <4 x i32>, <4 x i32>* %86, align 4, !tbaa !7
  %88 = extractelement <4 x i32> %47, i32 0
  %89 = extractelement <4 x i32> %87, i32 0
  %add.6.i.133 = add nsw i32 %89, %88
  store i32 %add.6.i.133, i32* %arrayidx.6.i.205, align 4, !tbaa !7
  %90 = extractelement <4 x i32> %47, i32 1
  %91 = extractelement <4 x i32> %87, i32 1
  %add.7.i.137 = add nsw i32 %91, %90
  store i32 %add.7.i.137, i32* %arrayidx.7.i.209, align 4, !tbaa !7
  %92 = extractelement <4 x i32> %47, i32 2
  %93 = extractelement <4 x i32> %87, i32 2
  %add.8.i.141 = add nsw i32 %93, %92
  store i32 %add.8.i.141, i32* %arrayidx.8.i.213, align 4, !tbaa !7
  %94 = extractelement <4 x i32> %47, i32 3
  %95 = extractelement <4 x i32> %87, i32 3
  %add.9.i.145 = add nsw i32 %95, %94
  store i32 %add.9.i.145, i32* %arrayidx.9.i.217, align 4, !tbaa !7
  %96 = extractelement <4 x i32> %62, i32 2
  %sub.i = sub nsw i32 %add.i.221, %96
  store i32 %sub.i, i32* %arraydecay19, align 4, !tbaa !7
  %97 = extractelement <4 x i32> %62, i32 3
  %sub.1.i = sub nsw i32 %add.1.i.224, %97
  store i32 %sub.1.i, i32* %arrayidx2.1.i.112, align 4, !tbaa !7
  %98 = sub nsw <4 x i32> %44, %83
  %99 = bitcast i32* %arrayidx2.2.i.116 to <4 x i32>*
  store <4 x i32> %98, <4 x i32>* %99, align 4, !tbaa !7
  %100 = sub nsw <4 x i32> %47, %87
  %101 = bitcast i32* %arrayidx2.6.i.132 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %101, align 4, !tbaa !7
  ret void
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"PIC Level", i32 2}
!1 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!2 = !{!3, !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{!6, !6, i64 0}
!6 = !{!"long", !3, i64 0}
!7 = !{!8, !8, i64 0}
!8 = !{!"int", !3, i64 0}
